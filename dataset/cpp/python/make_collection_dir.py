from __future__ import annotations

import sys
import pathlib

paths = [
    'ns-col-1.0.0.tar.gz',
    'foo.txt',
    'README.rst',
    'GPL',
    'LICENSES/MIT.txt',
    '.reuse/dep5',
    'artifacts/.gitkeep',
    'plugins/vars/bar.yml',
    'plugins/vars/bar.yml.license',
    'plugins/vars/baz.yaml',
    'plugins/vars/test.py',
    'plugins/vars/docs.md',
    'plugins/netconf/bar.yml',
    'plugins/netconf/baz.yaml',
    'plugins/netconf/test.py',
    'plugins/netconf/docs.md',
    'plugins/cache/bar.yml',
    'plugins/cache/baz.yaml',
    'plugins/cache/test.py',
    'plugins/cache/docs.md',
    'plugins/test/bar.yml',
    'plugins/test/baz.yaml',
    'plugins/test/test.py',
    'plugins/test/docs.md',
    'plugins/connection/bar.yml',
    'plugins/connection/baz.yaml',
    'plugins/connection/test.py',
    'plugins/connection/docs.md',
    'plugins/doc_fragments/bar.yml',
    'plugins/doc_fragments/baz.yaml',
    'plugins/doc_fragments/test.py',
    'plugins/doc_fragments/docs.md',
    'plugins/shell/bar.yml',
    'plugins/shell/baz.yaml',
    'plugins/shell/test.py',
    'plugins/shell/docs.md',
    'plugins/terminal/bar.yml',
    'plugins/terminal/baz.yaml',
    'plugins/terminal/test.py',
    'plugins/terminal/docs.md',
    'plugins/lookup/bar.yml',
    'plugins/lookup/baz.yaml',
    'plugins/lookup/test.py',
    'plugins/lookup/docs.md',
    'plugins/httpapi/bar.yml',
    'plugins/httpapi/baz.yaml',
    'plugins/httpapi/test.py',
    'plugins/httpapi/docs.md',
    'plugins/action/bar.yml',
    'plugins/action/baz.yaml',
    'plugins/action/test.py',
    'plugins/action/docs.md',
    'plugins/inventory/bar.yml',
    'plugins/inventory/baz.yaml',
    'plugins/inventory/test.py',
    'plugins/inventory/docs.md',
    'plugins/module_utils/bar.ps1',
    'plugins/module_utils/test.py',
    'plugins/module_utils/docs.md',
    'plugins/module_utils/baz.yml',
    'plugins/become/bar.yml',
    'plugins/become/baz.yaml',
    'plugins/become/test.py',
    'plugins/become/docs.md',
    'plugins/callback/bar.yml',
    'plugins/callback/baz.yaml',
    'plugins/callback/test.py',
    'plugins/callback/docs.md',
    'plugins/filter/bar.yml',
    'plugins/filter/baz.yaml',
    'plugins/filter/test.py',
    'plugins/filter/docs.md',
    'plugins/cliconf/bar.yml',
    'plugins/cliconf/baz.yaml',
    'plugins/cliconf/test.py',
    'plugins/cliconf/docs.md',
    'plugins/modules/foo.yml',
    'plugins/modules/qux.ps1',
    'plugins/modules/test2.py',
    'plugins/modules/bar.yaml',
    'plugins/modules/docs.md',
    'plugins/strategy/bar.yml',
    'plugins/strategy/baz.yaml',
    'plugins/strategy/test.py',
    'plugins/strategy/docs.md',
    'tests/integration/targets/foo/aliases',
    'tests/integration/targets/foo/tasks/main.yml',
    'tests/output/foo',
    'tests/units/test_foo.py',
    'roles/foo/vars/main.yaml',
    'roles/foo/tasks/main.yml',
    'roles/foo/templates/foo.j2',
    'playbooks/baz.json',
    'playbooks/foo.yml',
    'playbooks/bar.yaml',
    'docs/foobar/qux/baz.txt',
    'docs/foobar/qux/bar',
    'docs/docsite/bar.yml',
    'docs/docsite/baz.yaml',
    'docs/docsite/apple.j2',
    'docs/docsite/qux.json',
    'docs/docsite/orange.txt',
    'docs/docsite/foo.rst',
    'changelogs/fragments/foo.yml',
    'changelogs/fragments/bar.yaml'
]

root = pathlib.Path(sys.argv[1])

for path in paths:
    print(path)
    path = root / path
    path.parent.mkdir(parents=True, exist_ok=True)
    path.touch()
