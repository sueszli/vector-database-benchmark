// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component_information_server/component_information_server.proto

#include "component_information_server/component_information_server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace mavsdk {
namespace rpc {
namespace component_information_server {
template <typename>
PROTOBUF_CONSTEXPR FloatParam::FloatParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.short_description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.long_description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.unit_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.decimal_places_)*/ 0

  , /*decltype(_impl_.start_value_)*/ 0

  , /*decltype(_impl_.default_value_)*/ 0

  , /*decltype(_impl_.min_value_)*/ 0

  , /*decltype(_impl_.max_value_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FloatParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatParamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatParamDefaultTypeInternal() {}
  union {
    FloatParam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatParamDefaultTypeInternal _FloatParam_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ProvideFloatParamRequest::ProvideFloatParamRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.param_)*/nullptr} {}
struct ProvideFloatParamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProvideFloatParamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProvideFloatParamRequestDefaultTypeInternal() {}
  union {
    ProvideFloatParamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProvideFloatParamRequestDefaultTypeInternal _ProvideFloatParamRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ProvideFloatParamResponse::ProvideFloatParamResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.component_information_server_result_)*/nullptr} {}
struct ProvideFloatParamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProvideFloatParamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProvideFloatParamResponseDefaultTypeInternal() {}
  union {
    ProvideFloatParamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProvideFloatParamResponseDefaultTypeInternal _ProvideFloatParamResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR FloatParamUpdate::FloatParamUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.value_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FloatParamUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatParamUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatParamUpdateDefaultTypeInternal() {}
  union {
    FloatParamUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatParamUpdateDefaultTypeInternal _FloatParamUpdate_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeFloatParamRequest::SubscribeFloatParamRequest(
    ::_pbi::ConstantInitialized) {}
struct SubscribeFloatParamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFloatParamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFloatParamRequestDefaultTypeInternal() {}
  union {
    SubscribeFloatParamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFloatParamRequestDefaultTypeInternal _SubscribeFloatParamRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR FloatParamResponse::FloatParamResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.param_update_)*/nullptr} {}
struct FloatParamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatParamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatParamResponseDefaultTypeInternal() {}
  union {
    FloatParamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatParamResponseDefaultTypeInternal _FloatParamResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ComponentInformationServerResult::ComponentInformationServerResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_str_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.result_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ComponentInformationServerResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentInformationServerResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentInformationServerResultDefaultTypeInternal() {}
  union {
    ComponentInformationServerResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentInformationServerResultDefaultTypeInternal _ComponentInformationServerResult_default_instance_;
}  // namespace component_information_server
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto = nullptr;
const ::uint32_t TableStruct_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.short_description_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.long_description_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.unit_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.decimal_places_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.start_value_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.default_value_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.min_value_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParam, _impl_.max_value_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamRequest, _impl_.param_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ProvideFloatParamResponse, _impl_.component_information_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamUpdate, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamUpdate, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::SubscribeFloatParamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::FloatParamResponse, _impl_.param_update_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ComponentInformationServerResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ComponentInformationServerResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::component_information_server::ComponentInformationServerResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::mavsdk::rpc::component_information_server::FloatParam)},
        { 17, 26, -1, sizeof(::mavsdk::rpc::component_information_server::ProvideFloatParamRequest)},
        { 27, 36, -1, sizeof(::mavsdk::rpc::component_information_server::ProvideFloatParamResponse)},
        { 37, -1, -1, sizeof(::mavsdk::rpc::component_information_server::FloatParamUpdate)},
        { 47, -1, -1, sizeof(::mavsdk::rpc::component_information_server::SubscribeFloatParamRequest)},
        { 55, 64, -1, sizeof(::mavsdk::rpc::component_information_server::FloatParamResponse)},
        { 65, -1, -1, sizeof(::mavsdk::rpc::component_information_server::ComponentInformationServerResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::component_information_server::_FloatParam_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_ProvideFloatParamRequest_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_ProvideFloatParamResponse_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_FloatParamUpdate_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_SubscribeFloatParamRequest_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_FloatParamResponse_default_instance_._instance,
    &::mavsdk::rpc::component_information_server::_ComponentInformationServerResult_default_instance_._instance,
};
const char descriptor_table_protodef_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\?component_information_server/component"
    "_information_server.proto\022\'mavsdk.rpc.co"
    "mponent_information_server\032\024mavsdk_optio"
    "ns.proto\"\307\001\n\nFloatParam\022\014\n\004name\030\001 \001(\t\022\031\n"
    "\021short_description\030\002 \001(\t\022\030\n\020long_descrip"
    "tion\030\003 \001(\t\022\014\n\004unit\030\004 \001(\t\022\026\n\016decimal_plac"
    "es\030\005 \001(\005\022\023\n\013start_value\030\006 \001(\002\022\025\n\rdefault"
    "_value\030\007 \001(\002\022\021\n\tmin_value\030\010 \001(\002\022\021\n\tmax_v"
    "alue\030\t \001(\002\"^\n\030ProvideFloatParamRequest\022B"
    "\n\005param\030\001 \001(\01323.mavsdk.rpc.component_inf"
    "ormation_server.FloatParam\"\223\001\n\031ProvideFl"
    "oatParamResponse\022v\n#component_informatio"
    "n_server_result\030\001 \001(\0132I.mavsdk.rpc.compo"
    "nent_information_server.ComponentInforma"
    "tionServerResult\"/\n\020FloatParamUpdate\022\014\n\004"
    "name\030\001 \001(\t\022\r\n\005value\030\002 \001(\002\"\034\n\032SubscribeFl"
    "oatParamRequest\"e\n\022FloatParamResponse\022O\n"
    "\014param_update\030\001 \001(\01329.mavsdk.rpc.compone"
    "nt_information_server.FloatParamUpdate\"\352"
    "\002\n ComponentInformationServerResult\022`\n\006r"
    "esult\030\001 \001(\0162P.mavsdk.rpc.component_infor"
    "mation_server.ComponentInformationServer"
    "Result.Result\022\022\n\nresult_str\030\002 \001(\t\"\317\001\n\006Re"
    "sult\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCE"
    "SS\020\001\022\032\n\026RESULT_DUPLICATE_PARAM\020\002\022$\n RESU"
    "LT_INVALID_PARAM_START_VALUE\020\003\022&\n\"RESULT"
    "_INVALID_PARAM_DEFAULT_VALUE\020\004\022\035\n\031RESULT"
    "_INVALID_PARAM_NAME\020\005\022\024\n\020RESULT_NO_SYSTE"
    "M\020\0062\350\002\n!ComponentInformationServerServic"
    "e\022\240\001\n\021ProvideFloatParam\022A.mavsdk.rpc.com"
    "ponent_information_server.ProvideFloatPa"
    "ramRequest\032B.mavsdk.rpc.component_inform"
    "ation_server.ProvideFloatParamResponse\"\004"
    "\200\265\030\001\022\237\001\n\023SubscribeFloatParam\022C.mavsdk.rp"
    "c.component_information_server.Subscribe"
    "FloatParamRequest\032;.mavsdk.rpc.component"
    "_information_server.FloatParamResponse\"\004"
    "\200\265\030\0000\001BI\n&io.mavsdk.component_informatio"
    "n_serverB\037ComponentInformationServerProt"
    "ob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto = {
    false,
    false,
    1569,
    descriptor_table_protodef_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto,
    "component_information_server/component_information_server.proto",
    &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
    descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto::offsets,
    file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto,
    file_level_enum_descriptors_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto,
    file_level_service_descriptors_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter() {
  return &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto(&descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace component_information_server {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ComponentInformationServerResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto);
  return file_level_enum_descriptors_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[0];
}
bool ComponentInformationServerResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_UNKNOWN;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_SUCCESS;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_DUPLICATE_PARAM;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_INVALID_PARAM_START_VALUE;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_INVALID_PARAM_DEFAULT_VALUE;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_INVALID_PARAM_NAME;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::RESULT_NO_SYSTEM;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::Result_MIN;
constexpr ComponentInformationServerResult_Result ComponentInformationServerResult::Result_MAX;
constexpr int ComponentInformationServerResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class FloatParam::_Internal {
 public:
};

FloatParam::FloatParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.FloatParam)
}
FloatParam::FloatParam(const FloatParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FloatParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.short_description_) {}

    , decltype(_impl_.long_description_) {}

    , decltype(_impl_.unit_) {}

    , decltype(_impl_.decimal_places_) {}

    , decltype(_impl_.start_value_) {}

    , decltype(_impl_.default_value_) {}

    , decltype(_impl_.min_value_) {}

    , decltype(_impl_.max_value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.short_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.short_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_short_description().empty()) {
    _this->_impl_.short_description_.Set(from._internal_short_description(), _this->GetArenaForAllocation());
  }
  _impl_.long_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.long_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_long_description().empty()) {
    _this->_impl_.long_description_.Set(from._internal_long_description(), _this->GetArenaForAllocation());
  }
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unit().empty()) {
    _this->_impl_.unit_.Set(from._internal_unit(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.decimal_places_, &from._impl_.decimal_places_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.max_value_) -
    reinterpret_cast<char*>(&_impl_.decimal_places_)) + sizeof(_impl_.max_value_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.FloatParam)
}

inline void FloatParam::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.short_description_) {}

    , decltype(_impl_.long_description_) {}

    , decltype(_impl_.unit_) {}

    , decltype(_impl_.decimal_places_) { 0 }

    , decltype(_impl_.start_value_) { 0 }

    , decltype(_impl_.default_value_) { 0 }

    , decltype(_impl_.min_value_) { 0 }

    , decltype(_impl_.max_value_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.short_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.long_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.long_description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.unit_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.unit_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FloatParam::~FloatParam() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.FloatParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FloatParam::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.short_description_.Destroy();
  _impl_.long_description_.Destroy();
  _impl_.unit_.Destroy();
}

void FloatParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FloatParam::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.FloatParam)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.short_description_.ClearToEmpty();
  _impl_.long_description_.ClearToEmpty();
  _impl_.unit_.ClearToEmpty();
  ::memset(&_impl_.decimal_places_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_value_) -
      reinterpret_cast<char*>(&_impl_.decimal_places_)) + sizeof(_impl_.max_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FloatParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.FloatParam.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string short_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_short_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.FloatParam.short_description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string long_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_long_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.FloatParam.long_description"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string unit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_unit();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.FloatParam.unit"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 decimal_places = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.decimal_places_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // float start_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 53)) {
          _impl_.start_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      // float default_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 61)) {
          _impl_.default_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      // float min_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 69)) {
          _impl_.min_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      // float max_value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 77)) {
          _impl_.max_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* FloatParam::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.FloatParam)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.FloatParam.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string short_description = 2;
  if (!this->_internal_short_description().empty()) {
    const std::string& _s = this->_internal_short_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.FloatParam.short_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string long_description = 3;
  if (!this->_internal_long_description().empty()) {
    const std::string& _s = this->_internal_long_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.FloatParam.long_description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string unit = 4;
  if (!this->_internal_unit().empty()) {
    const std::string& _s = this->_internal_unit();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.FloatParam.unit");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 decimal_places = 5;
  if (this->_internal_decimal_places() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        5, this->_internal_decimal_places(), target);
  }

  // float start_value = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_start_value = this->_internal_start_value();
  ::uint32_t raw_start_value;
  memcpy(&raw_start_value, &tmp_start_value, sizeof(tmp_start_value));
  if (raw_start_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_start_value(), target);
  }

  // float default_value = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_default_value = this->_internal_default_value();
  ::uint32_t raw_default_value;
  memcpy(&raw_default_value, &tmp_default_value, sizeof(tmp_default_value));
  if (raw_default_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_default_value(), target);
  }

  // float min_value = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_min_value = this->_internal_min_value();
  ::uint32_t raw_min_value;
  memcpy(&raw_min_value, &tmp_min_value, sizeof(tmp_min_value));
  if (raw_min_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_min_value(), target);
  }

  // float max_value = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_max_value = this->_internal_max_value();
  ::uint32_t raw_max_value;
  memcpy(&raw_max_value, &tmp_max_value, sizeof(tmp_max_value));
  if (raw_max_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_max_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.FloatParam)
  return target;
}

::size_t FloatParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.FloatParam)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string short_description = 2;
  if (!this->_internal_short_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_short_description());
  }

  // string long_description = 3;
  if (!this->_internal_long_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_long_description());
  }

  // string unit = 4;
  if (!this->_internal_unit().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_unit());
  }

  // int32 decimal_places = 5;
  if (this->_internal_decimal_places() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_decimal_places());
  }

  // float start_value = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_start_value = this->_internal_start_value();
  ::uint32_t raw_start_value;
  memcpy(&raw_start_value, &tmp_start_value, sizeof(tmp_start_value));
  if (raw_start_value != 0) {
    total_size += 5;
  }

  // float default_value = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_default_value = this->_internal_default_value();
  ::uint32_t raw_default_value;
  memcpy(&raw_default_value, &tmp_default_value, sizeof(tmp_default_value));
  if (raw_default_value != 0) {
    total_size += 5;
  }

  // float min_value = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_min_value = this->_internal_min_value();
  ::uint32_t raw_min_value;
  memcpy(&raw_min_value, &tmp_min_value, sizeof(tmp_min_value));
  if (raw_min_value != 0) {
    total_size += 5;
  }

  // float max_value = 9;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_max_value = this->_internal_max_value();
  ::uint32_t raw_max_value;
  memcpy(&raw_max_value, &tmp_max_value, sizeof(tmp_max_value));
  if (raw_max_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FloatParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FloatParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FloatParam::GetClassData() const { return &_class_data_; }


void FloatParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FloatParam*>(&to_msg);
  auto& from = static_cast<const FloatParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.FloatParam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_short_description().empty()) {
    _this->_internal_set_short_description(from._internal_short_description());
  }
  if (!from._internal_long_description().empty()) {
    _this->_internal_set_long_description(from._internal_long_description());
  }
  if (!from._internal_unit().empty()) {
    _this->_internal_set_unit(from._internal_unit());
  }
  if (from._internal_decimal_places() != 0) {
    _this->_internal_set_decimal_places(from._internal_decimal_places());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_start_value = from._internal_start_value();
  ::uint32_t raw_start_value;
  memcpy(&raw_start_value, &tmp_start_value, sizeof(tmp_start_value));
  if (raw_start_value != 0) {
    _this->_internal_set_start_value(from._internal_start_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_default_value = from._internal_default_value();
  ::uint32_t raw_default_value;
  memcpy(&raw_default_value, &tmp_default_value, sizeof(tmp_default_value));
  if (raw_default_value != 0) {
    _this->_internal_set_default_value(from._internal_default_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_min_value = from._internal_min_value();
  ::uint32_t raw_min_value;
  memcpy(&raw_min_value, &tmp_min_value, sizeof(tmp_min_value));
  if (raw_min_value != 0) {
    _this->_internal_set_min_value(from._internal_min_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_max_value = from._internal_max_value();
  ::uint32_t raw_max_value;
  memcpy(&raw_max_value, &tmp_max_value, sizeof(tmp_max_value));
  if (raw_max_value != 0) {
    _this->_internal_set_max_value(from._internal_max_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FloatParam::CopyFrom(const FloatParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.FloatParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatParam::IsInitialized() const {
  return true;
}

void FloatParam::InternalSwap(FloatParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_description_, lhs_arena,
                                       &other->_impl_.short_description_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_description_, lhs_arena,
                                       &other->_impl_.long_description_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, lhs_arena,
                                       &other->_impl_.unit_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FloatParam, _impl_.max_value_)
      + sizeof(FloatParam::_impl_.max_value_)
      - PROTOBUF_FIELD_OFFSET(FloatParam, _impl_.decimal_places_)>(
          reinterpret_cast<char*>(&_impl_.decimal_places_),
          reinterpret_cast<char*>(&other->_impl_.decimal_places_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[0]);
}
// ===================================================================

class ProvideFloatParamRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProvideFloatParamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProvideFloatParamRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::component_information_server::FloatParam& param(const ProvideFloatParamRequest* msg);
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::component_information_server::FloatParam&
ProvideFloatParamRequest::_Internal::param(const ProvideFloatParamRequest* msg) {
  return *msg->_impl_.param_;
}
ProvideFloatParamRequest::ProvideFloatParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
}
ProvideFloatParamRequest::ProvideFloatParamRequest(const ProvideFloatParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProvideFloatParamRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.param_ = new ::mavsdk::rpc::component_information_server::FloatParam(*from._impl_.param_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
}

inline void ProvideFloatParamRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.param_){nullptr}
  };
}

ProvideFloatParamRequest::~ProvideFloatParamRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProvideFloatParamRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.param_;
}

void ProvideFloatParamRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProvideFloatParamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.param_ != nullptr);
    _impl_.param_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideFloatParamRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.component_information_server.FloatParam param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ProvideFloatParamRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.component_information_server.FloatParam param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::param(this),
        _Internal::param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  return target;
}

::size_t ProvideFloatParamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.component_information_server.FloatParam param = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.param_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideFloatParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProvideFloatParamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideFloatParamRequest::GetClassData() const { return &_class_data_; }


void ProvideFloatParamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProvideFloatParamRequest*>(&to_msg);
  auto& from = static_cast<const ProvideFloatParamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_param()->::mavsdk::rpc::component_information_server::FloatParam::MergeFrom(
        from._internal_param());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideFloatParamRequest::CopyFrom(const ProvideFloatParamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.ProvideFloatParamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideFloatParamRequest::IsInitialized() const {
  return true;
}

void ProvideFloatParamRequest::InternalSwap(ProvideFloatParamRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideFloatParamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[1]);
}
// ===================================================================

class ProvideFloatParamResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ProvideFloatParamResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProvideFloatParamResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::component_information_server::ComponentInformationServerResult& component_information_server_result(const ProvideFloatParamResponse* msg);
  static void set_has_component_information_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::component_information_server::ComponentInformationServerResult&
ProvideFloatParamResponse::_Internal::component_information_server_result(const ProvideFloatParamResponse* msg) {
  return *msg->_impl_.component_information_server_result_;
}
ProvideFloatParamResponse::ProvideFloatParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
}
ProvideFloatParamResponse::ProvideFloatParamResponse(const ProvideFloatParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProvideFloatParamResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.component_information_server_result_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.component_information_server_result_ = new ::mavsdk::rpc::component_information_server::ComponentInformationServerResult(*from._impl_.component_information_server_result_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
}

inline void ProvideFloatParamResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.component_information_server_result_){nullptr}
  };
}

ProvideFloatParamResponse::~ProvideFloatParamResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProvideFloatParamResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.component_information_server_result_;
}

void ProvideFloatParamResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProvideFloatParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.component_information_server_result_ != nullptr);
    _impl_.component_information_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProvideFloatParamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.component_information_server.ComponentInformationServerResult component_information_server_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_component_information_server_result(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ProvideFloatParamResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.component_information_server.ComponentInformationServerResult component_information_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::component_information_server_result(this),
        _Internal::component_information_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  return target;
}

::size_t ProvideFloatParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.component_information_server.ComponentInformationServerResult component_information_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.component_information_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProvideFloatParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProvideFloatParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProvideFloatParamResponse::GetClassData() const { return &_class_data_; }


void ProvideFloatParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProvideFloatParamResponse*>(&to_msg);
  auto& from = static_cast<const ProvideFloatParamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_component_information_server_result()->::mavsdk::rpc::component_information_server::ComponentInformationServerResult::MergeFrom(
        from._internal_component_information_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProvideFloatParamResponse::CopyFrom(const ProvideFloatParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.ProvideFloatParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvideFloatParamResponse::IsInitialized() const {
  return true;
}

void ProvideFloatParamResponse::InternalSwap(ProvideFloatParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.component_information_server_result_, other->_impl_.component_information_server_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProvideFloatParamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[2]);
}
// ===================================================================

class FloatParamUpdate::_Internal {
 public:
};

FloatParamUpdate::FloatParamUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.FloatParamUpdate)
}
FloatParamUpdate::FloatParamUpdate(const FloatParamUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FloatParamUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.FloatParamUpdate)
}

inline void FloatParamUpdate::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_) {}

    , decltype(_impl_.value_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FloatParamUpdate::~FloatParamUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.FloatParamUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FloatParamUpdate::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void FloatParamUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FloatParamUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.FloatParamUpdate)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FloatParamUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.FloatParamUpdate.name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // float value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 21)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* FloatParamUpdate::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.FloatParamUpdate)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.FloatParamUpdate.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // float value = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.FloatParamUpdate)
  return target;
}

::size_t FloatParamUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.FloatParamUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // float value = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FloatParamUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FloatParamUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FloatParamUpdate::GetClassData() const { return &_class_data_; }


void FloatParamUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FloatParamUpdate*>(&to_msg);
  auto& from = static_cast<const FloatParamUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.FloatParamUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FloatParamUpdate::CopyFrom(const FloatParamUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.FloatParamUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatParamUpdate::IsInitialized() const {
  return true;
}

void FloatParamUpdate::InternalSwap(FloatParamUpdate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);

  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatParamUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[3]);
}
// ===================================================================

class SubscribeFloatParamRequest::_Internal {
 public:
};

SubscribeFloatParamRequest::SubscribeFloatParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.SubscribeFloatParamRequest)
}
SubscribeFloatParamRequest::SubscribeFloatParamRequest(const SubscribeFloatParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SubscribeFloatParamRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.SubscribeFloatParamRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubscribeFloatParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubscribeFloatParamRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SubscribeFloatParamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[4]);
}
// ===================================================================

class FloatParamResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FloatParamResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FloatParamResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::component_information_server::FloatParamUpdate& param_update(const FloatParamResponse* msg);
  static void set_has_param_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::component_information_server::FloatParamUpdate&
FloatParamResponse::_Internal::param_update(const FloatParamResponse* msg) {
  return *msg->_impl_.param_update_;
}
FloatParamResponse::FloatParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.FloatParamResponse)
}
FloatParamResponse::FloatParamResponse(const FloatParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FloatParamResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.param_update_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.param_update_ = new ::mavsdk::rpc::component_information_server::FloatParamUpdate(*from._impl_.param_update_);
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.FloatParamResponse)
}

inline void FloatParamResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.param_update_){nullptr}
  };
}

FloatParamResponse::~FloatParamResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.FloatParamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FloatParamResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.param_update_;
}

void FloatParamResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FloatParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.FloatParamResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.param_update_ != nullptr);
    _impl_.param_update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FloatParamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.component_information_server.FloatParamUpdate param_update = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_param_update(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* FloatParamResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.FloatParamResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.component_information_server.FloatParamUpdate param_update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::param_update(this),
        _Internal::param_update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.FloatParamResponse)
  return target;
}

::size_t FloatParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.FloatParamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.component_information_server.FloatParamUpdate param_update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.param_update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FloatParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FloatParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FloatParamResponse::GetClassData() const { return &_class_data_; }


void FloatParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FloatParamResponse*>(&to_msg);
  auto& from = static_cast<const FloatParamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.FloatParamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_param_update()->::mavsdk::rpc::component_information_server::FloatParamUpdate::MergeFrom(
        from._internal_param_update());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FloatParamResponse::CopyFrom(const FloatParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.FloatParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatParamResponse::IsInitialized() const {
  return true;
}

void FloatParamResponse::InternalSwap(FloatParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.param_update_, other->_impl_.param_update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FloatParamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[5]);
}
// ===================================================================

class ComponentInformationServerResult::_Internal {
 public:
};

ComponentInformationServerResult::ComponentInformationServerResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
}
ComponentInformationServerResult::ComponentInformationServerResult(const ComponentInformationServerResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ComponentInformationServerResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_) {}

    , decltype(_impl_.result_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result_str().empty()) {
    _this->_impl_.result_str_.Set(from._internal_result_str(), _this->GetArenaForAllocation());
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
}

inline void ComponentInformationServerResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.result_str_) {}

    , decltype(_impl_.result_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_str_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_str_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ComponentInformationServerResult::~ComponentInformationServerResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ComponentInformationServerResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_str_.Destroy();
}

void ComponentInformationServerResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ComponentInformationServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComponentInformationServerResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.rpc.component_information_server.ComponentInformationServerResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::component_information_server::ComponentInformationServerResult_Result>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mavsdk.rpc.component_information_server.ComponentInformationServerResult.result_str"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ComponentInformationServerResult::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.component_information_server.ComponentInformationServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.component_information_server.ComponentInformationServerResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  return target;
}

::size_t ComponentInformationServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.component_information_server.ComponentInformationServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComponentInformationServerResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ComponentInformationServerResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComponentInformationServerResult::GetClassData() const { return &_class_data_; }


void ComponentInformationServerResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ComponentInformationServerResult*>(&to_msg);
  auto& from = static_cast<const ComponentInformationServerResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentInformationServerResult::CopyFrom(const ComponentInformationServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.component_information_server.ComponentInformationServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInformationServerResult::IsInitialized() const {
  return true;
}

void ComponentInformationServerResult::InternalSwap(ComponentInformationServerResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, lhs_arena,
                                       &other->_impl_.result_str_, rhs_arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComponentInformationServerResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_getter, &descriptor_table_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto_once,
      file_level_metadata_component_5finformation_5fserver_2fcomponent_5finformation_5fserver_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace component_information_server
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::FloatParam*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::FloatParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::FloatParam >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::ProvideFloatParamRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::ProvideFloatParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::ProvideFloatParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::ProvideFloatParamResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::ProvideFloatParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::ProvideFloatParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::FloatParamUpdate*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::FloatParamUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::FloatParamUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::SubscribeFloatParamRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::SubscribeFloatParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::SubscribeFloatParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::FloatParamResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::FloatParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::FloatParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::component_information_server::ComponentInformationServerResult*
Arena::CreateMaybeMessage< ::mavsdk::rpc::component_information_server::ComponentInformationServerResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::component_information_server::ComponentInformationServerResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
