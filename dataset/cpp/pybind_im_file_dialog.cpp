// Part of ImGui Bundle - MIT License - Copyright (c) 2022-2023 Pascal Thomet - https://github.com/pthom/imgui_bundle
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/numpy.h>
#include "ImFileDialog/ImFileDialog.h"
namespace py = pybind11;

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// <litgen_glue_code>  // Autogenerated code below! Do not edit!

// </litgen_glue_code> // Autogenerated code end
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


void py_init_module_im_file_dialog(py::module& m)
{
    using namespace ifd;

	py::class_<std::filesystem::path>(m, "Path")
		.def(py::init<std::string>())
		.def("__str__", [](const std::filesystem::path& self) { return self.string(); })
		.def("path", [](const std::filesystem::path& self) { return self.string(); })
		.def("filename", [](const std::filesystem::path& self) { return self.filename().string(); })
		.def("extension", [](const std::filesystem::path& self) { return self.extension().string(); })
		.def("parent_path", [](const std::filesystem::path& self) { return self.parent_path(); })
		;
	py::implicitly_convertible<std::string, std::filesystem::path>();

	// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    // <litgen_pydef> // Autogenerated code below! Do not edit!
    ////////////////////    <generated_from:ImFileDialog.h>    ////////////////////
    auto pyClassFileDialog =
        py::class_<ifd::FileDialog>
            (m, "FileDialog", "");

    { // inner classes & enums of FileDialog
        auto pyClassFileDialog_ClassFileTreeNode =
            py::class_<ifd::FileDialog::FileTreeNode>
                (pyClassFileDialog, "FileTreeNode", "")
            .def(py::init<const std::string &>(),
                py::arg("path"))
            .def_readwrite("path", &FileDialog::FileTreeNode::Path, "")
            .def_readwrite("read", &FileDialog::FileTreeNode::Read, "")
            .def_readwrite("children", &FileDialog::FileTreeNode::Children, "")
            ;
        auto pyClassFileDialog_ClassFileData =
            py::class_<ifd::FileDialog::FileData>
                (pyClassFileDialog, "FileData", "")
            .def(py::init<const std::filesystem::path &>(),
                py::arg("path"))
            .def_readwrite("path", &FileDialog::FileData::Path, "")
            .def_readwrite("is_directory", &FileDialog::FileData::IsDirectory, "")
            .def_readwrite("size", &FileDialog::FileData::Size, "")
            .def_readwrite("date_modified", &FileDialog::FileData::DateModified, "")
            .def_readwrite("has_icon_preview", &FileDialog::FileData::HasIconPreview, "")
            .def_readwrite("icon_preview", &FileDialog::FileData::IconPreview, "")
            .def_readwrite("icon_preview_data", &FileDialog::FileData::IconPreviewData, "")
            .def_readwrite("icon_preview_width", &FileDialog::FileData::IconPreviewWidth, "")
            .def_readwrite("icon_preview_height", &FileDialog::FileData::IconPreviewHeight, "")
            ;
    } // end of inner classes & enums of FileDialog

    pyClassFileDialog
        .def_static("instance",
            &FileDialog::Instance, pybind11::return_value_policy::reference)
        .def(py::init<>())
        .def("save",
            &FileDialog::Save, py::arg("key"), py::arg("title"), py::arg("filter"), py::arg("starting_dir") = "")
        .def("open",
            &FileDialog::Open, py::arg("key"), py::arg("title"), py::arg("filter"), py::arg("is_multiselect") = false, py::arg("starting_dir") = "")
        .def("is_done",
            &FileDialog::IsDone, py::arg("key"))
        .def("has_result",
            &FileDialog::HasResult)
        .def("get_result",
            &FileDialog::GetResult)
        .def("get_results",
            &FileDialog::GetResults)
        .def("close",
            &FileDialog::Close)
        .def("remove_favorite",
            &FileDialog::RemoveFavorite, py::arg("path"))
        .def("add_favorite",
            &FileDialog::AddFavorite, py::arg("path"))
        .def("get_favorites",
            &FileDialog::GetFavorites)
        .def("set_zoom",
            &FileDialog::SetZoom, py::arg("z"))
        .def("get_zoom",
            &FileDialog::GetZoom)
        ;
    ////////////////////    </generated_from:ImFileDialog.h>    ////////////////////

    // </litgen_pydef> // Autogenerated code end
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
}
