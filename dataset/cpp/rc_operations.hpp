#pragma once
#include <steem/protocol/base.hpp>

#include <steem/chain/evaluator.hpp>

namespace steem { namespace plugins { namespace rc {

using steem::protocol::account_name_type;
using steem::protocol::asset;
using steem::protocol::asset_symbol_type;
using steem::protocol::extensions_type;

class rc_plugin;

bool is_destination_nai( const string& dest );

/**
 * Delegate SP or a vesting SMT to a pool.
 *
 * The RC generated by the SP becomes an indel edge (indel = input to pool).
 * The delegated SP no longer generates RC for from_account, instead it generates
 * RC for to_pool.
 *
 * Each SMT delegated to an account forms its own pool.  Each account has only 3
 * slots for receiving delegation (`STEEM_RC_MAX_OUTDEL_SLOTS`).
 */
struct delegate_to_pool_operation : steem::protocol::base_operation
{
   account_name_type     from_account;
   account_name_type     to_pool;
   asset                 amount;

   extensions_type       extensions;

   void validate()const;
   void get_required_active_authorities( flat_set<account_name_type>& a )const { a.insert( from_account ); }
};

/**
 * Delegate SP or a vesting SMT from a pool to a user.
 *
 * What is actually delegated are DRC (delegated RC).  The from_pool account is allowed to "freely print"
 * DRC from its own pool.  This is equal to the RC that pool user is allowed to consume.
 * Pools may be over-subscribed (i.e. total DRC output is greater than RC input).
 *
 * Executing this operation effectively _replaces_ the effect of the previous
 * `delegate_drc_from_pool_operation` with the same `(to_account, to_slot)` pair.
 *
 * When deciding whether the affected manabar sections are full or empty,
 * the decision is always made in favor of `to_account`:
 *
 * - When increasing delegation, new DRC is always created to fill the new manabar section.
 * - When removing delegation, DRC may be destroyed, but only to the extent necessary for the account not to exceed its newly reduced maximum.
 */
struct delegate_drc_from_pool_operation : steem::protocol::base_operation
{
   account_name_type      from_pool;
   account_name_type      to_account;
   int8_t                 to_slot = 0;
   asset_symbol_type      asset_symbol;
   int64_t                drc_max_mana = 0;

   extensions_type        extensions;

   void validate()const;
   void get_required_active_authorities( flat_set<account_name_type>& a )const { a.insert( from_pool ); }
};

/**
 * The purpose of set_slot_delegator_operation is to set the delegator allowed to delegate to a
 * `(to_account, to_slot)` pair.
 *
 * To delegate to a slot, from_pool must be considered the delegator of the slot.  Normally the delegator is
 * the account creator.  The set_slot_delegator_operation allows a new delegator to be appointed by either
 * the existing delegator, the account itself, or (in the case of slot 1, STEEM_RC_RECOVERY_SLOT_NUM)
 * the slot may also be set by the account's recovery partner.
 */
struct set_slot_delegator_operation : steem::protocol::base_operation
{
   account_name_type      from_pool;
   account_name_type      to_account;
   int8_t                 to_slot = 0;
   account_name_type      signer;

   extensions_type        extensions;

   void validate()const;
   void get_required_active_authorities( flat_set<account_name_type>& a )const { a.insert( signer ); }
};

typedef fc::static_variant<
         delegate_to_pool_operation,
         delegate_drc_from_pool_operation,
         set_slot_delegator_operation
      > rc_plugin_operation;

STEEM_DEFINE_PLUGIN_EVALUATOR( rc_plugin, rc_plugin_operation, delegate_to_pool );
STEEM_DEFINE_PLUGIN_EVALUATOR( rc_plugin, rc_plugin_operation, delegate_drc_from_pool );
STEEM_DEFINE_PLUGIN_EVALUATOR( rc_plugin, rc_plugin_operation, set_slot_delegator );

} } } // steem::plugins::rc

FC_REFLECT( steem::plugins::rc::delegate_to_pool_operation,
   (from_account)
   (to_pool)
   (amount)
   (extensions)
   )
FC_REFLECT( steem::plugins::rc::delegate_drc_from_pool_operation,
   (from_pool)
   (to_account)
   (to_slot)
   (asset_symbol)
   (drc_max_mana)
   (extensions)
   )
FC_REFLECT( steem::plugins::rc::set_slot_delegator_operation,
   (from_pool)
   (to_account)
   (to_slot)
   (signer)
   (extensions)
   )

STEEM_DECLARE_OPERATION_TYPE( steem::plugins::rc::rc_plugin_operation )
FC_REFLECT_TYPENAME( steem::plugins::rc::rc_plugin_operation )
