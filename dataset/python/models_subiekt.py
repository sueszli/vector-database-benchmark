# coding: utf-8
from sqlalchemy import BINARY, BigInteger, Column, DateTime, ForeignKey, Index, Integer, LargeBinary, SmallInteger, String, Table, Text, Unicode, UnicodeText, VARBINARY, text
from sqlalchemy.dialects.mssql.base import BIT, MONEY, UNIQUEIDENTIFIER
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import declarative_base


Base = declarative_base()
metadata = Base.metadata


t___Modyfikacja = Table(
    u'__Modyfikacja', metadata,
    Column(u'Id', Integer, nullable=False),
    Column(u'Kolumna', String(50, u'Polish_CI_AS')),
    Column(u'Tabela', String(50, u'Polish_CI_AS')),
    Column(u'Zrodlo', String(500, u'Polish_CI_AS'))
)


t___PostUpdate = Table(
    u'__PostUpdate', metadata,
    Column(u'Id', Integer, nullable=False),
    Column(u'SQLUpdate', String(500, u'Polish_CI_AS'))
)


t___Slowniki = Table(
    u'__Slowniki', metadata,
    Column(u'Id', Integer, nullable=False),
    Column(u'Tabela', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'SelectTwardosci', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'Id_Tabeli', String(50, u'Polish_CI_AS'))
)


t___Tabele = Table(
    u'__Tabele', metadata,
    Column(u'Nazwa_tabeli', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'Przedrostek_atrybutu', String(5, u'Polish_CI_AS'), nullable=False),
    Column(u'Opis', String(80, u'Polish_CI_AS'), nullable=False),
    Column(u'Autor', String(20, u'Polish_CI_AS')),
    Column(u'Skonczona', BIT, nullable=False, server_default=text("(0)")),
    Column(u'Duplikaty', String(100, u'Polish_CI_AS'))
)


t___Update = Table(
    u'__Update', metadata,
    Column(u'Id', Integer, nullable=False),
    Column(u'SQLUpdate', String(1000, u'Polish_CI_AS'))
)


class AbAktualizacjeBiznesowe(Base):
    __tablename__ = u'ab_AktualizacjeBiznesowe'

    ab_Id = Column(Integer, primary_key=True)
    ab_KursyWalutTyp = Column(Integer, nullable=False)
    ab_KursyWalutHarmonogram = Column(DateTime)
    ab_KursyWalutStanowisko1 = Column(String(255, u'Polish_CI_AS'))
    ab_KursyWalutStanowisko2 = Column(String(255, u'Polish_CI_AS'))
    ab_KursyWalutStanowisko3 = Column(String(255, u'Polish_CI_AS'))
    ab_ParamPodatkTyp = Column(Integer, nullable=False)
    ab_ParamPodatkHarmonogram = Column(DateTime)
    ab_ParamPodatkStanowisko1 = Column(String(255, u'Polish_CI_AS'))
    ab_ParamPodatkStanowisko2 = Column(String(255, u'Polish_CI_AS'))
    ab_ParamPodatkStanowisko3 = Column(String(255, u'Polish_CI_AS'))


class AbLicznik(Base):
    __tablename__ = u'ab_Licznik'

    abl_Id = Column(Integer, primary_key=True)
    abl_Wartosc = Column(Integer, nullable=False)
    abl_Interwal = Column(Integer, nullable=False)
    abl_DniPrzed = Column(Integer, nullable=False)
    abl_DniPo = Column(Integer, nullable=False)


class AdrEmail(Base):
    __tablename__ = u'adr_Email'

    am_Id = Column(Integer, primary_key=True)
    am_IdAdres = Column(ForeignKey(u'adr__Ewid.adr_Id'), nullable=False)
    am_Email = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    am_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    am_Podstawowy = Column(BIT, nullable=False, server_default=text("((0))"))

    adr__Ewid = relationship(u'AdrEwid')


class AdrHistoria(Base):
    __tablename__ = u'adr_Historia'

    adrh_Id = Column(Integer, primary_key=True)
    adrh_IdAdresu = Column(ForeignKey(u'adr__Ewid.adr_Id'), nullable=False)
    adrh_Nazwa = Column(String(51, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_NazwaPelna = Column(String(255, u'Polish_CI_AS'), nullable=False)
    adrh_Telefon = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Faks = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Ulica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_NrDomu = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_NrLokalu = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Adres = Column(String(82, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Kod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Miejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_IdWojewodztwo = Column(Integer)
    adrh_IdPanstwo = Column(Integer, server_default=text("((1))"))
    adrh_NIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Poczta = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Gmina = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Powiat = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Skrytka = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adrh_IdGminy = Column(Integer)
    adrh_IdWersja = Column(Integer)
    adrh_IdZmienil = Column(Integer)
    adrh_DataZmiany = Column(DateTime)

    adr__Ewid = relationship(u'AdrEwid')


class AdrEwid(Base):
    __tablename__ = u'adr__Ewid'
    __table_args__ = (
        Index(u'IX_adr__Ewid', u'adr_IdObiektu', u'adr_TypAdresu', unique=True),
        Index(u'IX_adr__Ewid_1', u'adr_Id', u'adr_NIP')
    )

    adr_Id = Column(Integer, primary_key=True)
    adr_IdObiektu = Column(Integer, nullable=False)
    adr_TypAdresu = Column(Integer, nullable=False)
    adr_Nazwa = Column(String(51, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_NazwaPelna = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Telefon = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Faks = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Ulica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_NrDomu = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_NrLokalu = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Adres = Column(String(82, u'Polish_CI_AS'), nullable=False)
    adr_Kod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Miejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_IdWojewodztwo = Column(ForeignKey(u'sl_Wojewodztwo.woj_Id'))
    adr_IdPanstwo = Column(ForeignKey(u'sl_Panstwo.pa_Id'))
    adr_NIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Poczta = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Gmina = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Powiat = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Skrytka = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    adr_IdGminy = Column(Integer)
    adr_IdWersja = Column(Integer)
    adr_IdZmienil = Column(Integer)
    adr_DataZmiany = Column(DateTime)

    sl_Panstwo = relationship(u'SlPanstwo')
    sl_Wojewodztwo = relationship(u'SlWojewodztwo')


class ApLog(Base):
    __tablename__ = u'ap_Log'

    al_Id = Column(Integer, primary_key=True)
    al_Wynik = Column(Integer, nullable=False, server_default=text("((1))"))
    al_IdAP = Column(ForeignKey(u'ap__AP.ap_Id'))
    al_IdUzytkownika = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    al_NazwaUzytkownika = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    al_DataUruchomienia = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    al_OkresOd = Column(DateTime, nullable=False)
    al_OkresDo = Column(DateTime, nullable=False)
    al_Log = Column(UnicodeText(1073741823))
    al_NrDekretu = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    ap__AP = relationship(u'ApAP')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class ApLogOpi(Base):
    __tablename__ = u'ap_LogOpis'

    alo_Id = Column(Integer, primary_key=True)
    alo_IdLogu = Column(ForeignKey(u'ap_Log.al_Id'), nullable=False)
    alo_Wynik = Column(Integer, nullable=False)
    alo_Opis = Column(UnicodeText(1073741823))

    ap_Log = relationship(u'ApLog')


class ApZapisy(Base):
    __tablename__ = u'ap_Zapisy'

    za_Id = Column(Integer, primary_key=True)
    za_IdAP = Column(ForeignKey(u'ap__AP.ap_Id'), nullable=False)
    za_Lp = Column(Integer, nullable=False, server_default=text("((0))"))
    za_PoczatekGrupy = Column(BIT, nullable=False, server_default=text("((0))"))
    za_TypDefinicjZD = Column(Integer, nullable=False, server_default=text("((1))"))
    za_DefZrodlaDanych = Column(UnicodeText(1073741823))
    za_DefWartosc = Column(UnicodeText(1073741823))
    za_DefNrKontaWynikowego = Column(UnicodeText(1073741823))
    za_TypOpisuDekretu = Column(Integer, nullable=False)
    za_U_OpisDekretu = Column(String(500, u'Polish_CI_AS'), nullable=False)
    za_SL_IdOpisuDekretu = Column(ForeignKey(u'sl_Opis.sop_Id'))

    ap__AP = relationship(u'ApAP')
    sl_Opi = relationship(u'SlOpi')


class ApAP(Base):
    __tablename__ = u'ap__AP'

    ap_Id = Column(Integer, primary_key=True)
    ap_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    ap_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ap_IdRejestruKsiegowego = Column(Integer, nullable=False)
    ap_TrybBilansowaniaDekretu = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_TypDatyDokumentu = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_TypDatyDekretacji = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_TypDatyOperacji = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_TypOpisuDekretu = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_U_OpisDekretu = Column(String(500, u'Polish_CI_AS'), nullable=False)
    ap_SL_IdOpisuDekretu = Column(ForeignKey(u'sl_Opis.sop_Id'))
    ap_TrybAutobilansowaniaDekretu = Column(Integer, nullable=False, server_default=text("((1))"))
    ap_KontoKorekty = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_Opi = relationship(u'SlOpi')


class BibDokument(Base):
    __tablename__ = u'bib_Dokument'

    bib_Id = Column(Integer, primary_key=True)
    bib_TypObiektu = Column(Integer, nullable=False)
    bib_IdObiektu = Column(Integer, nullable=False)
    bib_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    bib_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    bib_Typ = Column(String(255, u'Polish_CI_AS'), nullable=False)
    bib_IdKategorii = Column(Integer, nullable=False)
    bib_Zablokowany = Column(BIT, nullable=False)
    bib_DataModyfikacji = Column(DateTime, nullable=False)
    bib_Zmodyfikowal = Column(Integer, nullable=False)
    bib_DataDodania = Column(DateTime, nullable=False)
    bib_Dodal = Column(Integer, nullable=False)
    bib_Rozmiar = Column(MONEY, nullable=False, server_default=text("((0))"))
    bib_EPodpis = Column(BIT, nullable=False, server_default=text("((0))"))
    bib_EPodpisPowiazany = Column(Integer)
    bib_SciezkaDoPliku = Column(String(512, u'Polish_CI_AS'))
    bib_Stanowisko = Column(String(255, u'Polish_CI_AS'))


class BibZawartoscPliku(Base):
    __tablename__ = u'bib_ZawartoscPliku'

    bip_Id = Column(Integer, primary_key=True)
    bip_IdDokumentu = Column(Integer, nullable=False)
    bip_Zawartosc = Column(LargeBinary)
    bip_Typ = Column(String(255, u'Polish_CI_AS'))


class CenCennikCecha(Base):
    __tablename__ = u'cen_CennikCecha'

    cc_Id = Column(Integer, primary_key=True)
    cc_IdSzablon = Column(ForeignKey(u'cen_CennikSzablon.cs_Id'), nullable=False)
    cc_IdCecha = Column(ForeignKey(u'sl_CechaTw.ctw_Id'), nullable=False)

    sl_CechaTw = relationship(u'SlCechaTw')
    cen_CennikSzablon = relationship(u'CenCennikSzablon')


class CenCennikDokument(Base):
    __tablename__ = u'cen_CennikDokument'

    cdk_Id = Column(Integer, primary_key=True)
    cdk_IdSzablon = Column(Integer, nullable=False)
    cdk_IdDokum = Column(Integer, nullable=False)


class CenCennikElement(Base):
    __tablename__ = u'cen_CennikElement'

    ce_Id = Column(Integer, primary_key=True)
    ce_IdSzablon = Column(ForeignKey(u'cen_CennikSzablon.cs_Id'), nullable=False)
    ce_IdElement = Column(Integer, nullable=False)

    cen_CennikSzablon = relationship(u'CenCennikSzablon')


class CenCennikGrupa(Base):
    __tablename__ = u'cen_CennikGrupa'

    cgr_Id = Column(Integer, primary_key=True)
    cgr_IdSzablon = Column(ForeignKey(u'cen_CennikSzablon.cs_Id'), nullable=False)
    cgr_IdGrupa = Column(ForeignKey(u'sl_GrupaTw.grt_Id'), nullable=False)

    sl_GrupaTw = relationship(u'SlGrupaTw')
    cen_CennikSzablon = relationship(u'CenCennikSzablon')


class CenCennikKolumna(Base):
    __tablename__ = u'cen_CennikKolumna'

    cko_Id = Column(Integer, primary_key=True)
    cko_IdSzablon = Column(ForeignKey(u'cen_CennikSzablon.cs_Id'), nullable=False)
    cko_LP = Column(Integer, nullable=False)
    cko_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cko_IdCena = Column(Integer, nullable=False, server_default=text("((0))"))
    cko_Rabat = Column(MONEY, nullable=False, server_default=text("((0))"))
    cko_IdWaluta = Column(Integer, nullable=False, server_default=text("((0))"))
    cko_Kurs = Column(MONEY, nullable=False, server_default=text("((0))"))

    cen_CennikSzablon = relationship(u'CenCennikSzablon')


class CenCennikSzablon(Base):
    __tablename__ = u'cen_CennikSzablon'

    cs_Id = Column(Integer, primary_key=True)
    cs_FiltrTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    cs_RodzajFiltr = Column(Integer, nullable=False, server_default=text("((15))"))
    cs_StanFiltr = Column(Integer, nullable=False, server_default=text("((0))"))
    cs_DataTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    cs_DataOkreslona = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    cs_DataPrzedzialOd = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    cs_DataPrzedzialDo = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    cs_Tytul = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cs_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cs_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cs_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cs_CzyWzorzec = Column(BIT, nullable=False, server_default=text("((0))"))
    cs_IdWzorzec = Column(Integer)
    cs_IgnorujNoweElementy = Column(BIT)
    cs_MaxTowId = Column(Integer)
    cs_NotIn = Column(BIT, nullable=False, server_default=text("((1))"))


class CentParametr(Base):
    __tablename__ = u'cent_Parametr'

    cent_Id = Column(Integer, primary_key=True)
    cent_PrefixGlobalny = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cent_OpoznienieWybierania = Column(Integer)
    cent_DataModyfikacji = Column(DateTime)
    cent_OdebranieGlos = Column(Integer)
    cent_OdebranieSkypeGlos = Column(Integer)
    cent_OdebranieSkypeChat = Column(Integer)
    cent_WybranieGlos = Column(Integer)
    cent_WybranieSkypeGlos = Column(Integer)
    cent_WybranieSkypeChat = Column(Integer)
    cent_WybranieGadu = Column(Integer)
    cent_Tryb = Column(Integer)
    cent_CiagVoip = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cent_ParamEwidId = Column(Integer)


class CrmParametr(Base):
    __tablename__ = u'crm_Parametr'

    crm_Id = Column(Integer, primary_key=True)
    crm_Wizard = Column(BIT, nullable=False, server_default=text("((0))"))
    crm_OpoznienieWybierania = Column(Integer, nullable=False, server_default=text("((10))"))
    crm_PrefixGlobalny = Column(String(20, u'Polish_CI_AS'))
    crm_Algorytm = Column(Integer)


class CtxGrupa(Base):
    __tablename__ = u'ctx_Grupa'

    ctg_Id = Column(Integer, primary_key=True)
    ctg_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ctg_Sql = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ctg_Def = Column(LargeBinary, nullable=False)


class CtxKonfiguracja(Base):
    __tablename__ = u'ctx__Konfiguracja'

    ctx_Section = Column(String(50, u'Polish_CI_AS'), primary_key=True, nullable=False)
    ctx_User = Column(Integer, primary_key=True, nullable=False)
    ctx_Data = Column(Integer, nullable=False)


class DeklIntrastatPole(Base):
    __tablename__ = u'dekl_IntrastatPole'

    dip_Id = Column(Integer, primary_key=True)
    dip_IdDeklaracji = Column(ForeignKey(u'dekl__Ewid.de_Id'), nullable=False)
    dip_NrPozycji = Column(Integer, nullable=False)
    dip_OpisTowaru = Column(String(255, u'Polish_CI_AS'))
    dip_KodKrajuWysPrzez = Column(String(3, u'Polish_CI_AS'))
    dip_KodWarunkowDostawy = Column(String(3, u'Polish_CI_AS'))
    dip_KodRodzajuTransakcji = Column(Integer)
    dip_KodTowaru = Column(String(8, u'Polish_CI_AS'))
    dip_KodRodzajuTransportu = Column(Integer)
    dip_KodKrajuPochodzenia = Column(String(3, u'Polish_CI_AS'))
    dip_MasaNetto = Column(MONEY)
    dip_IloscWUzupJM = Column(MONEY)
    dip_WartoscFakturowaPLN = Column(MONEY)
    dip_WartoscStatystycznaPLN = Column(MONEY)

    dekl__Ewid = relationship(u'DeklEwid')


class DeklPlik(Base):
    __tablename__ = u'dekl_Plik'

    dpl_Id = Column(Integer, primary_key=True)
    dpl_IdWzorca = Column(ForeignKey(u'dekl_Wersja.dw_Id'), nullable=False)
    dpl_Wzorzec = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk01 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk02 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk03 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk04 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk05 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk06 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk07 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk08 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk09 = Column(String(255, u'Polish_CI_AS'))
    dpl_Wydruk10 = Column(String(255, u'Polish_CI_AS'))

    dekl_Wersja = relationship(u'DeklWersja')


class DeklPole(Base):
    __tablename__ = u'dekl_Pole'

    dp_Id = Column(Integer, primary_key=True)
    dp_IdDeklaracji = Column(ForeignKey(u'dekl__Ewid.de_Id'), nullable=False)
    dp_NrPola = Column(Integer, nullable=False)
    dp_Zmienione = Column(BIT, nullable=False, server_default=text("((0))"))
    dp_Wartosc = Column(String(3500, u'Polish_CI_AS'))
    dp_Kolejnosc = Column(Integer)
    dp_GrupaWartNal = Column(Integer)
    dp_TypWartNal = Column(Integer)

    dekl__Ewid = relationship(u'DeklEwid')


class DeklVatUePole(Base):
    __tablename__ = u'dekl_VatUePole'

    duep_Id = Column(Integer, primary_key=True)
    duep_IdDeklaracji = Column(ForeignKey(u'dekl__Ewid.de_Id'), nullable=False)
    duep_Typ = Column(Integer, nullable=False)
    duep_Panstwo = Column(String(2, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    duep_Nip = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    duep_Wartosc = Column(MONEY)
    duep_TT = Column(BIT, nullable=False, server_default=text("((0))"))
    duep_ByloJest = Column(Integer, nullable=False, server_default=text("((0))"))
    duep_Pozycja = Column(Integer, nullable=False, server_default=text("((0))"))
    duep_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    dekl__Ewid = relationship(u'DeklEwid')


class DeklVatZdPole(Base):
    __tablename__ = u'dekl_VatZdPole'

    dzdp_Id = Column(Integer, primary_key=True)
    dzdp_IdDekleracji = Column(ForeignKey(u'dekl__Ewid.de_Id'), nullable=False)
    dzdp_PodatnikNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dzdp_PodatnikNip = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dzdp_NrFaktury = Column(String(30, u'Polish_CI_AS'), nullable=False)
    dzdp_DataWystawienia = Column(DateTime)
    dzdp_TerminPlatnosci = Column(DateTime)
    dzdp_KorektaNetto = Column(MONEY, nullable=False)
    dzdp_KorektaVat = Column(MONEY, nullable=False)

    dekl__Ewid = relationship(u'DeklEwid')


class DeklWersja(Base):
    __tablename__ = u'dekl_Wersja'

    dw_Id = Column(Integer, primary_key=True)
    dw_DeklNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dw_Narastajaca = Column(BIT, nullable=False, server_default=text("((0))"))
    dw_Standard = Column(BIT, nullable=False, server_default=text("((1))"))
    dw_TypOkresu = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_TypDla = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_Programy = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_WersjaOryg = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_Wersja = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_WaznaOd = Column(DateTime)
    dw_WaznaDo = Column(DateTime)
    dw_Strony = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_WersjaOd = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dw_PoleDoPrzelewu = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_PoleKorekta = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_Zalacznik = Column(BIT, nullable=False, server_default=text("((0))"))
    dw_Definicja = Column(LargeBinary)
    dw_DefinicjaDef = Column(LargeBinary)
    dw_WydrukStr01 = Column(LargeBinary)
    dw_WydrukStr02 = Column(LargeBinary)
    dw_WydrukStr03 = Column(LargeBinary)
    dw_WydrukStr04 = Column(LargeBinary)
    dw_WydrukStr05 = Column(LargeBinary)
    dw_WydrukStr06 = Column(LargeBinary)
    dw_WydrukStr07 = Column(LargeBinary)
    dw_WydrukStr08 = Column(LargeBinary)
    dw_WydrukStr09 = Column(LargeBinary)
    dw_WydrukStr10 = Column(LargeBinary)
    dw_Widocznosc = Column(BIT, nullable=False, server_default=text("((1))"))
    dw_PoleOperatorImie = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_PoleOperatorNazwisko = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_PrzeliczPolaDeklaracji = Column(Integer, server_default=text("(NULL)"))
    dw_ObslugaPodpDaneAutoryzujace = Column(BIT, nullable=False, server_default=text("((0))"))
    dw_PoleDoDaneAutoryzujace = Column(Integer)
    dw_PoleStatusDok = Column(Integer)
    dw_NowyWydruk = Column(BIT, nullable=False, server_default=text("((0))"))
    dw_PoleNadplata = Column(Integer, nullable=False, server_default=text("((0))"))
    dw_PoleDoPrzeniesienia = Column(Integer, nullable=False, server_default=text("((0))"))


class DeklZu(Base):
    __tablename__ = u'dekl_Zus'

    dz_Id = Column(Integer, primary_key=True)
    dz_Okres = Column(DateTime, nullable=False)
    dz_DataAktualizacji = Column(DateTime, nullable=False)
    dz_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dz_Dane = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    dz_Wartosc = Column(MONEY, nullable=False, server_default=text("((0))"))


class DeklEwid(Base):
    __tablename__ = u'dekl__Ewid'

    de_Id = Column(Integer, primary_key=True)
    de_idWzorca = Column(ForeignKey(u'dekl_Wersja.dw_Id'), nullable=False)
    de_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    de_IdObiektu = Column(Integer)
    de_NazwaObiektu = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    de_OkresOd = Column(DateTime, nullable=False)
    de_OkresDo = Column(DateTime, nullable=False)
    de_Okres = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    de_DataAktualizacji = Column(DateTime, nullable=False)
    de_DoZaplaty = Column(MONEY)
    de_Korekta = Column(BIT)
    de_IdDeklGlownej = Column(Integer)
    de_CzyGlownyZal = Column(BIT)
    de_ZmienionoWpisUE = Column(BIT)

    dekl_Wersja = relationship(u'DeklWersja')


class DeklEDekl(Base):
    __tablename__ = u'dekl_eDekl'

    del_Id = Column(Integer, primary_key=True)
    del_IdDeklaracji = Column(ForeignKey(u'dekl__Ewid.de_Id'), nullable=False)
    del_XMLWygen = Column(LargeBinary)
    del_XMLWygenData = Column(DateTime)
    del_XMLWygenZrodlo = Column(Integer)
    del_XMLExportData = Column(DateTime)
    del_XMLPodpisany = Column(LargeBinary)
    del_XMLPodpisanyData = Column(DateTime)
    del_XMLPodpisanyZrodlo = Column(Integer)
    del_XMLWyslanyData = Column(DateTime)
    del_XMLWyslanyStatus = Column(Integer)
    del_NrReferencyjny = Column(String(255, u'Polish_CI_AS'))
    del_XMLUpo = Column(LargeBinary)
    del_XMLUpoData = Column(DateTime)
    del_XMLUpoZrodlo = Column(Integer)
    del_XMLUpoStatus = Column(Integer)
    del_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    del_XMLPodpisanyDaneAutoryzujace = Column(BIT)

    dekl__Ewid = relationship(u'DeklEwid')


class DeklEDeklLog(Base):
    __tablename__ = u'dekl_eDeklLog'

    dell_Id = Column(Integer, primary_key=True)
    dell_IdeDeklaracji = Column(ForeignKey(u'dekl_eDekl.del_Id'), nullable=False)
    dell_DataWpis = Column(DateTime, nullable=False)
    dell_Wpis = Column(String(255, u'Polish_CI_AS'), nullable=False)

    dekl_eDekl = relationship(u'DeklEDekl')


class DekzDeklaracja(Base):
    __tablename__ = u'dekz_Deklaracja'

    dzd_Id = Column(Integer, primary_key=True)
    dzd_IdNaliczenia = Column(ForeignKey(u'dekz__Naliczenie.dzn_Id'), nullable=False)
    dzd_Rodzaj = Column(Integer, nullable=False)
    dzd_Tresc = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    dzd_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    dekz__Naliczenie = relationship(u'DekzNaliczenie')


class DekzPozycja(Base):
    __tablename__ = u'dekz_Pozycja'

    dzp_Id = Column(Integer, primary_key=True)
    dzp_IdDeklaracji = Column(Integer, nullable=False)
    dzp_Lp = Column(Integer, nullable=False)
    dzp_NrPola = Column(Integer, nullable=False)
    dzp_Wartosc = Column(String(31, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class DekzPozycjaOpi(Base):
    __tablename__ = u'dekz_PozycjaOpis'

    dzo_Id = Column(Integer, primary_key=True)
    dzo_RodzajDeklaracji = Column(Integer, nullable=False)
    dzo_NrPola = Column(Integer, nullable=False)
    dzo_Pozycja = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dzo_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dzo_Uzywane = Column(BIT, nullable=False, server_default=text("((1))"))
    dzo_Format = Column(Integer, nullable=False, server_default=text("((0))"))
    dzo_Rozmiar = Column(Integer, nullable=False)
    dzo_Blok = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class DekzNaliczenie(Base):
    __tablename__ = u'dekz__Naliczenie'

    dzn_Id = Column(Integer, primary_key=True)
    dzn_Miesiac = Column(DateTime)
    dzn_Data = Column(DateTime, nullable=False)
    dzn_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dzn_Typ = Column(Integer, nullable=False)
    dzn_Format = Column(Integer, nullable=False, server_default=text("((0))"))
    dzn_Wyslane = Column(BIT, nullable=False, server_default=text("((0))"))


class DfwPozycja(Base):
    __tablename__ = u'dfw_Pozycja'

    fwp_Id = Column(Integer, primary_key=True)
    fwp_DoId = Column(Integer)
    fwp_Status = Column(Integer)
    fwp_Lp = Column(Integer)
    fwp_IdFaktWewn = Column(ForeignKey(u'dfw__FakturyWewnetrzne.fwn_Id'), nullable=False)
    fwp_DokId = Column(ForeignKey(u'dok__Dokument.dok_Id'))
    fwp_PozId = Column(Integer)
    fwp_TowId = Column(ForeignKey(u'tw__Towar.tw_Id'))
    fwp_TowRodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    fwp_Opis = Column(String(255, u'Polish_CI_AS'))
    fwp_Ilosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_Jm = Column(String(10, u'Polish_CI_AS'))
    fwp_CenaWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_WartWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_Waluta = Column(String(3, u'Polish_CI_AS'))
    fwp_WalutaKurs = Column(MONEY, nullable=False, server_default=text("((1))"))
    fwp_WalutaLiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    fwp_WalutaRodzajKursu = Column(Integer)
    fwp_WalutaDataKursu = Column(DateTime)
    fwp_WalutaIdBanku = Column(Integer)
    fwp_VatId = Column(Integer)
    fwp_VatProc = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_CenaNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_CenaBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_Rabat = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwp_KategoriaId = Column(Integer)
    fwp_PozDoId = Column(Integer)

    dok__Dokument = relationship(u'DokDokument')
    dfw__FakturyWewnetrzne = relationship(u'DfwFakturyWewnetrzne')
    tw__Towar = relationship(u'TwTowar')


class DfwVat(Base):
    __tablename__ = u'dfw_Vat'

    fwv_Id = Column(Integer, primary_key=True)
    fwv_DokId = Column(ForeignKey(u'dfw__FakturyWewnetrzne.fwn_Id'), nullable=False)
    fwv_VatId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'), nullable=False)
    fwv_VatProc = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwv_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwv_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwv_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))

    dfw__FakturyWewnetrzne = relationship(u'DfwFakturyWewnetrzne')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class DfwFakturyWewnetrzne(Base):
    __tablename__ = u'dfw__FakturyWewnetrzne'

    fwn_Id = Column(Integer, primary_key=True)
    fwn_Typ = Column(Integer, nullable=False)
    fwn_Podtyp = Column(Integer, nullable=False)
    fwn_MagId = Column(Integer, nullable=False)
    fwn_Nr = Column(Integer, nullable=False)
    fwn_NrRoz = Column(String(3, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_DoDokId = Column(Integer)
    fwn_DoDokNrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_DoDokDataWyst = Column(DateTime)
    fwn_KorId = Column(Integer)
    fwn_KorNrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_KorDataWyst = Column(DateTime)
    fwn_MscWyst = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_DataWyst = Column(DateTime, nullable=False)
    fwn_DataSprz = Column(DateTime, nullable=False)
    fwn_KhntId = Column(Integer)
    fwn_KhntAdreshId = Column(Integer)
    fwn_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_Wystawil = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_Odebral = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_PersonelId = Column(Integer, nullable=False)
    fwn_Status = Column(Integer, nullable=False, server_default=text("((1))"))
    fwn_StatusKsieg = Column(Integer, nullable=False, server_default=text("((0))"))
    fwn_KatId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    fwn_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_Podtytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fwn_RodzajOperacjiVat = Column(Integer, nullable=False, server_default=text("((0))"))
    fwn_KodRodzajuTransakcji = Column(Integer)
    fwn_KontrolaTyp = Column(Integer)
    fwn_CenyPoziom = Column(Integer)
    fwn_WartUsNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartUsBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartTwNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartTwBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartOpZwr = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_WartOpWyd = Column(MONEY, nullable=False, server_default=text("((0))"))
    fwn_JestVatAuto = Column(BIT, nullable=False, server_default=text("((0))"))
    fwn_VatTyp = Column(Integer)
    fwn_PodpisanoElektronicznie = Column(BIT)

    sl_Kategoria = relationship(u'SlKategoria')


class DkrAutomat(Base):
    __tablename__ = u'dkr_Automat'

    ap_Id = Column(Integer, primary_key=True)
    ap_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    ap_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ap_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ap_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ap_Data = Column(DateTime)
    ap_OkresDo = Column(DateTime)
    ap_Zakres = Column(Integer, nullable=False, server_default=text("((0))"))
    ap_IdRejestru = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Id'))

    sl_Kategoria = relationship(u'SlKategoria')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')
    pd_RokObrotowy = relationship(u'PdRokObrotowy')


class DkrAutomatPozycja(Base):
    __tablename__ = u'dkr_AutomatPozycja'

    app_Id = Column(Integer, primary_key=True)
    app_IdAutomatu = Column(ForeignKey(u'dkr_Automat.ap_Id'), nullable=False)
    app_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    app_KontoZ = Column(String(50, u'Polish_CI_AS'), nullable=False)
    app_KwotaZ = Column(Integer, nullable=False)
    app_KontoWn = Column(String(50, u'Polish_CI_AS'), nullable=False)
    app_KontoMa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    app_Udzial = Column(MONEY, nullable=False, server_default=text("((100))"))
    app_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    app_IdAutomatuPoz = Column(Integer)
    app_WszystkieAnalityki = Column(BIT, nullable=False, server_default=text("((0))"))
    app_PobierajKontoZWn = Column(BIT, nullable=False, server_default=text("((0))"))
    app_PobierajKontoZMa = Column(BIT, nullable=False, server_default=text("((0))"))

    dkr_Automat = relationship(u'DkrAutomat')


class DkrBilansOtwarciaDostawy(Base):
    __tablename__ = u'dkr_BilansOtwarciaDostawy'

    bor_Id = Column(Integer, primary_key=True)
    bor_Dokument = Column(String(30, u'Polish_CI_AS'))
    bor_Kwota = Column(MONEY, nullable=False)
    bor_Kurs = Column(MONEY, nullable=False)
    bor_LiczbaJednostek = Column(Integer, nullable=False)
    bor_IdPozycji = Column(Integer, nullable=False)
    bor_LP = Column(Integer, nullable=False)
    bor_IdPozycjiZrodlowej = Column(ForeignKey(u'dkr_Pozycja.dko_Id'))
    bor_IdPozycjiZrodlowejBO = Column(ForeignKey(u'dkr_BilansOtwarciaDostawy.bor_Id'))

    dkr_Pozycja = relationship(u'DkrPozycja')
    parent = relationship(u'DkrBilansOtwarciaDostawy', remote_side=[bor_Id])


class DkrBilansOtwarciaZmiana(Base):
    __tablename__ = u'dkr_BilansOtwarciaZmiana'

    boz_Id = Column(Integer, primary_key=True)
    boz_IdBO = Column(ForeignKey(u'dkr_BilansOtwarcia.bo_Id'), nullable=False)
    boz_Typ = Column(Integer, nullable=False)
    boz_IdModyfikowal = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    boz_DataModyfikacji = Column(DateTime, nullable=False)
    boz_hid = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    dkr_BilansOtwarcia = relationship(u'DkrBilansOtwarcia')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class DkrBilansOtwarciaZmianaSzczegoly(Base):
    __tablename__ = u'dkr_BilansOtwarciaZmianaSzczegoly'

    bozs_Id = Column(Integer, primary_key=True)
    bozs_IdBOZ = Column(ForeignKey(u'dkr_BilansOtwarciaZmiana.boz_Id'), nullable=False)
    bozs_Typ = Column(Integer, nullable=False)
    bozs_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    bozs_Strona = Column(Integer, nullable=False)
    bozs_StanPrzed = Column(MONEY, nullable=False)
    bozs_StanPo = Column(MONEY, nullable=False)

    dkr_BilansOtwarciaZmiana = relationship(u'DkrBilansOtwarciaZmiana')


class DkrDokImportowany(Base):
    __tablename__ = u'dkr_DokImportowany'
    __table_args__ = (
        Index(u'IX_dkr_DokImportowany', u'di_IdDekretu', u'di_TypDokumentu', u'di_IdDokumentu', unique=True),
    )

    di_Id = Column(Integer, primary_key=True)
    di_IdDekretu = Column(ForeignKey(u'dkr__Dokument.dkr_Id'), nullable=False)
    di_TypDokumentu = Column(Integer, nullable=False)
    di_IdDokumentu = Column(Integer, nullable=False)

    dkr__Dokument = relationship(u'DkrDokument')


class DkrParametr(Base):
    __tablename__ = u'dkr_Parametr'

    dkrp_Id = Column(Integer, primary_key=True)
    dkrp_DomyslnyTermPlat = Column(Integer, nullable=False, server_default=text("((14))"))
    dkrp_AutoDodawanieRozr = Column(Integer, nullable=False)
    dkrp_AutoNrTransakcji = Column(BIT, nullable=False)
    dkrp_SposobAutoRozliczRozr = Column(Integer, nullable=False)
    dkrp_KontrolaKreguKosztow = Column(Integer, nullable=False)
    dkrp_PobierajOstatniKurs = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_WyswietlajDymki = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieRejestru = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieDtDekretacji = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieDtDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieDtOperacji = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieKategorii = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieKB = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieTO = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieWaluty = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_KontrolaUniqNrDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_UstawDaneKhWVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    dkrp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    dkrp_KopiujTytulem = Column(BIT, nullable=False, server_default=text("((0))"))
    dkrp_DekretyZerowe = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PowielanieRaportRozr = Column(BIT, nullable=False, server_default=text("((1))"))
    dkrp_PrzepisywanieStorna = Column(BIT, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')


class DkrParametrDokDoDekretacji(Base):
    __tablename__ = u'dkr_ParametrDokDoDekretacji'

    dddp_Id = Column(Integer, primary_key=True)
    dddp_PrzerwaniePoBledzie = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    dddp_Data_Zakupowe = Column(Integer, nullable=False, server_default=text("((2))"))
    dddp_AutoNadawanieAnalityk = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_UzupelniajLukiAnalityk = Column(BIT, nullable=False, server_default=text("((0))"))
    dddp_DekretacjaUsuwajKwotyZerowe = Column(BIT, nullable=False, server_default=text("((0))"))
    dddp_RozniceZaokraglenDekretowWalutowych = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_ProbojBilansowacBezGrup = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_PrzenosPlatnosciMasowe = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_UsuwajNieprawidloweKonta = Column(BIT, nullable=False, server_default=text("((0))"))
    dddp_DekretyZerowe = Column(BIT, nullable=False, server_default=text("((1))"))
    dddp_RachDeklStronaGlowna = Column(BIT, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')


class DkrPieczecKsiegowa(Base):
    __tablename__ = u'dkr_PieczecKsiegowa'

    dkpk_Id = Column(Integer, primary_key=True)
    dkpk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dkpk_KontrolaBilansowania = Column(Integer, nullable=False, server_default=text("((0))"))


class DkrPieczecKsiegowaPozycja(Base):
    __tablename__ = u'dkr_PieczecKsiegowaPozycja'

    dkpp_Id = Column(Integer, primary_key=True)
    dkpp_IdPieczeci = Column(ForeignKey(u'dkr_PieczecKsiegowa.dkpk_Id'), nullable=False)
    dkpp_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False)
    dkpp_Strona = Column(Integer, nullable=False)
    dkpp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    dkpp_TypWiersza = Column(Integer, nullable=False, server_default=text("((0))"))
    dkpp_Pos = Column(Integer, nullable=False, server_default=text("((0))"))

    dkr_PieczecKsiegowa = relationship(u'DkrPieczecKsiegowa')


class DkrPozycja(Base):
    __tablename__ = u'dkr_Pozycja'
    __table_args__ = (
        Index(u'IX_dkr_Pozycja_Rok_Konto', u'dko_IdRoku', u'dko_Konto'),
    )

    dko_Id = Column(Integer, primary_key=True)
    dko_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    dko_DataDekretacji = Column(DateTime, nullable=False)
    dko_Status = Column(Integer, nullable=False, server_default=text("((1))"))
    dko_IdDokumentu = Column(ForeignKey(u'dkr__Dokument.dkr_Id'), index=True)
    dko_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False)
    dko_KwotaWn = Column(MONEY)
    dko_KwotaWnWaluta = Column(MONEY)
    dko_KwotaMa = Column(MONEY)
    dko_KwotaMaWaluta = Column(MONEY)
    dko_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("('PLN')"))
    dko_Kurs = Column(MONEY, nullable=False, server_default=text("((1))"))
    dko_LiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    dko_RodzajKursu = Column(Integer)
    dko_DataKursu = Column(DateTime)
    dko_IdBanku = Column(ForeignKey(u'sl_WalutaBank.wbn_ID'))
    dko_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dko_Grupa = Column(Integer, nullable=False)
    dko_LpWiersza = Column(Integer, nullable=False, server_default=text("((1))"))
    dko_TypWiersza = Column(Integer, nullable=False, server_default=text("((1))"))
    dko_KorektaZaokraglen = Column(BIT, nullable=False, server_default=text("((0))"))
    dko_NrWDzienniku = Column(Integer)
    dko_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    dko_IdKategorii = Column(Integer)

    sl_WalutaBank = relationship(u'SlWalutaBank')
    dkr__Dokument = relationship(u'DkrDokument')
    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')
    sl_Waluta = relationship(u'SlWaluta')


class DkrRoznicaKursowa(Base):
    __tablename__ = u'dkr_RoznicaKursowa'

    dkrk_Id = Column(Integer, primary_key=True)
    dkrk_Data = Column(DateTime, nullable=False)
    dkrk_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False)
    dkrk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    dkrk_Kwota = Column(MONEY, nullable=False)
    dkrk_Typ = Column(Integer, nullable=False)
    dkrk_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    dkrk_IdPozycji = Column(ForeignKey(u'dkr_Pozycja.dko_Id'))
    dkrk_IdPozycjiWyplaty = Column(ForeignKey(u'dkr_Pozycja.dko_Id'))
    dkrk_IdRoznicy = Column(ForeignKey(u'dkr_RoznicaKursowa.dkrk_Id'))
    dkrk_Kurs = Column(MONEY)
    dkrk_LiczbaJednostek = Column(Integer)

    dkr_Pozycja = relationship(u'DkrPozycja', primaryjoin='DkrRoznicaKursowa.dkrk_IdPozycji == DkrPozycja.dko_Id')
    dkr_Pozycja1 = relationship(u'DkrPozycja', primaryjoin='DkrRoznicaKursowa.dkrk_IdPozycjiWyplaty == DkrPozycja.dko_Id')
    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    parent = relationship(u'DkrRoznicaKursowa', remote_side=[dkrk_Id])


t_dkr_RoznicaKursowaPozycja = Table(
    u'dkr_RoznicaKursowaPozycja', metadata,
    Column(u'dkrkp_IdRoznicy', ForeignKey(u'dkr_RoznicaKursowa.dkrk_Id'), nullable=False),
    Column(u'dkrkp_IdPozycji', ForeignKey(u'dkr_Pozycja.dko_Id')),
    Column(u'dkrkp_IdPozycjiBO', ForeignKey(u'dkr_BilansOtwarciaDostawy.bor_Id')),
    Column(u'dkrkp_Kwota', MONEY, nullable=False),
    Index(u'CK_dkr_RoznicaKursowaPozycja_Pozycja_NoDupl', u'dkrkp_IdRoznicy', u'dkrkp_IdPozycji', u'dkrkp_IdPozycjiBO', unique=True)
)


class DkrSladRewizyjny(Base):
    __tablename__ = u'dkr_SladRewizyjny'

    srw_Id = Column(Integer, primary_key=True)
    srw_NrDokumentu = Column(String(30, u'Polish_CI_AS'), nullable=False)
    srw_Operacja = Column(Integer, nullable=False)
    srw_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    srw_Uzytkownik = Column(ForeignKey(u'pd_Uzytkownik.uz_Identyfikator'), nullable=False)
    srw_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    srw_DataDekretacji = Column(DateTime, nullable=False)
    srw_DokumentZrodlowy = Column(String(255, u'Polish_CI_AS'), nullable=False)
    srw_Rejestr = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Symbol'), nullable=False)

    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class DkrWzorzec(Base):
    __tablename__ = u'dkr_Wzorzec'

    dkrw_Id = Column(Integer, primary_key=True)
    dkrw_Typ = Column(Integer, nullable=False)
    dkrw_Nazwa = Column(String(80, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dkrw_Rejestr = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Symbol'))
    dkrw_KontrolaBilansowania = Column(Integer, nullable=False)
    dkrw_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False)
    dkrw_WalutaWyswietlana = Column(String(13, u'Polish_CI_AS'), nullable=False)
    dkrw_KursDokumentu = Column(MONEY, nullable=False)
    dkrw_RodzajKursu = Column(Integer, nullable=False)
    dkrw_Kwota = Column(MONEY, nullable=False)
    dkrw_KwotaWaluta = Column(MONEY, nullable=False)
    dkrw_KwotaVAT = Column(MONEY)
    dkrw_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False)
    dkrw_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dkrw_DataWykonania = Column(DateTime)
    dkrw_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    dkrw_IdObiektu = Column(Integer)
    dkrw_IdKh = Column(Integer)
    dkrw_SymbolKh = Column(String(20, u'Polish_CI_AS'), nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')
    sl_Waluta = relationship(u'SlWaluta')


class DkrWzorzecPozycja(Base):
    __tablename__ = u'dkr_WzorzecPozycja'

    dkow_Id = Column(Integer, primary_key=True)
    dkow_IdDokumentu = Column(ForeignKey(u'dkr_Wzorzec.dkrw_Id'), nullable=False)
    dkow_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False)
    dkow_KwotaWn = Column(MONEY, nullable=False)
    dkow_KwotaWnWaluta = Column(MONEY)
    dkow_KwotaMa = Column(MONEY, nullable=False)
    dkow_KwotaMaWaluta = Column(MONEY)
    dkow_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False)
    dkow_Kurs = Column(MONEY, nullable=False, server_default=text("((1))"))
    dkow_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    dkow_Transakcja = Column(String(50, u'Polish_CI_AS'))
    dkow_Grupa = Column(Integer)

    dkr_Wzorzec = relationship(u'DkrWzorzec')
    sl_Waluta = relationship(u'SlWaluta')


class DkrDokument(Base):
    __tablename__ = u'dkr__Dokument'
    __table_args__ = (
        Index(u'IX_drk__Dokument_IdDokImport', u'dkr_IdDokImport', u'dkr_TypDokImport'),
        Index(u'IX_dkr__Dokument', u'dkr_DataDekretacji', u'dkr_IdRoku', u'dkr_Status'),
        Index(u'IX_dkr__Dokument_Rejestr_Rok_Numer', u'dkr_Rejestr', u'dkr_IdRoku', u'dkr_Numer', u'dkr_DataDekretacji')
    )

    dkr_Id = Column(Integer, primary_key=True)
    dkr_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    dkr_DataDekretacji = Column(DateTime, nullable=False)
    dkr_DataDokumentu = Column(DateTime, nullable=False)
    dkr_DataOperacji = Column(DateTime, nullable=False)
    dkr_Status = Column(Integer, nullable=False, server_default=text("((1))"))
    dkr_Rejestr = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Symbol'), nullable=False)
    dkr_Numer = Column(Integer, nullable=False)
    dkr_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False)
    dkr_DokumentZrodlowy = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dkr_KontrolaBilansowania = Column(Integer, nullable=False)
    dkr_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("('PLN')"))
    dkr_WalutaWyswietlana = Column(String(13, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    dkr_KursDokumentu = Column(MONEY, nullable=False, server_default=text("((1))"))
    dkr_LiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    dkr_RodzajKursu = Column(Integer)
    dkr_DataKursu = Column(DateTime)
    dkr_IdBanku = Column(ForeignKey(u'sl_WalutaBank.wbn_ID'))
    dkr_Kwota = Column(MONEY, nullable=False)
    dkr_KwotaWaluta = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    dkr_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dkr_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dkr_Dekretowal = Column(ForeignKey(u'pd_Uzytkownik.uz_Identyfikator'), nullable=False)
    dkr_Ksiegowal = Column(ForeignKey(u'pd_Uzytkownik.uz_Identyfikator'))
    dkr_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    dkr_IdObiektu = Column(Integer)
    dkr_TypDokImport = Column(Integer)
    dkr_IdDokImport = Column(Integer)
    dkr_ImportPochodzenie = Column(Integer, nullable=False, server_default=text("((0))"))
    dkr_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    dkr_SymbolKh = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dkr_NrWDzienniku = Column(Integer)
    dkr_Podtyp = Column(Integer, nullable=False, server_default=text("((0))"))
    dkr_TrybWprowadzaniaRozrachunkow = Column(Integer, nullable=False, server_default=text("((2))"))
    dkr_WalutaKursWyswietlany = Column(String(15, u'Polish_CI_AS'), nullable=False, server_default=text("('')"))
    dkr_KwotaWn = Column(MONEY, nullable=False, server_default=text("((0))"))
    dkr_KwotaMa = Column(MONEY, nullable=False, server_default=text("((0))"))
    dkr_KwotaWalutaWn = Column(MONEY, nullable=False, server_default=text("((0))"))
    dkr_KwotaWalutaMa = Column(MONEY, nullable=False, server_default=text("((0))"))
    dkr_Storno = Column(Integer, nullable=False, server_default=text("((0))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik', primaryjoin='DkrDokument.dkr_Dekretowal == PdUzytkownik.uz_Identyfikator')
    sl_WalutaBank = relationship(u'SlWalutaBank')
    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', primaryjoin='DkrDokument.dkr_Ksiegowal == PdUzytkownik.uz_Identyfikator')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')
    sl_Waluta = relationship(u'SlWaluta')


class DksHomeBanking(Base):
    __tablename__ = u'dks_HomeBanking'

    hb_Id = Column(Integer, primary_key=True)
    hb_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    hb_Transformacja = Column(LargeBinary)


class DksKasa(Base):
    __tablename__ = u'dks_Kasa'

    ks_Id = Column(Integer, primary_key=True)
    ks_Symbol = Column(String(3, u'Polish_CI_AS'), nullable=False, unique=True)
    ks_Nazwa = Column(String(80, u'Polish_CI_AS'), nullable=False)
    ks_Opis = Column(String(255, u'Polish_CI_AS'))
    ks_Analityka = Column(String(3, u'Polish_CI_AS'))
    ks_Glowna = Column(BIT, nullable=False, server_default=text("((0))"))
    ks_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'))
    ks_Wielowalutowa = Column(BIT, nullable=False, server_default=text("((1))"))
    ks_RK_Personalizacja = Column(BIT, nullable=False, server_default=text("((1))"))
    ks_RK_Kategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ks_RK_Okres = Column(Integer, nullable=False, server_default=text("((1))"))
    ks_RK_WieleZaOkres = Column(BIT, nullable=False, server_default=text("((0))"))
    ks_RK_AutoDodawanie = Column(Integer, nullable=False, server_default=text("((1))"))
    ks_RK_KategoriaKorekty = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ks_RK_FormatNumeru = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'))

    sl_FormatNumeracji = relationship(u'SlFormatNumeracji')
    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='DksKasa.ks_RK_Kategoria == SlKategoria.kat_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='DksKasa.ks_RK_KategoriaKorekty == SlKategoria.kat_Id')
    sl_Waluta = relationship(u'SlWaluta')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'dks_KasaTransferProfil')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', secondary=u'dks_KasaProfil')


class DksKasaBO(Base):
    __tablename__ = u'dks_KasaBO'
    __table_args__ = (
        Index(u'Waluta_KasaBO', u'kso_IdKasy', u'kso_Waluta', unique=True),
    )

    kso_Id = Column(Integer, primary_key=True)
    kso_IdKasy = Column(ForeignKey(u'dks_Kasa.ks_Id'), nullable=False)
    kso_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False)
    kso_Kwota = Column(MONEY, nullable=False)

    dks_Kasa = relationship(u'DksKasa')
    sl_Waluta = relationship(u'SlWaluta')


t_dks_KasaProfil = Table(
    u'dks_KasaProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'dks_Kasa.ks_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


t_dks_KasaTransferProfil = Table(
    u'dks_KasaTransferProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'dks_Kasa.ks_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


t_dks_ParametrFinansowy = Table(
    u'dks_ParametrFinansowy', metadata,
    Column(u'fin_Id', Integer, nullable=False, server_default=text("((1))")),
    Column(u'fin_TypDok', Integer, nullable=False),
    Column(u'fin_IdKategorii', Integer),
    Column(u'fin_Zaliczka', Integer, nullable=False, server_default=text("((7))")),
    Column(u'fin_TypKursu', Integer),
    Column(u'fin_InfoNiesplacone', BIT, nullable=False),
    Column(u'fin_Status', Integer, server_default=text("((1))")),
    Column(u'fin_RodzajOdsetek', Integer),
    Column(u'fin_StopaOdsetek', MONEY),
    Column(u'fin_OstatniKurs', BIT, nullable=False, server_default=text("((0))")),
    Column(u'fin_DrukujPoZapisie', BIT, nullable=False, server_default=text("((0))")),
    Column(u'fin_Korekty', BIT, nullable=False, server_default=text("((1))")),
    Column(u'fin_IdKatTransfer', Integer),
    Column(u'fin_PrzepisujKatZDok', BIT, nullable=False, server_default=text("((1))")),
    Column(u'fin_ParamEwidId', ForeignKey(u'par__Ewid.pe_Id')),
    Column(u'fin_SposobZaplaty', Integer, nullable=False, server_default=text("((2))")),
    Index(u'IX_dks_ParametrFinansowy', u'fin_TypDok', u'fin_ParamEwidId', unique=True)
)


class DnkNotaDokKorygowane(Base):
    __tablename__ = u'dnk_NotaDokKorygowane'

    dnkd_Id = Column(Integer, primary_key=True)
    dnkd_IdNota = Column(ForeignKey(u'dnk__NotaKorygujaca.dnk_Id'), nullable=False)
    dnkd_IdDok = Column(Integer, nullable=False)

    dnk__NotaKorygujaca = relationship(u'DnkNotaKorygujaca')


class DnkNotaKorygujaca(Base):
    __tablename__ = u'dnk__NotaKorygujaca'

    dnk_Id = Column(Integer, primary_key=True)
    dnk_Typ = Column(Integer, nullable=False)
    dnk_Podtyp = Column(Integer, nullable=False)
    dnk_MagId = Column(Integer, nullable=False)
    dnk_Nr = Column(Integer, nullable=False)
    dnk_NrRoz = Column(String(3, u'Polish_CI_AS'))
    dnk_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False)
    dnk_MscWyst = Column(String(40, u'Polish_CI_AS'), nullable=False)
    dnk_DataWyst = Column(DateTime, nullable=False)
    dnk_DataPotw = Column(DateTime)
    dnk_Potwierdzenie = Column(BIT)
    dnk_OdbiorcaId = Column(Integer)
    dnk_OdbiorcaAdreshId = Column(Integer)
    dnk_Wystawil = Column(String(40, u'Polish_CI_AS'), nullable=False)
    dnk_Odebral = Column(String(40, u'Polish_CI_AS'), nullable=False)
    dnk_PersonelId = Column(Integer)
    dnk_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False)
    dnk_KatId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dnk_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_Podtytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_TrescDoKor = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_TrescPoKor = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_DokKorDataSprzedazy = Column(DateTime)
    dnk_DokKorDataWystawienia = Column(DateTime)
    dnk_DokKorNrDok = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_DokKorNrDokNab = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dnk_DokKorDataZakonczenia = Column(DateTime)

    sl_Kategoria = relationship(u'SlKategoria')


class DokDokBiblioteka(Base):
    __tablename__ = u'dok_DokBiblioteka'

    ddkb_Id = Column(Integer, primary_key=True)
    ddkb_IdDokumentu = Column(ForeignKey(u'dok__Dokument.dok_Id'), nullable=False, index=True)
    ddkb_IdKategorii = Column(ForeignKey(u'sl_KategoriaDokumentu.kd_Id'), nullable=False)
    ddkb_Zablokowany = Column(BIT, nullable=False)
    ddkb_DataModyfikacji = Column(DateTime, nullable=False)
    ddkb_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ddkb_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ddkb_Tresc = Column(LargeBinary, nullable=False)
    ddkb_Typ = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ddkb_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    dok__Dokument = relationship(u'DokDokument')
    sl_KategoriaDokumentu = relationship(u'SlKategoriaDokumentu')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class DokDokumentDefiniowalny(Base):
    __tablename__ = u'dok_DokumentDefiniowalny'

    dd_Id = Column(Integer, primary_key=True)
    dd_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    dd_Skrot = Column(String(3, u'Polish_CI_AS'), nullable=False)
    dd_DokTyp = Column(Integer, nullable=False)
    dd_DokPodtyp = Column(Integer, nullable=False)
    dd_IdOperacji = Column(Integer)
    dd_IdParTyp = Column(ForeignKey(u'par_Typ.pt_Id'), nullable=False)
    dd_UpidAdd = Column(Integer)
    dd_UpidEdit = Column(Integer)
    dd_UpidDelete = Column(Integer)
    dd_UpidPrint = Column(Integer)
    dd_UzywaUprawnien = Column(Integer, nullable=False)
    dd_PokazFiltr = Column(Integer, nullable=False)
    dd_WzwId = Column(Integer, nullable=False, server_default=text("((-1))"))

    par_Typ = relationship(u'ParTyp')


t_dok_DokumentDefiniowalnyOperacja = Table(
    u'dok_DokumentDefiniowalnyOperacja', metadata,
    Column(u'ddo_IdDD', ForeignKey(u'dok_DokumentDefiniowalny.dd_Id'), nullable=False),
    Column(u'ddo_IdUio', ForeignKey(u'ui_Operacja.uio_Id'), nullable=False),
    Column(u'ddo_TypOperacji', Integer)
)


class DokDokumentDefiniowalnyWzw(Base):
    __tablename__ = u'dok_DokumentDefiniowalnyWzw'

    ddw_Id = Column(Integer, primary_key=True)
    ddw_DokDefId = Column(Integer, nullable=False)
    ddw_NazwaKomputera = Column(String(255, u'Polish_CI_AS'), nullable=False)
    ddw_WzorzecId = Column(Integer, nullable=False)


t_dok_DokumentKonwersja131SP2 = Table(
    u'dok_DokumentKonwersja131SP2', metadata,
    Column(u'dokk_Id', Integer),
    Column(u'dokk_WartUsNetto', MONEY),
    Column(u'dokk_WartUsBrutto', MONEY),
    Column(u'dokk_WartTwNetto', MONEY),
    Column(u'dokk_WartTwBrutto', MONEY),
    Column(u'dokk_WartOpZwr', MONEY),
    Column(u'dokk_WartOpWyd', MONEY),
    Column(u'dokk_WartMag', MONEY),
    Column(u'dokk_WartMagP', MONEY),
    Column(u'dokk_WartMagR', MONEY),
    Column(u'dokk_StatusKsieg', Integer)
)


class DokFunduszPromocji(Base):
    __tablename__ = u'dok_FunduszPromocji'

    dfp_Id = Column(Integer, primary_key=True)
    dfp_DokId = Column(Integer, nullable=False)
    dfp_FundId = Column(Integer, nullable=False)
    dfp_FundNazwa = Column(String(51, u'Polish_CI_AS'), nullable=False)
    dfp_Wartosc = Column(MONEY, nullable=False)
    dfp_PodstawaJm = Column(MONEY)
    dfp_PodstawaNetto = Column(MONEY)


class DokMagDysp(Base):
    __tablename__ = u'dok_MagDysp'

    md_Id = Column(ForeignKey(u'dok_MagRuch.mr_Id'), primary_key=True, nullable=False)
    md_PozId = Column(Integer, primary_key=True, nullable=False, index=True)
    md_spid = Column(Integer, nullable=False)
    md_Ilosc = Column(MONEY, nullable=False)
    md_Czas = Column(DateTime, nullable=False)
    md_DoId = Column(Integer)
    md_DoIlosc = Column(MONEY, nullable=False, server_default=text("((0))"))

    dok_MagRuch = relationship(u'DokMagRuch')


class DokMagRuch(Base):
    __tablename__ = u'dok_MagRuch'
    __table_args__ = (
        Index(u'IX_dok_MagRuch_2', u'mr_TowId', u'mr_MagId', u'mr_Pozostalo'),
    )

    mr_Id = Column(Integer, primary_key=True)
    mr_DoId = Column(Integer, index=True)
    mr_SeriaId = Column(Integer, nullable=False, index=True)
    mr_PozId = Column(ForeignKey(u'dok_Pozycja.ob_Id'), nullable=False, index=True)
    mr_TowId = Column(Integer, nullable=False)
    mr_MagId = Column(Integer)
    mr_Data = Column(DateTime, nullable=False)
    mr_Ilosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    mr_Pozostalo = Column(MONEY, nullable=False, server_default=text("((0))"))
    mr_Cena = Column(MONEY, nullable=False, server_default=text("((0))"))
    mr_Termin = Column(DateTime)

    dok_Pozycja = relationship(u'DokPozycja')


t_dok_MagWart = Table(
    u'dok_MagWart', metadata,
    Column(u'mw_SeriaId', Integer, nullable=False, index=True),
    Column(u'mw_PozId', ForeignKey(u'dok_Pozycja.ob_Id'), nullable=False, index=True),
    Column(u'mw_Data', DateTime, nullable=False),
    Column(u'mw_Cena', MONEY, nullable=False, server_default=text("((0))"))
)


t_dok_MagWartKKDR = Table(
    u'dok_MagWartKKDR', metadata,
    Column(u'mwkkd_SeriaId', Integer, nullable=False, index=True),
    Column(u'mwkkd_PozId', ForeignKey(u'dok_Pozycja.ob_Id'), nullable=False, index=True),
    Column(u'mwkkd_Data', DateTime, nullable=False),
    Column(u'mwkkd_Delta', MONEY, nullable=False)
)


t_dok_Parametr = Table(
    u'dok_Parametr', metadata,
    Column(u'dkp_Typ', Integer, nullable=False),
    Column(u'dkp_Podtyp', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KatId', Integer),
    Column(u'dkp_Tytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_Podtytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_MscWystTyp', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_MscWyst', String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_PlatnId', Integer),
    Column(u'dkp_CenyPoziom', Integer),
    Column(u'dkp_CenyTyp', Integer),
    Column(u'dkp_WalutaKursTyp', Integer),
    Column(u'dkp_CenyPoziomZwr', Integer),
    Column(u'dkp_SpLiczVAT', Integer, server_default=text("((0))")),
    Column(u'dkp_KontrolaWart', Integer),
    Column(u'dkp_Prog', Integer),
    Column(u'dkp_WartProgu', MONEY),
    Column(u'dkp_Sortuj', Integer, server_default=text("((0))")),
    Column(u'dkp_KasaKatId', Integer),
    Column(u'dkp_WZKatId', Integer),
    Column(u'dkp_WZTytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_WZPodtytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_PZKatId', Integer),
    Column(u'dkp_PZTytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_PZPodtytul', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_Fiskalizuj', BIT, server_default=text("((0))")),
    Column(u'dkp_DrukarkaId', Integer),
    Column(u'dkp_PrzeliczNetto', BIT, server_default=text("((0))")),
    Column(u'dkp_Rezerwuj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_Drukuj', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_DrukujAuto', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_Reszta', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_NalZob', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_CenyNarzut', MONEY, nullable=False, server_default=text("((0))")),
    Column(u'dkp_RodzajOperacjiVat', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_PrzeniesUwagi', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KodRodzajuTransakcji', Integer),
    Column(u'dkp_PlaOdb', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_PlaOdbSql', Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'dkp_ZamRoznWartMin', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DrukujInwBezZapisu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_PobierajOstatniKurs', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_TypDatyKursu', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_SumGrid', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KorektaN', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_ParamEwidId', ForeignKey(u'par__Ewid.pe_Id')),
    Column(u'dkp_Szuflada', BIT, server_default=text("((0))")),
    Column(u'dkp_InsxLiczbaPozTw', Integer, nullable=False, server_default=text("((15))")),
    Column(u'dkp_InsxTwBezZerowych', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InsxTwRezerwacje', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InsxTwWarunekAnd', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InsxTwSortuj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InsxLiczbaPozKh', Integer, nullable=False, server_default=text("((20))")),
    Column(u'dkp_InsxKhWarunekAnd', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InsxKhRodzaj', Integer, nullable=False, server_default=text("((-2))")),
    Column(u'dkp_InsxKhSortuj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_BankKatId', Integer),
    Column(u'dkp_DefiniowalnyId', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DomyslnaKategoria', Integer),
    Column(u'dkp_InwDomyslnyStan', Integer, nullable=False, server_default=text("((2))")),
    Column(u'dkp_InwDomyslnyStanWartosc', MONEY, server_default=text("((1))")),
    Column(u'dkp_InwTrybZwykly', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_InwTrybAuto', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_BlokujZwykleZk', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_RejFiskPozycjeFaktZal', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InwCenyIWz', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InwKodyDostaw', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InwPokazRaport', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_FwKontrolaTyp', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_FwVatTyp', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_FwWszystkiePozycje', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_InwRaportNiezerowe', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_NaliczajFunduszePromocji', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_FwOdliczenieAuto', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_ZamRoznicTrybRealiz', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_FwKorektyRoznicowo', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_ZamRoznMagNieGrupuj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DodajAkcyzeDoNetto', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_VatMarza', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_FmFiskVatId', Integer, nullable=False, server_default=text("((100004))")),
    Column(u'dkp_CzyDzialanieDodaj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_CzyDzialanieEdycja', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_RodzajDzialanieDodaj', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_RodzajDzialanieEdycja', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_SzablonDzialanieDodaj', Integer),
    Column(u'dkp_SzablonDzialanieEdycja', Integer),
    Column(u'dkp_PodpisujPDF', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DodajDoBiblioteki', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_PodpisBrakZgodyKh', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KontrolaPozycjiIWc', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_TypKartotKhFSu', Integer),
    Column(u'dkp_ProceduraMarzy', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KatIdFSu', Integer),
    Column(u'dkp_KontrolaOkrDokMagFk', Integer),
    Column(u'dkp_IWzEdycjaPwRw', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_RodzajZwrDetal', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_KontrolaWystDokWaluta', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_RejFiskUsuwajPozycjeZeroweFaktZb', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_FwPobierajPozycjezOO', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_PozDomyslnyStan', Integer, nullable=False, server_default=text("((2))")),
    Column(u'dkp_PozDomyslnyStanWartosc', MONEY, nullable=False, server_default=text("((1.0))")),
    Column(u'dkp_PozTrybZwykly', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_PozTrybAuto', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_BlokujPoprawPaGdyFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_BlokujUsunPaGdyFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_BlokujDodajZwGdyFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_BlokujEdycjaFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_DoFSdWlaczZwrDet', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_BlokujPoprawZwGdyFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_BlokujUsunZwGdyFSd', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_CzyEdycjaNabyciaMarza', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_UtrzymujCeneNettoBrutto', Integer, nullable=False, server_default=text("((1))")),
    Column(u'dkp_UzyjAdresuDostawy', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_CenyPrecyzjaZwykla', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DataMagZakupuJakZakonczenia', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_DomyslnaKatDlaUsJednorazowych', Integer),
    Column(u'dkp_ZapiszKontynuuj', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_NiePrzenosUwagZam', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_AutoAktualizacjaCenTryb', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_AutoAktualizacjaCenKryterium', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_AutoAktualizacjaCenKwotaKryterium', Integer, nullable=False, server_default=text("((0))")),
    Column(u'dkp_AutoAktualizacjaCenKwota', MONEY, nullable=False, server_default=text("((0.0))")),
    Column(u'dkp_AutoAktualizacaCenTylkoOstatni', BIT, nullable=False, server_default=text("((0))")),
    Column(u'dkp_AutoAktualizacaCenTowaryKryteria', BIT, nullable=False, server_default=text("((1))")),
    Column(u'dkp_DataOtrzymaniaJakoDataDlaBlokadyOkresu', BIT, nullable=False, server_default=text("((0))")),
    Index(u'IX_dok_Parametr', u'dkp_Typ', u'dkp_Podtyp', u'dkp_ParamEwidId', u'dkp_DefiniowalnyId', unique=True)
)


t_dok_ParametrDF = Table(
    u'dok_ParametrDF', metadata,
    Column(u'dkd_Typ', Integer, nullable=False),
    Column(u'dkd_Podtyp', Integer, nullable=False),
    Column(u'dkd_DrukarkaId', Integer),
    Column(u'dkd_Komputer', String(128, u'Polish_CI_AS')),
    Column(u'dkd_ParamEwidId', Integer),
    Column(u'dkd_DefiniowalnyId', Integer, nullable=False, server_default=text("((0))")),
    Index(u'IX_dok_ParametrDF', u'dkd_Typ', u'dkd_Podtyp', u'dkd_ParamEwidId', u'dkd_Komputer', u'dkd_DefiniowalnyId', unique=True)
)


t_dok_PowiazanieFSdPA = Table(
    u'dok_PowiazanieFSdPA', metadata,
    Column(u'dfd_IdFS', Integer, nullable=False),
    Column(u'dfd_IdPA', Integer, nullable=False),
    Column(u'dfd_Typ', Integer, nullable=False)
)


class DokPozycja(Base):
    __tablename__ = u'dok_Pozycja'
    __table_args__ = (
        Index(u'IX_dok_Pozycja_4', u'ob_Id', u'ob_DokHanId', u'ob_DokMagId', u'ob_Ilosc', u'ob_CenaNetto', u'ob_CenaBrutto', u'ob_WartNetto', u'ob_WartBrutto'),
    )

    ob_Id = Column(Integer, primary_key=True)
    ob_DoId = Column(ForeignKey(u'dok_Pozycja.ob_Id'), index=True)
    ob_Znak = Column(SmallInteger, nullable=False, server_default=text("""\

create default [DZnak] as 1

"""))
    ob_Status = Column(Integer)
    ob_DokHanId = Column(ForeignKey(u'dok__Dokument.dok_Id'), index=True)
    ob_DokMagId = Column(ForeignKey(u'dok__Dokument.dok_Id'), index=True)
    ob_TowId = Column(ForeignKey(u'tw__Towar.tw_Id'), index=True)
    ob_TowRodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    ob_Opis = Column(String(255, u'Polish_CI_AS'))
    ob_DokHanLp = Column(Integer)
    ob_DokMagLp = Column(Integer)
    ob_Ilosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_IloscMag = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_Jm = Column(String(10, u'Polish_CI_AS'))
    ob_CenaMag = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_CenaWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_CenaNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_CenaBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_Rabat = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_WartMag = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_VatId = Column(Integer)
    ob_VatProc = Column(MONEY, nullable=False, server_default=text("((0))"))
    ob_Termin = Column(DateTime)
    ob_MagId = Column(Integer)
    ob_NumerSeryjny = Column(String(40, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ob_KategoriaId = Column(Integer)
    ob_Akcyza = Column(BIT)
    ob_AkcyzaKwota = Column(MONEY)
    ob_AkcyzaWartosc = Column(MONEY)
    ob_CenaNabycia = Column(MONEY)
    ob_WartNabycia = Column(MONEY)
    ob_PrzyczynaKorektyId = Column(Integer)

    parent = relationship(u'DokPozycja', remote_side=[ob_Id])
    dok__Dokument = relationship(u'DokDokument', primaryjoin='DokPozycja.ob_DokHanId == DokDokument.dok_Id')
    dok__Dokument1 = relationship(u'DokDokument', primaryjoin='DokPozycja.ob_DokMagId == DokDokument.dok_Id')
    tw__Towar = relationship(u'TwTowar')


class DokPromocja(Base):
    __tablename__ = u'dok_Promocja'
    __table_args__ = (
        Index(u'IX_dok_Promocja', u'pc_TwGrId', u'pc_KhGrId', u'pc_CenyPoziom'),
    )

    pc_Id = Column(Integer, primary_key=True)
    pc_TwGrId = Column(Integer)
    pc_KhGrId = Column(Integer)
    pc_CenyPoziom = Column(Integer)
    pc_Rabat = Column(MONEY)
    pc_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pc_Od = Column(DateTime)
    pc_Do = Column(DateTime)
    pc_Nieaktywna = Column(BIT, server_default=text("((0))"))
    pc_WyborTw = Column(BIT, server_default=text("((0))"))
    pc_WyborKh = Column(BIT, server_default=text("((0))"))
    pc_RodzProm = Column(Integer)
    pc_CenaNetto = Column(MONEY)
    pc_CenaBrutto = Column(MONEY)
    pc_POS = Column(BIT, nullable=False, server_default=text("((0))"))
    pc_OgraniczonaCzasowo = Column(BIT, nullable=False, server_default=text("((1))"))
    pc_Interwal = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_CalyDzien = Column(BIT, nullable=False, server_default=text("((0))"))
    pc_Robocze = Column(BIT, nullable=False, server_default=text("((0))"))
    pc_PoczatekZCyklu = Column(DateTime)
    pc_CoIle = Column(Integer, nullable=False, server_default=text("((1))"))
    pc_DniTygodnia = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_DzienMiesiaca = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_DefinicjaZlozona = Column(BIT, server_default=text("((0))"))
    pc_DzienPorzadek = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_DzienRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_Miesiac = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_RodzajPowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_IlePowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    pc_KoniecPowtorzen = Column(DateTime)


class DokPromocjaKontrahent(Base):
    __tablename__ = u'dok_PromocjaKontrahent'

    pck_Id = Column(Integer, primary_key=True)
    pck_IdPromocja = Column(ForeignKey(u'dok_Promocja.pc_Id'), nullable=False)
    pck_IdKontrahent = Column(Integer, nullable=False)

    dok_Promocja = relationship(u'DokPromocja')


class DokPromocjaTowar(Base):
    __tablename__ = u'dok_PromocjaTowar'

    pct_Id = Column(Integer, primary_key=True)
    pct_IdPromocja = Column(ForeignKey(u'dok_Promocja.pc_Id'), nullable=False)
    pct_IdTowaru = Column(Integer, nullable=False)

    dok_Promocja = relationship(u'DokPromocja')


t_dok_UzytePromocje = Table(
    u'dok_UzytePromocje', metadata,
    Column(u'dup_DokId', Integer, nullable=False),
    Column(u'dup_PromocjaId', Integer, nullable=False)
)


class DokVat(Base):
    __tablename__ = u'dok_Vat'

    vt_Id = Column(Integer, primary_key=True)
    vt_DokId = Column(ForeignKey(u'dok__Dokument.dok_Id'), nullable=False, index=True)
    vt_VatId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'), nullable=False)
    vt_VatProc = Column(MONEY, nullable=False, server_default=text("((0))"))
    vt_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    vt_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    vt_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))

    dok__Dokument = relationship(u'DokDokument')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class DokDokument(Base):
    __tablename__ = u'dok__Dokument'
    __table_args__ = (
        Index(u'IX_dok__Dokument_5', u'dok_Id', u'dok_NrPelny', u'dok_DoDokNrPelny', u'dok_OdbiorcaAdreshId'),
        Index(u'IX_dok__Dokument_2', u'dok_Typ', u'dok_MagId', u'dok_Nr', u'dok_NrRoz', u'dok_DataWyst'),
        Index(u'IX_dok__Dokument', u'dok_DoDokId', u'dok_Typ', u'dok_Podtyp'),
        Index(u'IX_dok__Dokument_4', u'dok_Typ', u'dok_Podtyp', u'dok_NrPelnyOryg', u'dok_PlatnikId')
    )

    dok_Id = Column(Integer, primary_key=True)
    dok_Typ = Column(Integer, nullable=False)
    dok_Podtyp = Column(Integer, nullable=False)
    dok_MagId = Column(Integer)
    dok_Nr = Column(Integer)
    dok_NrRoz = Column(String(3, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_NrPelnyOryg = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_DoDokId = Column(Integer)
    dok_DoDokNrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_DoDokDataWyst = Column(DateTime)
    dok_MscWyst = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_DataWyst = Column(DateTime, nullable=False, index=True)
    dok_DataMag = Column(DateTime, nullable=False)
    dok_DataOtrzym = Column(DateTime, index=True)
    dok_PlatnikId = Column(Integer)
    dok_PlatnikAdreshId = Column(Integer)
    dok_OdbiorcaId = Column(Integer)
    dok_OdbiorcaAdreshId = Column(Integer)
    dok_PlatId = Column(Integer)
    dok_PlatTermin = Column(DateTime)
    dok_Wystawil = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_Odebral = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_PersonelId = Column(Integer)
    dok_CenyPoziom = Column(Integer)
    dok_CenyTyp = Column(Integer)
    dok_CenyKurs = Column(MONEY)
    dok_CenyNarzut = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_RabatProc = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartUsNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartUsBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartTwNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartTwBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartOpZwr = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartOpWyd = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartMag = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartMagP = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartMagR = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartVat = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_WartBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dok_KwWartosc = Column(MONEY, server_default=text("((0))"))
    dok_KwGotowka = Column(MONEY)
    dok_KwKarta = Column(MONEY)
    dok_KwDoZaplaty = Column(MONEY)
    dok_KwKredyt = Column(MONEY)
    dok_KwReszta = Column(MONEY)
    dok_Waluta = Column(String(3, u'Polish_CI_AS'))
    dok_WalutaKurs = Column(MONEY, nullable=False, server_default=text("((1))"))
    dok_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_KatId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dok_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_Podtytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_StatusKsieg = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_StatusFiskal = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_StatusBlok = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_JestTylkoDoOdczytu = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_JestRuchMag = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_JestZmianaDatyDokKas = Column(BIT, nullable=False, server_default=text("((1))"))
    dok_JestHOP = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_JestVatNaEksport = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_JestVatAuto = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_Algorytm = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_KartaId = Column(Integer)
    dok_KredytId = Column(Integer)
    dok_RodzajOperacjiVat = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_KodRodzajuTransakcji = Column(Integer)
    dok_StatusEx = Column(Integer, server_default=text("((0))"))
    dok_ObiektGT = Column(Integer)
    dok_Rozliczony = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_RejId = Column(Integer)
    dok_TerminRealizacji = Column(DateTime)
    dok_WalutaLiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    dok_WalutaRodzajKursu = Column(Integer)
    dok_WalutaDataKursu = Column(DateTime)
    dok_WalutaIdBanku = Column(Integer)
    dok_CenyLiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    dok_CenyRodzajKursu = Column(Integer)
    dok_CenyDataKursu = Column(DateTime)
    dok_CenyIdBanku = Column(Integer)
    dok_KwPrzelew = Column(MONEY)
    dok_KwGotowkaPrzedplata = Column(MONEY)
    dok_KwPrzelewPrzedplata = Column(MONEY)
    dok_DefiniowalnyId = Column(Integer)
    dok_TransakcjaId = Column(Integer)
    dok_TransakcjaSymbol = Column(String(30, u'Polish_CI_AS'))
    dok_TransakcjaData = Column(DateTime)
    dok_PodsumaVatFSzk = Column(Integer)
    dok_ZlecenieId = Column(Integer)
    dok_NaliczajFundusze = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_PrzetworzonoZKwZD = Column(BIT)
    dok_VatMarza = Column(BIT)
    dok_DstNr = Column(Integer)
    dok_DstNrRoz = Column(String(3, u'Polish_CI_AS'))
    dok_DstNrPelny = Column(String(30, u'Polish_CI_AS'))
    dok_ObslugaDokDost = Column(Integer)
    dok_AkcyzaZwolnienieId = Column(Integer)
    dok_ProceduraMarzy = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_FakturaUproszczona = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_DataZakonczenia = Column(DateTime)
    dok_MetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))
    dok_TypNrIdentNabywcy = Column(Integer, nullable=False, server_default=text("((0))"))
    dok_NrIdentNabywcy = Column(String(20, u'Polish_CI_AS'))
    dok_AdresDostawyId = Column(Integer)
    dok_AdresDostawyAdreshId = Column(Integer)
    dok_VenderoId = Column(Integer)
    dok_VenderoSymbol = Column(String(30, u'Polish_CI_AS'))
    dok_VenderoData = Column(DateTime)
    dok_SelloId = Column(Integer)
    dok_SelloSymbol = Column(String(100, u'Polish_CI_AS'))
    dok_SelloData = Column(DateTime)
    dok_TransakcjaJednolitaId = Column(Integer)
    dok_PodpisanoElektronicznie = Column(BIT)
    dok_UwagiExt = Column(String(3500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dok_VenderoStatus = Column(Integer)

    sl_Kategoria = relationship(u'SlKategoria')


class DwParametr(Base):
    __tablename__ = u'dw_Parametr'

    dwewpr_Id = Column(Integer, primary_key=True)
    dwewpr_KontrolaUniqNrDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    dwewpr_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dwewpr_KsWyborKolumn = Column(Integer, nullable=False, server_default=text("((0))"))
    dwewpr_KolumnaKs = Column(Integer, nullable=False, server_default=text("((10))"))
    dwewpr_OpisKs = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwewpr_KsWyborKolumnPrzy = Column(Integer, nullable=False, server_default=text("((0))"))
    dwewpr_KolumnaKsPrzy = Column(Integer, nullable=False, server_default=text("((7))"))
    dwewpr_OpisKsPrzy = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwewpr_IdStawkiRyczaltu = Column(Integer, nullable=False, server_default=text("((0))"))
    dwewpr_OpisDokuemnt = Column(BIT, nullable=False, server_default=text("((0))"))
    dwewpr_OpisDokuemntPrzy = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')


class DwPozycja(Base):
    __tablename__ = u'dw_Pozycja'

    dwewp_Id = Column(Integer, primary_key=True)
    dwewp_IdDowWew = Column(ForeignKey(u'dw__Dokument.dwew_Id'), nullable=False)
    dwewp_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwewp_JM = Column(String(10, u'Polish_CI_AS'), nullable=False)
    dwewp_Ilosc = Column(MONEY, nullable=False)
    dwewp_Cena = Column(MONEY, nullable=False)
    dwewp_Wartosc = Column(MONEY, nullable=False)

    dw__Dokument = relationship(u'DwDokument')


class DwDokument(Base):
    __tablename__ = u'dw__Dokument'

    dwew_Id = Column(Integer, primary_key=True)
    dwew_NrDokumentu = Column(String(30, u'Polish_CI_AS'), nullable=False)
    dwew_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    dwew_IdObiektu = Column(Integer)
    dwew_Data = Column(DateTime, nullable=False)
    dwew_IDKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    dwew_Wartosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    dwew_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwew_Wystawil = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwew_MiejsceWyst = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dwew_TypDokImport = Column(Integer)
    dwew_IdDokImport = Column(Integer)
    dwew_WartoscPrzychod = Column(MONEY, nullable=False, server_default=text("((0))"))
    dwew_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    dwew_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_Kategoria = relationship(u'SlKategoria')


class EcpAbsencja(Base):
    __tablename__ = u'ecp_Absencja'

    ecpa_Id = Column(Integer, primary_key=True)
    ecpa_IdZapis = Column(Integer, nullable=False)
    ecpa_Rodzaj = Column(Integer, nullable=False)
    ecpa_KodPrzerwy = Column(String(50, u'Polish_CI_AS'))
    ecpa_KodChoroby = Column(String(50, u'Polish_CI_AS'))
    ecpa_NrZwolnienia = Column(String(20, u'Polish_CI_AS'))
    ecpa_NrChoroby = Column(String(5, u'Polish_CI_AS'))
    ecpa_Procent = Column(Integer)
    ecpa_Wypadek = Column(BIT)
    ecpa_UrlopNaZadanie = Column(BIT, server_default=text("((0))"))
    ecpa_MiesSkladStale = Column(Integer, server_default=text("((0))"))
    ecpa_MiesSkladZmienne = Column(Integer, server_default=text("((3))"))
    ecpa_OpisAbsencji = Column(ForeignKey(u'sl_OpisAbsencji.oa_Id'))
    ecpa_WspolczynnikWaloryzacji = Column(MONEY)
    ecpa_Pierwotnie3xx = Column(BIT)
    ecpa_PodstawaUrlWych = Column(MONEY, server_default=text("(NULL)"))
    ecpa_OpiekaNadDzieckiemGodzinowo = Column(BIT, nullable=False, server_default=text("((0))"))
    ecpa_PodwyzszenieDoKwotySwiadczenia = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_OpisAbsencji = relationship(u'SlOpisAbsencji')


class EcpAbsencjaPrzedKorekta(Base):
    __tablename__ = u'ecp_AbsencjaPrzedKorekta'

    ecpapk_Id = Column(Integer, primary_key=True)
    ecpapk_IdZapis = Column(Integer, nullable=False)
    ecpapk_Rodzaj = Column(Integer, nullable=False)
    ecpapk_KodPrzerwy = Column(String(50, u'Polish_CI_AS'))
    ecpapk_KodChoroby = Column(String(50, u'Polish_CI_AS'))
    ecpapk_NrZwolnienia = Column(String(20, u'Polish_CI_AS'))
    ecpapk_NrChoroby = Column(String(5, u'Polish_CI_AS'))
    ecpapk_Procent = Column(Integer)
    ecpapk_Wypadek = Column(BIT)
    ecpapk_UrlopNaZadanie = Column(BIT, server_default=text("((0))"))
    ecpapk_MiesSkladStale = Column(Integer, server_default=text("((0))"))
    ecpapk_MiesSkladZmienne = Column(Integer, server_default=text("((3))"))
    ecpapk_OpisAbsencji = Column(ForeignKey(u'sl_OpisAbsencji.oa_Id'))
    ecpapk_WspolczynnikWaloryzacji = Column(MONEY)
    ecpapk_Pierwotnie3xx = Column(BIT)
    ecpapk_PodstawaUrlWych = Column(MONEY, server_default=text("(NULL)"))
    ecpapk_OpiekaNadDzieckiemGodzinowo = Column(BIT, nullable=False, server_default=text("((0))"))
    ecpapk_PodwyzszenieDoKwotySwiadczenia = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_OpisAbsencji = relationship(u'SlOpisAbsencji')


class EcpBlokada(Base):
    __tablename__ = u'ecp_Blokada'

    ecpb_Id = Column(Integer, primary_key=True)
    ecpb_IdPrac = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    ecpb_Od = Column(DateTime, nullable=False)
    ecpb_Do = Column(DateTime, nullable=False)
    ecpb_IdObiektu = Column(Integer, nullable=False)
    ecpb_RodzajObiektu = Column(Integer, nullable=False)
    ecpb_OpisObiektu = Column(String(50, u'Polish_CI_AS'), nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')


class EcpEkwiwalent(Base):
    __tablename__ = u'ecp_Ekwiwalent'

    ekw_Id = Column(Integer, primary_key=True)
    ekw_IdPrac = Column(Integer, nullable=False)
    ekw_Data = Column(DateTime, nullable=False)
    ekw_Godziny = Column(Integer, nullable=False)
    ekw_SkladnStale = Column(Integer, nullable=False)
    ekw_SkladnZmienne = Column(Integer, nullable=False)
    ekw_MiesRozl = Column(DateTime, nullable=False)
    ekw_Wymiar = Column(Integer, nullable=False, server_default=text("((480))"))


class EcpGodzina(Base):
    __tablename__ = u'ecp_Godzina'

    ecpg_Id = Column(Integer, primary_key=True)
    ecpg_IdZapis = Column(ForeignKey(u'ecp__Zapis.ecp_Id'), nullable=False)
    ecpg_PoraDnia = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpg_Od = Column(Integer, nullable=False)
    ecpg_Do = Column(Integer, nullable=False)

    ecp__Zapi = relationship(u'EcpZapi')


class EcpGodzinaPrzedKorekta(Base):
    __tablename__ = u'ecp_GodzinaPrzedKorekta'

    ecpgpk_Id = Column(Integer, primary_key=True)
    ecpgpk_IdZapis = Column(Integer, nullable=False)
    ecpgpk_PoraDnia = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpgpk_Od = Column(Integer, nullable=False)
    ecpgpk_Do = Column(Integer, nullable=False)


class EcpObecnosc(Base):
    __tablename__ = u'ecp_Obecnosc'

    ecpo_Id = Column(Integer, primary_key=True)
    ecpo_IdZapis = Column(ForeignKey(u'ecp__Zapis.ecp_Id'), nullable=False)
    ecpo_IdAtrybut = Column(Integer)
    ecpo_ZwykleDzienne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_ZwykleNocne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_NadlPlatne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_NadlPlatneNocne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_NadlRozlicz = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_AbsPotrac = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_AbsRozlicz = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpo_AbsRozlBezWnPrac = Column(BIT, nullable=False, server_default=text("((0))"))

    ecp__Zapi = relationship(u'EcpZapi')


class EcpObecnoscPrzedKorekta(Base):
    __tablename__ = u'ecp_ObecnoscPrzedKorekta'

    ecpopk_Id = Column(Integer, primary_key=True)
    ecpopk_IdZapis = Column(Integer, nullable=False)
    ecpopk_IdAtrybut = Column(Integer)
    ecpopk_ZwykleDzienne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_ZwykleNocne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_NadlPlatne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_NadlPlatneNocne = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_NadlRozlicz = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_AbsPotrac = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_AbsRozlicz = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpopk_AbsRozlBezWnPrac = Column(BIT, nullable=False, server_default=text("((0))"))


class EcpZapi(Base):
    __tablename__ = u'ecp__Zapis'
    __table_args__ = (
        Index(u'IX_ecp__Zapis', u'ecp_IdPrac', u'ecp_Data', u'ecp_RodzajZapisu'),
    )

    ecp_Id = Column(Integer, primary_key=True)
    ecp_IdPrac = Column(Integer, nullable=False)
    ecp_Data = Column(DateTime, nullable=False)
    ecp_DataDo = Column(DateTime, nullable=False)
    ecp_RodzajZapisu = Column(Integer, nullable=False)
    ecp_Korekta = Column(BIT, nullable=False, server_default=text("((0))"))
    ecp_PrzedKorekta = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ecp_KorektaKiedy = Column(DateTime)
    ecp_KorektaKto = Column(Integer)
    ecp_KorektaRozliczWyplata = Column(BIT, nullable=False, server_default=text("((0))"))
    ecp_KorektaIdRozliczajacejWyplaty = Column(ForeignKey(u'plb_Wyplata.wyp_Id'))
    ecp_KorektaPrzedRodzajZapisu = Column(Integer)

    plb_Wyplata = relationship(u'PlbWyplata')


class EdZFS(Base):
    __tablename__ = u'ed_ZFSS'

    zfs_Id = Column(Integer, primary_key=True)
    zfs_Rok = Column(Integer, nullable=False)
    zfs_Typ = Column(Integer, nullable=False)
    zfs_Data = Column(DateTime, nullable=False)
    zfs_Kwota = Column(MONEY, nullable=False)
    zfs_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zfs_Odbiorca = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zfs_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'))
    zfs_IdInstytucji = Column(ForeignKey(u'is__Instytucja.is_Id'))

    is__Instytucja = relationship(u'IsInstytucja')
    pr_Pracownik = relationship(u'PrPracownik')


t_em_AccVisibleTo = Table(
    u'em_AccVisibleTo', metadata,
    Column(u'ev_Id', Integer, nullable=False),
    Column(u'ev_AccountId', ForeignKey(u'em_Account.ea_Id'), nullable=False),
    Column(u'ev_UserId', Integer, nullable=False)
)


class EmAccount(Base):
    __tablename__ = u'em_Account'

    ea_Id = Column(Integer, primary_key=True)
    ea_AccountName = Column(String(50, u'Polish_CI_AS'), nullable=False)
    ea_UserName = Column(Unicode(50))
    ea_UserAddress = Column(Unicode(50))
    ea_Login = Column(Unicode(50), nullable=False)
    ea_Password = Column(Unicode(50), nullable=False)
    ea_POP3 = Column(String(50, u'Polish_CI_AS'))
    ea_POP3Port = Column(Integer, nullable=False, server_default=text("((110))"))
    ea_POP3SSL = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_SMTP = Column(String(50, u'Polish_CI_AS'))
    ea_SMTPPort = Column(Integer, nullable=False, server_default=text("((25))"))
    ea_SMTPAuth = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_SMTPSSL = Column(Integer, nullable=False, server_default=text("((0))"))
    ea_Disabled = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_LeaveOnServer = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_Default = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_OwnerId = Column(Integer, nullable=False)
    ea_Outlook = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_AttachmentsCode = Column(Integer)
    ea_AttachmentsLimit = Column(Integer)
    ea_ReplyTo = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ea_DispositionNotification = Column(Integer, nullable=False, server_default=text("((0))"))
    ea_SendPackageSize = Column(Integer)
    ea_Priority = Column(Integer, nullable=False, server_default=text("((2))"))
    ea_LimitSeconds = Column(Integer)
    ea_LimitMinutes = Column(Integer)
    ea_LimitHours = Column(Integer)
    ea_LimitValue = Column(Integer)
    ea_LimitDailyHour = Column(Integer)
    ea_LimitDailyValue = Column(Integer)
    ea_DeleteAttAfterSending = Column(BIT, nullable=False, server_default=text("((0))"))
    ea_Password2 = Column(Unicode(50), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class EmAccountFolder(Base):
    __tablename__ = u'em_AccountFolder'

    eaf_Id = Column(Integer, primary_key=True)
    eaf_AccountId = Column(Integer, nullable=False)
    eaf_EntryId = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    eaf_Odbiorcza = Column(BIT, nullable=False, server_default=text("((1))"))
    eaf_StoreId = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class EmArchive(Base):
    __tablename__ = u'em_Archive'

    ear_Id = Column(Integer, primary_key=True)
    ear_UIDL = Column(String(255, u'Polish_CI_AS'), nullable=False)
    ear_AccountId = Column(Integer, server_default=text("(NULL)"))


class EmAttachment(Base):
    __tablename__ = u'em_Attachment'

    et_Id = Column(Integer, primary_key=True)
    et_EmailId = Column(Integer, nullable=False)
    et_Filename = Column(String(255, u'Polish_CI_AS'), nullable=False)
    et_Filepath = Column(String(255, u'Polish_CI_AS'), nullable=False)


class EmProperty(Base):
    __tablename__ = u'em_Properties'

    ep_Id = Column(Integer, primary_key=True)
    ep_UserId = Column(Integer, nullable=False)
    ep_KontoId = Column(Integer)
    ep_WyslijOdbierz = Column(Integer)
    ep_Automat = Column(BIT, nullable=False)
    ep_WyslijOdRazu = Column(BIT)
    ep_WyslijZamknij = Column(BIT)
    ep_CoIle = Column(Integer)
    ep_Html = Column(BIT, server_default=text("((1))"))
    ep_Przeczytane = Column(BIT, nullable=False, server_default=text("((1))"))
    ep_CzasPrzeczyt = Column(Integer, nullable=False, server_default=text("((1))"))


class EmRule(Base):
    __tablename__ = u'em_Rule'

    er_Id = Column(Integer, primary_key=True)
    er_Name = Column(String(50, u'Polish_CI_AS'), nullable=False)
    er_GroupId = Column(Integer)
    er_MarkAsRead = Column(BIT)
    er_Operator = Column(Integer, nullable=False, server_default=text("((1))"))
    er_Enabled = Column(BIT, nullable=False, server_default=text("((1))"))
    er_Rank = Column(Integer, nullable=False, server_default=text("((0))"))
    er_Flag = Column(BIT, nullable=False, server_default=text("((0))"))
    er_UserId = Column(Integer, nullable=False)
    er_CheckSpamMark = Column(BIT, nullable=False, server_default=text("((0))"))
    er_MoveTo = Column(Integer)
    er_FlagaWlasnaId = Column(ForeignKey(u'fl__Flagi.flg_Id'))
    er_Priority = Column(Integer)

    fl__Flagi = relationship(u'FlFlagi')


class EmRuleWord(Base):
    __tablename__ = u'em_RuleWord'

    ew_Id = Column(Integer, primary_key=True)
    ew_RuleId = Column(ForeignKey(u'em_Rule.er_Id'), nullable=False)
    ew_Field = Column(Integer, nullable=False)
    ew_Word = Column(String(100, u'Polish_CI_AS'), nullable=False)

    em_Rule = relationship(u'EmRule')


class EmSearchContent(Base):
    __tablename__ = u'em_SearchContent'

    esc_Id = Column(Integer, primary_key=True)
    esc_EmailId = Column(Integer, nullable=False)
    esc_Content = Column(UnicodeText(1073741823), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class EmSendersList(Base):
    __tablename__ = u'em_SendersList'
    __table_args__ = (
        Index(u'IX_em_SendersList', u'esl_UserId', u'esl_Entry', unique=True),
    )

    esl_Id = Column(Integer, primary_key=True)
    esl_UserId = Column(Integer, nullable=False, index=True)
    esl_List = Column(Integer, nullable=False)
    esl_Entry = Column(String(100, u'Polish_CI_AS'), nullable=False)


class EmSignature(Base):
    __tablename__ = u'em_Signature'

    es_Id = Column(Integer, primary_key=True)
    es_UserId = Column(Integer, nullable=False)
    es_AccountId = Column(Integer, nullable=False)
    es_Text = Column(Text(collation=u'Polish_CI_AS'))
    es_Mht = Column(Text(collation=u'Polish_CI_AS'))
    es_Position = Column(Integer, nullable=False, server_default=text("((0))"))


class EmSource(Base):
    __tablename__ = u'em_Source'

    es_Id = Column(Integer, primary_key=True)
    es_EmailId = Column(Integer, nullable=False)
    es_Source = Column(Text(collation=u'Polish_CI_AS'))
    es_SourceData = Column(LargeBinary)
    es_SourceNoAtt = Column(LargeBinary)
    es_Size = Column(Integer)


class EmTemplate(Base):
    __tablename__ = u'em_Template'

    et_Id = Column(Integer, primary_key=True)
    et_Name = Column(Unicode(50), nullable=False)
    et_Subject = Column(Unicode(1000), nullable=False)
    et_Text = Column(UnicodeText(1073741823), nullable=False)
    et_HTML = Column(BIT, nullable=False, server_default=text("((0))"))
    et_Mht = Column(Text(collation=u'Polish_CI_AS'))
    et_Fragment = Column(BIT, server_default=text("((0))"))
    et_ReplyTo = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    et_CcTo = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    et_BccTo = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    et_GroupId = Column(ForeignKey(u'sl_CrmGrupaWiadomosci.gwa_Id'))
    et_Priority = Column(Integer, nullable=False, server_default=text("((2))"))
    et_DispositionNotification = Column(BIT, nullable=False, server_default=text("((0))"))
    et_Private = Column(BIT, nullable=False, server_default=text("((0))"))
    et_DeleteAttachments = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_CrmGrupaWiadomosci = relationship(u'SlCrmGrupaWiadomosci')


class EmEmail(Base):
    __tablename__ = u'em__Email'

    em_Id = Column(Integer, primary_key=True)
    em_Date = Column(DateTime, nullable=False)
    em_UIDL = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_MessageId = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_Subject = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_From = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_FromAddress = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_FromName = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_To = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_Received = Column(DateTime)
    em_Sent = Column(DateTime)
    em_Account = Column(Unicode(50), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_AttachmentCount = Column(Integer, server_default=text("((0))"))
    em_Source = Column(Text(collation=u'Polish_CI_AS'))
    em_HTMLBody = Column(BIT, server_default=text("((0))"))
    em_Status = Column(Integer, nullable=False)
    em_AccountId = Column(Integer)
    em_TransId = Column(Integer)
    em_PackageId = Column(Integer)
    em_AuctionId = Column(Integer)
    em_CustomerId = Column(Integer)
    em_PrevTransId = Column(Integer)
    em_Handled = Column(BIT, nullable=False, server_default=text("((0))"))
    em_Read = Column(BIT, nullable=False, server_default=text("((0))"))
    em_GroupId = Column(ForeignKey(u'sl_CrmGrupaWiadomosci.gwa_Id'))
    em_Flag = Column(Integer, nullable=False, server_default=text("((0))"))
    em_PrivateFor = Column(Integer)
    em_Transakcja = Column(Integer)
    em_Dzialanie = Column(Integer)
    em_DeleteStat = Column(Integer, nullable=False, server_default=text("((0))"))
    em_IsSpam = Column(BIT, nullable=False, server_default=text("((0))"))
    em_ReplyTo = Column(Unicode(255))
    em_CcTo = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_BccTo = Column(Unicode(1000), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    em_DispositionNotification = Column(Integer)
    em_Priority = Column(Integer, nullable=False, server_default=text("((2))"))
    em_WasAttDeleted = Column(BIT)
    em_ChangedEncoding = Column(Integer, nullable=False, server_default=text("((0))"))
    em_DeleteAttAfterSending = Column(BIT, nullable=False, server_default=text("((0))"))
    em_ReferenceType = Column(Integer, nullable=False, server_default=text("((0))"))
    em_ReferencedMessageId = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_CrmGrupaWiadomosci = relationship(u'SlCrmGrupaWiadomosci')


class FlGrupy(Base):
    __tablename__ = u'fl_Grupy'

    flp_Id = Column(Integer, primary_key=True)
    flp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class FlWartosc(Base):
    __tablename__ = u'fl_Wartosc'

    flw_IdGrupyFlag = Column(ForeignKey(u'fl_Grupy.flp_Id'), primary_key=True, nullable=False)
    flw_TypObiektu = Column(Integer, primary_key=True, nullable=False, server_default=text("((0))"))
    flw_IdObiektu = Column(Integer, primary_key=True, nullable=False)
    flw_IdFlagi = Column(ForeignKey(u'fl__Flagi.flg_Id'))
    flw_Komentarz = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    flw_IdUzytkownika = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    flw_CzasOstatniejZmiany = Column(DateTime, nullable=False)

    fl__Flagi = relationship(u'FlFlagi')
    fl_Grupy = relationship(u'FlGrupy')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class FlFlagi(Base):
    __tablename__ = u'fl__Flagi'
    __table_args__ = (
        Index(u'GN_fl__Flagi', u'flg_IdGrupy', u'flg_Numer', unique=True),
    )

    flg_Id = Column(Integer, primary_key=True)
    flg_Numer = Column(Integer, nullable=False)
    flg_Text = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    flg_IdGrupy = Column(ForeignKey(u'fl_Grupy.flp_Id'), nullable=False)
    flg_Domyslna = Column(BIT, nullable=False, server_default=text("((0))"))
    flg_DomyslnyKomentarz = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    flg_IdUprNadaj = Column(Integer)
    flg_IdUprZdejmij = Column(Integer)

    fl_Grupy = relationship(u'FlGrupy')


class FnxCechaTwSynch(Base):
    __tablename__ = u'fnx_CechaTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_SubiektProductId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxCenaTwSynch(Base):
    __tablename__ = u'fnx_CenaTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_SubiektProductId = Column(Integer, nullable=False)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)
    mt_MultiStoreId1 = Column(Integer)
    mt_MultiStoreId2 = Column(Integer)
    mt_MultiStoreId3 = Column(Integer)
    mt_MultiStoreId4 = Column(Integer)
    mt_MultiStoreId5 = Column(Integer)
    mt_MultiStoreId6 = Column(Integer)
    mt_MultiStoreId7 = Column(Integer)
    mt_MultiStoreId8 = Column(Integer)
    mt_MultiStoreId9 = Column(Integer)
    mt_MultiStoreId10 = Column(Integer)


class FnxDocSynch(Base):
    __tablename__ = u'fnx_DocSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_FirstStateId = Column(Integer, nullable=False)
    mt_SecondStateId = Column(Integer, nullable=False)
    mt_FirstTypeId = Column(Integer, nullable=False)
    mt_SecondTypeId = Column(Integer, nullable=False)
    mt_FirstDocId = Column(Integer)
    mt_SecondDocId = Column(Integer)
    mt_StateId = Column(Integer, nullable=False)
    mt_Description = Column(Unicode(255))
    mt_IsPaid = Column(BIT, server_default=text("((0))"))
    mt_FirstDocRealisationDocumentId = Column(Integer)


class FnxFirmaSynch(Base):
    __tablename__ = u'fnx_FirmaSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxGrupaTwSynch(Base):
    __tablename__ = u'fnx_GrupaTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxKategoriaSynch(Base):
    __tablename__ = u'fnx_KategoriaSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxKlientSynch(Base):
    __tablename__ = u'fnx_KlientSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)


class FnxKontrahentSklepuSynch(Base):
    __tablename__ = u'fnx_KontrahentSklepuSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxKontrahentSynch(Base):
    __tablename__ = u'fnx_KontrahentSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxMagazynSynch(Base):
    __tablename__ = u'fnx_MagazynSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)
    mt_Active = Column(BIT, nullable=False, server_default=text("((1))"))


t_fnx_Newsletter = Table(
    u'fnx_Newsletter', metadata,
    Column(u'mt_Id', Integer, nullable=False),
    Column(u'mt_SubiektId', Integer),
    Column(u'mt_FeniksId', Integer),
    Column(u'mt_Direction', Integer),
    Column(u'mt_Email', String(128, u'Polish_CI_AS')),
    Column(u'mt_DoSubscribe', BIT)
)


class FnxParametrSynch(Base):
    __tablename__ = u'fnx_ParametrSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)
    mt_MultiStoreId1 = Column(Integer)
    mt_MultiStoreId2 = Column(Integer)
    mt_MultiStoreId3 = Column(Integer)
    mt_MultiStoreId4 = Column(Integer)
    mt_MultiStoreId5 = Column(Integer)
    mt_MultiStoreId6 = Column(Integer)
    mt_MultiStoreId7 = Column(Integer)
    mt_MultiStoreId8 = Column(Integer)
    mt_MultiStoreId9 = Column(Integer)
    mt_MultiStoreId10 = Column(Integer)


class FnxPlatnoscSynch(Base):
    __tablename__ = u'fnx_PlatnoscSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxPoleWlasneSynch(Base):
    __tablename__ = u'fnx_PoleWlasneSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)


class FnxSlCechaTwSynch(Base):
    __tablename__ = u'fnx_SlCechaTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxSlModelTwSynch(Base):
    __tablename__ = u'fnx_SlModelTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxSlWalutaSynch(Base):
    __tablename__ = u'fnx_SlWalutaSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxSlWlasciwoscCechaTwSynch(Base):
    __tablename__ = u'fnx_SlWlasciwoscCechaTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxSlWlasciwoscTwSynch(Base):
    __tablename__ = u'fnx_SlWlasciwoscTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxStanSynch(Base):
    __tablename__ = u'fnx_StanSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektProductId = Column(Integer, nullable=False)
    mt_SubiektWarehouseId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxStawkaVatSynch(Base):
    __tablename__ = u'fnx_StawkaVatSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxTowarSynch(Base):
    __tablename__ = u'fnx_TowarSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)
    mt_HistoryMultiStoreId = Column(Integer)
    mt_DimensionsChanged = Column(DateTime)


class FnxZdjecieTwSynch(Base):
    __tablename__ = u'fnx_ZdjecieTwSynch'

    mt_Id = Column(Integer, primary_key=True)
    mt_SubiektId = Column(Integer, nullable=False)
    mt_SubiektProductId = Column(Integer, nullable=False)
    mt_MultiStoreId = Column(Integer)
    mt_LastSynchDate = Column(DateTime)
    mt_LastChangeDate = Column(DateTime)
    mt_StateId = Column(Integer, nullable=False)


class FnxFenik(Base):
    __tablename__ = u'fnx__Feniks'

    mt_Id = Column(Integer, primary_key=True)
    mt_SyncState = Column(Integer, nullable=False)
    mt_ApiKey = Column(Unicode(128))
    mt_SyncMachine = Column(Unicode(1000))
    mt_WizardAddress = Column(Unicode(1000))
    mt_TriggersEnabled = Column(BIT)
    mt_AmountOfProducts = Column(Integer)
    mt_AmountOfPictures = Column(Integer)
    mt_WebsiteType = Column(Integer)
    mt_WebsiteName = Column(Unicode(256))
    mt_WebsiteStatus = Column(Integer)
    mt_WebsiteAddress = Column(Unicode(256))
    mt_WebsiteAdminEmail = Column(Unicode(256))
    mt_LicenseStatus = Column(Integer)
    mt_LicenseType = Column(Integer)
    mt_LicenseDescription = Column(Unicode(256))
    mt_LicenseExpirationDate = Column(DateTime)
    mt_LastSyncDate = Column(DateTime)
    mt_NewOrders = Column(Integer)


class FoObiektDefinicja(Base):
    __tablename__ = u'fo_ObiektDefinicja'

    fod_Id = Column(Integer, primary_key=True)
    fod_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fod_Tabela = Column(String(128, u'Polish_CI_AS'), nullable=False)
    fod_TabelaParametr = Column(String(128, u'Polish_CI_AS'), nullable=False)
    fod_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    fod_TytulModulu = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fod_PolaWlasneTyp = Column(Integer, nullable=False)
    fod_FlagiWlasneTyp = Column(Integer, nullable=False)
    fod_WydrukTyp = Column(Integer, nullable=False)
    fod_ParTyp = Column(Integer, nullable=False)
    fod_UpidDodaj = Column(Integer, nullable=False)
    fod_UpidPopraw = Column(Integer, nullable=False)
    fod_UpidPokaz = Column(Integer, nullable=False)
    fod_UpidUsun = Column(Integer, nullable=False)
    fod_UpidDrukuj = Column(Integer, nullable=False)
    fod_TypKontekstu = Column(Integer, nullable=False)
    fod_BiblDokTyp = Column(Integer, nullable=False)
    fod_UpidBiblDok = Column(Integer, nullable=False)
    fod_UpidBiblDokEdycja = Column(Integer, nullable=False)
    fod_UpidBiblDokUsun = Column(Integer, nullable=False)
    fod_UpidBiblDokDoei = Column(Integer, nullable=False)
    fod_UpidBiblDokBlokady = Column(Integer, nullable=False)
    fod_FormatNumeracji = Column(Integer)

    ui_Modul = relationship(u'UiModul')


class FoObiektPole(Base):
    __tablename__ = u'fo_ObiektPole'

    fop_Id = Column(Integer, primary_key=True)
    fop_IdZakladki = Column(Integer, nullable=False)
    fop_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False)
    fop_NazwaOkno = Column(String(100, u'Polish_CI_AS'), nullable=False)
    fop_NazwaGrid = Column(String(100, u'Polish_CI_AS'), nullable=False)
    fop_Typ = Column(Integer, nullable=False)
    fop_Kolejnosc = Column(Integer, nullable=False)
    fop_Kolumna = Column(String(128, u'Polish_CI_AS'), nullable=False)
    fop_KolumnaParametr = Column(String(128, u'Polish_CI_AS'))
    fop_Wymagane = Column(BIT, nullable=False, server_default=text("((0))"))
    fop_WidocznoscZakladka = Column(BIT, nullable=False, server_default=text("((1))"))
    fop_WidocznoscModul = Column(Integer, nullable=False, server_default=text("((1))"))
    fop_WidocznoscParametr = Column(BIT, nullable=False, server_default=text("((0))"))
    fop_Szeroka = Column(BIT, nullable=False, server_default=text("((0))"))
    fop_Wiersze = Column(Integer, nullable=False, server_default=text("((1))"))
    fop_Rozmiar = Column(Integer, nullable=False, server_default=text("((0))"))
    fop_Tekst = Column(String(1024, u'Polish_CI_AS'))
    fop_Sql = Column(String(8000, u'Polish_CI_AS'))


class FoObiektZakladka(Base):
    __tablename__ = u'fo_ObiektZakladka'

    foz_Id = Column(Integer, primary_key=True)
    foz_IdDefinicji = Column(ForeignKey(u'fo_ObiektDefinicja.fod_Id'), nullable=False)
    foz_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False)

    fo_ObiektDefinicja = relationship(u'FoObiektDefinicja')


class GrFiltrWartosc(Base):
    __tablename__ = u'gr_FiltrWartosc'

    grw_Id = Column(Integer, primary_key=True)
    grw_IdFiltra = Column(Integer, nullable=False)
    grw_IdUzytkownika = Column(Integer, nullable=False)
    grw_Profil = Column(String(100, u'Polish_CI_AS'), nullable=False)
    grw_Wartosc = Column(LargeBinary, nullable=False)


class GrFiltrWlasny(Base):
    __tablename__ = u'gr_FiltrWlasny'

    grf_Id = Column(Integer, primary_key=True)
    grf_IdGrida = Column(Integer, nullable=False)
    grf_Nazwa = Column(String(150, u'Polish_CI_AS'), nullable=False)
    grf_Sql = Column(Text(collation=u'Polish_CI_AS'), nullable=False)


class GrFormatowanie(Base):
    __tablename__ = u'gr_Formatowanie'

    grfw_Id = Column(Integer, primary_key=True)
    grfw_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    grfw_Grid = Column(String(50, u'Polish_CI_AS'), nullable=False)
    grfw_IdModulu = Column(Integer, nullable=False)
    grfw_Formatowanie = Column(LargeBinary, nullable=False)
    grfw_Kolejnosc = Column(Integer, nullable=False, server_default=text("((0))"))
    grfw_SqlWarunek = Column(Text(collation=u'Polish_CI_AS'))
    grfw_SqlTabele = Column(Text(collation=u'Polish_CI_AS'))

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'gr_FormatowanieUzytkownik')


t_gr_FormatowanieUzytkownik = Table(
    u'gr_FormatowanieUzytkownik', metadata,
    Column(u'grfwu_IdFormatowania', ForeignKey(u'gr_Formatowanie.grfw_Id'), nullable=False),
    Column(u'grfwu_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
)


class GrFormatowanieWarunek(Base):
    __tablename__ = u'gr_FormatowanieWarunek'

    grfww_Id = Column(Integer, primary_key=True)
    grfww_IdFormatowania = Column(ForeignKey(u'gr_Formatowanie.grfw_Id'), nullable=False)
    grfww_KolumnaNazwa = Column(String(1024, u'Polish_CI_AS'), nullable=False)
    grfww_KolumnaPole = Column(String(1024, u'Polish_CI_AS'), nullable=False)
    grfww_Warunek = Column(Integer, nullable=False)
    grfww_Wartosc = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    grfww_Operator = Column(Integer, nullable=False)

    gr_Formatowanie = relationship(u'GrFormatowanie')


class GrGridWlasny(Base):
    __tablename__ = u'gr_GridWlasny'

    grg_Id = Column(Integer, primary_key=True)
    grg_IdGrida = Column(Integer, nullable=False)
    grg_Sql = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    grg_BinListInfo = Column(LargeBinary)
    grg_BinColumns = Column(LargeBinary)
    grg_BinTables = Column(LargeBinary)
    grg_BinVisibility = Column(LargeBinary)


class GrNazwa(Base):
    __tablename__ = u'gr_Nazwa'

    gn_Section = Column(String(50, u'Polish_CI_AS'), primary_key=True)
    gn_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)


class GrGrid(Base):
    __tablename__ = u'gr__Grid'

    gr_Id = Column(Integer, primary_key=True)
    gr_Section = Column(String(50, u'Polish_CI_AS'), nullable=False)
    gr_IdModulu = Column(Integer, nullable=False)
    gr_Nazwa = Column(String(255, u'Polish_CI_AS'))
    gr_Typ = Column(String(50, u'Polish_CI_AS'), nullable=False)
    gr_FiltrStandardowy = Column(LargeBinary)


class GrKonfiguracja(Base):
    __tablename__ = u'gr__Konfiguracja'

    cg_Section = Column(String(50, u'Polish_CI_AS'), primary_key=True, nullable=False)
    cg_User = Column(Integer, primary_key=True, nullable=False)
    cg_Version = Column(String(50, u'Polish_CI_AS'))
    cg_BinListInfo = Column(LargeBinary)
    cg_BinColumns = Column(LargeBinary)
    cg_BinTables = Column(LargeBinary)
    cg_BinVisibility = Column(LargeBinary)


class GrKonfiguracjaEx(Base):
    __tablename__ = u'gr__KonfiguracjaEx'

    cge_Section = Column(String(50, u'Polish_CI_AS'), primary_key=True, nullable=False)
    cge_User = Column(Integer, primary_key=True, nullable=False)
    cge_Service = Column(Integer, primary_key=True, nullable=False, server_default=text("((0))"))
    cge_Version = Column(String(50, u'Polish_CI_AS'))
    cge_BinListInfo = Column(LargeBinary)
    cge_BinColumns = Column(LargeBinary)
    cge_BinTables = Column(LargeBinary)
    cge_BinVisibility = Column(LargeBinary)
    cge_Sql = Column(Text(collation=u'Polish_CI_AS'))
    cge_LastUpdateVersion = Column(String(50, u'Polish_CI_AS'))


class GtAtrybut(Base):
    __tablename__ = u'gt_Atrybut'
    __table_args__ = (
        Index(u'IX_gt_Atrybut', u'gta_IdObiektu', u'gta_IdObiektuGt'),
    )

    gta_Id = Column(Integer, primary_key=True)
    gta_IdObiektu = Column(Integer, nullable=False)
    gta_IdObiektuGt = Column(Integer, nullable=False)
    gta_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gta_Wartosc = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class GtDefinicja(Base):
    __tablename__ = u'gt_Definicja'

    gtd_Id = Column(Integer, primary_key=True)
    gtd_ObiektId = Column(ForeignKey(u'gt__Obiekt.gto_Id'), nullable=False)
    gtd_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gtd_Definicja = Column(LargeBinary)

    gt__Obiekt = relationship(u'GtObiekt', primaryjoin='GtDefinicja.gtd_ObiektId == GtObiekt.gto_Id')


t_gt_Plik = Table(
    u'gt_Plik', metadata,
    Column(u'gtp_Id', Integer, nullable=False),
    Column(u'gtp_IdWpisu', Integer, nullable=False),
    Column(u'gtp_NazwaPliku', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
)


t_gt_TransObiekt = Table(
    u'gt_TransObiekt', metadata,
    Column(u'to_TransformacjaId', ForeignKey(u'gt_Transformacja.gtt_Id'), nullable=False),
    Column(u'to_DefinicjaId', ForeignKey(u'gt_Definicja.gtd_Id'), nullable=False),
    Column(u'to_UzytkownikId', ForeignKey(u'pd_Uzytkownik.uz_Id'))
)


class GtTransRodzaj(Base):
    __tablename__ = u'gt_TransRodzaj'

    gtr_Id = Column(Integer, primary_key=True)
    gtr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class GtTransformacja(Base):
    __tablename__ = u'gt_Transformacja'

    gtt_Id = Column(Integer, primary_key=True)
    gtt_ObiektId = Column(ForeignKey(u'gt__Obiekt.gto_Id'), nullable=False)
    gtt_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gtt_RodzajId = Column(Integer, nullable=False)
    gtt_Transformacja = Column(LargeBinary)
    gtt_Schemat = Column(String(255, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gtt_DefinicjaId = Column(ForeignKey(u'gt_Definicja.gtd_Id'))
    gtt_Domyslna = Column(BIT, nullable=False, server_default=text("((0))"))

    gt_Definicja = relationship(u'GtDefinicja')
    gt__Obiekt = relationship(u'GtObiekt', primaryjoin='GtTransformacja.gtt_ObiektId == GtObiekt.gto_Id')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'gt_TransformacjaProfil')


t_gt_TransformacjaProfil = Table(
    u'gt_TransformacjaProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'gt_Transformacja.gtt_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class GtObiekt(Base):
    __tablename__ = u'gt__Obiekt'

    gto_Id = Column(Integer, primary_key=True)
    gto_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gto_PodstDefId = Column(ForeignKey(u'gt_Definicja.gtd_Id'))
    gto_PodstTransId = Column(ForeignKey(u'gt_Transformacja.gtt_Id'))

    gt_Definicja = relationship(u'GtDefinicja', primaryjoin='GtObiekt.gto_PodstDefId == GtDefinicja.gtd_Id')
    gt_Transformacja = relationship(u'GtTransformacja', primaryjoin='GtObiekt.gto_PodstTransId == GtTransformacja.gtt_Id')


class HbEBankParam(Base):
    __tablename__ = u'hb_EBankParam'

    hbe_Id = Column(Integer, primary_key=True)
    hbe_Wyloguj = Column(BIT, nullable=False, server_default=text("((0))"))


class HbIdent(Base):
    __tablename__ = u'hb_Ident'

    hbi_Id = Column(Integer, primary_key=True)
    hbi_IdPrzedrostka = Column(ForeignKey(u'hb_PrzedrostekHist.hbp_Id'), nullable=False)
    hbi_IdTransakcji = Column(Integer, nullable=False, server_default=text("((1))"))

    hb_PrzedrostekHist = relationship(u'HbPrzedrostekHist')


class HbLogin(Base):
    __tablename__ = u'hb_Login'

    hbl_Id = Column(Integer, primary_key=True)
    hbl_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    hbl_IdUzytkownia = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    hbl_TrybLogowania = Column(Integer, nullable=False)
    hbl_Login = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbl_CertyfikatHash = Column(Text(collation=u'Polish_CI_AS'))

    rb__RachBankowy = relationship(u'RbRachBankowy')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class HbNaglowekIStopka(Base):
    __tablename__ = u'hb_NaglowekIStopka'

    hb_IdNaglowek = Column(Integer, primary_key=True)
    hb_NumerRachunkuWyciagu = Column(String(50, u'Polish_CI_AS'))
    hb_DataUtworzeniaWyciagu = Column(DateTime)
    hb_NumerWyciagu = Column(String(15, u'Polish_CI_AS'))
    hb_BilansOtwarciaWaluta = Column(String(3, u'Polish_CI_AS'))
    hb_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'))
    hb_Zrodlo = Column(Integer, nullable=False, server_default=text("((1))"))

    rb__RachBankowy = relationship(u'RbRachBankowy')


t_hb_Parser = Table(
    u'hb_Parser', metadata,
    Column(u'hbp_Id', Integer, nullable=False),
    Column(u'hbp_Opis', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hbp_InsStala', Integer, nullable=False),
    Column(u'hbp_ProgId', String(50, u'Polish_CI_AS')),
    Column(u'hbp_StronaKodowa', Integer)
)


class HbPowiazanieTransakcji(Base):
    __tablename__ = u'hb_PowiazanieTransakcji'

    hbpt_Id = Column(Integer, primary_key=True)
    hbpt_IdTransakcjiZWyciagu = Column(ForeignKey(u'hb_Transakcja.hb_IdTransakcji'), unique=True)
    hbpt_IdTransakcjiBankowej = Column(ForeignKey(u'hb_TransakcjaElektroniczna.hbte_Id'), unique=True)

    hb_TransakcjaElektroniczna = relationship(u'HbTransakcjaElektroniczna')
    hb_Transakcja = relationship(u'HbTransakcja')


class HbPrzedrostekHist(Base):
    __tablename__ = u'hb_PrzedrostekHist'

    hbp_Id = Column(Integer, primary_key=True)
    hbp_Przedrostek = Column(String(4, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbp_IdUslugi = Column(ForeignKey(u'hb_Usluga.hbu_Id'), nullable=False)

    hb_Usluga = relationship(u'HbUsluga')


class HbRaport(Base):
    __tablename__ = u'hb_Raport'

    hbr_Id = Column(Integer, primary_key=True)
    hbr_TypOperacji = Column(Integer, nullable=False)
    hbr_IdTransakcji = Column(ForeignKey(u'hb_TransakcjaOczekujaca.hbto_Id'), server_default=text("(NULL)"))
    hbr_Opis = Column(String(255, u'Polish_CI_AS'))
    hbr_Status = Column(Integer, nullable=False)
    hbr_IdUzytkownik = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    hbr_Data = Column(DateTime)
    hbr_OpisBledu = Column(UnicodeText(1073741823))
    hbr_Bank = Column(Integer)

    hb_TransakcjaOczekujaca = relationship(u'HbTransakcjaOczekujaca')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class HbSynchronizacjaRachunkuBankowego(Base):
    __tablename__ = u'hb_SynchronizacjaRachunkuBankowego'

    hbs_Id = Column(Integer, primary_key=True)
    hbs_IdRachunkuBankowego = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False, unique=True)
    hbs_OstatniaModyfikacja = Column(DateTime)

    rb__RachBankowy = relationship(u'RbRachBankowy')


class HbToParamZnakSpecjalny(Base):
    __tablename__ = u'hb_ToParamZnakSpecjalny'

    hbzs_Id = Column(Integer, primary_key=True)
    hbzs_Bank = Column(Integer, nullable=False)
    hbzs_ZnakSpecjalny = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbzs_ZnakZamiana = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbzs_Nazwa = Column(BIT, nullable=False, server_default=text("((0))"))
    hbzs_Tytul = Column(BIT, nullable=False, server_default=text("((0))"))
    hbzs_Podmiot = Column(BIT, nullable=False, server_default=text("((0))"))


class HbTransakcja(Base):
    __tablename__ = u'hb_Transakcja'

    hb_IdNaglowekTr = Column(ForeignKey(u'hb_NaglowekIStopka.hb_IdNaglowek'), nullable=False)
    hb_IdTransakcji = Column(Integer, primary_key=True)
    hb_DataWaluty = Column(DateTime)
    hb_DataKsiegowania = Column(DateTime)
    hb_Oznaczenie = Column(String(1, u'Polish_CI_AS'))
    hb_Kwota = Column(MONEY)
    hb_KodTranzakcji = Column(String(3, u'Polish_CI_AS'))
    hb_OpisTranzakcji = Column(String(5000, u'Polish_CI_AS'))
    hb_Kontrahent = Column(String(390, u'Polish_CI_AS'))
    hb_RachKontrahent = Column(String(390, u'Polish_CI_AS'))
    hb_Waluta = Column(String(390, u'Polish_CI_AS'))
    hb_KwotaWaluty = Column(MONEY)
    hb_Kurs = Column(MONEY)
    hb_idOperacjiBankowej = Column(Integer)
    hb_SprawdzonoSkojarzanie = Column(BIT, nullable=False, server_default=text("((0))"))
    hb_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    hb_Tytul = Column(String(4000, u'Polish_CI_AS'), server_default=text("(NULL)"))
    hb_IdentyfikatorMP = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hb_PelnyNumerMP = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hb_Zrodlo = Column(Integer, nullable=False, server_default=text("((1))"))
    hb_TNR = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hb_IdTranOczek = Column(Integer)

    hb_NaglowekIStopka = relationship(u'HbNaglowekIStopka')


class HbTransakcjaElektroniczna(Base):
    __tablename__ = u'hb_TransakcjaElektroniczna'

    hbte_Id = Column(Integer, primary_key=True)
    hpte_TransakcjaOczekujacaId = Column(Integer, unique=True)
    hbte_IdRachunkuBankowego = Column(ForeignKey(u'rb__RachBankowy.rb_Id'))

    rb__RachBankowy = relationship(u'RbRachBankowy')


class HbTransakcjaOczekujaca(Base):
    __tablename__ = u'hb_TransakcjaOczekujaca'

    hbto_Id = Column(Integer, primary_key=True)
    hbto_IdObiektu = Column(Integer, nullable=False)
    hbto_TypObiektu = Column(Integer)
    hbto_IdRachunkuBankowego = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    hbto_IdRachunkuBankowegoKontrahenta = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    hbto_TypZlecenia = Column(Integer, nullable=False)
    hbto_DataWyslania = Column(DateTime)
    hbto_DataRealizacji = Column(DateTime)
    hbto_Oplaty = Column(Integer, server_default=text("((1))"))
    hbto_IdWaluty = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("((0))"))
    hbto_Kwota = Column(MONEY, nullable=False)
    hbto_Tytul = Column(String(146, u'Polish_CI_AS'))
    hbto_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    hbto_StatusBank = Column(Integer)
    hbto_IdHistoriiAdresu = Column(ForeignKey(u'adr_Historia.adrh_Id'))
    hbto_IdRachunkuBankowegoKontrahentaHist = Column(ForeignKey(u'rb_RachBankowyHistoria.rbh_Id'))
    hbto_IdAdresu = Column(ForeignKey(u'adr__Ewid.adr_Id'))
    hbto_Wystawil = Column(String(40, u'Polish_CI_AS'))
    hbto_IdWystawil = Column(Integer, nullable=False)
    hbto_Program = Column(Integer)
    hbto_NazwaKontrahenta = Column(String(35, u'Polish_CI_AS'))
    hbto_TrybRealizacji = Column(BIT, nullable=False, server_default=text("((0))"))
    hbto_Potwierdzenie = Column(LargeBinary, server_default=text("(NULL)"))
    hbto_StatusPotwierdzenia = Column(Integer, server_default=text("(NULL)"))
    hbto_IdPrzedrostka = Column(ForeignKey(u'hb_PrzedrostekHist.hbp_Id'))
    hbto_IdWBanku = Column(Integer, server_default=text("(NULL)"))
    hbto_TypPrzelewu = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("('N')"))
    hbto_ZUSPodIdentyfikator = Column(String(14, u'Polish_CI_AS'))
    hbto_ZUSPodTypIdentyfikatora = Column(String(1, u'Polish_CI_AS'))
    hbto_ZUSTypWplaty = Column(String(1, u'Polish_CI_AS'))
    hbto_ZUSDeklaracja = Column(String(6, u'Polish_CI_AS'))
    hbto_ZUSNrDeklaracji = Column(String(2, u'Polish_CI_AS'))
    hbto_PodSymbol = Column(Integer)
    hbto_PodIdentyfikacjaZobowiazania = Column(String(25, u'Polish_CI_AS'))
    hbto_PodOkres = Column(String(9, u'Polish_CI_AS'))
    hbto_ZUSNrDecyzji = Column(String(50, u'Polish_CI_AS'))
    hbto_RodzajSkladkiPlatZUS = Column(Integer)
    hbto_IdPaczki = Column(Integer, nullable=False, server_default=text("((0))"))

    adr__Ewid = relationship(u'AdrEwid')
    adr_Historia = relationship(u'AdrHistoria')
    hb_PrzedrostekHist = relationship(u'HbPrzedrostekHist')
    rb__RachBankowy = relationship(u'RbRachBankowy', primaryjoin='HbTransakcjaOczekujaca.hbto_IdRachunkuBankowego == RbRachBankowy.rb_Id')
    rb__RachBankowy1 = relationship(u'RbRachBankowy', primaryjoin='HbTransakcjaOczekujaca.hbto_IdRachunkuBankowegoKontrahenta == RbRachBankowy.rb_Id')
    rb_RachBankowyHistoria = relationship(u'RbRachBankowyHistoria')
    sl_Waluta = relationship(u'SlWaluta')


class HbTransakcjaOczekujacaObiekt(Base):
    __tablename__ = u'hb_TransakcjaOczekujacaObiekt'

    hbtoo_Id = Column(Integer, primary_key=True)
    hbtoo_IdTransOczek = Column(ForeignKey(u'hb_TransakcjaOczekujaca.hbto_Id'), nullable=False)
    hbtoo_TypObiektuPow = Column(Integer, nullable=False)
    hbtoo_IdObiektuPow = Column(Integer, nullable=False)
    hbtoo_Wartosc = Column(MONEY, nullable=False)
    hbtoo_Waluta = Column(String(3, u'Polish_CI_AS'), nullable=False)
    hbtoo_Kurs = Column(MONEY)
    hbtoo_WartoscWaluta = Column(MONEY)

    hb_TransakcjaOczekujaca = relationship(u'HbTransakcjaOczekujaca')


class HbTransakcjaOczekujacaParam(Base):
    __tablename__ = u'hb_TransakcjaOczekujacaParam'

    hbtop_Id = Column(Integer, primary_key=True)
    hbtop_ZamianaZnakow = Column(BIT, nullable=False, server_default=text("((0))"))


class HbUsluga(Base):
    __tablename__ = u'hb_Usluga'

    hbu_Id = Column(Integer, primary_key=True)
    hbu_Bank = Column(Integer, nullable=False)
    hbu_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbu_IdentyfikatorKlienta = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hbu_CertyfikatSerwera = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class ImImportLog(Base):
    __tablename__ = u'im_ImportLog'

    il_Id = Column(Integer, primary_key=True)
    il_IdImportu = Column(ForeignKey(u'im_ImportPrzeprowadzony.ip_Id'), index=True)
    il_NumerDokumentu = Column(String(255, u'Polish_CI_AS'), nullable=False)
    il_NrBledu = Column(Integer, nullable=False)
    il_OpisBledu = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    il_InDok_Id = Column(Integer)
    il_InDok_Typ = Column(Integer)
    il_IdDekretu = Column(Integer)
    il_IdVAT = Column(Integer)

    im_ImportPrzeprowadzony = relationship(u'ImImportPrzeprowadzony')


class ImImportPrzeprowadzony(Base):
    __tablename__ = u'im_ImportPrzeprowadzony'

    ip_Id = Column(Integer, primary_key=True)
    ip_Zrodlo = Column(Integer, nullable=False)
    ip_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    ip_Okres = Column(Integer, nullable=False, server_default=text("((512))"))
    ip_DataOd = Column(DateTime, nullable=False)
    ip_DataDo = Column(DateTime, nullable=False)
    ip_IdOperatora = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    ip_TypDokumentow = Column(Integer, nullable=False)
    ip_Magazyn = Column(Integer, nullable=False)
    ip_ImportPonowny = Column(BIT, nullable=False, server_default=text("((0))"))
    ip_PrzerwijImport = Column(Integer, nullable=False, server_default=text("((0))"))
    ip_Opis = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ip_LiczbaWybranych = Column(Integer)
    ip_LiczbaOK = Column(Integer)

    pd_Uzytkownik = relationship(u'PdUzytkownik')


class ImSchematImportu(Base):
    __tablename__ = u'im_SchematImportu'
    __table_args__ = (
        Index(u'IX_im_SchematImportu', u'si_TypDokZrodlowego', u'si_IdKatDokZrodlowego'),
    )

    si_Id = Column(Integer, primary_key=True)
    si_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    si_TypDokZrodlowego = Column(Integer, nullable=False)
    si_IdKatDokZrodlowego = Column(Integer)
    si_ImportDoVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    si_IdEwidVAT = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    si_Wydatki = Column(Integer)
    si_Przeznaczenie = Column(Integer)
    si_DataWpisuVAT = Column(Integer)
    si_DataSprzWyst = Column(Integer)
    si_MiesiacOdliczenia = Column(Integer)
    si_KategoriaZrVAT = Column(Integer)
    si_IdKategoriiVAT = Column(Integer)
    si_PodlegaKsiegowaniu = Column(BIT, nullable=False, server_default=text("((1))"))
    si_ImportDoKPIR = Column(BIT)
    si_Kolumna = Column(Integer)
    si_ImportWartosciKPIR = Column(Integer)
    si_DataWpisuKPIR = Column(Integer)
    si_KategoriaZrKPIR = Column(Integer)
    si_IdKategoriiKPIR = Column(Integer)
    si_ImportDoEP = Column(BIT)
    si_IdStawki = Column(Integer)
    si_ImportWartosciEP = Column(Integer)
    si_DataWpisuEP = Column(Integer)
    si_DataUP = Column(Integer)
    si_KategoriaZrEP = Column(Integer)
    si_IdKategoriiEP = Column(Integer)
    si_OpisZr = Column(Integer)
    si_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    si_UwagiZr = Column(Integer)
    si_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    si_DowolnaKategoria = Column(BIT, nullable=False, server_default=text("((0))"))
    si_TypTransakcji = Column(Integer, nullable=False, server_default=text("((-2))"))
    si_IdKategoriiKH = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    si_IdDataOperacji = Column(Integer)
    si_IdDataDokumentu = Column(Integer)
    si_IdDataDekretacji = Column(Integer)
    si_IdRejestruKs = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Id'))
    si_ImportDoKH = Column(BIT)
    si_TypDokImport = Column(Integer)
    si_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    si_KategoriaKHZrodlo = Column(Integer, nullable=False, server_default=text("((1))"))
    si_TransakcjaVATZrodlo = Column(Integer, nullable=False, server_default=text("((0))"))
    si_IdTransakcjaVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    si_IdEwidVATDokZrodlowego = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    si_TransakcjaVATDokZrodlowego = Column(Integer)
    si_IdMagazynu = Column(ForeignKey(u'sl_Magazyn.mag_Id'))
    si_EwidVATOpisUzytk = Column(String(255, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    si_EwidVATOpisIdSlownikOpisow = Column(Integer)
    si_DokumZrodloUwag = Column(Integer, server_default=text("((1))"))
    si_DokumTekst = Column(String(255, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    si_DokumIdOpisu = Column(Integer)
    si_TypST = Column(Integer)
    si_PrzypSzczegolny = Column(Integer)
    si_IdKasy = Column(Integer)
    si_IdRachunku = Column(Integer)
    si_KontrolaBilansowania = Column(Integer, nullable=False, server_default=text("((0))"))
    si_EwidVATOpisIdTresciOperacji = Column(ForeignKey(u'sl_Tresc.sltr_Id'))
    si_DokumIdTresciOperacji = Column(ForeignKey(u'sl_Tresc.sltr_Id'))
    si_ImportDoDW = Column(BIT)
    si_ImportWartosciDW = Column(Integer)
    si_DataWpisuDW = Column(Integer)
    si_KategoriaZrDW = Column(Integer)
    si_IdKategoriiDW = Column(Integer)
    si_IdDefiniowalnegoTypu = Column(ForeignKey(u'dok_DokumentDefiniowalny.dd_Id'))
    si_TypTranVatRozlUsl = Column(BIT)
    si_ImportujPozycje = Column(BIT, nullable=False, server_default=text("((0))"))
    si_DataZdarzeniaGospodarczego = Column(Integer)
    si_Promocje = Column(BIT, nullable=False, server_default=text("((0))"))
    si_FakturaRR = Column(Integer, nullable=False, server_default=text("((-1))"))
    si_VATMarza = Column(Integer, nullable=False, server_default=text("((1))"))
    si_VATMarzaZak = Column(BIT)
    si_TypTransakcjiZak = Column(Integer)
    si_IdEwidVATZak = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    si_WydatkiZak = Column(Integer)
    si_PrzeznaczenieZak = Column(Integer)
    si_DataZakDost = Column(Integer)
    si_RozliczenieVat = Column(Integer, nullable=False, server_default=text("((0))"))
    si_RodzajZwrotuDetal = Column(Integer, nullable=False, server_default=text("((-2))"))
    si_VATOO = Column(BIT, nullable=False, server_default=text("((0))"))
    si_IdEwidVATOO = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    si_DokumentZrodlowy = Column(Integer)
    si_ImportDoZPiK = Column(BIT)
    si_IdDataWpisuZPiK = Column(Integer)
    si_IdDataZdarzeniaGospZPiK = Column(Integer)
    si_KategoriaZPiKZrodlo = Column(Integer, nullable=False, server_default=text("((1))"))
    si_IdKategoriiZPiK = Column(Integer)
    si_CelZakupu = Column(Integer)

    sl_Tresc = relationship(u'SlTresc', primaryjoin='ImSchematImportu.si_DokumIdTresciOperacji == SlTresc.sltr_Id')
    sl_Tresc1 = relationship(u'SlTresc', primaryjoin='ImSchematImportu.si_EwidVATOpisIdTresciOperacji == SlTresc.sltr_Id')
    dok_DokumentDefiniowalny = relationship(u'DokDokumentDefiniowalny')
    sl_TypEwidVAT = relationship(u'SlTypEwidVAT', primaryjoin='ImSchematImportu.si_IdEwidVAT == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT1 = relationship(u'SlTypEwidVAT', primaryjoin='ImSchematImportu.si_IdEwidVATDokZrodlowego == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT2 = relationship(u'SlTypEwidVAT', primaryjoin='ImSchematImportu.si_IdEwidVATOO == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT3 = relationship(u'SlTypEwidVAT', primaryjoin='ImSchematImportu.si_IdEwidVATZak == SlTypEwidVAT.te_Id')
    sl_Kategoria = relationship(u'SlKategoria')
    sl_Magazyn = relationship(u'SlMagazyn')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')


class ImSchematImportuAnalitykiKP(Base):
    __tablename__ = u'im_SchematImportuAnalitykiKP'
    __table_args__ = (
        Index(u'IX_im_SchematImportuAnalitykiKP_PoziomUnikalny', u'akp_IdPozycjiSI', u'akp_Poziom', unique=True),
    )

    akp_Id = Column(Integer, primary_key=True)
    akp_IdPozycjiSI = Column(Integer, nullable=False)
    akp_Poziom = Column(Integer, nullable=False, server_default=text("((0))"))
    akp_MetodaWyznaczania = Column(Integer, nullable=False, server_default=text("((0))"))
    akp_TypObiektuZDokImp = Column(Integer, server_default=text("((1))"))
    akp_WartoscAnalityki = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    akp_TypKartotekiPowiazanej = Column(ForeignKey(u'pk_Kartoteka.kw_Id'), nullable=False, server_default=text("(NULL)"))

    pk_Kartoteka = relationship(u'PkKartoteka')


class ImSchematImportuKwotyUzytkownika(Base):
    __tablename__ = u'im_SchematImportuKwotyUzytkownika'

    kus_Id = Column(Integer, primary_key=True)
    kus_IdSchematImportu = Column(ForeignKey(u'im_SchematImportu.si_Id'), nullable=False)
    kus_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kus_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    im_SchematImportu = relationship(u'ImSchematImportu')


class ImSchematImportuPozDekretu(Base):
    __tablename__ = u'im_SchematImportuPozDekretu'

    sid_Id = Column(Integer, primary_key=True)
    sid_IdSchematImportu = Column(ForeignKey(u'im_SchematImportu.si_Id'), nullable=False)
    sid_IdZrodloOpisu = Column(Integer, nullable=False, server_default=text("((2))"))
    sid_OpisUzytkownika = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sid_IdOpisu = Column(ForeignKey(u'sl_Opis.sop_Id'))
    sid_NrKonta = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sid_Strona = Column(Integer, nullable=False, server_default=text("((1))"))
    sid_TypKwoty = Column(Integer, nullable=False, server_default=text("((0))"))
    sid_IdKwoty = Column(Integer)
    sid_IdKwotyUzytkownika = Column(ForeignKey(u'im_SchematImportuKwotyUzytkownika.kus_Id'))
    sid_IdSkladnikaPlacowego = Column(ForeignKey(u'plb_Skladnik.sp_Id'))
    sid_IdCenyDoPrzeliczen = Column(Integer)
    sid_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    sid_ProcentKwoty = Column(MONEY, nullable=False, server_default=text("((100))"))
    sid_IdKartotekiPowiazanej = Column(Integer)
    sid_Pos = Column(Integer, nullable=False, server_default=text("((0))"))
    sid_TypWiersza = Column(Integer, nullable=False, server_default=text("((0))"))
    sid_IdTresciOperacji = Column(ForeignKey(u'sl_Tresc.sltr_Id'))
    sid_IdKategoriiPozycji = Column(ForeignKey(u'sl_Kategoria.kat_Id'))

    sl_Kategoria = relationship(u'SlKategoria')
    im_SchematImportuKwotyUzytkownika = relationship(u'ImSchematImportuKwotyUzytkownika')
    sl_Opi = relationship(u'SlOpi')
    im_SchematImportu = relationship(u'ImSchematImportu')
    plb_Skladnik = relationship(u'PlbSkladnik')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')
    sl_Tresc = relationship(u'SlTresc')


class ImSchematImportuZPiK(Base):
    __tablename__ = u'im_SchematImportuZPiK'

    sipk_Id = Column(Integer, primary_key=True)
    sipk_IdSchematImportu = Column(ForeignKey(u'im_SchematImportu.si_Id'), nullable=False)
    sipk_Kolumna = Column(Integer)
    sipk_ImportWartosci = Column(Integer)
    sipk_ZakresArt17 = Column(Integer)
    sipk_WydPokrZDochZwoln = Column(BIT)
    sipk_WydPokrZDochZwolnZLatUb = Column(BIT)

    im_SchematImportu = relationship(u'ImSchematImportu')


class InsSzpieg(Base):
    __tablename__ = u'ins_Szpieg'
    __table_args__ = (
        Index(u'IX_ins_Szpieg_TypObiektu_IdObiektu', u'inss_TypObiektu', u'inss_IdObiektu'),
        Index(u'IX_ins_Szpieg_CzasOperacji_IdUzytkownika', u'inss_CzasOperacji', u'inss_IdUzytkownika')
    )

    inss_Id = Column(Integer, primary_key=True)
    inss_TypObiektu = Column(Integer, nullable=False, index=True)
    inss_TypObiektuEx = Column(Integer, nullable=False, server_default=text("((0))"))
    inss_IdObiektu = Column(Integer, nullable=False)
    inss_NazwaObiektu = Column(String(512, u'Polish_CI_AS'))
    inss_TypOperacji = Column(Integer, nullable=False)
    inss_CzasOperacji = Column(DateTime, nullable=False, index=True)
    inss_IdUzytkownika = Column(Integer, nullable=False)
    inss_Uzytkownik = Column(String(255, u'Polish_CI_AS'), nullable=False)
    inss_Stanowisko = Column(String(255, u'Polish_CI_AS'), nullable=False)
    inss_ObiektXml = Column(Text(collation=u'Polish_CI_AS'), nullable=False)


class InsSzpiegParametr(Base):
    __tablename__ = u'ins_SzpiegParametr'

    inssp_Id = Column(Integer, primary_key=True)
    inssp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), nullable=False)

    par__Ewid = relationship(u'ParEwid')


class InsBlokada(Base):
    __tablename__ = u'ins_blokada'

    obid = Column(Integer, primary_key=True, nullable=False)
    obextra = Column(Integer, primary_key=True, nullable=False)
    obtype = Column(Integer, primary_key=True, nullable=False)
    workstation = Column(String(50, u'Polish_CI_AS'))
    username = Column(String(51, u'Polish_CI_AS'))
    locktime = Column(DateTime, server_default=text("(getdate())"))
    counter = Column(Integer, nullable=False, server_default=text("((1))"))


class InsIdent(Base):
    __tablename__ = u'ins_ident'

    ido_wartosc = Column(Integer, nullable=False, server_default=text("((1))"))
    ido_nazwa = Column(String(50, u'Polish_CI_AS'), primary_key=True)
    ido_minIdValue = Column(Integer)


class InsxParametr(Base):
    __tablename__ = u'insx_Parametr'

    ixp_Id = Column(Integer, primary_key=True)
    ixp_LiczbaPozTw = Column(Integer, nullable=False, server_default=text("((15))"))
    ixp_TwBezZerowych = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_TwRezerwacje = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_TwWarunekAnd = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_TwSortuj = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    ixp_LiczbaPozKh = Column(Integer, nullable=False, server_default=text("((20))"))
    ixp_KhWarunekAnd = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_KhRodzaj = Column(Integer, nullable=False, server_default=text("((-2))"))
    ixp_KhSortuj = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_TwMinZnakow = Column(Integer, nullable=False, server_default=text("((0))"))
    ixp_KhMinZnakow = Column(Integer, nullable=False, server_default=text("((0))"))
    ixp_LiczbaPozEa = Column(Integer, nullable=False, server_default=text("((20))"))
    ixp_EaWarunekAnd = Column(BIT, nullable=False, server_default=text("((0))"))
    ixp_WyszukiwanieAdresow = Column(BIT, nullable=False, server_default=text("((1))"))
    ixp_DataPdm = Column(LargeBinary)
    ixp_BiblDokWarunekAnd = Column(BIT, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')


class IsRodzajInstytucji(Base):
    __tablename__ = u'is_RodzajInstytucji'

    ir_Id = Column(Integer, primary_key=True)
    ir_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)


class IsInstytucja(Base):
    __tablename__ = u'is__Instytucja'

    is_Id = Column(Integer, primary_key=True)
    is_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False)
    is_Rodzaj = Column(ForeignKey(u'is_RodzajInstytucji.ir_Id'), nullable=False)
    is_WWW = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    is_EMail = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    is_NrAnalityka = Column(String(3, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    is_RachunekPIT = Column(Integer)
    is_RachunekVAT = Column(Integer)
    is_RachunekCIT = Column(Integer)
    is_KodUS = Column(ForeignKey(u'sl_UrzadSkarbowy.sus_Id'))
    is_FunduszPromocji = Column(BIT, nullable=False, server_default=text("((0))"))
    is_SposobNaliczania = Column(Integer)
    is_WartoscNaliczenia = Column(MONEY)
    is_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'))
    is_IzbaCelna = Column(BIT, nullable=False, server_default=text("((0))"))

    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    sl_UrzadSkarbowy = relationship(u'SlUrzadSkarbowy')
    is_RodzajInstytucji = relationship(u'IsRodzajInstytucji')


class IwCechy(Base):
    __tablename__ = u'iw_Cechy'

    iwc_Id = Column(Integer, primary_key=True)
    iwc_IdCechy = Column(ForeignKey(u'sl_CechaTw.ctw_Id'), nullable=False)
    iwc_doIwId = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)

    sl_CechaTw = relationship(u'SlCechaTw')
    iw__Dokument = relationship(u'IwDokument')


class IwDyspozycja(Base):
    __tablename__ = u'iw_Dyspozycja'

    iwd_Id = Column(Integer, primary_key=True, nullable=False)
    iwd_DoPozId = Column(Integer, primary_key=True, nullable=False)
    iwd_spid = Column(Integer, nullable=False)
    iwd_Ilosc = Column(MONEY, nullable=False)
    iwd_Czas = Column(DateTime, nullable=False)
    iwd_DoId = Column(Integer)
    iwd_DoIlosc = Column(MONEY, nullable=False)
    iwd_IwRozbId = Column(Integer, server_default=text("((-1))"))
    iwd_RealId = Column(Integer, nullable=False, server_default=text("((-1))"))


class IwFlagi(Base):
    __tablename__ = u'iw_Flagi'

    iwf_Id = Column(Integer, primary_key=True)
    iwf_IdFlagi = Column(ForeignKey(u'fl__Flagi.flg_Id'), nullable=False)
    iwf_doIwId = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)

    fl__Flagi = relationship(u'FlFlagi')
    iw__Dokument = relationship(u'IwDokument')


class IwGrupy(Base):
    __tablename__ = u'iw_Grupy'

    iwg_Id = Column(Integer, primary_key=True)
    iwg_IdGrupy = Column(ForeignKey(u'sl_GrupaTw.grt_Id'), nullable=False)
    iwg_doIwId = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)

    sl_GrupaTw = relationship(u'SlGrupaTw')
    iw__Dokument = relationship(u'IwDokument')


class IwPowiazania(Base):
    __tablename__ = u'iw_Powiazania'

    iwa_Id = Column(Integer, primary_key=True)
    iwa_IdCz = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)
    iwa_IdZb = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)

    iw__Dokument = relationship(u'IwDokument', primaryjoin='IwPowiazania.iwa_IdCz == IwDokument.iw_Id')
    iw__Dokument1 = relationship(u'IwDokument', primaryjoin='IwPowiazania.iwa_IdZb == IwDokument.iw_Id')


class IwPozycja(Base):
    __tablename__ = u'iw_Pozycja'

    iwp_Id = Column(Integer, primary_key=True)
    iwp_Lp = Column(Integer, nullable=False)
    iwp_OpisPozycji = Column(String(255, u'Polish_CI_AS'))
    iwp_KodDostawy = Column(String(20, u'Polish_CI_AS'))
    iwp_StanKomp = Column(MONEY, nullable=False)
    iwp_StanMagazyn = Column(MONEY)
    iwp_Rozchod = Column(MONEY)
    iwp_Przychod = Column(MONEY)
    iwp_Rezerwacja = Column(MONEY)
    iwp_Dostepne = Column(MONEY)
    iwp_Brakuje = Column(MONEY)
    iwp_CenaNetto = Column(MONEY)
    iwp_CenaBrutto = Column(MONEY, nullable=False)
    iwp_WartNetto = Column(MONEY)
    iwp_WartBrutto = Column(MONEY)
    iwp_KategoriaId = Column(Integer)
    iwp_Rd = Column(Integer)
    iwp_RozbitaAuto = Column(Integer, server_default=text("((0))"))
    iwp_IdTowaru = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    iwp_doDokId = Column(ForeignKey(u'iw__Dokument.iw_Id'), nullable=False)

    tw__Towar = relationship(u'TwTowar')
    iw__Dokument = relationship(u'IwDokument')


class IwRozbicie(Base):
    __tablename__ = u'iw_Rozbicie'

    iwr_Id = Column(Integer, primary_key=True)
    iwr_DoPozId = Column(Integer, nullable=False)
    iwr_IloscRozchod = Column(MONEY)
    iwr_IloscPrzychod = Column(MONEY)
    iwr_CenaNetto = Column(MONEY)
    iwr_Wartosc = Column(MONEY)
    iwr_KodDostawy = Column(String(20, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iwr_OpisPozycji = Column(String(255, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iwr_KategoriaId = Column(Integer)
    iwr_Dysp = Column(Integer)
    iwr_RozbitaAuto = Column(BIT, server_default=text("((0))"))


class IwDokument(Base):
    __tablename__ = u'iw__Dokument'

    iw_Id = Column(Integer, primary_key=True)
    iw_Typ = Column(Integer, nullable=False)
    iw_MagId = Column(ForeignKey(u'sl_Magazyn.mag_Id'), nullable=False)
    Iw_DoIwNrPelny = Column(String(30, u'Polish_CI_AS'))
    iw_Status = Column(Integer, nullable=False)
    iw_Nr = Column(Integer)
    iw_NrRoz = Column(String(3, u'Polish_CI_AS'))
    iw_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_StatusBlok = Column(BIT, nullable=False, server_default=text("((0))"))
    iw_DataWyst = Column(DateTime, nullable=False)
    iw_MiejsceWyst = Column(String(40, u'Polish_CI_AS'), nullable=False)
    iw_DataZatw = Column(DateTime)
    iw_DataMag = Column(DateTime)
    iw_Wartosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    iw_Wystawil = Column(String(40, u'Polish_CI_AS'), nullable=False)
    iw_Zatwierdzil = Column(String(40, u'Polish_CI_AS'), nullable=False)
    iw_KatId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    iw_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_Podtytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_PwId = Column(ForeignKey(u'dok__Dokument.dok_Id'))
    iw_PwNrPelny = Column(String(30, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_RwId = Column(ForeignKey(u'dok__Dokument.dok_Id'))
    iw_RwNrPelny = Column(String(30, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    iw_CenyPoziom = Column(Integer)
    iw_CenyNarzut = Column(MONEY, nullable=False, server_default=text("((0))"))
    iw_FiltrCheckRodzaje = Column(BIT, nullable=False)
    iw_FiltrRodzaje = Column(Integer, nullable=False)
    iw_FiltrCheckStan = Column(BIT, nullable=False)
    iw_FiltrStan = Column(Integer, nullable=False)
    iw_FiltrCheckPLU = Column(BIT, nullable=False)
    iw_FiltrPLUOd = Column(Integer)
    iw_FiltrPLUDo = Column(Integer)
    iw_FiltrCheckGrupa = Column(BIT, nullable=False)
    iw_FiltrCheckCecha = Column(BIT)
    iw_FiltrCheckFlaga = Column(BIT, nullable=False)
    iw_IdIWcRaport = Column(Integer)
    iw_CenyIdBanku = Column(Integer)
    iw_CenyKurs = Column(MONEY)
    iw_CenyKursData = Column(DateTime)
    iw_StatusMagOdlozony = Column(BIT, nullable=False, server_default=text("((0))"))
    iw_CenyLiczbaJedn = Column(Integer, nullable=False, server_default=text("((1))"))
    iw_CenyRodzajKursu = Column(Integer)
    iw_PodpisanoElektronicznie = Column(BIT)

    sl_Kategoria = relationship(u'SlKategoria')
    sl_Magazyn = relationship(u'SlMagazyn')
    dok__Dokument = relationship(u'DokDokument', primaryjoin='IwDokument.iw_PwId == DokDokument.dok_Id')
    dok__Dokument1 = relationship(u'DokDokument', primaryjoin='IwDokument.iw_RwId == DokDokument.dok_Id')


class KhCechaKh(Base):
    __tablename__ = u'kh_CechaKh'

    ck_Id = Column(Integer, primary_key=True)
    ck_IdKhnt = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    ck_IdCecha = Column(ForeignKey(u'sl_CechaKh.ckh_Id'), nullable=False)

    sl_CechaKh = relationship(u'SlCechaKh')
    kh__Kontrahent = relationship(u'KhKontrahent')


class KhCechaPrac(Base):
    __tablename__ = u'kh_CechaPrac'

    cp_Id = Column(Integer, primary_key=True)
    cp_IdPrac = Column(ForeignKey(u'kh_Pracownik.pk_Id'), nullable=False)
    cp_IdCecha = Column(ForeignKey(u'sl_CechaKh.ckh_Id'), nullable=False)

    sl_CechaKh = relationship(u'SlCechaKh')
    kh_Pracownik = relationship(u'KhPracownik')


class KhDokument(Base):
    __tablename__ = u'kh_Dokument'

    kdk_Id = Column(Integer, primary_key=True)
    kdk_IdKontrahenta = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False, index=True)
    kdk_IdKategorii = Column(ForeignKey(u'sl_KategoriaDokumentu.kd_Id'), nullable=False)
    kdk_Zablokowany = Column(BIT, nullable=False)
    kdk_DataModyfikacji = Column(DateTime, nullable=False)
    kdk_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kdk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kdk_Tresc = Column(LargeBinary, nullable=False)
    kdk_Typ = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kdk_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    sl_KategoriaDokumentu = relationship(u'SlKategoriaDokumentu')
    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class KhLista(Base):
    __tablename__ = u'kh_Lista'

    lk_Id = Column(Integer, primary_key=True)
    lk_Typ = Column(Integer, nullable=False, server_default=text("((1))"))
    lk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_IdPersonel = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    lk_Publiczna = Column(BIT, nullable=False, server_default=text("((0))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik')


class KhListaFiltr(Base):
    __tablename__ = u'kh_ListaFiltr'

    lkf_Id = Column(Integer, primary_key=True)
    lkf_IdLista = Column(ForeignKey(u'kh_Lista.lk_Id'), nullable=False, unique=True)
    lkf_Filtr = Column(LargeBinary)

    kh_Lista = relationship(u'KhLista')


class KhListaKh(Base):
    __tablename__ = u'kh_ListaKh'

    lkk_Id = Column(Integer, primary_key=True)
    lkk_IdLista = Column(ForeignKey(u'kh_Lista.lk_Id'), nullable=False)
    lkk_IdKlient = Column(ForeignKey(u'adr__Ewid.adr_Id'), nullable=False)

    adr__Ewid = relationship(u'AdrEwid')
    kh_Lista = relationship(u'KhLista')


class KhParametr(Base):
    __tablename__ = u'kh_Parametr'

    khp_Id = Column(Integer, primary_key=True)
    khp_Miejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Grupa = Column(Integer)
    khp_IdWojewodztwo = Column(ForeignKey(u'sl_Wojewodztwo.woj_Id'))
    khp_IdPanstwo = Column(ForeignKey(u'sl_Panstwo.pa_Id'), server_default=text("((15))"))
    khp_IdRabat = Column(ForeignKey(u'sl_Rabat.rt_id'))
    khp_AnalitykaO = Column(String(5, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_AnalitykaD = Column(String(5, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_SymbolAuto = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_DlugoscAuto = Column(Integer, server_default=text("((40))"))
    khp_KolejnyAuto = Column(Integer, nullable=False)
    khp_KolejnyWolny = Column(Integer)
    khp_AkcjaLiczba = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_AkcjaJeden = Column(Integer, nullable=False, server_default=text("((1))"))
    khp_AkcjaWszystkie = Column(Integer, nullable=False, server_default=text("((1))"))
    khp_AkcjaSpoznienie = Column(Integer, nullable=False, server_default=text("((1))"))
    khp_ZezwalajOdroczone = Column(BIT, nullable=False, server_default=text("((1))"))
    khp_Cena = Column(Integer)
    khp_UstawiajZdjecia = Column(BIT, nullable=False, server_default=text("((1))"))
    khp_ProcGotowka = Column(MONEY, nullable=False, server_default=text("((100))"))
    khp_ProcKarta = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_ProcKredyt = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_ProcPozostalo = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_IdTermin = Column(ForeignKey(u'sl_FormaPlatnosci.fp_Id'))
    khp_KodPocztowy = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_IdKategoriaKH = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    khp_IdEwVATSp = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), server_default=text("((1))"))
    khp_EwVATSpMcOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_IdEwVATSpKateg = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    khp_IdEwVATZak = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), server_default=text("((2))"))
    khp_EwVATZakRodzaj = Column(Integer, nullable=False, server_default=text("((2))"))
    khp_EwVATZakSposobOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_EwVATZakMcOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_IdEwVATZakKateg = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    khp_IdRachKategPrzychod = Column(ForeignKey(u'sl_Kategoria.kat_Id'), server_default=text("(NULL)"))
    khp_IdRachKategRozchod = Column(ForeignKey(u'sl_Kategoria.kat_Id'), server_default=text("(NULL)"))
    khp_TransakcjaVATSp = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_TransakcjaVATZak = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_JednZezwalajOdroczone = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_JednProcKarta = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_JednProcKredyt = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_JednProcGotowka = Column(MONEY, nullable=False, server_default=text("((100))"))
    khp_JednProcPozostalo = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_JednIdTermin = Column(Integer)
    khp_MaxDokKred = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_MaxWartDokKred = Column(MONEY, nullable=False, server_default=text("((0.00))"))
    khp_MaxWartKred = Column(MONEY, nullable=False, server_default=text("((0.00))"))
    khp_MaxDniSp = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_OdbDet = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_KontrolaNIP = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    khp_IdRegion = Column(ForeignKey(u'sl_CrmRegion.reg_Id'))
    khp_Potencjalny = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_ProcPrzelew = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_JednProcPrzelew = Column(MONEY, nullable=False, server_default=text("((0))"))
    khp_Opiekun = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_Osoba = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_OsobaOdbDetal = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_StosujAkcjeDoZK = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_StosujAkcjeDoWZ = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_KontrolaPESEL = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_KhUprJakoOdb = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_KhUprPustyAdres = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_AdresKolejnosc = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_Lokalizacja1 = Column(Unicode(256))
    khp_Lokalizacja2 = Column(Unicode(256))
    khp_Lokalizacja3 = Column(Unicode(256))
    khp_Lokalizacja4 = Column(Unicode(256))
    khp_Lokalizacja5 = Column(Unicode(256))
    khp_StatusAkcyza = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_KhJednStatusAkcyza = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_CzynnyPodatnikVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_KhJednCzynnyPodatnikVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_FormatujDaneGus = Column(BIT, nullable=False, server_default=text("((1))"))
    khp_NazwaUzupelnij = Column(Integer, nullable=False, server_default=text("((0))"))
    khp_PocztaMiejscowoscZamien = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_GusNowaWyszukiwarka = Column(BIT, nullable=False, server_default=text("((1))"))
    khp_GusDaneKontaktowe = Column(BIT, nullable=False, server_default=text("((1))"))
    khp_FormatujNazweZGus = Column(BIT, nullable=False, server_default=text("((0))"))
    khp_KlientSklepuInternetowego = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_TypEwidVAT = relationship(u'SlTypEwidVAT', primaryjoin='KhParametr.khp_IdEwVATSp == SlTypEwidVAT.te_Id')
    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='KhParametr.khp_IdEwVATSpKateg == SlKategoria.kat_Id')
    sl_TypEwidVAT1 = relationship(u'SlTypEwidVAT', primaryjoin='KhParametr.khp_IdEwVATZak == SlTypEwidVAT.te_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='KhParametr.khp_IdEwVATZakKateg == SlKategoria.kat_Id')
    sl_Kategoria2 = relationship(u'SlKategoria', primaryjoin='KhParametr.khp_IdKategoriaKH == SlKategoria.kat_Id')
    sl_Panstwo = relationship(u'SlPanstwo')
    sl_Rabat = relationship(u'SlRabat')
    sl_Kategoria3 = relationship(u'SlKategoria', primaryjoin='KhParametr.khp_IdRachKategPrzychod == SlKategoria.kat_Id')
    sl_Kategoria4 = relationship(u'SlKategoria', primaryjoin='KhParametr.khp_IdRachKategRozchod == SlKategoria.kat_Id')
    sl_CrmRegion = relationship(u'SlCrmRegion')
    sl_FormaPlatnosci = relationship(u'SlFormaPlatnosci')
    sl_Wojewodztwo = relationship(u'SlWojewodztwo')
    par__Ewid = relationship(u'ParEwid')


class KhParametrG(Base):
    __tablename__ = u'kh_ParametrG'

    khp_Id = Column(Integer, primary_key=True)
    khp_Nazwa1 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa2 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa3 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa4 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa5 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa6 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa7 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_Nazwa8 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    khp_AnalitykiObsluga = Column(Integer, nullable=False, server_default=text("((0))"))


class KhPracownik(Base):
    __tablename__ = u'kh_Pracownik'

    pk_Id = Column(Integer, primary_key=True)
    pk_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    pk_Imie = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Nazwisko = Column(String(30, u'Polish_CI_AS'), nullable=False)
    pk_EMail = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Telefon = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_TelKomorka = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Podstaw = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_Stanowisko = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_IdGrupa = Column(ForeignKey(u'sl_GrupaKh.grk_Id'))
    pk_ZgodaDO = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_ZgodaMark = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_ZgodaEMail = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_Grafika = Column(LargeBinary)
    pk_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_GaduGadu = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Skype = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_AdresKoresp = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_AdresDostawy = Column(BIT, nullable=False, server_default=text("((0))"))
    pk_Powitanie = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_IdRodzajKontaktu = Column(ForeignKey(u'sl_RodzajKontaktu.rk_Id'))
    pk_IdPozyskany = Column(ForeignKey(u'sl_CrmZrodloPozyskania.zpo_Id'))
    pk_IdBranza = Column(ForeignKey(u'sl_CrmBranza.bra_Id'))
    pk_IdRegion = Column(ForeignKey(u'sl_CrmRegion.reg_Id'))
    pk_IdDzial = Column(ForeignKey(u'sl_CrmDzial.dzi_Id'))
    pk_IdOpiekun = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    pk_IdDodal = Column(Integer)
    pk_IdZmienil = Column(Integer)
    pk_DataDodania = Column(DateTime)
    pk_DataZmiany = Column(DateTime)
    pk_DataOkolicznosciowa = Column(DateTime)
    pk_Domena = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pk_Lokalizacja = Column(Unicode(256))

    sl_CrmBranza = relationship(u'SlCrmBranza')
    sl_CrmDzial = relationship(u'SlCrmDzial')
    sl_GrupaKh = relationship(u'SlGrupaKh')
    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    sl_CrmZrodloPozyskania = relationship(u'SlCrmZrodloPozyskania')
    sl_CrmRegion = relationship(u'SlCrmRegion')
    sl_RodzajKontaktu = relationship(u'SlRodzajKontaktu')


class KhTransakcjaJednolita(Base):
    __tablename__ = u'kh_TransakcjaJednolita'

    ktj_Id = Column(Integer, primary_key=True)
    ktj_IdKontrahenta = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    ktj_Aktywna = Column(BIT, nullable=False, server_default=text("((0))"))
    ktj_WartPrzewidywana = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    ktj_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ktj_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ktj_Opis = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    kh__Kontrahent = relationship(u'KhKontrahent')


class KhVy(Base):
    __tablename__ = u'kh_Vies'

    khv_Id = Column(Integer, primary_key=True)
    khv_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    khv_IdUz = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    khv_Aktywnosc = Column(BIT)
    khv_Nazwa = Column(String(255, u'Polish_CI_AS'))
    khv_PanstwoCzlonkowskie = Column(String(10, u'Polish_CI_AS'))
    khv_NumerVat = Column(String(50, u'Polish_CI_AS'))
    khv_DataZapytania = Column(DateTime)
    khv_Adres = Column(String(255, u'Polish_CI_AS'))
    khv_IdentyfikatorZapytania = Column(String(50, u'Polish_CI_AS'))
    khv_Zapytanie = Column(String(50, u'Polish_CI_AS'))

    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class KhWeryfikacjaNIP(Base):
    __tablename__ = u'kh_WeryfikacjaNIP'

    khwn_Id = Column(Integer, primary_key=True)
    khwn_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    khwn_IdUz = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    khwn_Aktywnosc = Column(Integer, nullable=False)
    khwn_NumerNIP = Column(String(20, u'Polish_CI_AS'), nullable=False)
    khwn_DataZapytania = Column(DateTime, nullable=False)

    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class KhKontrahent(Base):
    __tablename__ = u'kh__Kontrahent'

    kh_Id = Column(Integer, primary_key=True)
    kh_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False)
    kh_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_REGON = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_IdOdbiorca = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    kh_Kontakt = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_PESEL = Column(String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_NrDowodu = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_DataWyd = Column(DateTime)
    kh_OrganWyd = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_CentrumAut = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_InstKredytowa = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_PrefKontakt = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_WWW = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_EMail = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_IdGrupa = Column(ForeignKey(u'sl_GrupaKh.grk_Id'))
    kh_IdFormaP = Column(ForeignKey(u'sl_FormaPlatnosci.fp_Id'))
    kh_Cena = Column(Integer)
    kh_PlatOdroczone = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_OdbDet = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_IdRabat = Column(ForeignKey(u'sl_Rabat.rt_id'))
    kh_MaxDokKred = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_MaxWartDokKred = Column(MONEY, nullable=False, server_default=text("((0.00))"))
    kh_MaxWartKred = Column(MONEY, nullable=False, server_default=text("((0.00))"))
    kh_MaxDniSp = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_NrAnalitykaD = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_NrAnalitykaO = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_ZgodaDO = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_IdOsobaDO = Column(Integer)
    kh_ZgodaMark = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_ZgodaEMail = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_CzyKomunikat = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_Komunikat = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_KomunikatZawsze = Column(BIT, nullable=False, server_default=text("((1))"))
    kh_KomunikatOd = Column(DateTime)
    kh_Grafika = Column(LargeBinary)
    kh_Pole1 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole3 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole4 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole5 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole6 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole7 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Pole8 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Jednorazowy = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_Pracownik = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_AdresKoresp = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_UpowaznienieVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_DataVAT = Column(DateTime)
    kh_OsobaVAT = Column(Integer)
    kh_ProcKarta = Column(MONEY, nullable=False, server_default=text("((0))"))
    kh_ProcKredyt = Column(MONEY, nullable=False, server_default=text("((0))"))
    kh_ProcGotowka = Column(MONEY, nullable=False, server_default=text("((0))"))
    kh_ProcPozostalo = Column(MONEY, nullable=False, server_default=text("((0))"))
    kh_IdKategoriaKH = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kh_IdEwVATSp = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    kh_EwVATSpMcOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_IdEwVATSpKateg = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kh_IdEwVATZak = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    kh_EwVATZakRodzaj = Column(Integer, nullable=False, server_default=text("((2))"))
    kh_EwVATZakSposobOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_EwVATZakMcOdliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_IdEwVATZakKateg = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kh_IdRachKategPrzychod = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kh_IdRachKategRozchod = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kh_TransakcjaVATSp = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_TransakcjaVATZak = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_PodVATZarejestrowanyWUE = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_DataWaznosciVAT = Column(DateTime)
    kh_OpisOperacji = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_PlatPrzelew = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_GaduGadu = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Skype = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Powitanie = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_AdresDostawy = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_IdRodzajKontaktu = Column(ForeignKey(u'sl_RodzajKontaktu.rk_Id'))
    kh_IdPozyskany = Column(ForeignKey(u'sl_CrmZrodloPozyskania.zpo_Id'))
    kh_IdBranza = Column(ForeignKey(u'sl_CrmBranza.bra_Id'))
    kh_IdRegion = Column(ForeignKey(u'sl_CrmRegion.reg_Id'))
    kh_LiczbaPrac = Column(Integer)
    kh_IdOpiekun = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    kh_Imie = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Nazwisko = Column(String(51, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_CRM = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_Potencjalny = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_IdDodal = Column(Integer)
    kh_IdZmienil = Column(Integer)
    kh_DataDodania = Column(DateTime)
    kh_DataZmiany = Column(DateTime)
    kh_ProcPrzelew = Column(MONEY, nullable=False, server_default=text("((0))"))
    kh_DataOkolicznosciowa = Column(DateTime)
    kh_Osoba = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'))
    kh_KRS = Column(String(255, u'Polish_CI_AS'))
    kh_Domena = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kh_Akcyza = Column(Integer, nullable=False, server_default=text("((1))"))
    kh_EFakturyZgoda = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_EFakturyData = Column(DateTime)
    kh_MetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_Lokalizacja = Column(Unicode(256))
    kh_StatusAkcyza = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_CzynnyPodatnikVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_KorygowanieKUP = Column(BIT)
    kh_KorygowanieVATSp = Column(BIT)
    kh_KorygowanieVATZak = Column(BIT)
    kh_WzwIdFS = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_WzwIdWZ = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_WzwIdWZVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_WzwIdZK = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_WzwIdZKZAL = Column(Integer, nullable=False, server_default=text("((0))"))
    kh_ZgodaNewsletterVendero = Column(BIT, nullable=False, server_default=text("((0))"))
    kh_KlientSklepuInternetowego = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_CrmBranza = relationship(u'SlCrmBranza')
    sl_TypEwidVAT = relationship(u'SlTypEwidVAT', primaryjoin='KhKontrahent.kh_IdEwVATSp == SlTypEwidVAT.te_Id')
    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='KhKontrahent.kh_IdEwVATSpKateg == SlKategoria.kat_Id')
    sl_TypEwidVAT1 = relationship(u'SlTypEwidVAT', primaryjoin='KhKontrahent.kh_IdEwVATZak == SlTypEwidVAT.te_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='KhKontrahent.kh_IdEwVATZakKateg == SlKategoria.kat_Id')
    sl_FormaPlatnosci = relationship(u'SlFormaPlatnosci')
    sl_GrupaKh = relationship(u'SlGrupaKh')
    sl_Kategoria2 = relationship(u'SlKategoria', primaryjoin='KhKontrahent.kh_IdKategoriaKH == SlKategoria.kat_Id')
    parent = relationship(u'KhKontrahent', remote_side=[kh_Id])
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    sl_CrmZrodloPozyskania = relationship(u'SlCrmZrodloPozyskania')
    sl_Rabat = relationship(u'SlRabat')
    sl_Kategoria3 = relationship(u'SlKategoria', primaryjoin='KhKontrahent.kh_IdRachKategPrzychod == SlKategoria.kat_Id')
    sl_Kategoria4 = relationship(u'SlKategoria', primaryjoin='KhKontrahent.kh_IdRachKategRozchod == SlKategoria.kat_Id')
    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    sl_CrmRegion = relationship(u'SlCrmRegion')
    sl_RodzajKontaktu = relationship(u'SlRodzajKontaktu')


class KomFrParametr(Base):
    __tablename__ = u'kom_FrParametr'

    fpr_Id = Column(Integer, primary_key=True)
    fpr_Format = Column(Integer, nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fpr_DTS = Column(BIT, nullable=False, server_default=text("((1))"))
    fpr_Sciezka = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("('.')"))
    fpr_Rozszerzenie = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fpr_Typ = Column(Integer, nullable=False, server_default=text("((1))"))
    fpr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fpr_KolumnaId = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class KomKomPrzeprowadzona(Base):
    __tablename__ = u'kom_KomPrzeprowadzona'

    odk_Id = Column(Integer, primary_key=True)
    odk_Data = Column(DateTime, nullable=False)
    odk_DataOd = Column(DateTime)
    odk_DataDo = Column(DateTime)
    odk_IdMagazyn = Column(Integer)
    odk_TypKom = Column(Integer, nullable=False)
    odk_LiczbaOK = Column(Integer, nullable=False, server_default=text("((0))"))
    odk_LiczbaWszystko = Column(Integer, nullable=False, server_default=text("((-1))"))
    odk_LiczbaNieOK = Column(Integer, nullable=False, server_default=text("((0))"))


class KomKomunikacjaLog(Base):
    __tablename__ = u'kom_KomunikacjaLog'

    lk_Id = Column(Integer, primary_key=True)
    lk_IdKomunikacji = Column(ForeignKey(u'kom_KomPrzeprowadzona.odk_Id'), nullable=False)
    lk_TypDok = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_Dokument = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_Blad = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lk_NrBledu = Column(Integer, nullable=False)

    kom_KomPrzeprowadzona = relationship(u'KomKomPrzeprowadzona')


class KomParametr(Base):
    __tablename__ = u'kom_Parametr'

    kom_Id = Column(Integer, primary_key=True)
    kom_TypPodmiotu = Column(Integer, nullable=False, server_default=text("((0))"))
    kom_IdMagazyn = Column(Integer, nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kom_CenyZakupu = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_KhAktualizuj = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_TwAktualizuj = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_Odbior = Column(Integer, nullable=False, server_default=text("((0))"))
    kom_DoBiuraWszyscyKh = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_DoBiuraOpGotowkowe = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_DoBiuraOpBezKh = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_BiuroKhNIP = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_BiuroKhDodaj = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kom_Nr = Column(Integer, nullable=False, server_default=text("((1))"))
    kom_DoBiuraMagazynoweKhWirtual = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_KhTypAktualizacji = Column(Integer, nullable=False, server_default=text("((0))"))
    kom_TwTypAktualizacji = Column(Integer, nullable=False, server_default=text("((0))"))
    kom_BiuroPrDodaj = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_PrAktualizuj = Column(BIT, nullable=False, server_default=text("((0))"))
    kom_NieMarzaZyskKoszt = Column(BIT, nullable=False, server_default=text("((0))"))


class KorPozycja(Base):
    __tablename__ = u'kor_Pozycja'

    kkp_Id = Column(Integer, primary_key=True)
    kkp_IdKorKoszt = Column(ForeignKey(u'kor__KorektaKosztow.kkn_Id'), nullable=False)
    kkp_TypPozycji = Column(Integer, nullable=False)
    kkp_TypOkresu = Column(Integer, nullable=False)
    kkp_DokId = Column(ForeignKey(u'dok__Dokument.dok_Id'), nullable=False)
    kkp_DokDataWyst = Column(DateTime, nullable=False)
    kkp_DokNrPelny = Column(String(255, u'Polish_CI_AS'), nullable=False)
    kkp_KorId = Column(Integer, nullable=False)
    kkp_KorDataWyst = Column(DateTime, nullable=False)
    kkp_KorNrPelny = Column(String(255, u'Polish_CI_AS'), nullable=False)
    kkp_WartPrzedKor = Column(MONEY)
    kkp_WartKorekty = Column(MONEY)
    kkp_WartPoKor = Column(MONEY)

    dok__Dokument = relationship(u'DokDokument')
    kor__KorektaKosztow = relationship(u'KorKorektaKosztow')


class KorKorektaKosztow(Base):
    __tablename__ = u'kor__KorektaKosztow'

    kkn_Id = Column(Integer, primary_key=True)
    kkn_Typ = Column(Integer, nullable=False)
    kkn_Podtyp = Column(Integer, nullable=False)
    kkn_MagId = Column(Integer, nullable=False)
    kkn_Nr = Column(Integer, nullable=False)
    kkn_NrRoz = Column(String(3, u'Polish_CI_AS'))
    kkn_NrPelny = Column(String(30, u'Polish_CI_AS'), nullable=False)
    kkn_MscWyst = Column(String(40, u'Polish_CI_AS'), nullable=False)
    kkn_DataWyst = Column(DateTime, nullable=False)
    kkn_DataOd = Column(DateTime, nullable=False)
    kkn_DataDo = Column(DateTime, nullable=False)
    kkn_WartKKHz = Column(MONEY)
    kkn_WartKKHs = Column(MONEY)
    kkn_WartKKMp = Column(MONEY)
    kkn_WartKKMw = Column(MONEY)
    kkn_WartKKMwop = Column(MONEY)
    kkn_WartKKMwob = Column(MONEY)
    kkn_WartWZhan = Column(MONEY)
    kkn_WartWZmag = Column(MONEY)
    kkn_WartRW = Column(MONEY)
    kkn_WartPZ = Column(MONEY)
    kkn_WartMMP = Column(MONEY)
    kkn_WartMMW = Column(MONEY)
    kkn_Wystawil = Column(String(40, u'Polish_CI_AS'), nullable=False)
    kkn_PersonelId = Column(Integer, nullable=False)
    kkn_Status = Column(Integer, nullable=False)
    kkn_StatusKsieg = Column(Integer, nullable=False)
    kkn_KatId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kkn_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False)
    kkn_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kkn_Podtytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_Kategoria = relationship(u'SlKategoria')


class KpAkord(Base):
    __tablename__ = u'kp_Akord'

    ak_Id = Column(Integer, primary_key=True)
    ak_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    ak_SposobRozliczenia = Column(Integer, nullable=False, server_default=text("((0))"))
    ak_Data = Column(DateTime, nullable=False)
    ak_IdUmowyOPrace = Column(ForeignKey(u'plb_Umowa.up_Id'))
    ak_IdUmowyCywilnoprawnej = Column(ForeignKey(u'plb_UmowaCP.ucp_Id'))
    ak_IdStawkiAkordowej = Column(ForeignKey(u'sl_StawkaAkordowa.sa_Id'), nullable=False)
    ak_Ilosc = Column(MONEY, nullable=False)
    ak_Wartosc = Column(MONEY, nullable=False)
    ak_IdDokRozlWyplata = Column(Integer)
    ak_IdDokRozlRachunek = Column(Integer)
    ak_DokumentRozliczajacyOpis = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ak_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_StawkaAkordowa = relationship(u'SlStawkaAkordowa')
    plb_UmowaCP = relationship(u'PlbUmowaCP')
    plb_Umowa = relationship(u'PlbUmowa')


class KpKomornikPozyczkaDefinicja(Base):
    __tablename__ = u'kp_KomornikPozyczkaDefinicja'

    kp_Id = Column(Integer, primary_key=True)
    kp_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    kp_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)
    kp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kp_SygnaturaSprawy = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kp_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    kp_SposobPotracania = Column(Integer, nullable=False, server_default=text("((0))"))
    kp_ProcentWynagrodzeniaPotracany = Column(MONEY, nullable=False, server_default=text("((0))"))
    kp_SumaPotracenia = Column(MONEY, nullable=False, server_default=text("((0))"))
    kp_DataOd = Column(DateTime, nullable=False)
    kp_DataDo = Column(DateTime)
    kp_KwotaPotraceniaMiesiecznego = Column(MONEY, nullable=False, server_default=text("((0))"))
    kp_ProcentOchronyWynagrodzenia = Column(MONEY, nullable=False, server_default=text("((0))"))
    kp_CzestotliwoscPotracania = Column(Integer, nullable=False, server_default=text("((1))"))
    kp_PriorytetPotracenia = Column(Integer, nullable=False, server_default=text("((1))"))
    kp_ZawieszenieDataOd = Column(DateTime)
    kp_ZawieszenieDataDo = Column(DateTime)
    kp_CzyNaSwiadectwiePracy = Column(BIT, nullable=False, server_default=text("((1))"))
    kp_Komornik = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kp_PrzyczynaAnulowania = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    pr_Pracownik = relationship(u'PrPracownik')
    plb_Skladnik = relationship(u'PlbSkladnik')


class KpNaliczeniePotracenie(Base):
    __tablename__ = u'kp_NaliczeniePotracenie'

    nalp_Id = Column(Integer, primary_key=True)
    nalp_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    nalp_SposobRozliczenia = Column(Integer, nullable=False, server_default=text("((1))"))
    nalp_Typ = Column(Integer, nullable=False)
    nalp_Data = Column(DateTime, nullable=False)
    nalp_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    nalp_IdSkladnika = Column(Integer, nullable=False)
    nalp_Wartosc = Column(MONEY, nullable=False)
    nalp_IdDokRozliczajacego = Column(Integer)
    nalp_DokumentRozliczajacyOpis = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nalp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    plb_Umowa = relationship(u'PlbUmowa')


class KpPozycjaDefinicji(Base):
    __tablename__ = u'kp_PozycjaDefinicji'

    kpp_Id = Column(Integer, primary_key=True)
    kpp_IdDefinicji = Column(ForeignKey(u'kp_KomornikPozyczkaDefinicja.kp_Id'), nullable=False)
    kpp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpp_Data = Column(DateTime, nullable=False)
    kpp_KwotaWyliczona = Column(MONEY, nullable=False, server_default=text("((0))"))
    kpp_KwotaPotracona = Column(MONEY, nullable=False, server_default=text("((0))"))
    kpp_SposobRozliczenia = Column(BIT, nullable=False)
    kpp_DokumentRozliczajacy = Column(String(30, u'Polish_CI_AS'), nullable=False)
    kpp_IdDokumentRozliczajacy = Column(ForeignKey(u'plb_Wyplata.wyp_Id'))

    kp_KomornikPozyczkaDefinicja = relationship(u'KpKomornikPozyczkaDefinicja')
    plb_Wyplata = relationship(u'PlbWyplata')


class KpProwizja(Base):
    __tablename__ = u'kp_Prowizja'

    pr_Id = Column(Integer, primary_key=True)
    pr_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    pr_SposobRozliczenia = Column(Integer, nullable=False, server_default=text("((1))"))
    pr_Data = Column(DateTime, nullable=False)
    pr_IdUmowyOPrace = Column(ForeignKey(u'plb_Umowa.up_Id'))
    pr_IdUmowyCywilnoprawnej = Column(ForeignKey(u'plb_UmowaCP.ucp_Id'))
    pr_IdStawkiProwizyjnej = Column(Integer, nullable=False)
    pr_Ilosc = Column(MONEY, nullable=False)
    pr_Wartosc = Column(MONEY, nullable=False)
    pr_IdDokRozlWyplata = Column(Integer)
    pr_IdDokRozlRachunek = Column(Integer)
    pr_DokumentRozliczajacyOpis = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    plb_UmowaCP = relationship(u'PlbUmowaCP')
    plb_Umowa = relationship(u'PlbUmowa')


class KprParametr(Base):
    __tablename__ = u'kpr_Parametr'

    kprp_Id = Column(Integer, primary_key=True)
    kprp_IdKategoriiPrz = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kprp_IdKategoriiZak = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kprp_IdKategoriiSN = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kprp_PrzepisywanieDtZdarzenia = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieKategorii = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieOpisu = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieKh = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_KontrolaUniqNrDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_WersjaKPiR = Column(Integer, nullable=False, server_default=text("((1))"))
    kprp_WersjaKPiRInfo = Column(Integer, nullable=False, server_default=text("((0))"))
    kprp_PrzepisywanieDtZdarzeniaGospodarczego = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_KosztyUzupelnianieDblClck = Column(BIT, nullable=False, server_default=text("((0))"))
    kprp_PrzepisywanieKorektyKUP = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_KorygowanieKUP = Column(BIT, nullable=False, server_default=text("((0))"))
    kprp_PrzepisywanieDatyZaplaty = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_BrakKontrahenta = Column(BIT, nullable=False, server_default=text("((0))"))
    kprp_KUPMsgBox = Column(BIT, nullable=False, server_default=text("((0))"))
    kprp_DomyslnaStawkaVATPrzychod = Column(Integer, server_default=text("((0))"))
    kprp_DomyslnaStawkaVATWydatek = Column(Integer, server_default=text("((0))"))
    kprp_PrzepisywaniePrzypadek = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieStawkaVat = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieTypOpisuBr = Column(BIT, nullable=False, server_default=text("((1))"))
    kprp_PrzepisywanieOpisBr = Column(BIT, nullable=False, server_default=text("((1))"))

    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='KprParametr.kprp_IdKategoriiPrz == SlKategoria.kat_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='KprParametr.kprp_IdKategoriiSN == SlKategoria.kat_Id')
    sl_Kategoria2 = relationship(u'SlKategoria', primaryjoin='KprParametr.kprp_IdKategoriiZak == SlKategoria.kat_Id')


class KprKsiega(Base):
    __tablename__ = u'kpr__Ksiega'
    __table_args__ = (
        Index(u'IX_kpr__Ksiega_Koszty', u'kpr_KorektaKUPIdDokKorygowany', u'kpr_KorektaKUPTyp'),
    )

    kpr_Id = Column(Integer, primary_key=True)
    kpr_NrDokumentu = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_DataZdarzenia = Column(DateTime, nullable=False)
    kpr_Rodzaj = Column(Integer, nullable=False)
    kpr_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    kpr_NazwaKh = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_NazwaPelnaKh = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_UlicaKh = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_MiastoKh = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_KodPocztowyKh = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_NIPKh = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kpr_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_KolPrzychSpTowUsl = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolPrzychPozostale = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolPrzychRazem = Column(MONEY)
    kpr_KolZakTowarow = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolZakKosztyUbocz = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolWydReprRekl = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolWydWynagr = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolWydPozostale = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolWydRazem = Column(MONEY)
    kpr_KolInne = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    kpr_KolUwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kpr_Zakupy = Column(MONEY)
    kpr_ZakupyWydatki = Column(MONEY)
    kpr_Dochod = Column(MONEY)
    kpr_Uniewazniony = Column(BIT, nullable=False, server_default=text("((0))"))
    kpr_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    kpr_IdObiektu = Column(Integer)
    kpr_Importowany = Column(BIT, nullable=False, server_default=text("((0))"))
    kpr_KorektaSN = Column(BIT, nullable=False, server_default=text("((0))"))
    kpr_IdDokImport = Column(Integer)
    kpr_TypDokImport = Column(Integer)
    kpr_IdOkresu = Column(ForeignKey(u'pd_Okres.okr_Id'), nullable=False)
    kpr_DataZdarzeniaGospodarczego = Column(DateTime, nullable=False)
    kpr_KorektaKUPTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    kpr_KorektaKUPTerminPlatnosci = Column(DateTime)
    kpr_KorektaKUPDataPlatnosci = Column(DateTime)
    kpr_KorektaKUPTerminKorekty = Column(DateTime)
    kpr_KorektaKUPIdDokKorygowany = Column(ForeignKey(u'kpr__Ksiega.kpr_Id'))
    kpr_KorektaKUPPlatnoscCzesciowa = Column(BIT, nullable=False, server_default=text("((0))"))
    kpr_KorektaKUPNrDokKorygowany = Column(String(30, u'Polish_CI_AS'))
    kpr_WlaczKorygowanieKUP = Column(BIT, nullable=False, server_default=text("((0))"))
    kpr_KorektaKUPDowodZaplaty = Column(String(30, u'Polish_CI_AS'))
    kpr_MalyPojazd = Column(Integer, nullable=False, server_default=text("((0))"))
    kpr_StawkaVAT = Column(Integer, server_default=text("((0))"))
    kpr_WersjaKPiR = Column(Integer, nullable=False, server_default=text("((1))"))
    kpr_KolBadaniaRozwoj = Column(MONEY, nullable=False, server_default=text("((0))"))
    kpr_TypOpisuKolBadaniaRozwoj = Column(Integer)
    kpr_OpisKolBadaniaRozwoj = Column(String(255, u'Polish_CI_AS'))

    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Okre = relationship(u'PdOkre')
    parent = relationship(u'KprKsiega', remote_side=[kpr_Id])


class KwParametr(Base):
    __tablename__ = u'kw_Parametr'

    kwpr_Id = Column(Integer, primary_key=True)
    kwpr_Nazwa1 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa2 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa3 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa4 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa5 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa6 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa7 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa8 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa9 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Nazwa10 = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwpr_Format1 = Column(Integer, nullable=False)
    kwpr_Format2 = Column(Integer, nullable=False)
    kwpr_Format3 = Column(Integer, nullable=False)
    kwpr_Format4 = Column(Integer, nullable=False)
    kwpr_Format5 = Column(Integer, nullable=False)
    kwpr_Format6 = Column(Integer, nullable=False)
    kwpr_Format7 = Column(Integer, nullable=False)
    kwpr_Format8 = Column(Integer, nullable=False)
    kwpr_Format9 = Column(Integer, nullable=False)
    kwpr_Format10 = Column(Integer, nullable=False)
    kwpr_BruttoDuze = Column(Integer, nullable=False)
    kwpr_BruttoMale = Column(Integer, nullable=False)
    kwpr_KUPRyczaltowe = Column(Integer, nullable=False)
    kwpr_KUPSkladniki = Column(Integer, nullable=False)
    kwpr_PodatekNaliczony = Column(Integer, nullable=False)
    kwpr_ZaliczkaNaPodatek = Column(Integer, nullable=False)
    kwpr_Netto = Column(Integer, nullable=False)
    kwpr_SklZdrOdliczana = Column(Integer, nullable=False)
    kwpr_SklZdrNieodliczana = Column(Integer, nullable=False)
    kwpr_SklEmPracIFilar = Column(Integer, nullable=False)
    kwpr_SklEmPracIIFilar = Column(Integer, nullable=False)
    kwpr_SklRentPrac = Column(Integer, nullable=False)
    kwpr_SklEmFirmy = Column(Integer, nullable=False)
    kwpr_SklRentFirmy = Column(Integer, nullable=False)
    kwpr_SklChorobowa = Column(Integer, nullable=False)
    kwpr_SklWypadkowa = Column(Integer, nullable=False)
    kwpr_FP = Column(Integer, nullable=False)
    kwpr_FGSP = Column(Integer, nullable=False)
    kwpr_PotraceniaNieopodatkowane = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_DodatkiNieopodatkowane = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_DoWyplatyRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_DoWyplatyPrzelewem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_DoWyplatyGotowka = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_SkladkiZUSRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_ZasilkiZUSRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_ZasilkiZUSOpodatkowane = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_ZasilkiZUSNieopodatkowane = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_SklZUSPoOdlZasilkow = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_SklZdrowotneRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_SklPracRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_SklFirmaRazem = Column(Integer, nullable=False, server_default=text("((0))"))
    kwpr_FEP = Column(Integer, nullable=False, server_default=text("((0))"))


class KwPozycja(Base):
    __tablename__ = u'kw_Pozycja'

    kkwp_Id = Column(Integer, primary_key=True)
    kkwp_IdKarty = Column(ForeignKey(u'kw__Karta.kkw_Id'), nullable=False)
    kkwp_Opis = Column(String(255, u'Polish_CI_AS'))
    kkwp_MPK = Column(ForeignKey(u'st_MPK.stm_Id'))
    kkwp_Zlecenie = Column(ForeignKey(u'zlp__Zlecenie.zlpz_Id'))
    kkwp_Wsp1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp4 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp5 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp6 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp7 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp8 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp9 = Column(MONEY, nullable=False, server_default=text("((0))"))
    kkwp_Wsp10 = Column(MONEY, nullable=False, server_default=text("((0))"))

    kw__Karta = relationship(u'KwKarta')
    st_MPK = relationship(u'StMPK')
    zlp__Zlecenie = relationship(u'ZlpZlecenie')


class KwKarta(Base):
    __tablename__ = u'kw__Karta'

    kkw_Id = Column(Integer, primary_key=True)
    kkw_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    kkw_Miesiac = Column(DateTime, nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')


t_log_OdrzLicencje = Table(
    u'log_OdrzLicencje', metadata,
    Column(u'ls_Date', DateTime, nullable=False),
    Column(u'ls_UserId', Integer, nullable=False),
    Column(u'ls_UserHost', Unicode(128), nullable=False),
    Column(u'ls_spid', SmallInteger, nullable=False),
    Column(u'ls_kpid', SmallInteger, nullable=False),
    Column(u'ls_blocked', SmallInteger, nullable=False),
    Column(u'ls_waittype', BINARY(2), nullable=False),
    Column(u'ls_waittime', BigInteger, nullable=False),
    Column(u'ls_lastwaittype', Unicode(32), nullable=False),
    Column(u'ls_waitresource', Unicode(256), nullable=False),
    Column(u'ls_dbid', SmallInteger, nullable=False),
    Column(u'ls_uid', SmallInteger),
    Column(u'ls_cpu', Integer, nullable=False),
    Column(u'ls_physical_io', BigInteger, nullable=False),
    Column(u'ls_memusage', Integer, nullable=False),
    Column(u'ls_login_time', DateTime, nullable=False),
    Column(u'ls_last_batch', DateTime, nullable=False),
    Column(u'ls_ecid', SmallInteger, nullable=False),
    Column(u'ls_open_tran', SmallInteger, nullable=False),
    Column(u'ls_status', Unicode(30), nullable=False),
    Column(u'ls_sid', BINARY(86), nullable=False),
    Column(u'ls_hostname', Unicode(128), nullable=False),
    Column(u'ls_program_name', Unicode(128), nullable=False),
    Column(u'ls_hostprocess', Unicode(10), nullable=False),
    Column(u'ls_cmd', Unicode(16), nullable=False),
    Column(u'ls_nt_domain', Unicode(128)),
    Column(u'ls_nt_username', Unicode(128)),
    Column(u'ls_net_address', Unicode(12), nullable=False),
    Column(u'ls_net_library', Unicode(12), nullable=False),
    Column(u'ls_loginame', Unicode(128), nullable=False),
    Column(u'ls_context_info', BINARY(128), nullable=False),
    Column(u'ls_sql_handle', BINARY(20), nullable=False),
    Column(u'ls_stmt_start', Integer, nullable=False),
    Column(u'ls_stmt_end', Integer, nullable=False)
)


class MkKorekta(Base):
    __tablename__ = u'mk_Korekta'

    kmk_Id = Column(Integer, primary_key=True)
    kmk_IdKoszt = Column(ForeignKey(u'mk_Koszt.mk_Id'), nullable=False)
    kmk_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kmk_Data = Column(DateTime, nullable=False)
    kmk_KwotaPrzedKorekta = Column(MONEY, nullable=False)
    kmk_Kwota = Column(MONEY, nullable=False)
    kmk_KwotaPoKorekcie = Column(MONEY, nullable=False)
    kmk_StatusKsiegowy = Column(Integer, nullable=False)
    kmk_IdKategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    kmk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')
    mk_Koszt = relationship(u'MkKoszt')


class MkKoszt(Base):
    __tablename__ = u'mk_Koszt'

    mk_Id = Column(Integer, primary_key=True)
    mk_Numer = Column(String(17, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mk_Data = Column(DateTime, nullable=False)
    mk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mk_DokZrodlowy = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mk_KwotaDokZrodl = Column(MONEY)
    mk_Kwota = Column(MONEY, nullable=False)
    mk_KwotaPoKorektach = Column(MONEY)
    mk_OkresOd = Column(DateTime)
    mk_OkresDo = Column(DateTime)
    mk_Interwal = Column(Integer, nullable=False, server_default=text("((1))"))
    mk_LiczbaRat = Column(Integer)
    mk_IdKategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    mk_IdMPK = Column(ForeignKey(u'st_MPK.stm_Id'))
    mk_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    mk_NrAnalityka = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mk_PlanRozliczenia = Column(BIT, nullable=False, server_default=text("((1))"))
    mk_Status = Column(Integer, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')
    st_MPK = relationship(u'StMPK')


class MkPrzesuniecie(Base):
    __tablename__ = u'mk_Przesuniecie'

    pmk_Id = Column(Integer, primary_key=True)
    pmk_IdKoszt = Column(ForeignKey(u'mk_Koszt.mk_Id'), nullable=False)
    pmk_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False)
    pmk_Data = Column(DateTime, nullable=False)
    pmk_IdMPK = Column(ForeignKey(u'st_MPK.stm_Id'), nullable=False)
    pmk_IdKategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    pmk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')
    mk_Koszt = relationship(u'MkKoszt')
    st_MPK = relationship(u'StMPK')


class MkRata(Base):
    __tablename__ = u'mk_Rata'

    rmk_Id = Column(Integer, primary_key=True)
    rmk_IdKoszt = Column(ForeignKey(u'mk_Koszt.mk_Id'), nullable=False)
    rmk_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rmk_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    rmk_Data = Column(DateTime, nullable=False)
    rmk_Kwota = Column(MONEY, nullable=False)
    rmk_IdKategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    rmk_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    rmk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_Kategoria = relationship(u'SlKategoria')
    mk_Koszt = relationship(u'MkKoszt')


t_nav_Parametry = Table(
    u'nav_Parametry', metadata,
    Column(u'nvp_Id', Integer, nullable=False),
    Column(u'nvp_LogowanieLicencji', BIT, nullable=False),
    Column(u'nvp_DymekDodaj', BIT, nullable=False),
    Column(u'nvp_DymekWczytaj', BIT, nullable=False),
    Column(u'nvp_DymekUsun', BIT, nullable=False),
    Column(u'nvp_DymekZapisz', BIT, nullable=False),
    Column(u'nvp_DymekDrukuj', BIT, nullable=False),
    Column(u'nvp_KolejnoscWzw', LargeBinary),
    Column(u'nvp_ProfilowanieKlientowStylGT', BIT, nullable=False, server_default=text("((0))"))
)


class NetInfo(Base):
    __tablename__ = u'net_Info'

    nei_Id = Column(Integer, primary_key=True)
    nei_OstatniePolaczenie = Column(DateTime)
    nei_WersjaProgramuNr = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_WersjaProgramuNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_WersjaProgramuPlatnaNr = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_WersjaProgramuPlatnaNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_KursyData = Column(DateTime)
    nei_KursyUdane = Column(DateTime)
    nei_WersjaParametrow = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_Lic = Column(Text(collation=u'Polish_CI_AS'))
    nei_IdOstatniejWiadomosci = Column(Integer, nullable=False, server_default=text("((-1))"))
    nei_ZnanyNIP = Column(BIT, nullable=False, server_default=text("((0))"))
    nei_OstatnieUdanePolaczenie = Column(DateTime)
    nei_OstatnieUdaneKomputer = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nei_OstatnieNieudanePolaczenie = Column(DateTime)
    nei_OstatnieNieudaneKomputer = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class NetParametr(Base):
    __tablename__ = u'net_Parametr'

    nep_Id = Column(Integer, primary_key=True)
    nep_Zainicjowane = Column(BIT, nullable=False, server_default=text("((0))"))
    nep_AutoAktualizacja = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_Odstep = Column(Integer, nullable=False, server_default=text("((100))"))
    nep_Zgoda = Column(BIT, nullable=False, server_default=text("((0))"))
    nep_OdswiezLicencje = Column(BIT, nullable=False, server_default=text("((0))"))


class NetParametrInd(Base):
    __tablename__ = u'net_ParametrInd'

    nep_Id = Column(Integer, primary_key=True)
    nep_PowiadomWersjaProgramu = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_PowiadomWersjaParametrow = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_PowiadomKursy = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_PowiadomLicWygasanie = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_PowiadomLicRozbieznosci = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_InfoTechniczne = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_InfoMerytoryczne = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_InfoMarketingowe = Column(BIT, nullable=False, server_default=text("((1))"))
    nep_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    nep_PokazujWiadomosciPrzez = Column(Integer, nullable=False, server_default=text("((-1))"))

    par__Ewid = relationship(u'ParEwid')


class NetParametrInst(Base):
    __tablename__ = u'net_ParametrInst'

    npi_Id = Column(Integer, primary_key=True)
    npi_PobierajAutomatycznie = Column(BIT, nullable=False, server_default=text("((0))"))
    npi_ProponujInstalacje = Column(BIT, nullable=False, server_default=text("((0))"))
    npi_InstalacjaSieciowa = Column(BIT, nullable=False, server_default=text("((0))"))
    npi_UsuwajZainstalowane = Column(BIT, nullable=False, server_default=text("((0))"))
    npi_Sciezka = Column(String(512, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    npi_WybranyKomputer = Column(BIT, nullable=False, server_default=text("((0))"))
    npi_Komputer = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    npi_NieProponujWersji = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class NetParametrInstKomputer(Base):
    __tablename__ = u'net_ParametrInstKomputer'

    npk_Komputer = Column(String(128, u'Polish_CI_AS'), primary_key=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    npk_Lokalnie = Column(BIT, nullable=False, server_default=text("((0))"))


class NetParametrKomputer(Base):
    __tablename__ = u'net_ParametrKomputer'

    nko_Komputer = Column(String(50, u'Polish_CI_AS'), primary_key=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nko_AutoAktualizacja = Column(BIT, nullable=False, server_default=text("((0))"))


class NetWiadomosc(Base):
    __tablename__ = u'net_Wiadomosc'

    new_Id = Column(Integer, primary_key=True)
    new_ZrodloTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    new_ZrodloNIP = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    new_ZrodloUzytkownik = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    new_Adresaci = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    new_Typ = Column(Integer, nullable=False)
    new_Tytul = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    new_Tresc = Column(String(7000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    new_Data = Column(DateTime)


class NetWiadomoscBufor(Base):
    __tablename__ = u'net_WiadomoscBufor'

    neb_Id = Column(Integer, primary_key=True)
    neb_Data = Column(DateTime)
    neb_WersjaMin = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    neb_WersjaMax = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    neb_Wiadomosc = Column(LargeBinary, nullable=False)


class NetWiadomoscCache(Base):
    __tablename__ = u'net_WiadomoscCache'

    nec_Id = Column(Integer, primary_key=True)
    nec_Typ = Column(Integer, nullable=False)
    nec_Program = Column(Integer, nullable=False)
    nec_Extra1 = Column(Integer, nullable=False)
    nec_Extra2 = Column(Integer, nullable=False)


class NetWiadomoscFlaga(Base):
    __tablename__ = u'net_WiadomoscFlaga'

    nef_Id = Column(Integer, primary_key=True)
    nef_IdWiadomosci = Column(Integer, nullable=False)
    nef_IdUzytkownika = Column(Integer, nullable=False)
    nef_DataPrzypomnienia = Column(DateTime)
    nef_WersjaOdczytania = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nef_Pobrano = Column(BIT, nullable=False, server_default=text("((0))"))


class NetWiadomoscWersja(Base):
    __tablename__ = u'net_WiadomoscWersja'

    nev_Id = Column(Integer, primary_key=True)
    nev_Numer = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nev_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nev_Typ = Column(Integer, nullable=False)


class NetWiadomoscZalacznik(Base):
    __tablename__ = u'net_WiadomoscZalacznik'

    nez_Id = Column(Integer, primary_key=True)
    nez_IdWiadomosci = Column(Integer, nullable=False)
    nez_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nez_URL = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class NkPoleSzablonu(Base):
    __tablename__ = u'nk_PoleSzablonu'

    nd_Id = Column(Integer, primary_key=True)
    nd_NazwaPolaDanych = Column(String(50, u'Polish_CI_AS'), nullable=False)
    nd_IdSzablonu = Column(ForeignKey(u'nk_Szablon.nu_Id'), nullable=False)
    nd_Opis = Column(String(100, u'Polish_CI_AS'), nullable=False)
    nd_OpisPo = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nd_Czcionka = Column(String(70, u'Polish_CI_AS'), nullable=False)
    nd_x = Column(Integer, nullable=False)
    nd_y = Column(Integer, nullable=False)
    nd_Szer = Column(Integer, nullable=False)
    nd_Wys = Column(Integer, nullable=False)
    nd_CzyNumer = Column(BIT, nullable=False)
    nd_CzyUsuwacZera = Column(BIT, nullable=False)
    nd_CzyZaokr = Column(BIT, nullable=False)
    nd_IlePoPrzec = Column(Integer, nullable=False)
    nd_CzyDuzaJM = Column(Integer, nullable=False, server_default=text("((0))"))
    nd_Wyrownanie = Column(Integer, nullable=False, server_default=text("((0))"))
    nd_Slownie = Column(BIT, nullable=False, server_default=text("((0))"))

    nk_Szablon = relationship(u'NkSzablon')


class NkSzablon(Base):
    __tablename__ = u'nk_Szablon'

    nu_Id = Column(Integer, primary_key=True)
    nu_IdZrodlaDanych = Column(ForeignKey(u'nk_ZrodloDanych.nzr_Id'), nullable=False)
    nu_IdWzorca = Column(ForeignKey(u'nk_UkladWzorcowy.nuw_Id'))
    nu_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nu_SzerStrony = Column(Integer, nullable=False)
    nu_WysStrony = Column(Integer, nullable=False)
    nu_MargLewy = Column(Integer, nullable=False)
    nu_MargGorny = Column(Integer, nullable=False)
    nu_SzerNakl = Column(Integer, nullable=False)
    nu_WysNakl = Column(Integer, nullable=False)
    nu_SzerOdstep = Column(Integer, nullable=False)
    nu_WysOdstep = Column(Integer, nullable=False)
    nu_Kolumny = Column(Integer, nullable=False)
    nu_Wiersze = Column(Integer, nullable=False)

    nk_UkladWzorcowy = relationship(u'NkUkladWzorcowy')
    nk_ZrodloDanych = relationship(u'NkZrodloDanych')


class NkUkladWzorcowy(Base):
    __tablename__ = u'nk_UkladWzorcowy'

    nuw_Id = Column(Integer, primary_key=True)
    nuw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    nuw_SzerStrony = Column(Integer, nullable=False)
    nuw_WysStrony = Column(Integer, nullable=False)
    nuw_MargLewy = Column(Integer, nullable=False)
    nuw_MargGorny = Column(Integer, nullable=False)
    nuw_SzerNakl = Column(Integer, nullable=False)
    nuw_WysNakl = Column(Integer, nullable=False)
    nuw_SzerOdstep = Column(Integer, nullable=False)
    nuw_WysOdstep = Column(Integer, nullable=False)
    nuw_Kolumny = Column(Integer, nullable=False)
    nuw_Wiersze = Column(Integer, nullable=False)


class NkZestawDanych(Base):
    __tablename__ = u'nk_ZestawDanych'

    nzw_Id = Column(Integer, primary_key=True)
    nzw_IdZrodlaDanych = Column(ForeignKey(u'nk_ZrodloDanych.nzr_Id'), nullable=False)
    nzw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nzw_Kontrolki = Column(String(2000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nzw_Lista = Column(BIT)
    nzw_BinListInfo = Column(LargeBinary)
    nzw_BinColumns = Column(LargeBinary)
    nzw_BinTables = Column(LargeBinary)
    nzw_BinVisibility = Column(LargeBinary)

    nk_ZrodloDanych = relationship(u'NkZrodloDanych')


class NkZrodloDanych(Base):
    __tablename__ = u'nk_ZrodloDanych'

    nzr_Id = Column(Integer, primary_key=True)
    nzr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    nzr_Select = Column(String(8000, u'Polish_CI_AS'), nullable=False)
    nzr_Widoczne = Column(String(200, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nzr_Subiekt = Column(BIT, nullable=False, server_default=text("((1))"))
    nzr_Rewizor = Column(BIT, nullable=False, server_default=text("((0))"))
    nzr_Rachmistrz = Column(BIT, nullable=False, server_default=text("((0))"))
    nzr_Gratyfikant = Column(BIT, nullable=False, server_default=text("((0))"))
    nzr_Gestor = Column(BIT, nullable=False, server_default=text("((0))"))
    nzr_OrderBy = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nzr_Sort = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class NotNotatka(Base):
    __tablename__ = u'not_Notatka'

    nt_Id = Column(Integer, primary_key=True)
    nt_IdObiektu = Column(Integer, nullable=False)
    nt_TypObiektu = Column(Integer, nullable=False)
    nt_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    nt_Tresc = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nt_Osoba = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nt_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    nt_TrescRTF = Column(LargeBinary, nullable=False)


class NrNrRez(Base):
    __tablename__ = u'nr_NrRez'

    rez_Id = Column(Integer, primary_key=True)
    rez_RejId = Column(Integer)
    rez_Typ = Column(Integer, nullable=False)
    rez_Roz = Column(String(3, u'Polish_CI_AS'))
    rez_DataWyst = Column(DateTime, nullable=False)
    rez_Nr = Column(Integer, nullable=False)
    rez_DefiniowalnyId = Column(Integer)


class NrNrStart(Base):
    __tablename__ = u'nr_NrStart'

    ns_Id = Column(Integer, primary_key=True)
    ns_Typ = Column(Integer, nullable=False)
    ns_Rok = Column(Integer)
    ns_Miesiac = Column(Integer)
    ns_IdRokuObr = Column(Integer)
    ns_RejId = Column(Integer)
    ns_Granica = Column(Integer, nullable=False)
    ns_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    ns_DefiniowalnyId = Column(Integer, nullable=False, server_default=text("((0))"))


class NrNrStartRK(Base):
    __tablename__ = u'nr_NrStartRK'
    __table_args__ = (
        Index(u'IX_nr_NrStartRK', u'nsrk_IdRoku', u'nsrk_IdRejestru', unique=True),
    )

    nsrk_Id = Column(Integer, primary_key=True)
    nsrk_IdNrStart = Column(ForeignKey(u'nr_NrStart.ns_Id'), nullable=False)
    nsrk_IdRoku = Column(Integer, nullable=False)
    nsrk_IdRejestru = Column(ForeignKey(u'sl_RejestrKsiegowy.rks_Id'), nullable=False)
    nsrk_Granica = Column(Integer)

    nr_NrStart = relationship(u'NrNrStart')
    sl_RejestrKsiegowy = relationship(u'SlRejestrKsiegowy')


class NrParametr(Base):
    __tablename__ = u'nr_Parametr'

    np_Typ = Column(Integer, primary_key=True, nullable=False)
    np_NrRoz = Column(BIT, nullable=False, server_default=text("((0))"))
    np_NrSymbolRej = Column(BIT, nullable=False, server_default=text("((0))"))
    np_NrMiesiac = Column(BIT, nullable=False, server_default=text("((0))"))
    np_NrRok = Column(BIT, nullable=False, server_default=text("((0))"))
    np_NrLuka = Column(Integer, nullable=False, server_default=text("((0))"))
    np_NrRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    np_NrSymbolUzyt = Column(BIT, nullable=False, server_default=text("((0))"))
    np_DefiniowalnyId = Column(Integer, primary_key=True, nullable=False, server_default=text("((0))"))


class NzCesja(Base):
    __tablename__ = u'nz_Cesja'

    nzc_Id = Column(Integer, primary_key=True)
    nzc_Opis = Column(String(255, u'Polish_CI_AS'))
    nzc_DataUtworzenia = Column(DateTime, nullable=False)
    nzc_Wartosc = Column(MONEY, nullable=False)
    nzc_Kierunek = Column(Integer, nullable=False)


class NzCesjaRozrachunki(Base):
    __tablename__ = u'nz_CesjaRozrachunki'

    nzcr_Id = Column(Integer, primary_key=True)
    nzcr_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    nzcr_IdCesji = Column(ForeignKey(u'nz_Cesja.nzc_Id'), nullable=False)
    nzcr_Typ = Column(Integer, nullable=False)

    nz_Cesja = relationship(u'NzCesja')
    nz__Finanse = relationship(u'NzFinanse')


class NzFinanseHistoriaWindykacji(Base):
    __tablename__ = u'nz_FinanseHistoriaWindykacji'

    hw_Id = Column(Integer, primary_key=True)
    hw_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    hw_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    hw_Opis = Column(String(4000, u'Polish_CI_AS'))
    hw_Typ = Column(ForeignKey(u'nz_TypZdarzeniaWindykacyjnego.wt_Id'), nullable=False, server_default=text("((1))"))

    nz__Finanse = relationship(u'NzFinanse')
    nz_TypZdarzeniaWindykacyjnego = relationship(u'NzTypZdarzeniaWindykacyjnego')


class NzFinanseNota(Base):
    __tablename__ = u'nz_FinanseNota'

    no_Id = Column(Integer, primary_key=True)
    no_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    no_IdNoty = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    no_WartoscWalutaOdsetek = Column(MONEY, nullable=False)
    no_Opis = Column(String(2048, u'Polish_CI_AS'))
    no_Data = Column(DateTime, nullable=False)
    no_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    no_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))

    sl_Kategoria = relationship(u'SlKategoria')
    nz__Finanse = relationship(u'NzFinanse', primaryjoin='NzFinanseNota.no_IdNoty == NzFinanse.nzf_Id')
    nz__Finanse1 = relationship(u'NzFinanse', primaryjoin='NzFinanseNota.no_IdRozrachunku == NzFinanse.nzf_Id')


class NzFinanseNotaPozycja(Base):
    __tablename__ = u'nz_FinanseNotaPozycja'

    nzt_Id = Column(Integer, primary_key=True)
    nzt_DataOd = Column(DateTime)
    nzt_DataDo = Column(DateTime)
    nzt_WartoscRozrachunku = Column(MONEY)
    nzt_LiczbaDni = Column(Integer)
    nzt_Stopa = Column(MONEY)
    nzt_Odsetki = Column(MONEY)
    nzt_IdNoty = Column(ForeignKey(u'nz__Finanse.nzf_Id'))

    nz__Finanse = relationship(u'NzFinanse')


class NzFinanseSplata(Base):
    __tablename__ = u'nz_FinanseSplata'

    nzs_Id = Column(Integer, primary_key=True)
    nzs_IdSplaty = Column(ForeignKey(u'nz__Finanse.nzf_Id'), index=True)
    nzs_IdDlugu = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False, index=True)
    nzs_WartoscWaluta = Column(MONEY, nullable=False)
    nzs_IdWaluty = Column(String(3, u'Polish_CI_AS'), nullable=False)
    nzs_Data = Column(DateTime, nullable=False)
    nzs_Typ = Column(Integer, nullable=False)
    nzs_IdKompensaty = Column(Integer)
    nzs_Auto = Column(BIT, nullable=False, server_default=text("((0))"))
    nzs_Przedplata = Column(BIT, nullable=False, server_default=text("((0))"))
    nzs_WartoscWalutaDlugu = Column(MONEY, nullable=False)
    nzs_IdWalutyDlugu = Column(String(3, u'Polish_CI_AS'), nullable=False)
    nzs_WartoscSplatyPLN = Column(MONEY)
    nzs_WartoscDluguPLN = Column(MONEY)
    nzs_WylaczBadanieZgodnosci = Column(BIT, nullable=False, server_default=text("((0))"))
    nzs_MetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))
    nzs_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    nzs_AutoPrzeliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    nzs_StatusKsieg = Column(Integer, nullable=False, server_default=text("((0))"))
    nzs_BrakKontroliSumy = Column(BIT, nullable=False, server_default=text("((0))"))
    nzs_IdTransakcjiVat = Column(Integer, nullable=False, server_default=text("((0))"))
    nzs_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))

    nz__Finanse = relationship(u'NzFinanse', primaryjoin='NzFinanseSplata.nzs_IdDlugu == NzFinanse.nzf_Id')
    sl_Kategoria = relationship(u'SlKategoria')
    nz__Finanse1 = relationship(u'NzFinanse', primaryjoin='NzFinanseSplata.nzs_IdSplaty == NzFinanse.nzf_Id')


class NzFinanseSplataVat(Base):
    __tablename__ = u'nz_FinanseSplataVat'

    nzv_Id = Column(Integer, primary_key=True)
    nzv_IdFinSplata = Column(ForeignKey(u'nz_FinanseSplata.nzs_Id'), nullable=False)
    nzv_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'), nullable=False)
    nzv_Netto = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzv_KwotaVAT = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzv_Brutto = Column(MONEY, nullable=False, server_default=text("((0))"))

    nz_FinanseSplata = relationship(u'NzFinanseSplata')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class NzKompensata(Base):
    __tablename__ = u'nz_Kompensata'

    nzk_Id = Column(Integer, primary_key=True)
    nzk_Status = Column(Integer, nullable=False)
    nzk_DataWystawienia = Column(DateTime, nullable=False)
    nzk_DataRealizacji = Column(DateTime)
    nzk_Numer = Column(Integer, nullable=False)
    nzk_NrPelny = Column(String(50, u'Polish_CI_AS'))
    nzk_IdObiektu = Column(Integer, nullable=False)
    nzk_TypObiektu = Column(Integer, nullable=False)
    nzk_IdKategorii = Column(Integer)
    nzk_IdHistoriiAdresu = Column(Integer, nullable=False)
    nzk_Wartosc = Column(MONEY, nullable=False)
    nzk_WartoscWaluta = Column(MONEY, nullable=False)
    nzk_Waluta = Column(String(3, u'Polish_CI_AS'), nullable=False)
    nzk_IdPersonelu = Column(Integer, nullable=False)
    nzk_Import = Column(Integer, nullable=False)
    nzk_Program = Column(Integer, nullable=False)


class NzKompensataPozycja(Base):
    __tablename__ = u'nz_KompensataPozycja'

    nzp_Id = Column(Integer, primary_key=True)
    nzp_IdKompensaty = Column(ForeignKey(u'nz_Kompensata.nzk_Id'), nullable=False)
    nzp_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    nzp_Kwota = Column(MONEY, nullable=False)

    nz_Kompensata = relationship(u'NzKompensata')
    nz__Finanse = relationship(u'NzFinanse')


class NzOdsetkiKarne(Base):
    __tablename__ = u'nz_OdsetkiKarne'

    os_Id = Column(Integer, primary_key=True)
    os_DataOd = Column(DateTime, nullable=False)
    os_Stopa = Column(MONEY, nullable=False)


class NzRaportKasowy(Base):
    __tablename__ = u'nz_RaportKasowy'

    rk_Id = Column(Integer, primary_key=True)
    rk_IdKasy = Column(ForeignKey(u'dks_Kasa.ks_Id'), nullable=False)
    rk_Program = Column(Integer, server_default=text("((8))"))
    rk_IdUtworzyl = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    rk_Nr = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rk_Zatwierdzony = Column(BIT, nullable=False, server_default=text("((0))"))
    rk_IdZatwierdzil = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    rk_DataZatwierdzenia = Column(DateTime)
    rk_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    rk_Data = Column(DateTime, nullable=False)
    rk_OkresOd = Column(DateTime, nullable=False)
    rk_OkresDo = Column(DateTime, nullable=False)
    rk_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    rk_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    dks_Kasa = relationship(u'DksKasa')
    sl_Kategoria = relationship(u'SlKategoria')
    pd_Uzytkownik = relationship(u'PdUzytkownik', primaryjoin='NzRaportKasowy.rk_IdUtworzyl == PdUzytkownik.uz_Id')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', primaryjoin='NzRaportKasowy.rk_IdZatwierdzil == PdUzytkownik.uz_Id')


class NzRaportKasowyDokumentKasowy(Base):
    __tablename__ = u'nz_RaportKasowyDokumentKasowy'

    rkd_Id = Column(Integer, primary_key=True)
    rkd_IdRK = Column(ForeignKey(u'nz_RaportKasowy.rk_Id'), nullable=False)
    rkd_IdDK = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    rkd_Korekta = Column(BIT, nullable=False, server_default=text("((0))"))
    rkd_Tytulem = Column(String(144, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    nz__Finanse = relationship(u'NzFinanse')
    nz_RaportKasowy = relationship(u'NzRaportKasowy')


class NzRaportKasowyStan(Base):
    __tablename__ = u'nz_RaportKasowyStan'

    rks_Id = Column(Integer, primary_key=True)
    rks_IdRaportu = Column(ForeignKey(u'nz_RaportKasowy.rk_Id'), nullable=False)
    rks_Waluta = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rks_StanPoczatkowy = Column(MONEY, nullable=False, server_default=text("((0))"))
    rks_Saldo = Column(MONEY, nullable=False, server_default=text("((0))"))

    nz_RaportKasowy = relationship(u'NzRaportKasowy')
    sl_Waluta = relationship(u'SlWaluta')


class NzRozDekret(Base):
    __tablename__ = u'nz_RozDekret'

    nzd_IdDekretu = Column(ForeignKey(u'dkr_Pozycja.dko_Id'), primary_key=True, nullable=False, index=True)
    nzd_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), primary_key=True, nullable=False, index=True)
    nzd_IdRoku = Column(Integer, primary_key=True, nullable=False)
    nzd_Status = Column(Integer, primary_key=True, nullable=False, server_default=text("((1))"))
    nzd_Pomniejsza = Column(BIT)

    dkr_Pozycja = relationship(u'DkrPozycja')
    nz__Finanse = relationship(u'NzFinanse')


class NzRozniceLog(Base):
    __tablename__ = u'nz_RozniceLog'

    rkl_Id = Column(Integer, primary_key=True)
    rkl_DataOd = Column(DateTime, nullable=False)
    rkl_DataDo = Column(DateTime, nullable=False)


t_nz_SposobNaliczeniaOdsetek = Table(
    u'nz_SposobNaliczeniaOdsetek', metadata,
    Column(u'sr_DataOd', DateTime),
    Column(u'sr_DataDo', DateTime),
    Column(u'sr_WartoscRozrachunku', MONEY),
    Column(u'sr_LiczbaDni', Integer),
    Column(u'sr_Stopa', MONEY),
    Column(u'sr_Odsetki', MONEY),
    Column(u'sr_IdRozrachunku', Integer)
)


class NzTypZdarzeniaWindykacyjnego(Base):
    __tablename__ = u'nz_TypZdarzeniaWindykacyjnego'

    wt_Id = Column(Integer, primary_key=True)
    wt_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False)
    wt_Ponaglenie = Column(BIT, nullable=False, server_default=text("((0))"))


class NzWyciagBankowy(Base):
    __tablename__ = u'nz_WyciagBankowy'

    wb_Id = Column(Integer, primary_key=True)
    wb_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    wb_Program = Column(Integer, server_default=text("((8))"))
    wb_IdUtworzyl = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    wb_Nr = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wb_Zatwierdzony = Column(BIT, nullable=False, server_default=text("((0))"))
    wb_IdZatwierdzil = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    wb_DataZatwierdzenia = Column(DateTime)
    wb_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    wb_Data = Column(DateTime, nullable=False)
    wb_OkresOd = Column(DateTime, nullable=False)
    wb_OkresDo = Column(DateTime, nullable=False)
    wb_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    wb_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wb_SaldoPoczatkowe = Column(MONEY, nullable=False, server_default=text("((0))"))
    wb_SaldoKoncowe = Column(MONEY, nullable=False)
    wb_IdWyciaguHB = Column(ForeignKey(u'hb_NaglowekIStopka.hb_IdNaglowek'))

    sl_Kategoria = relationship(u'SlKategoria')
    rb__RachBankowy = relationship(u'RbRachBankowy')
    pd_Uzytkownik = relationship(u'PdUzytkownik', primaryjoin='NzWyciagBankowy.wb_IdUtworzyl == PdUzytkownik.uz_Id')
    hb_NaglowekIStopka = relationship(u'HbNaglowekIStopka')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', primaryjoin='NzWyciagBankowy.wb_IdZatwierdzil == PdUzytkownik.uz_Id')


class NzWyciagBankowyOperacjaBankowa(Base):
    __tablename__ = u'nz_WyciagBankowyOperacjaBankowa'

    wbo_Id = Column(Integer, primary_key=True)
    wbo_IdWB = Column(ForeignKey(u'nz_WyciagBankowy.wb_Id'), nullable=False)
    wbo_IdOB = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    wbo_Tytulem = Column(String(144, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    nz__Finanse = relationship(u'NzFinanse')
    nz_WyciagBankowy = relationship(u'NzWyciagBankowy')


class NzFinanse(Base):
    __tablename__ = u'nz__Finanse'
    __table_args__ = (
        Index(u'IX_nz__Finanse', u'nzf_IdDokumentAuto', u'nzf_Podtyp'),
        Index(u'IX_nz__Finanse_3', u'nzf_Data', u'nzf_Typ', u'nzf_IdKasy', u'nzf_Numer'),
        Index(u'IX_nz__Finanse_1', u'nzf_TypObiektu', u'nzf_IdObiektu')
    )

    nzf_Id = Column(Integer, primary_key=True)
    nzf_Data = Column(DateTime, nullable=False, index=True)
    nzf_TerminPlatnosci = Column(DateTime)
    nzf_Typ = Column(Integer, nullable=False)
    nzf_WartoscPierwotna = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_WartoscPierwotnaWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_Wartosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_WartoscWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_Splata = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_SplataWaluta = Column(MONEY, nullable=False, server_default=text("((0))"))
    nzf_IdWaluty = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("('PLN')"))
    nzf_Kurs = Column(MONEY, nullable=False, server_default=text("((1))"))
    nzf_RodzajKursu = Column(Integer, nullable=False, server_default=text("((0))"))
    nzf_Tytulem = Column(String(144, u'Polish_CI_AS'))
    nzf_TypOdsetek = Column(Integer)
    nzf_StopaOdsetek = Column(MONEY, server_default=text("((0))"))
    nzf_DataOstatniejSplaty = Column(DateTime)
    nzf_IdDokumentAuto = Column(ForeignKey(u'dok__Dokument.dok_Id'))
    nzf_IdAdresu = Column(ForeignKey(u'adr__Ewid.adr_Id'))
    nzf_IdHistoriiAdresu = Column(ForeignKey(u'adr_Historia.adrh_Id'))
    nzf_IdObiektu = Column(Integer)
    nzf_TypObiektu = Column(Integer, nullable=False)
    nzf_Status = Column(Integer, nullable=False, server_default=text("((1))"))
    nzf_PRB = Column(String(50, u'Polish_CI_AS'))
    nzf_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    nzf_IdWystawil = Column(Integer, nullable=False)
    nzf_Odebral = Column(String(255, u'Polish_CI_AS'))
    nzf_Wystawil = Column(String(40, u'Polish_CI_AS'))
    nzf_Przeniesiony = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Nota = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Podtyp = Column(Integer)
    nzf_Zrodlo = Column(Integer)
    nzf_Program = Column(Integer, server_default=text("((8))"))
    nzf_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'))
    nzf_Powiazanie = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Korekta = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Transakcja = Column(String(144, u'Polish_CI_AS'))
    nzf_IdKasy = Column(ForeignKey(u'dks_Kasa.ks_Id'))
    nzf_Numer = Column(Integer, index=True)
    nzf_NumerPelny = Column(String(144, u'Polish_CI_AS'))
    nzf_Import = Column(Integer, server_default=text("((0))"))
    nzf_Opis = Column(String(255, u'Polish_CI_AS'))
    nzf_GenerujTytulem = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Zaliczka = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_DlaNieznany = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'))
    nzf_IdRachunkuHist = Column(ForeignKey(u'rb_RachBankowyHistoria.rbh_Id'))
    nzf_NumerWyciagu = Column(String(50, u'Polish_CI_AS'))
    nzf_DataUzgodnienia = Column(DateTime)
    nzf_WyslanaHB = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Wydrukowana = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_ObslugaRachunku = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_Gotowkowa = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_IdRachObiekt = Column(Integer)
    nzf_IdRachObiektHist = Column(Integer)
    nzf_TypPrzelewu = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("('N')"))
    nzf_ZUSPodIdentyfikator = Column(String(14, u'Polish_CI_AS'))
    nzf_ZUSPodTypIdentyfikatora = Column(String(1, u'Polish_CI_AS'))
    nzf_ZUSTypWplaty = Column(String(1, u'Polish_CI_AS'))
    nzf_ZUSDeklaracja = Column(String(6, u'Polish_CI_AS'))
    nzf_ZUSNrDeklaracji = Column(String(2, u'Polish_CI_AS'))
    nzf_PodSymbol = Column(String(6, u'Polish_CI_AS'))
    nzf_PodIdentyfikacjaZobowiazania = Column(String(25, u'Polish_CI_AS'))
    nzf_PodOkres = Column(String(7, u'Polish_CI_AS'))
    nzf_Transfer = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_ZUSNrDecyzji = Column(String(50, u'Polish_CI_AS'))
    nzf_IdRozliczenia = Column(Integer, index=True)
    nzf_Flaga = Column(Integer)
    nzf_FlagaZmianaPersonelId = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    nzf_FlagaZmianaCzas = Column(DateTime)
    nzf_DataKursu = Column(DateTime)
    nzf_IdBanku = Column(ForeignKey(u'sl_WalutaBank.wbn_ID'))
    nzf_LiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    nzf_RodzajSplaty = Column(Integer)
    nzf_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'), server_default=text("(NULL)"))
    nzf_TypKorekty = Column(Integer, server_default=text("(NULL)"))
    nzf_MetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))
    nzf_IdTransakcjiVat = Column(Integer, nullable=False, server_default=text("((0))"))
    nzf_IzbaCelna = Column(BIT, nullable=False, server_default=text("((0))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik')
    adr__Ewid = relationship(u'AdrEwid')
    sl_WalutaBank = relationship(u'SlWalutaBank')
    dok__Dokument = relationship(u'DokDokument')
    adr_Historia = relationship(u'AdrHistoria')
    dks_Kasa = relationship(u'DksKasa')
    sl_Kategoria = relationship(u'SlKategoria')
    rb__RachBankowy = relationship(u'RbRachBankowy')
    rb_RachBankowyHistoria = relationship(u'RbRachBankowyHistoria')
    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    parent = relationship(u'NzFinanse', remote_side=[nzf_Id])
    sl_Waluta = relationship(u'SlWaluta')


class ObPowiazane(Base):
    __tablename__ = u'ob_Powiazane'

    op_Id = Column(Integer, primary_key=True)
    op_TypWskazywanego = Column(Integer, nullable=False)
    op_OpisTypuWskazywanego = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    op_IdWskazywanego = Column(Integer, nullable=False)
    op_OpisObiektu = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    op_TypOb = Column(Integer, nullable=False)
    op_OpisTypuOb = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    op_IdOb = Column(Integer, nullable=False)
    op_OpisOb = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    op_OpisPowiazania = Column(Unicode(255), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class OdwOdWykSzablon(Base):
    __tablename__ = u'odw_OdWykSzablon'

    odw_Id = Column(Integer, primary_key=True)
    odw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    odw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    odw_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    odw_ZapytanieSQL = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    odw_TypOdWyk = Column(Integer, nullable=False, server_default=text("((0))"))


class OdwOdWykTemp(Base):
    __tablename__ = u'odw_OdWykTemp'

    odwt_Id = Column(Integer, primary_key=True)
    odwt_DokId = Column(Integer, nullable=False)
    odwt_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


t_par_EwidProfil = Table(
    u'par_EwidProfil', metadata,
    Column(u'pep_IdObiektu', ForeignKey(u'par__Ewid.pe_Id'), primary_key=True, nullable=False),
    Column(u'pep_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class ParTyp(Base):
    __tablename__ = u'par_Typ'

    pt_Id = Column(Integer, primary_key=True)
    pt_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pt_Indywidualizowalny = Column(BIT, nullable=False, server_default=text("((1))"))
    pt_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pt_Programy = Column(Integer, nullable=False, server_default=text("(0xFFFFFFFF)"))
    pt_ProgId = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pt_ProgIdCtx = Column(Integer)
    pt_AppObjId = Column(Integer, nullable=False)
    pt_Ukryte = Column(BIT, nullable=False, server_default=text("((0))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'par_TypProfil')


t_par_TypProfil = Table(
    u'par_TypProfil', metadata,
    Column(u'ptp_IdObiektu', ForeignKey(u'par_Typ.pt_Id'), primary_key=True, nullable=False),
    Column(u'ptp_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class ParEwid(Base):
    __tablename__ = u'par__Ewid'

    pe_Id = Column(Integer, primary_key=True)
    pe_IdTypu = Column(ForeignKey(u'par_Typ.pt_Id'), nullable=False)
    pe_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pe_Domyslne = Column(BIT, nullable=False, server_default=text("((0))"))

    par_Typ = relationship(u'ParTyp')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'par_EwidProfil')


class PdBlokada(Base):
    __tablename__ = u'pd_Blokada'

    bl_Id = Column(Integer, primary_key=True)
    bl_BlokadaSubiekt = Column(DateTime)
    bl_BlokadaRew = Column(DateTime)
    bl_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), nullable=False, unique=True)
    bl_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    bl_Offset = Column(Integer, nullable=False, server_default=text("((0))"))
    bl_DataQuattro = Column(DateTime)

    par__Ewid = relationship(u'ParEwid')


class PdBlokadaObiekt(Base):
    __tablename__ = u'pd_BlokadaObiekt'

    blo_Id = Column(Integer, primary_key=True)
    blo_ParamEwidId = Column(ForeignKey(u'pd_Blokada.bl_ParamEwidId'), nullable=False)
    blo_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    blo_Offset = Column(Integer, nullable=False, server_default=text("((0))"))
    blo_DataQuattro = Column(DateTime)
    blo_TypObiektu = Column(Integer, nullable=False)
    blo_TypObiektuEx = Column(Integer, nullable=False, server_default=text("((0))"))
    blo_Data = Column(DateTime)
    blo_DataRew = Column(DateTime)

    pd_Blokada = relationship(u'PdBlokada')


class PdBlokadaObiektGrupa(Base):
    __tablename__ = u'pd_BlokadaObiektGrupa'

    bogr_Id = Column(Integer, primary_key=True)
    bogr_TypObiektu = Column(Integer, nullable=False)
    bogr_TypObiektuEx = Column(Integer, nullable=False)
    bogr_IdGrupy = Column(ForeignKey(u'sl_GrupaBlokadyObiektu.grblo_Id'), nullable=False)

    sl_GrupaBlokadyObiektu = relationship(u'SlGrupaBlokadyObiektu')


class PdDokument(Base):
    __tablename__ = u'pd_Dokument'

    pdk_Id = Column(Integer, primary_key=True)
    pdk_IdPodmiotu = Column(ForeignKey(u'pd__Podmiot.pd_Id'), nullable=False, index=True)
    pdk_IdKategorii = Column(ForeignKey(u'sl_KategoriaDokumentu.kd_Id'), nullable=False)
    pdk_Zablokowany = Column(BIT, nullable=False)
    pdk_DataModyfikacji = Column(DateTime, nullable=False)
    pdk_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_Tresc = Column(LargeBinary, nullable=False)
    pdk_Typ = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    sl_KategoriaDokumentu = relationship(u'SlKategoriaDokumentu')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    pd__Podmiot = relationship(u'PdPodmiot')


class PdKonwersjaInfo(Base):
    __tablename__ = u'pd_KonwersjaInfo'

    ki_Id = Column(Integer, primary_key=True)
    ki_WersjaDo = Column(String(50, u'Polish_CI_AS'))
    ki_DataKonwersji = Column(DateTime)
    ki_WersjaProgramu = Column(String(50, u'Polish_CI_AS'))
    ki_KonwersjaOdlaczanieId = Column(ForeignKey(u'pd_KonwersjaOdlaczanie.kb_Id'))

    pd_KonwersjaOdlaczanie = relationship(u'PdKonwersjaOdlaczanie')


class PdKonwersjaOdlaczanie(Base):
    __tablename__ = u'pd_KonwersjaOdlaczanie'

    kb_Id = Column(Integer, primary_key=True)
    kb_GodzinaDodania = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    kb_Aktywne = Column(BIT, nullable=False)
    kb_DodatkoweInfo = Column(Unicode(256))
    kb_ZaIleAkcja = Column(Integer, nullable=False, server_default=text("((5))"))
    kb_OsobaKonwertujaca = Column(Unicode(50))
    kb_KonwersjaRozp = Column(BIT, nullable=False, server_default=text("((0))"))


t_pd_Odlaczanie = Table(
    u'pd_Odlaczanie', metadata,
    Column(u'pdo_Komputer', Unicode(128), nullable=False),
    Column(u'pdo_Proces', Unicode(10), nullable=False),
    Column(u'pdo_Data', DateTime, nullable=False)
)


class PdOkre(Base):
    __tablename__ = u'pd_Okres'

    okr_Id = Column(Integer, primary_key=True)
    okr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    okr_TypOkresu = Column(Integer, nullable=False, server_default=text("((3))"))
    okr_DataOd = Column(DateTime, nullable=False, unique=True)
    okr_DataDo = Column(DateTime, nullable=False, unique=True)
    okr_Aktywny = Column(BIT, nullable=False, server_default=text("((1))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'pd_UzytkOkres')


class PdParametr(Base):
    __tablename__ = u'pd_Parametr'

    pdp_Id = Column(Integer, primary_key=True)
    pdp_ArchPytaj = Column(BIT, nullable=False, server_default=text("((1))"))
    pdp_ArchNaZakoncz = Column(BIT, nullable=False, server_default=text("((1))"))
    pdp_ArchOkresowa = Column(BIT, nullable=False, server_default=text("((0))"))
    pdp_ArchInterwal = Column(Integer, server_default=text("((0))"))
    pdp_ArchNaWybrKomp = Column(BIT, nullable=False, server_default=text("((0))"))
    pdp_ArchKomputer = Column(String(50, u'Polish_CI_AS'))
    pdp_ArchPokazUst = Column(BIT, nullable=False, server_default=text("((1))"))
    pdp_ArchDataOst = Column(DateTime)
    pdp_ArchUzytkOst = Column(String(50, u'Polish_CI_AS'))
    pdp_CzasBlok = Column(Integer, nullable=False, server_default=text("((0))"))


class PdParametrHist(Base):
    __tablename__ = u'pd_ParametrHist'

    par_Id = Column(Integer, primary_key=True)
    par_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    par_WazneOd = Column(DateTime)
    par_WazneDo = Column(DateTime)
    par_WartoscCy = Column(MONEY)
    par_WartoscBool = Column(BIT)
    par_WartoscDate = Column(DateTime)
    par_WartoscLong = Column(Integer)
    par_WartoscString = Column(String(255, u'Polish_CI_AS'))


class PdProdukt(Base):
    __tablename__ = u'pd_Produkt'

    epr_Id = Column(Integer, primary_key=True)
    epr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    epr_LiczbaStanowisk = Column(Integer)

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'pd_ProduktProfil')


t_pd_ProduktProfil = Table(
    u'pd_ProduktProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'pd_Produkt.epr_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class PdRokObrotowy(Base):
    __tablename__ = u'pd_RokObrotowy'

    robr_Id = Column(Integer, primary_key=True)
    robr_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False)
    robr_DataOd = Column(DateTime, nullable=False, unique=True)
    robr_DataDo = Column(DateTime, nullable=False, unique=True)
    robr_WariantRZS = Column(ForeignKey(u'sf_Sprawozdanie.sf_Id'), nullable=False)
    robr_WariantPP = Column(ForeignKey(u'sf_Sprawozdanie.sf_Id'), nullable=False)
    robr_Zamkniety = Column(BIT, nullable=False, server_default=text("((0))"))
    robr_PlatnoscCIT = Column(Integer, nullable=False, server_default=text("((0))"))
    robr_IdObiektu = Column(Integer, nullable=False, server_default=text("((1))"))
    robr_IdZamykajacego = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    robr_DataZamkniecia = Column(DateTime)
    robr_ZpikNumeracja = Column(Integer, nullable=False, server_default=text("((0))"))
    robr_ZpikNumeracjaStart = Column(Integer, nullable=False, server_default=text("((1))"))

    pd_Uzytkownik = relationship(u'PdUzytkownik')
    sf_Sprawozdanie = relationship(u'SfSprawozdanie', primaryjoin='PdRokObrotowy.robr_WariantPP == SfSprawozdanie.sf_Id')
    sf_Sprawozdanie1 = relationship(u'SfSprawozdanie', primaryjoin='PdRokObrotowy.robr_WariantRZS == SfSprawozdanie.sf_Id')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', secondary=u'pd_UzytkRok')


class PkParametry(PdRokObrotowy):
    __tablename__ = u'pk_Parametry'

    ksp_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), primary_key=True)
    ksp_RozliczanieKosztow = Column(String(50, u'Polish_CI_AS'))
    ksp_RozliczeniaMOkrKosztow = Column(String(50, u'Polish_CI_AS'))
    ksp_RozrachDostDet = Column(String(5, u'Polish_CI_AS'), server_default=text("('99999')"))
    ksp_RozrachOdbDet = Column(String(5, u'Polish_CI_AS'), server_default=text("('99999')"))
    ksp_DodatnichRoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_UjemnychRoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_PrzychPrzyszlychOkr = Column(String(50, u'Polish_CI_AS'))
    ksp_KorektaZaokraglen = Column(String(50, u'Polish_CI_AS'))
    ksp_NKK_Dost = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Odb = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Prac = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Wsp = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_US = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_ZUS = Column(Integer, server_default=text("((0))"))
    ksp_NKK_ST = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_WNiP = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_RB = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Kasa = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Mag = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_MPK = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_GrTow = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Zlecenia = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_Pojazdy = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NKK_MK = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NiezrealizowanychDRoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_NiezrealizowanychURoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_KosztyDRoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_KosztyURoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_KompDRoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_KompURoznicKurs = Column(String(50, u'Polish_CI_AS'))
    ksp_NKK_InIst = Column(Integer, nullable=False, server_default=text("((0))"))
    ksp_NiezrDodatnichRoznicKursFin = Column(String(50, u'Polish_CI_AS'))
    ksp_NiezrUjemnychRoznicKursFin = Column(String(50, u'Polish_CI_AS'))
    ksp_ZrealDodatnichRoznicKursFin = Column(String(50, u'Polish_CI_AS'))
    ksp_ZrealUjemnychRoznicKursFin = Column(String(50, u'Polish_CI_AS'))


class DkrParametrDziennika(PdRokObrotowy):
    __tablename__ = u'dkr_ParametrDziennika'

    dkpd_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), primary_key=True)
    dkpd_NumerLp = Column(Integer, nullable=False, server_default=text("((1))"))
    dkpd_NumerPozycji = Column(Integer, nullable=False, server_default=text("((1))"))


class PdRozszerzeniaUzytkownika(Base):
    __tablename__ = u'pd_RozszerzeniaUzytkownika'

    ru_Id = Column(UNIQUEIDENTIFIER, primary_key=True)
    ru_Nazwa = Column(String(100, u'Polish_CI_AS'))
    ru_Opis = Column(String(300, u'Polish_CI_AS'))
    ru_WersjaZainstalowania = Column(String(50, u'Polish_CI_AS'))
    ru_WersjaRozszerzenia = Column(String(50, u'Polish_CI_AS'))
    ru_SkryptPrzedKonwersja = Column(LargeBinary)
    ru_SkryptPoKonwersji = Column(LargeBinary)


class PdSesja(Base):
    __tablename__ = u'pd_Sesja'

    ss_spid = Column(Integer, primary_key=True)
    ss_uid = Column(Integer, nullable=False)
    ss_hid = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ss_apid = Column(Integer, nullable=False)
    ss_data = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    ss_ignore = Column(BIT, nullable=False, server_default=text("((0))"))
    ss_data_zamkniecia = Column(DateTime)
    ss_data_blokady_rach = Column(DateTime)
    ss_mag_id = Column(Integer)
    ss_rok_obr_id = Column(Integer)


class PdStatystyka(Base):
    __tablename__ = u'pd_Statystyka'

    pds_Id = Column(Integer, primary_key=True)
    pds_Data = Column(DateTime)
    pds_Status = Column(Integer)
    pds_Raport = Column(Text(collation=u'Polish_CI_AS'))


class PdUprawnienie(Base):
    __tablename__ = u'pd_Uprawnienie'

    upr_Id = Column(Integer, primary_key=True)
    upr_Nazwa = Column(String(100, u'Polish_CI_AS'))
    upr_Program = Column(Integer)
    upr_Modul = Column(String(50, u'Polish_CI_AS'))
    upr_Checked = Column(BIT)
    upr_Magazynowe = Column(BIT)


t_pd_UzytkMagazyn = Table(
    u'pd_UzytkMagazyn', metadata,
    Column(u'uzm_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True),
    Column(u'uzm_IdMagazynu', ForeignKey(u'sl_Magazyn.mag_Id'))
)


class PdUzytkModulHist(Base):
    __tablename__ = u'pd_UzytkModulHist'

    uzmh_IdUzytkownika = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
    uzmh_Pozycja = Column(Integer, primary_key=True, nullable=False)
    uzmh_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'))
    uzmh_CLSID = Column(UNIQUEIDENTIFIER)
    uzmh_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzmh_Aktywny = Column(BIT, nullable=False)
    uzmh_TypKontekstu = Column(Integer, nullable=False)
    uzmh_Kontekst = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzmh_TytulStrony = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzmh_AdresStrony = Column(String(2083, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    ui_Modul = relationship(u'UiModul')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


t_pd_UzytkOkres = Table(
    u'pd_UzytkOkres', metadata,
    Column(u'uzo_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True),
    Column(u'uzo_IdOkresu', ForeignKey(u'pd_Okres.okr_Id'))
)


t_pd_UzytkRok = Table(
    u'pd_UzytkRok', metadata,
    Column(u'uzr_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True),
    Column(u'uzr_IdRoku', ForeignKey(u'pd_RokObrotowy.robr_Id'))
)


class PdUzytkUpraw(Base):
    __tablename__ = u'pd_UzytkUpraw'

    uzup_Id = Column(Integer, primary_key=True)
    uzup_UzytkId = Column(Integer)
    uzup_UprawId = Column(Integer)


class PdUzytkUprawMag(Base):
    __tablename__ = u'pd_UzytkUprawMag'

    uzupm_Id = Column(Integer, primary_key=True)
    uzupm_UzytkId = Column(Integer, nullable=False)
    uzupm_UprawId = Column(Integer, nullable=False)
    uzupm_MagId = Column(Integer, nullable=False)


class PdUzytkownik(Base):
    __tablename__ = u'pd_Uzytkownik'

    uz_Id = Column(Integer, primary_key=True)
    uz_Identyfikator = Column(String(3, u'Polish_CI_AS'), nullable=False, unique=True)
    uz_Nazwisko = Column(String(30, u'Polish_CI_AS'), nullable=False)
    uz_Imie = Column(String(20, u'Polish_CI_AS'))
    uz_Login = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_Haslo = Column(String(100, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_Status = Column(BIT, nullable=False, server_default=text("((1))"))
    uz_IdKasy = Column(ForeignKey(u'dks_Kasa.ks_Id'))
    uz_BlokadaKasy = Column(BIT, nullable=False, server_default=text("((0))"))
    uz_IdMagazynu = Column(ForeignKey(u'sl_Magazyn.mag_Id'))
    uz_Program = Column(Integer, nullable=False, server_default=text("((1))"))
    uz_PracaZdalna = Column(BIT, nullable=False, server_default=text("((0))"))
    uz_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'))
    uz_IdKompozycji = Column(ForeignKey(u'ui__Kompozycja.ui_Id'))
    uz_IdGrupy = Column(ForeignKey(u'sl_GrupaUz.ug_Id'))
    uz_EMail = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_GaduGadu = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_Skype = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_RodzajInfoOWierszachListy = Column(Integer, nullable=False, server_default=text("((1))"))
    uz_UruchomCentralke = Column(BIT)
    uz_PrefiksOsobisty = Column(String(50, u'Polish_CI_AS'))
    uz_LimitStanowisk = Column(Integer)
    uz_StatusPrzypomnieniaZmianyVAT = Column(Integer, nullable=False, server_default=text("((3))"))
    uz_DataPonownegoPrzypomnienia = Column(DateTime)
    uz_KlientEmail = Column(Integer, nullable=False, server_default=text("((0))"))
    uz_Domena = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uz_AlarmyInterwal = Column(Integer)
    uz_LokalizacjaPokazuj = Column(BIT, nullable=False, server_default=text("((1))"))
    uz_Lokalizacja = Column(Unicode(256))
    uz_OstatnieKontoEmail = Column(Integer)

    sl_GrupaUz = relationship(u'SlGrupaUz')
    dks_Kasa = relationship(u'DksKasa')
    ui__Kompozycja = relationship(u'UiKompozycja')
    sl_Magazyn = relationship(u'SlMagazyn')
    pr_Pracownik = relationship(u'PrPracownik')


class PdUzytkParam(PdUzytkownik):
    __tablename__ = u'pd_UzytkParam'

    uzp_IdUzytkownika = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True)
    uzp_PrzypSubiekt = Column(Integer)
    uzp_DataSubiekt = Column(DateTime)
    uzp_PrzypRachmistrz = Column(Integer)
    uzp_DataRachmistrz = Column(DateTime)
    uzp_PrzypRewizor = Column(Integer)
    uzp_DataRewizor = Column(DateTime)
    uzp_PrzypGratyfikant = Column(Integer)
    uzp_DataGratyfikant = Column(DateTime)
    uzp_PrzypGestor = Column(Integer)
    uzp_DataGestor = Column(DateTime)
    uzp_PrzypAboSubiekt = Column(DateTime)
    uzp_PrzypAboRachmistrz = Column(DateTime)
    uzp_PrzypAboRewizor = Column(DateTime)
    uzp_PrzypAboGratyfikant = Column(DateTime)
    uzp_PrzypAboGestor = Column(DateTime)
    uzp_PrzypAboWerSubiekt = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzp_PrzypAboWerRachmistrz = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzp_PrzypAboWerRewizor = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzp_PrzypAboWerGratyfikant = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uzp_PrzypAboWerGestor = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class PdWspolnik(Base):
    __tablename__ = u'pd_Wspolnik'

    pw_Id = Column(Integer, primary_key=True)
    pw_Imie = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_Imie2 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_Nazwisko = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_DataUrodzenia = Column(DateTime)
    pw_MiejsceUrodzenia = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_Obywatelstwo = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_Pesel = Column(String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_NIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_IdUS = Column(ForeignKey(u'is__Instytucja.is_Id'))
    pw_Udzial = Column(MONEY, nullable=False, server_default=text("((0))"))
    pw_Email = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_TypIdentyfikatora = Column(ForeignKey(u'sl_TypIdentyfikatora.tid_Kod'))
    pw_NumerIdentyfikatora = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_TytulUbezpieczenia = Column(ForeignKey(u'sl_TytulUbezpieczenia.tu_Kod'))
    pw_PrawoDoEmer = Column(ForeignKey(u'sl_PrawoDoEmerytury.pde_Kod'))
    pw_StopienNiepelnosprawnosci = Column(ForeignKey(u'sl_StopienNiepelnosprawnosci.stn_Kod'))
    pw_StopienNiepelnosprawnosciOd = Column(DateTime)
    pw_StopienNiepelnosprawnosciDo = Column(DateTime)
    pw_StopienNiezdolnosciDoPracy = Column(ForeignKey(u'sl_StopienNiezdolnosciDoPracy.stnp_Kod'))
    pw_StopienNiezdolnosciDoPracyOd = Column(DateTime)
    pw_StopienNiezdolnosciDoPracyDo = Column(DateTime)
    pw_GenDeklaracja = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_OsobaWspolpracujaca = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_ZasRodzLiczbaOsob = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_ZasRodzKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    pw_ZasPielegLiczbaOsob = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_ZasPielegKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    pw_ZasWychLiczbaOsob = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_ZasWychKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    pw_Aktywny = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_Skl_McNaliczania = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_SklUbezpEm_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpRent_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpChor_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpWyp_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpZdr_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklFP_Naliczanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpEm_Koszty = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpRent_Koszty = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpChor_Koszty = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpWyp_Koszty = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpZdr_Koszty = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_SklFP_Koszty = Column(BIT, nullable=False, server_default=text("((1))"))
    pw_SklUbezpEm_Pit5 = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_SklUbezpRent_Pit5 = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_SklUbezpChor_Pit5 = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_SklUbezpWyp_Pit5 = Column(Integer, nullable=False, server_default=text("((0))"))
    pw_SklUbezpZdr_Pit5 = Column(Integer, nullable=False, server_default=text("((2))"))
    pw_PodstawaSpolIndywidualna = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_PodstawaZdrIndywidualna = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_PodstawaChWyIndywidualna = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_NrAnalityka = Column(String(3, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pw_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'))
    pw_CzyZalPit28 = Column(BIT, nullable=False, server_default=text("((0))"))
    pw_IdentyfikacjaPodatkowa = Column(Integer, nullable=False, server_default=text("((1))"))
    pw_OdliczajUlgePodatkowa = Column(BIT, nullable=False, server_default=text("((1))"))

    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    is__Instytucja = relationship(u'IsInstytucja')
    sl_PrawoDoEmerytury = relationship(u'SlPrawoDoEmerytury')
    sl_StopienNiepelnosprawnosci = relationship(u'SlStopienNiepelnosprawnosci')
    sl_StopienNiezdolnosciDoPracy = relationship(u'SlStopienNiezdolnosciDoPracy')
    sl_TypIdentyfikatora = relationship(u'SlTypIdentyfikatora')
    sl_TytulUbezpieczenia = relationship(u'SlTytulUbezpieczenia')


class PdWspolnikPodatek(Base):
    __tablename__ = u'pd_WspolnikPodatek'

    pwr_Id = Column(Integer, primary_key=True)
    pwr_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    pwr_RokOd = Column(Integer)
    pwr_Wartosc = Column(Integer, nullable=False)
    pwr_Platnosc = Column(Integer, nullable=False, server_default=text("((0))"))

    pd_Wspolnik = relationship(u'PdWspolnik')


class PdWspolnikPodstawa(Base):
    __tablename__ = u'pd_WspolnikPodstawa'

    pwp_Id = Column(Integer, primary_key=True)
    pwp_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    pwp_Typ = Column(Integer, nullable=False)
    pwp_DataOd = Column(DateTime)
    pwp_Wartosc = Column(MONEY, nullable=False)

    pd_Wspolnik = relationship(u'PdWspolnik')


class PdWspolnikSkladka(Base):
    __tablename__ = u'pd_WspolnikSkladka'
    __table_args__ = (
        Index(u'IX_pd_WspolnikSkladka', u'pws_IdWspolnika', u'pws_Rok', u'pws_Miesiac', unique=True),
    )

    pws_Id = Column(Integer, primary_key=True)
    pws_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    pws_Rok = Column(Integer, nullable=False)
    pws_Miesiac = Column(Integer, nullable=False)
    pws_PodstawaEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_PodstawaChWy = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_PodstawaZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_PodstawaEmRePrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    pws_SkladkaEm = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaChor = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaWyp = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkiSpol = Column(MONEY)
    pws_SkladkaFP = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaZdr1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaZdr2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pws_SkladkaRazem = Column(MONEY)
    pws_StatusKsiegowy = Column(Integer, nullable=False, server_default=text("((0))"))
    pws_IdKsiegi = Column(Integer)
    pws_IdDekretu = Column(Integer)
    pws_DataKsiegowania = Column(DateTime)
    pws_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    pws_SkladkaRazemSpolFP = Column(MONEY)
    pws_RazemZdr = Column(MONEY)

    sl_Kategoria = relationship(u'SlKategoria')
    pd_Wspolnik = relationship(u'PdWspolnik')


class PdWspolnikSwiadczenie(Base):
    __tablename__ = u'pd_WspolnikSwiadczenie'

    pww_Id = Column(Integer, primary_key=True)
    pww_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    pww_Miesiac = Column(DateTime, nullable=False)
    pww_DataOd = Column(DateTime, nullable=False)
    pww_DataDo = Column(DateTime, nullable=False)
    pww_LiczbaDni = Column(Integer, nullable=False)
    pww_KodSwiadczenia = Column(ForeignKey(u'sl_KodSwiadczenia.ksw_Kod'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pww_KodChoroby = Column(String(2, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pww_Kwota = Column(MONEY, nullable=False)

    pd_Wspolnik = relationship(u'PdWspolnik')
    sl_KodSwiadczenia = relationship(u'SlKodSwiadczenia')


class PdPodmiot(Base):
    __tablename__ = u'pd__Podmiot'

    pd_Id = Column(Integer, primary_key=True)
    pd_Obraz = Column(LargeBinary)
    pd_TypKsiegowosci = Column(Integer, nullable=False, server_default=text("((0))"))
    pd_LicInneDane = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_LicNazwaFirmy = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUlica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicMiejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicWojewodztwo = Column(Integer, nullable=False, server_default=text("((-1))"))
    pd_LicNIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicTelefon = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicFaks = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicEmail = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicOsobaOdp = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUzInneDane = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_LicUzKod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUzMiejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUzUlica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUzTelefon = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicUzOsobaOdp = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorInneDane = Column(BIT, nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorUlica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorKod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorWojewodztwo = Column(Integer, nullable=False, server_default=text("((-1))"))
    pd_LicKorMiejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_LicKorOsobaOdp = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_Regon = Column(String(20, u'Polish_CI_AS'), nullable=False)
    pd_FormaPrawna = Column(Integer)
    pd_TypDzialalnosci = Column(Integer)
    pd_DzHandlowa = Column(BIT)
    pd_DzUslugowa = Column(BIT)
    pd_DzProdukcyjna = Column(BIT)
    pd_RachBankowy = Column(Integer)
    pd_Kasa = Column(Integer)
    pd_UrzSkarbowy = Column(Integer)
    pd_OsobaFizyczna = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_IdWlasciciela = Column(ForeignKey(u'pd_Wspolnik.pw_Id'))
    pd_WWW = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_Email = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_OpisDzialalnosci = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_DataRozpDzial = Column(DateTime)
    pd_OrganZaloz = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_OrganRejestrowy = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_NazwaRejestru = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_NumerRejestru = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_DataRejestracji = Column(DateTime)
    pd_KodEKD = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_KodKGN = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_PlatKarSprzedaz = Column(BIT)
    pd_PlatKarZakup = Column(BIT)
    pd_PlatOdrocz = Column(BIT)
    pd_MiesiacPierwszejWyplaty = Column(DateTime)
    pd_RokBoHopGrat = Column(Integer)
    pd_PodVATZarejestrowanyWUE = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_NIPUE = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_NazwaDlaPlatnika = Column(String(31, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pd_TypKadr = Column(Integer, nullable=False, server_default=text("((0))"))
    pd_InfoHtml = Column(VARBINARY(6000), nullable=False, server_default=text("(CONVERT([varbinary](6000),'',0))"))
    pd_CRM = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_AnkDemo = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_KlientEmail = Column(Integer, nullable=False, server_default=text("((0))"))
    pd_DisableScripts = Column(BIT, nullable=False, server_default=text("((1))"))
    pd_KatDkr = Column(Integer)
    pd_PlanKontWylaczAkt = Column(BIT, nullable=False, server_default=text("((0))"))
    pd_AbonPokazDymki = Column(BIT, nullable=False, server_default=text("((1))"))
    pd_EBankSaldo = Column(Integer)

    pd_Wspolnik = relationship(u'PdWspolnik')


class PkKartoteka(Base):
    __tablename__ = u'pk_Kartoteka'

    kw_Id = Column(Integer, primary_key=True)
    kw_Typ = Column(Integer, nullable=False)
    kw_IdZrodla = Column(Integer)
    kw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kw_Zablokowana = Column(BIT, nullable=False, server_default=text("((0))"))
    kw_DlugoscAnalityki = Column(Integer, nullable=False)
    kw_Wbudowana = Column(BIT, nullable=False)
    kw_Filtruj1 = Column(BIT)
    kw_Filtruj2 = Column(BIT)
    kw_Filtruj3 = Column(BIT)
    kw_Filtr1 = Column(Integer)
    kw_Filtr2 = Column(Integer)
    kw_Filtr3 = Column(Integer)
    kw_FiltrujSql = Column(BIT)
    kw_FiltrSql = Column(Text(collation=u'Polish_CI_AS'))


class PkKartotekaPozycja(Base):
    __tablename__ = u'pk_KartotekaPozycja'

    kwp_Id = Column(Integer, primary_key=True)
    kwp_IdKartoteki = Column(ForeignKey(u'pk_Kartoteka.kw_Id'), nullable=False)
    kwp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kwp_NrAnalityki = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    pk_Kartoteka = relationship(u'PkKartoteka')


class PkPlanKont(Base):
    __tablename__ = u'pk_PlanKont'
    __table_args__ = (
        Index(u'IX_pk_PlanKont_1', u'ko_Id', u'ko_IdRokuObrotowego', u'ko_Nr', u'ko_Nazwa'),
        Index(u'IX_pk_PlanKont_IdElementuKart', u'ko_IdKartoteki', u'ko_IdElementuKartoteki'),
        Index(u'IX_pk_PlanKont_Rok_Nr', u'ko_IdRokuObrotowego', u'ko_Nr', unique=True)
    )

    ko_Id = Column(Integer, primary_key=True)
    ko_IdRokuObrotowego = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False)
    ko_Nr = Column(String(50, u'Polish_CI_AS'), nullable=False)
    ko_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ko_NazwaObca1 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ko_NazwaObca2 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ko_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    ko_Poziom = Column(Integer, nullable=False)
    ko_JestLisciem = Column(BIT, nullable=False, server_default=text("((1))"))
    ko_Bilansowe = Column(BIT, nullable=False)
    ko_Wynikowe = Column(BIT, nullable=False)
    ko_Pozabilansowe = Column(BIT, nullable=False)
    ko_Rozrachunkowe = Column(BIT, nullable=False)
    ko_Powiazane = Column(BIT, nullable=False)
    ko_IdKartoteki = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_Kartotekowe = Column(BIT, nullable=False)
    ko_IdElementuKartoteki = Column(Integer)
    ko_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    ko_Walutowe = Column(BIT, nullable=False, server_default=text("((0))"))
    ko_Waluta = Column(String(3, u'Polish_CI_AS'))
    ko_PodlegaWycenie = Column(BIT, nullable=False, server_default=text("((0))"))
    ko_IdKartoteki01 = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdKartoteki02 = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdKartoteki03 = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdKartoteki04 = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdKartoteki05 = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_RozrachObj_Id = Column(Integer)
    ko_RozrachObj_Typ = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdBiezacejKartoteki = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    ko_IdKategorii = Column(Integer)
    ko_KategoriaWymagana = Column(BIT)

    pk_Kartoteka = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdBiezacejKartoteki == PkKartoteka.kw_Id')
    pk_Kartoteka1 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki == PkKartoteka.kw_Id')
    pk_Kartoteka2 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki01 == PkKartoteka.kw_Id')
    pk_Kartoteka3 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki02 == PkKartoteka.kw_Id')
    pk_Kartoteka4 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki03 == PkKartoteka.kw_Id')
    pk_Kartoteka5 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki04 == PkKartoteka.kw_Id')
    pk_Kartoteka6 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_IdKartoteki05 == PkKartoteka.kw_Id')
    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')
    pk_Kartoteka7 = relationship(u'PkKartoteka', primaryjoin='PkPlanKont.ko_RozrachObj_Typ == PkKartoteka.kw_Id')


class PkWzorzec(Base):
    __tablename__ = u'pk_Wzorzec'

    kow_Nr = Column(String(50, u'Polish_CI_AS'), primary_key=True, nullable=False)
    kow_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    kow_Poziom = Column(Integer, nullable=False)
    kow_Bilansowe = Column(BIT, nullable=False, server_default=text("((0))"))
    kow_Wynikowe = Column(BIT, nullable=False, server_default=text("((0))"))
    kow_Pozabilansowe = Column(BIT, nullable=False, server_default=text("((0))"))
    kow_Rozrachunkowe = Column(BIT, nullable=False, server_default=text("((0))"))
    kow_Powiazane = Column(BIT, nullable=False, server_default=text("((0))"))
    kow_IdKartoteki = Column(ForeignKey(u'pk_Kartoteka.kw_Id'))
    kow_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    kow_DlaSpCywilnej = Column(BIT, nullable=False, server_default=text("((1))"))
    kow_DlaSpHandlowej = Column(BIT, nullable=False, server_default=text("((1))"))
    kow_DlaDzHandlowej = Column(BIT, nullable=False, server_default=text("((1))"))
    kow_DlaDzUslugowej = Column(BIT, nullable=False, server_default=text("((1))"))
    kow_DlaDzProdukcyjnej = Column(BIT, nullable=False, server_default=text("((1))"))
    kow_DlaJednoosobowej = Column(BIT, primary_key=True, nullable=False, server_default=text("((0))"))
    kow_IdKartoteki01 = Column(Integer)
    kow_IdKartoteki02 = Column(Integer)
    kow_IdKartoteki03 = Column(Integer)
    kow_IdKartoteki04 = Column(Integer)
    kow_IdKartoteki05 = Column(Integer)

    pk_Kartoteka = relationship(u'PkKartoteka')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class PlListaPlac(Base):
    __tablename__ = u'pl_ListaPlac'

    lp_Id = Column(Integer, primary_key=True)
    lp_Tytul = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lp_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, unique=True)
    lp_Data = Column(DateTime, nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lp_DataWyplaty = Column(DateTime, nullable=False)
    lp_DataZUS = Column(DateTime, nullable=False)
    lp_StatusImportu = Column(Integer, nullable=False, server_default=text("((0))"))
    lp_Zatwierdzona = Column(BIT, nullable=False, server_default=text("((0))"))
    lp_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    lp_Glowna = Column(BIT, nullable=False, server_default=text("((1))"))
    lp_StatusImportuSkladek = Column(Integer, nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')


class PlParametrUmowyCP(Base):
    __tablename__ = u'pl_ParametrUmowyCP'

    pucp_Id = Column(Integer, primary_key=True)
    pucp_GenerowanyRaport = Column(Integer, nullable=False, server_default=text("((1))"))
    pucp_SkladkaUbezpEm = Column(BIT, nullable=False, server_default=text("((1))"))
    pucp_SkladkaUbezpRe = Column(BIT, nullable=False, server_default=text("((1))"))
    pucp_SkladkaUbezpChor = Column(BIT, nullable=False, server_default=text("((1))"))
    pucp_SkladkaUbezpWyp = Column(BIT, nullable=False, server_default=text("((1))"))
    pucp_SkladkaUbezpZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    pucp_SkladkaFP = Column(BIT, nullable=False, server_default=text("((0))"))
    pucp_SkladkaFGSP = Column(BIT, nullable=False, server_default=text("((0))"))
    pucp_PrzelewNaKonto = Column(Integer, nullable=False, server_default=text("((0))"))
    pucp_PrzelewKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    pucp_RachPodatek = Column(MONEY, nullable=False, server_default=text("((19))"))
    pucp_RachKUP = Column(MONEY, nullable=False, server_default=text("((20))"))


class PlParametrUmowyOPrace(Base):
    __tablename__ = u'pl_ParametrUmowyOPrace'

    pup_Id = Column(Integer, primary_key=True, server_default=text("((1))"))
    pup_GenerowanyRaport = Column(Integer, nullable=False, server_default=text("((1))"))
    pup_KosztyUzyskania = Column(Integer, nullable=False, server_default=text("((0))"))
    pup_PrzelewNaKonto = Column(Integer, nullable=False, server_default=text("((0))"))
    pup_PrzelewKwota = Column(MONEY, nullable=False, server_default=text("((0))"))


class PlRachunekDoUmowyCP(Base):
    __tablename__ = u'pl_RachunekDoUmowyCP'

    ru_Id = Column(Integer, primary_key=True)
    ru_IdUmowy = Column(ForeignKey(u'pl_UmowaCP.ucp_Id'), nullable=False)
    ru_DataWystawienia = Column(DateTime, nullable=False)
    ru_DataZUS = Column(DateTime, nullable=False)
    ru_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ru_Kwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KwotaBrutto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KosztUzyskProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KosztUzysk = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodstawaOpodatkowania = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodatekProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Podatek = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_UbezpZdrowotne = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZaliczkaNaPodatek = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KwotaNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_UbezpZdrowotne2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PracownikOtrzymuje = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Przelew = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ObciazeniePracodawcy = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSEmer1Prac = Column(MONEY, nullable=False)
    ru_ZUSEmer2Prac = Column(MONEY, nullable=False)
    ru_ZUSEmer1Firma = Column(MONEY, nullable=False)
    ru_ZUSRentPrac = Column(MONEY, nullable=False)
    ru_ZUSRentFirma = Column(MONEY, nullable=False)
    ru_ZUSChorPrac = Column(MONEY, nullable=False)
    ru_ZUSWypFirma = Column(MONEY, nullable=False)
    ru_ZUSFirma = Column(MONEY, nullable=False)
    ru_ZUSPrac = Column(MONEY, nullable=False)
    ru_FP = Column(MONEY, nullable=False)
    ru_FGSP = Column(MONEY, nullable=False)
    ru_ZUSRazem = Column(MONEY, nullable=False)
    ru_StatusImportu = Column(Integer, nullable=False)
    ru_StatusImportuSkladek = Column(Integer, nullable=False)
    ru_IdOsobyWyst = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    ru_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ru_PonizejLimituPIT8B = Column(BIT, nullable=False)
    ru_PodstUbEmerRent = Column(MONEY, nullable=False)
    ru_PodstUbEmerRentPrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_Ryczalt = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    pl_UmowaCP = relationship(u'PlUmowaCP')


class PlTag(Base):
    __tablename__ = u'pl_Tag'

    tag_Id = Column(Integer, primary_key=True)
    tag_Tekst = Column(String(50, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tag_Tabela = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tag_Pole = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tag_Grupa = Column(Integer, nullable=False)
    tag_Ekstra = Column(Integer, nullable=False, server_default=text("((0))"))


class PlUmowaCP(Base):
    __tablename__ = u'pl_UmowaCP'

    ucp_Id = Column(Integer, primary_key=True)
    ucp_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    ucp_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False)
    ucp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_Tresc = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_Kwota = Column(MONEY, nullable=False)
    ucp_Rodzaj = Column(Integer, nullable=False)
    ucp_DataOd = Column(DateTime, nullable=False)
    ucp_DataDo = Column(DateTime)
    ucp_DataRozwiazania = Column(DateTime)
    ucp_PowodRozwiazania = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_TytulUbezp = Column(ForeignKey(u'sl_TytulUbezpieczenia.tu_Kod'), nullable=False)
    ucp_GenerowanyRaport = Column(Integer, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpEm = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpRe = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpChor = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpWyp = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaFP = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaFGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_PrzelewNaKonto = Column(Integer, nullable=False, server_default=text("((0))"))
    ucp_PrzelewKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    ucp_Rozwiazana = Column(BIT, nullable=False, server_default=text("((0))"))

    pr_Pracownik = relationship(u'PrPracownik')
    sl_TytulUbezpieczenia = relationship(u'SlTytulUbezpieczenia')


class PlUmowaOPrace(Base):
    __tablename__ = u'pl_UmowaOPrace'

    up_Id = Column(Integer, primary_key=True)
    up_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    up_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False)
    up_Rodzaj = Column(Integer, nullable=False)
    up_DataOd = Column(DateTime, nullable=False)
    up_DataDo = Column(DateTime)
    up_DataRozwiazania = Column(DateTime)
    up_PowodRozwiazania = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    up_TytulUbezp = Column(ForeignKey(u'sl_TytulUbezpieczenia.tu_Kod'), nullable=False)
    up_GenerowanyRaport = Column(Integer, nullable=False, server_default=text("((1))"))
    up_KosztyUzyskania = Column(Integer, nullable=False, server_default=text("((0))"))
    up_PrzelewNaKonto = Column(Integer, nullable=False, server_default=text("((0))"))
    up_PrzelewKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_CzyOdliczacUlge = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacPodatek = Column(BIT, nullable=False, server_default=text("((1))"))
    up_Tresc = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    up_Rozwiazana = Column(BIT, nullable=False, server_default=text("((0))"))
    up_EtatLicznik = Column(Integer, nullable=False, server_default=text("((1))"))
    up_EtatMianownik = Column(Integer, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacFGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacFP = Column(BIT, nullable=False, server_default=text("((1))"))

    pr_Pracownik = relationship(u'PrPracownik')
    sl_TytulUbezpieczenia = relationship(u'SlTytulUbezpieczenia')


class PlUmowaOPraceSkladnik(Base):
    __tablename__ = u'pl_UmowaOPraceSkladnik'

    ups_Id = Column(Integer, primary_key=True)
    ups_IdWzorca = Column(ForeignKey(u'sl_WzorzecSkladnikaPlacowego.wsp_Id'), nullable=False)
    ups_IdUmowy = Column(ForeignKey(u'pl_UmowaOPrace.up_Id'), nullable=False)
    ups_NazwaSkladnika = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ups_Wartosc = Column(MONEY, nullable=False)
    ups_Parametr = Column(MONEY, nullable=False, server_default=text("((1))"))
    ups_DataOd = Column(DateTime, nullable=False)
    ups_DataDo = Column(DateTime)

    pl_UmowaOPrace = relationship(u'PlUmowaOPrace')
    sl_WzorzecSkladnikaPlacowego = relationship(u'SlWzorzecSkladnikaPlacowego')


class PlWyplata(Base):
    __tablename__ = u'pl_Wyplata'

    wyp_Id = Column(Integer, primary_key=True)
    wyp_IdListyPlac = Column(ForeignKey(u'pl_ListaPlac.lp_Id'), nullable=False)
    wyp_IdUmowy = Column(ForeignKey(u'pl_UmowaOPrace.up_Id'), nullable=False)
    wyp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wyp_BrPodstawa = Column(MONEY, nullable=False)
    wyp_BrGodzNadliczbowe = Column(MONEY, nullable=False)
    wyp_BrGodzNocne = Column(MONEY, nullable=False)
    wyp_BrAkord = Column(MONEY, nullable=False)
    wyp_BrProwizja = Column(MONEY, nullable=False)
    wyp_BrPremiaProcOdPodst = Column(MONEY, nullable=False)
    wyp_BrPremiaUznaniowa = Column(MONEY, nullable=False)
    wyp_BrNagrodaRegul = Column(MONEY, nullable=False)
    wyp_BrWynagrChorob = Column(MONEY, nullable=False)
    wyp_BrWynagrUrlop = Column(MONEY, nullable=False)
    wyp_BrEkwiwalentZaUrlop = Column(MONEY, nullable=False)
    wyp_BrDodatekFunkc = Column(MONEY, nullable=False)
    wyp_BrDodatekZaWysluge = Column(MONEY, nullable=False)
    wyp_BrDodatekZaWarUciazliw = Column(MONEY, nullable=False)
    wyp_BrInnePrac = Column(MONEY, nullable=False)
    wyp_BrZasilekOpiekunczy = Column(MONEY, nullable=False)
    wyp_BrZasilekWyrownawczy = Column(MONEY, nullable=False)
    wyp_BrSwiadczRehabilit = Column(MONEY, nullable=False)
    wyp_BrZasilekChorobowy = Column(MONEY, nullable=False)
    wyp_BrZasilekMacierzynski = Column(MONEY, nullable=False)
    wyp_BrInneZus = Column(MONEY, nullable=False)
    wyp_BrInneEmRe = Column(MONEY, nullable=False)
    wyp_BrInneChWy = Column(MONEY, nullable=False)
    wyp_BrInneZdr = Column(MONEY, nullable=False)
    wyp_BrZasilkiZUS = Column(MONEY, nullable=False)
    wyp_BruttoDuze = Column(MONEY, nullable=False)
    wyp_BruttoMale = Column(MONEY, nullable=False)
    wyp_KosztUzysk = Column(MONEY, nullable=False)
    wyp_PodstawaOpodatkowania = Column(MONEY, nullable=False)
    wyp_Podatek = Column(MONEY, nullable=False)
    wyp_Odliczenia = Column(MONEY, nullable=False)
    wyp_UbezpZdrowotne = Column(MONEY, nullable=False)
    wyp_ZaliczkaNaPodatek = Column(MONEY, nullable=False)
    wyp_Netto = Column(MONEY, nullable=False)
    wyp_UbezpZdrowotne2 = Column(MONEY, nullable=False)
    wyp_NeDoplaty = Column(MONEY, nullable=False)
    wyp_NePotracenia = Column(MONEY, nullable=False)
    wyp_NeZasilekRodzinny = Column(MONEY, nullable=False)
    wyp_NeZasilekPielegnacyjny = Column(MONEY, nullable=False)
    wyp_NeZasilekPorodowy = Column(MONEY, nullable=False)
    wyp_NeZasilekPogrzebowy = Column(MONEY, nullable=False)
    wyp_NeZasilekWychowawczy = Column(MONEY, nullable=False)
    wyp_NeInnePrac = Column(MONEY, nullable=False)
    wyp_NeInneZus = Column(MONEY, nullable=False)
    wyp_NeZasilkiZUS = Column(MONEY, nullable=False)
    wyp_NeRazem = Column(MONEY, nullable=False)
    wyp_PracownikOtrzymuje = Column(MONEY, nullable=False)
    wyp_Przelew = Column(MONEY, nullable=False)
    wyp_ZusEmer1Prac = Column(MONEY, nullable=False)
    wyp_ZusEmer1Firma = Column(MONEY, nullable=False)
    wyp_ZusEmer2Prac = Column(MONEY, nullable=False)
    wyp_ZusRentPrac = Column(MONEY, nullable=False)
    wyp_ZusRentFirma = Column(MONEY, nullable=False)
    wyp_ZusChorPrac = Column(MONEY, nullable=False)
    wyp_ZusWypFirma = Column(MONEY, nullable=False)
    wyp_Fp = Column(MONEY, nullable=False)
    wyp_FGSP = Column(MONEY, nullable=False)
    wyp_ZUSPrac = Column(MONEY, nullable=False)
    wyp_ZUSFirma = Column(MONEY, nullable=False)
    wyp_ZUS = Column(MONEY, nullable=False)
    wyp_ZUSZasilki = Column(MONEY, nullable=False)
    wyp_ZUSRazem = Column(MONEY, nullable=False)
    wyp_ObciazeniePracodawcy = Column(MONEY, nullable=False)
    wyp_PodstUbEmerRent = Column(MONEY, nullable=False)
    wyp_PodstUbChorWyp = Column(MONEY, nullable=False)
    wyp_PodstUbZdr = Column(MONEY, nullable=False)
    wyp_PodstUbEmerRentPrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_IdOsobyWyst = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    pl_ListaPlac = relationship(u'PlListaPlac')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    pl_UmowaOPrace = relationship(u'PlUmowaOPrace')


class PlWyplataDataZaliczki(Base):
    __tablename__ = u'pl_WyplataDataZaliczki'
    __table_args__ = (
        Index(u'IX_pl_WyplataDataZaliczki', u'wdz_IdPracownika', u'wdz_Rok', u'wdz_Miesiac', unique=True),
    )

    wdz_Id = Column(Integer, primary_key=True)
    wdz_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    wdz_Rok = Column(Integer, nullable=False)
    wdz_Miesiac = Column(Integer, nullable=False)
    wdz_Data = Column(DateTime)

    pr_Pracownik = relationship(u'PrPracownik')


class PlWyplataSkladnik(Base):
    __tablename__ = u'pl_WyplataSkladnik'

    wyps_Id = Column(Integer, primary_key=True)
    wyps_IdWzorca = Column(ForeignKey(u'sl_WzorzecSkladnikaPlacowego.wsp_Id'), nullable=False)
    wyps_IdWyplaty = Column(ForeignKey(u'pl_Wyplata.wyp_Id'), nullable=False)
    wyps_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wyps_Wartosc = Column(MONEY, nullable=False)
    wyps_Parametr = Column(MONEY)

    pl_Wyplata = relationship(u'PlWyplata')
    sl_WzorzecSkladnikaPlacowego = relationship(u'SlWzorzecSkladnikaPlacowego')


class PlbEcpParametr(Base):
    __tablename__ = u'plb_EcpParametr'

    ecpp_ID = Column(Integer, primary_key=True)
    ecpp_NocneProcent = Column(MONEY, nullable=False, server_default=text("((20))"))
    ecpp_NocneJak = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpp_NadliczboweProcent = Column(MONEY, nullable=False, server_default=text("((100))"))
    ecpp_NadliczboweNocneProcent = Column(MONEY, nullable=False, server_default=text("((100))"))
    ecpp_NadliczboweWolneProcent = Column(MONEY, nullable=False, server_default=text("((100))"))
    ecpp_NadliczboweWolneJak = Column(Integer, nullable=False, server_default=text("((1))"))
    ecpp_NadliczboweSwiateczneProcent = Column(MONEY, nullable=False, server_default=text("((100))"))
    ecpp_NadliczboweSwiateczneJak = Column(Integer, nullable=False, server_default=text("((1))"))
    ecpp_DniWolneDoUrlopowego = Column(BIT, nullable=False, server_default=text("((0))"))
    ecpp_NadliczboweSkladnik = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpp_PotracenieChor = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpp_ZaokrZasilkow = Column(Integer, nullable=False, server_default=text("((1))"))
    ecpp_ZaokrWynChor = Column(Integer, nullable=False, server_default=text("((2))"))
    ecpp_LiczbaDniWynChor = Column(Integer, nullable=False, server_default=text("((33))"))
    ecpp_NadliczboweGodziny = Column(Integer, nullable=False, server_default=text("((0))"))
    ecpp_NadliczbowePierwszeProcent = Column(MONEY, nullable=False, server_default=text("((50))"))
    ecpp_LiczbaDniWynChorPoLatach = Column(Integer, nullable=False, server_default=text("((14))"))
    ecpp_WiekPracDniWynChorPoLatach = Column(Integer, nullable=False, server_default=text("((50))"))
    ecpp_UzupPrzeprDzien = Column(BIT, nullable=False, server_default=text("((1))"))
    ecpp_ZerujWynGdyMcNieobecnosci = Column(BIT, nullable=False, server_default=text("((1))"))
    ecpp_GodzinyPonadwymiarowe = Column(BIT, nullable=False, server_default=text("((0))"))


class PlbListaPlac(Base):
    __tablename__ = u'plb_ListaPlac'

    lp_Id = Column(Integer, primary_key=True)
    lp_IdDefinicjiLP = Column(Integer)
    lp_Automatyczna = Column(BIT, nullable=False, server_default=text("((1))"))
    lp_Tytul = Column(String(70, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lp_Numer = Column(String(70, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    lp_Miesiac = Column(DateTime, nullable=False)
    lp_DataWyplaty = Column(DateTime, nullable=False)
    lp_DataSkladek = Column(DateTime, nullable=False)
    lp_DataZaliczek = Column(DateTime, nullable=False)
    lp_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    lp_StatusKsiegowyLP = Column(Integer, nullable=False, server_default=text("((0))"))
    lp_StatusKsiegowySkladki = Column(Integer, nullable=False, server_default=text("((0))"))
    lp_StatusKsiegowyZaliczki = Column(Integer, nullable=False, server_default=text("((0))"))
    lp_Zatwierdzona = Column(BIT, nullable=False, server_default=text("((0))"))
    lp_ZmianaDatyWyplatyData = Column(DateTime)
    lp_ZmianaDatyWyplatyKto = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))

    sl_Kategoria = relationship(u'SlKategoria')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class PlbParametr(Base):
    __tablename__ = u'plb_Parametr'

    gp_Id = Column(Integer, primary_key=True)
    gp_RokStartu = Column(Integer)
    gp_McPierwszejWyplaty = Column(DateTime)
    gp_ZasilkiWyplaca = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_DzienPrzekazaniaSkladek = Column(Integer, nullable=False, server_default=text("((115))"))
    gp_BlokujOperBankoweWSubiekcie = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_PrzeliczajSkladkiZUS = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_MiesSkladStale = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_MiesSkladZmienne = Column(Integer, nullable=False, server_default=text("((3))"))
    gp_DofinansowanieSkladek = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_ZaokraglanieSkladkiZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    gp_WysylajNrDowodu = Column(BIT, nullable=False, server_default=text("((1))"))
    gp_LiczbaUbezpieczonych = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_NaliczajNieobecnosciPlatne = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_NieNaliczajFPFGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    gp_LimitWiekuFPFGSPKobiet = Column(Integer, nullable=False, server_default=text("((55))"))
    gp_LimitWiekuFPFGSPMezczyzn = Column(Integer, nullable=False, server_default=text("((60))"))
    gp_UwzgledniajKosztyIUlge = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_KosztyIPodOdZasRachunki = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_NieUwzglUlgPodPoZwoln = Column(BIT, nullable=False, server_default=text("((1))"))
    gp_WersjaPlatnika = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_NieUzupPodstChorUcznia = Column(BIT, nullable=False, server_default=text("((1))"))
    gp_RodzajUbezpieczenia = Column(Integer, nullable=False, server_default=text("((2))"))


class PlbParametrWyplaty(Base):
    __tablename__ = u'plb_ParametrWyplaty'

    gp_Id = Column(Integer, primary_key=True)
    gp_WypGenerujZadanie = Column(BIT, nullable=False, server_default=text("((0))"))
    gp_WypOpisZadania = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    gp_SpNalPodstWynUrl = Column(Integer, nullable=False, server_default=text("((0))"))
    gp_SpOblDefSkl = Column(Integer, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')


class PlbRachunekDoUmowyCP(Base):
    __tablename__ = u'plb_RachunekDoUmowyCP'

    ru_Id = Column(Integer, primary_key=True)
    ru_IdUmowy = Column(Integer, nullable=False)
    ru_StatusImportuRachunku = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_StatusImportuSkladek = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_StatusImportuZaliczek = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ru_DataWystawienia = Column(DateTime, nullable=False)
    ru_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ru_KwotaRachunku = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BruttoDuze = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZasilekChorobowy = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZasilekMacierzynski = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZasilekOpiekunczy = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZasilekRodzinny = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_DodatekRodzinny = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZasilekPielegnacyjny = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_SwiadczenieRehab = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Akord = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Prowizja = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodstUbEmerRent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodstUbChorWyp = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSEmer1Firma = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSEmer1Prac = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSEmer2Firma = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSEmer2Prac = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSRentFirma = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSRentPrac = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSChorPrac = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSWypFirma = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_FP = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_FGSP = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSPrac = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSFirma = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUS = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSZasilki = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSRazem = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZUSRozliczenie = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BruttoMale = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KosztUzyskProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_KosztUzysk = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodstawaOpodatkowania = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PodatekProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Podatek = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_UbezpZdrowotne = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ZaliczkaNaPodatek = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Netto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_UbezpZdrowotne2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PotraceniaNetto = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Przelew = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PracownikOtrzymuje = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_ObciazeniePracodawcy = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_RodzajPrzychodu = Column(Integer)
    ru_PodstUbEmerRentPrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_DataZaliczek = Column(DateTime, nullable=False)
    ru_DataSkladek = Column(DateTime, nullable=False)
    ru_RozliczaECP = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_ECPMiesiac = Column(DateTime)
    ru_RozliczaAkordy = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_RozliczaProwizje = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_IdTresciRachunku = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    ru_IdOsobyWyst = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    ru_IdHarmonogramu = Column(ForeignKey(u'plb_UmowaCPHarmonogram.uch_Id'))
    ru_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_NeRazem = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_DoReki = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_DataHarm = Column(DateTime)
    ru_BudzetMacPodstEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BudzetMacPodstZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BudzetMacEmer = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BudzetMacRent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_BudzetMacZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Flagi = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ru_Zatwierdzony = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_BylKWPrzelewWydruk = Column(Integer, nullable=False, server_default=text("((0))"))
    ru_DodatkiNieopodatkowane = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_Ryczalt = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_FEP = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_PIT8C = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_KosztyAutorskie = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_PodstUbWyp = Column(MONEY, nullable=False, server_default=text("((0))"))
    ru_UnikaniePodwojnegoOpodatkowania = Column(BIT, nullable=False, server_default=text("((0))"))
    ru_PodwyzszenieZasilkuMacierzynskiego = Column(MONEY, nullable=False, server_default=text("((0))"))

    plb_UmowaCPHarmonogram = relationship(u'PlbUmowaCPHarmonogram')
    sl_Kategoria = relationship(u'SlKategoria')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    sl_GratTrescDok = relationship(u'SlGratTrescDok')


class PlbSkladnik(Base):
    __tablename__ = u'plb_Skladnik'

    sp_Id = Column(Integer, primary_key=True)
    sp_Nazwa = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sp_NazwaNaWydruku = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sp_Aktywny = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_Opodatkowany = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_IgnorujDzienDatUmowy = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_PlatnyPrzez = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_Cykl = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_DoPodstEmRe = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_DoPodstChWy = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_DoPodstZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_DoKwotyChor = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_DoKwotyUrl = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_UwzglNadgodziny = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_UwzglNocne = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_DoPodstJub = Column(BIT, nullable=False, server_default=text("((1))"))
    sp_PrawaAutorskie = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_Zmiennosc = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_WartoscZero = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_IdInstytucji = Column(ForeignKey(u'is__Instytucja.is_Id'))
    sp_AutoPotracenie = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_NieNaliczacDodatekNadgodziny = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_UwzgledniajAtrybutyDniGodzin = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_KWTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_KWMPK = Column(ForeignKey(u'st_MPK.stm_Id'))
    sp_KWZlecenie = Column(ForeignKey(u'zlp__Zlecenie.zlpz_Id'))
    sp_KWWspolczynnik = Column(Integer, nullable=False, server_default=text("((1))"))
    sp_NieUwzglZaswOWynagrodzeniu = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_ZwolnienieZPodatku = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_NieOgrSklZdr = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_PorownajZeStawkaZaszeregowania = Column(BIT, nullable=False, server_default=text("((0))"))
    sp_NieUwzglDoMinimalnej = Column(BIT, nullable=False, server_default=text("((0))"))

    is__Instytucja = relationship(u'IsInstytucja')
    st_MPK = relationship(u'StMPK')
    zlp__Zlecenie = relationship(u'ZlpZlecenie')


class PlbSkladnikAbsencja(Base):
    __tablename__ = u'plb_SkladnikAbsencja'

    spa_Id = Column(Integer, primary_key=True)
    spa_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)
    spa_TypAbsencji = Column(Integer, nullable=False)
    spa_Pomniejszaj = Column(BIT, nullable=False)
    spa_UwzglPodstEmRe = Column(BIT, nullable=False)
    spa_UwzglPodstChWy = Column(BIT, nullable=False)
    spa_UwzglKwotaChor = Column(BIT, nullable=False)
    spa_UwzglPodstZdr = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_Skladnik = relationship(u'PlbSkladnik')


class PlbSkladnikDefinicja(Base):
    __tablename__ = u'plb_SkladnikDefinicja'

    spd_Id = Column(Integer, primary_key=True)
    spd_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)
    spd_IdSkladnikaNaUmowie = Column(Integer)
    spd_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    spd_DataOd = Column(DateTime)
    spd_DataDo = Column(DateTime)
    spd_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    spd_Skrypt = Column(String(5000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    spd_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    spd_Wartosc = Column(MONEY, nullable=False, server_default=text("((0))"))
    spd_OdZawsze = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_Skladnik = relationship(u'PlbSkladnik')


class PlbSkladnikDefinicjaKlocek(Base):
    __tablename__ = u'plb_SkladnikDefinicjaKlocek'

    spdk_Id = Column(Integer, primary_key=True)
    spdk_IdDefinicji = Column(Integer, nullable=False)
    spdk_Typ = Column(Integer, nullable=False)
    spdk_Definicja = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    spdk_WartoscCy = Column(MONEY)
    spdk_WartoscInt = Column(Integer)
    spdk_ParamStr = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class PlbSkryptParametr(Base):
    __tablename__ = u'plb_SkryptParametr'

    skrp_Id = Column(Integer, primary_key=True)
    skrp_KodON = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    skrp_KodIN = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    skrp_KodIC = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    skrp_Referencje = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    skrp_Using = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    skrp_Jezyk = Column(Integer, nullable=False, server_default=text("((0))"))
    skrp_Binaria = Column(LargeBinary)


class PlbSzablonLP(Base):
    __tablename__ = u'plb_SzablonLP'

    slp_Id = Column(Integer, primary_key=True)
    slp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    slp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\

create default [DZnak] as 1

"""))
    slp_IdSzablonuNazwyLP = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'))
    slp_IdSzablonuNumeruLP = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    slp_Tekst = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    slp_FormatNazwy = Column(String(255, u'Polish_CI_AS'), nullable=False)
    slp_FormatNumeru = Column(String(255, u'Polish_CI_AS'), nullable=False)
    slp_IdKategorii = Column(Integer)
    slp_DataWyplaty = Column(Integer, nullable=False)
    slp_DataPrzekazaniaZaliczek = Column(Integer, nullable=False)
    slp_DataPrzekazaniaSkladek = Column(Integer, nullable=False)

    sl_FormatNumeracji = relationship(u'SlFormatNumeracji', primaryjoin='PlbSzablonLP.slp_IdSzablonuNazwyLP == SlFormatNumeracji.fn_Id')
    sl_FormatNumeracji1 = relationship(u'SlFormatNumeracji', primaryjoin='PlbSzablonLP.slp_IdSzablonuNumeruLP == SlFormatNumeracji.fn_Id')


class PlbSzablonZP(Base):
    __tablename__ = u'plb_SzablonZP'

    zpl_Id = Column(Integer, primary_key=True)
    zpl_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpl_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpl_RozliczacECP = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_RozliczacNadgodziny = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_RozliczacAkordy = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_RozliczacProwizje = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_RozliczacNaliczeniaPotracenia = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_RozliczacPotraceniaKomornicze = Column(BIT, nullable=False, server_default=text("((0))"))
    zpl_IdSzablonuListPlac = Column(Integer)
    zpl_McWyplacania1 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania2 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania3 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania4 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania5 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania6 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania7 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania8 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania9 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania10 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania11 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_McWyplacania12 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpl_UzupelniacDoMinimalnej = Column(BIT, nullable=False, server_default=text("((0))"))


class PlbSzablonZPSkladnik(Base):
    __tablename__ = u'plb_SzablonZPSkladnik'

    szsk_Id = Column(Integer, primary_key=True)
    szsk_IdSzablonu = Column(ForeignKey(u'plb_SzablonZP.zpl_Id'), nullable=False)
    szsk_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)

    plb_Skladnik = relationship(u'PlbSkladnik')
    plb_SzablonZP = relationship(u'PlbSzablonZP')


class PlbUmowa(Base):
    __tablename__ = u'plb_Umowa'

    up_Id = Column(Integer, primary_key=True)
    up_IdPracownika = Column(Integer, nullable=False)
    up_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    up_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    up_DataOd = Column(DateTime, nullable=False)
    up_DataDo = Column(DateTime)
    up_DataRozwiazania = Column(DateTime)
    up_PowodRozwiazaniaId = Column(ForeignKey(u'sl_GratPrzyczynaRozwUmowy.gpru_Id'))
    up_SposobRozliczaniaNadgodzin = Column(Integer, nullable=False, server_default=text("((1))"))
    up_SposobRozliczaniaAbsencji = Column(Integer, nullable=False, server_default=text("((1))"))
    up_SposobRozliczaniaPoZbilansowaniu = Column(Integer, nullable=False, server_default=text("((2))"))
    up_TytulUbezp = Column(String(4, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    up_KodPracyWSzczChar = Column(String(10, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    up_OkresPracySzczOd = Column(DateTime)
    up_OkresPracySzczDo = Column(DateTime)
    up_GenerowanyRaport = Column(Integer, nullable=False, server_default=text("((1))"))
    up_PrzenLiczbaDniChorob = Column(Integer, nullable=False, server_default=text("((0))"))
    up_CzasOczekNaZasChorob = Column(Integer, nullable=False, server_default=text("((0))"))
    up_LiczbaDniWykorzystUrlopu = Column(Integer, nullable=False, server_default=text("((0))"))
    up_KosztyUzyskania = Column(Integer, nullable=False, server_default=text("((0))"))
    up_PrzelewNaKonto = Column(Integer, nullable=False, server_default=text("((0))"))
    up_PrzelewKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_PrzelewProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_PrzelewRachunekId = Column(Integer)
    up_CzyOdliczacUlge = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacPodatek = Column(BIT, nullable=False, server_default=text("((1))"))
    up_IndywidSkalaPodatk = Column(BIT, nullable=False, server_default=text("((0))"))
    up_IndywidZFSS = Column(BIT, nullable=False, server_default=text("((0))"))
    up_IndywidZFSSKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPLiczbaProgow = Column(Integer, nullable=False, server_default=text("((3))"))
    up_ISPProg1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPProg2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPStopa1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPStopa2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPStopa3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPUlgaMiesieczna = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPUlgaRoczna = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_ISPKoszty = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_IdZawodu = Column(Integer)
    up_KodZawodu = Column(String(10, u'Polish_CI_AS'))
    up_Rozwiazana = Column(BIT, nullable=False, server_default=text("((0))"))
    up_TrescIndywidualna = Column(BIT, nullable=False, server_default=text("((0))"))
    up_Tresc = Column(LargeBinary)
    up_IdSzablonu = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    up_SposobRozliczaniaUrlopu = Column(Integer, nullable=False, server_default=text("((0))"))
    up_CzyNaliczacEmer = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacRent = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacChor = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacWyp = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacFP = Column(BIT, nullable=False, server_default=text("((1))"))
    up_CzyNaliczacFGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    up_IndywidWynChor = Column(BIT, nullable=False, server_default=text("((0))"))
    up_IndywidLiczbaDniWynChor = Column(Integer, nullable=False, server_default=text("((33))"))
    up_CzyNaliczacZaliczke = Column(BIT, nullable=False, server_default=text("((1))"))
    up_IndywidWynMin = Column(BIT, nullable=False, server_default=text("((0))"))
    up_IndywidWynMinKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    up_CzyNaliczacFEP = Column(BIT, nullable=False, server_default=text("((1))"))
    up_Uczen = Column(Integer, nullable=False, server_default=text("((0))"))
    up_DataZawarcia = Column(DateTime)
    up_CelZawarcia = Column(String(1050, u'Polish_CI_AS'))
    up_IdPracZastepowanego = Column(Integer)

    sl_GratTrescDok = relationship(u'SlGratTrescDok')
    sl_GratPrzyczynaRozwUmowy = relationship(u'SlGratPrzyczynaRozwUmowy')


class PlbUmowaCP(Base):
    __tablename__ = u'plb_UmowaCP'

    ucp_Id = Column(Integer, primary_key=True)
    ucp_IdPracownika = Column(Integer, nullable=False)
    ucp_Numer = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_RodzajUmowy = Column(Integer, nullable=False, server_default=text("((1))"))
    ucp_NaCzas = Column(Integer, nullable=False, server_default=text("((2))"))
    ucp_DataOd = Column(DateTime, nullable=False)
    ucp_DataDo = Column(DateTime)
    ucp_Rozwiazana = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_DataRozwiazania = Column(DateTime)
    ucp_IdPrzyczynaRozwiazania = Column(ForeignKey(u'sl_GratPrzyczynaRozwUmowy.gpru_Id'))
    ucp_Tytul = Column(String(144, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_Szczegoly = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_Kwota = Column(MONEY, nullable=False)
    ucp_SkladkaUbezpEm = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpRe = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpChor = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpWyp = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaUbezpZdr = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaFP = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_SkladkaFGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    ucp_ZUSTytulUbezpieczenia = Column(ForeignKey(u'sl_TytulUbezpieczenia.tu_Kod'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_ZUSKodZawodu = Column(String(10, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_ZUSKodPracySzczegCharakter = Column(String(9, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ucp_PracaSzczegCharOkresOd = Column(DateTime)
    ucp_PracaSzczegCharOkresDo = Column(DateTime)
    ucp_GenerowanaDeklaracjaZUS = Column(Integer, nullable=False, server_default=text("((1))"))
    ucp_PrzelewRachNaKonto = Column(Integer, nullable=False, server_default=text("((1))"))
    ucp_ProcentRachNaKonto = Column(MONEY, nullable=False)
    ucp_KwotaRachNaKonto = Column(MONEY, nullable=False)
    ucp_IdRachBankowyPracownika = Column(Integer)
    ucp_IdSzablonuUmowy = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    ucp_SzablonUmowy = Column(LargeBinary)
    ucp_SzablonUmowyIndywidualny = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_IdFmtNumeracjiRachunkow = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'))
    ucp_RodzajPrzychodu = Column(Integer, nullable=False)
    ucp_IdSzablonuRachunku = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    ucp_ZryczaltowanyPodatek = Column(MONEY, nullable=False, server_default=text("((0))"))
    ucp_KosztyUzyskaniaMetoda = Column(Integer, nullable=False, server_default=text("((1))"))
    ucp_KosztyUzyskaniaKwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    ucp_KosztyUzyskaniaProcent = Column(MONEY, nullable=False, server_default=text("((0))"))
    ucp_IdDzialu = Column(ForeignKey(u'sl_Dzial.dzi_Id'))
    ucp_Rach_Kategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ucp_OgraniczKwoteRachunkow = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_SkladkaFEP = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_NieOgraniczajKwotyChorobowego = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_KosztyAutorskie = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_NieOgraniczajKwotyZdrowotnego = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_NiePomniejszajPodstawyOpodatkowania = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_CzasOczekNaZasChorob = Column(Integer, nullable=False, server_default=text("((0))"))
    ucp_UnikaniePodwojnegoOpodatkowania = Column(BIT, nullable=False, server_default=text("((0))"))
    ucp_IdSlownikZawodu = Column(Integer)

    sl_Dzial = relationship(u'SlDzial')
    sl_FormatNumeracji = relationship(u'SlFormatNumeracji')
    sl_GratPrzyczynaRozwUmowy = relationship(u'SlGratPrzyczynaRozwUmowy')
    sl_GratTrescDok = relationship(u'SlGratTrescDok', primaryjoin='PlbUmowaCP.ucp_IdSzablonuRachunku == SlGratTrescDok.td_Id')
    sl_GratTrescDok1 = relationship(u'SlGratTrescDok', primaryjoin='PlbUmowaCP.ucp_IdSzablonuUmowy == SlGratTrescDok.td_Id')
    sl_Kategoria = relationship(u'SlKategoria')
    sl_TytulUbezpieczenia = relationship(u'SlTytulUbezpieczenia')


class PlbUmowaCPHarmonogram(Base):
    __tablename__ = u'plb_UmowaCPHarmonogram'

    uch_Id = Column(Integer, primary_key=True)
    uch_IdUmowy = Column(Integer, nullable=False)
    uch_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uch_RodzajPozycji = Column(Integer, nullable=False, server_default=text("((1))"))
    uch_RodzajCyklu = Column(Integer, nullable=False, server_default=text("((0))"))
    uch_OkresSposobOkreslenia = Column(Integer, nullable=False, server_default=text("((0))"))
    uch_OkresWydluzOkres = Column(Integer, nullable=False, server_default=text("((0))"))
    uch_OkresOd = Column(DateTime, nullable=False)
    uch_OkresDo = Column(DateTime, nullable=False)
    uch_DataRachData = Column(DateTime, nullable=False)
    uch_DataRachDzien = Column(Integer, server_default=text("((1))"))
    uch_DataRachDzienTygodnia = Column(Integer, server_default=text("((1))"))
    uch_DataRachKorekta = Column(Integer)
    uch_KwotaRachunku = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaPotracen = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaZasilkuRodzinnego = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaDodatkuRodzinnego = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaZasilkuPielegnacyjnego = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaZasilkuPogrzebowego = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaZasilkuPorodowego = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_KwotaZasilkuSwiadczeniaReh = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_RozliczAkordy = Column(BIT, nullable=False, server_default=text("((0))"))
    uch_RozliczProwizje = Column(BIT, nullable=False, server_default=text("((0))"))
    uch_RozliczECP = Column(BIT, nullable=False, server_default=text("((0))"))
    uch_RozliczECPMiesiac = Column(Integer, server_default=text("((1))"))
    uch_IdSzablonuWydruku = Column(ForeignKey(u'sl_GratTrescDok.td_Id'), nullable=False)
    uch_RodzajPrzychodu = Column(Integer)
    uch_KwotaDodatkowNieopodatkowanych = Column(MONEY, nullable=False, server_default=text("((0))"))
    uch_Ryczalt = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_GratTrescDok = relationship(u'SlGratTrescDok')


class PlbUmowaCPPrzelewy(Base):
    __tablename__ = u'plb_UmowaCPPrzelewy'

    ucpp_Id = Column(Integer, primary_key=True)
    ucpp_IdUmowy = Column(ForeignKey(u'plb_UmowaCP.ucp_Id'), nullable=False)
    ucpp_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'))
    ucpp_MetodaPrzelewu = Column(Integer, nullable=False)
    ucpp_Kwota = Column(MONEY)
    ucpp_Procent = Column(MONEY)
    ucpp_Priorytet = Column(Integer, nullable=False)

    rb__RachBankowy = relationship(u'RbRachBankowy')
    plb_UmowaCP = relationship(u'PlbUmowaCP')


class PlbUmowaCPParametry(Base):
    __tablename__ = u'plb_UmowaCP_Parametry'

    up_Id = Column(Integer, primary_key=True)
    up_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class PlbUmowaCPParametryZestaw(Base):
    __tablename__ = u'plb_UmowaCP_Parametry_Zestaw'

    upz_Id = Column(Integer, primary_key=True)
    upz_IdParametrow = Column(ForeignKey(u'plb_UmowaCP_Parametry.up_Id'), nullable=False)
    upz_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    upz_Umowa_IdFmtNumeru = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'))
    upz_Umowa_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    upz_Umowa_IdTresci = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    upz_Rach_IdFmtNumeru = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'))
    upz_Rach_RodzajPrzychodu = Column(Integer, nullable=False, server_default=text("((1))"))
    upz_Rach_TrescRachunku = Column(ForeignKey(u'sl_GratTrescDok.td_Id'))
    upz_Rach_Ryczalt_Podatek = Column(MONEY, nullable=False, server_default=text("((19))"))
    upz_Rach_Ryczalt_Koszty_Metoda = Column(Integer, nullable=False, server_default=text("((1))"))
    upz_Rach_Ryczalt_Koszty_Procent = Column(MONEY, nullable=False, server_default=text("((20))"))
    upz_Rach_Ryczalt_Koszty_Kwota = Column(MONEY, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_Emertyalny = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_Rentowy = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_Chorobowy = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_Wypadkowy = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_Zdrowotny = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Naliczaj_FP = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_Rach_Naliczaj_FGSP = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_Rach_PrzelewRachNaKonto = Column(Integer, nullable=False, server_default=text("((1))"))
    upz_Rach_ProcentRachNaKonto = Column(MONEY, nullable=False, server_default=text("((0))"))
    upz_Rach_KwotaRachNaKonto = Column(MONEY, nullable=False, server_default=text("((0))"))
    upz_Domyslny = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_Kategoria = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    upz_Umowa_GenerowanaDeklaracjaZUS = Column(Integer, nullable=False, server_default=text("((1))"))
    upz_Rach_Naliczaj_FEP = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Umowa_OgraniczSumeRach = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_Rach_KosztyAutorskie = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_UmowaCP_Parametry = relationship(u'PlbUmowaCPParametry')
    sl_FormatNumeracji = relationship(u'SlFormatNumeracji', primaryjoin='PlbUmowaCPParametryZestaw.upz_Rach_IdFmtNumeru == SlFormatNumeracji.fn_Id')
    sl_Kategoria = relationship(u'SlKategoria')
    sl_GratTrescDok = relationship(u'SlGratTrescDok', primaryjoin='PlbUmowaCPParametryZestaw.upz_Rach_TrescRachunku == SlGratTrescDok.td_Id')
    sl_FormatNumeracji1 = relationship(u'SlFormatNumeracji', primaryjoin='PlbUmowaCPParametryZestaw.upz_Umowa_IdFmtNumeru == SlFormatNumeracji.fn_Id')
    sl_GratTrescDok1 = relationship(u'SlGratTrescDok', primaryjoin='PlbUmowaCPParametryZestaw.upz_Umowa_IdTresci == SlGratTrescDok.td_Id')


class PlbUmowaDzialStanowisko(Base):
    __tablename__ = u'plb_UmowaDzialStanowisko'

    udz_Id = Column(Integer, primary_key=True)
    udz_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    udz_DataOd = Column(DateTime, nullable=False)
    udz_DataDo = Column(DateTime)
    udz_IdDzialu = Column(ForeignKey(u'sl_Dzial.dzi_Id'))
    udz_IdStanowiska = Column(ForeignKey(u'sl_Stanowisko.stn_Id'))
    udz_CzyNaliczacFEP = Column(BIT, nullable=False, server_default=text("((0))"))
    udz_IdKoduPracyWSzczChar = Column(ForeignKey(u'sl_PracaSzczegolnyCharakter.pch_Id'))
    udz_IdKategorii = Column(Integer)

    sl_Dzial = relationship(u'SlDzial')
    sl_PracaSzczegolnyCharakter = relationship(u'SlPracaSzczegolnyCharakter')
    sl_Stanowisko = relationship(u'SlStanowisko')
    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaKalendarz(Base):
    __tablename__ = u'plb_UmowaKalendarz'

    uk_Id = Column(Integer, primary_key=True)
    uk_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    uk_IdKalendarza = Column(Integer, nullable=False)
    uk_DataOd = Column(DateTime, nullable=False)
    uk_DataDo = Column(DateTime)
    uk_WymiarLicznik = Column(Integer, nullable=False, server_default=text("((1))"))
    uk_WymiarMianownik = Column(Integer, nullable=False, server_default=text("((1))"))
    uk_WymiarDobowy = Column(Integer, nullable=False, server_default=text("((480))"))
    uk_DodatekZaNadgodzinyPo = Column(Integer, nullable=False, server_default=text("((480))"))

    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaParametr(Base):
    __tablename__ = u'plb_UmowaParametr'

    upp_Id = Column(Integer, primary_key=True)
    upp_FormatNumeru = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'), nullable=False)
    upp_RaportZUS = Column(Integer, nullable=False)
    upp_KosztyUzyskania = Column(Integer, nullable=False)
    upp_PrzelewNaKonto = Column(Integer, nullable=False)
    upp_PrzelewProcent = Column(MONEY, nullable=False)
    upp_PrzelewKwota = Column(MONEY, nullable=False)
    upp_Tresc = Column(Integer)
    upp_WymiarLicznik = Column(Integer, nullable=False)
    upp_WymiarMianownik = Column(Integer, nullable=False)
    upp_IdKalendarza = Column(ForeignKey(u'sl_Kalendarz.slk_Id'), nullable=False)
    upp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)

    sl_FormatNumeracji = relationship(u'SlFormatNumeracji')
    sl_Kalendarz = relationship(u'SlKalendarz')
    par__Ewid = relationship(u'ParEwid')


class PlbUmowaPrzelewy(Base):
    __tablename__ = u'plb_UmowaPrzelewy'

    uppp_Id = Column(Integer, primary_key=True)
    uppp_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    uppp_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'))
    uppp_MetodaPrzelewu = Column(Integer, nullable=False)
    uppp_Kwota = Column(MONEY)
    uppp_Procent = Column(MONEY)
    uppp_Priorytet = Column(Integer, nullable=False)

    rb__RachBankowy = relationship(u'RbRachBankowy')
    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaSkladnik(Base):
    __tablename__ = u'plb_UmowaSkladnik'

    ups_Id = Column(Integer, primary_key=True)
    ups_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)
    ups_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    ups_SkladnikDrukowany = Column(BIT, nullable=False)

    plb_Skladnik = relationship(u'PlbSkladnik')
    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaWyjatekCzasuPracy(Base):
    __tablename__ = u'plb_UmowaWyjatekCzasuPracy'

    uwcp_Id = Column(Integer, primary_key=True)
    uwcp_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    uwcp_IdAtrybut = Column(Integer)
    uwcp_Data = Column(DateTime, nullable=False)
    uwcp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uwcp_Rodzaj = Column(Integer, nullable=False)
    uwcp_IleDzienne = Column(Integer)
    uwcp_IleNocne = Column(Integer)
    uwcp_Ustawowy = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaWyjatekCzasuPracyOkre(Base):
    __tablename__ = u'plb_UmowaWyjatekCzasuPracyOkres'

    uwg_Id = Column(Integer, primary_key=True)
    uwg_IdWyj = Column(Integer, nullable=False)
    uwg_PoraDnia = Column(Integer, nullable=False, server_default=text("((0))"))
    uwg_Od = Column(Integer, nullable=False)
    uwg_Do = Column(Integer, nullable=False)


class PlbUmowaZestaw(Base):
    __tablename__ = u'plb_UmowaZestaw'

    upz_Id = Column(Integer, primary_key=True)
    upz_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    upz_IdSzablonuLP = Column(ForeignKey(u'plb_SzablonLP.slp_Id'))
    upz_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    upz_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    upz_RozliczacECP = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_RozliczacNadgodziny = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_RozliczacAkordy = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_RozliczacProwizje = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_RozliczacNaliczeniaPotracenia = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_RozliczacPotraceniaKomornicze = Column(BIT, nullable=False, server_default=text("((0))"))
    upz_McWyplacania1 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania2 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania3 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania4 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania5 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania6 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania7 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania8 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania9 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania10 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania11 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_McWyplacania12 = Column(BIT, nullable=False, server_default=text("((1))"))
    upz_UzupelniacDoMinimalnej = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_SzablonLP = relationship(u'PlbSzablonLP')
    plb_Umowa = relationship(u'PlbUmowa')


class PlbUmowaZestawSkladnik(Base):
    __tablename__ = u'plb_UmowaZestawSkladnik'

    upzs_Id = Column(Integer, primary_key=True)
    upzs_IdZestawu = Column(Integer, nullable=False)
    upzs_IdSkladnika = Column(Integer, nullable=False)


class PlbWyplata(Base):
    __tablename__ = u'plb_Wyplata'

    wyp_Id = Column(Integer, primary_key=True)
    wyp_IdListyPlac = Column(ForeignKey(u'plb_ListaPlac.lp_Id'), nullable=False)
    wyp_IdUmowy = Column(ForeignKey(u'plb_Umowa.up_Id'), nullable=False)
    wyp_IdZestawu = Column(Integer)
    wyp_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_Flagi = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wyp_BruttoDuze = Column(MONEY, nullable=False)
    wyp_BruttoMale = Column(MONEY, nullable=False)
    wyp_KosztUzyskMc = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_KosztUzysk50 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_KosztUzysk = Column(MONEY, nullable=False)
    wyp_PodstawaOpodatkowania = Column(MONEY, nullable=False)
    wyp_Podatek = Column(MONEY, nullable=False)
    wyp_Odliczenia = Column(MONEY, nullable=False)
    wyp_UbezpZdrowotne = Column(MONEY, nullable=False)
    wyp_ZaliczkaObliczona = Column(MONEY, nullable=False)
    wyp_ZaliczkaNaPodatek = Column(MONEY, nullable=False)
    wyp_Netto = Column(MONEY, nullable=False)
    wyp_UbezpZdrowotne2 = Column(MONEY, nullable=False)
    wyp_NeFirmaNaliczenia = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_NeFirmaPotracenia = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_NeFirma = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZUSZasilkiBr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZUSZasilkiNe = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_NeRazem = Column(MONEY, nullable=False)
    wyp_PracownikOtrzymuje = Column(MONEY, nullable=False)
    wyp_Przelew = Column(MONEY, nullable=False)
    wyp_DoReki = Column(MONEY, nullable=False)
    wyp_ZusEmer1Prac = Column(MONEY, nullable=False)
    wyp_ZusEmer1Firma = Column(MONEY, nullable=False)
    wyp_ZusEmer2Prac = Column(MONEY, nullable=False)
    wyp_ZusRentPrac = Column(MONEY, nullable=False)
    wyp_ZusRentFirma = Column(MONEY, nullable=False)
    wyp_ZusChorPrac = Column(MONEY, nullable=False)
    wyp_ZusWypFirma = Column(MONEY, nullable=False)
    wyp_Fp = Column(MONEY, nullable=False)
    wyp_FGSP = Column(MONEY, nullable=False)
    wyp_ZUSPrac = Column(MONEY, nullable=False)
    wyp_ZUSFirma = Column(MONEY, nullable=False)
    wyp_ZUS = Column(MONEY, nullable=False)
    wyp_ZUSZasilki = Column(MONEY, nullable=False)
    wyp_ZUSRazem = Column(MONEY, nullable=False)
    wyp_ZUSRozliczenie = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ObciazeniePracodawcy = Column(MONEY, nullable=False)
    wyp_PodstUbEmerRentOryg = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbEmerRent = Column(MONEY, nullable=False)
    wyp_PodstUbChorWyp = Column(MONEY, nullable=False)
    wyp_PodstUbZdr = Column(MONEY, nullable=False)
    wyp_PodstUbEmerRentPrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_IdOsobyWyst = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    wyp_CzyWchodziDoWyznaczaniaChor = Column(BIT, nullable=False, server_default=text("((1))"))
    wyp_KwotaChorobowego = Column(MONEY, nullable=False)
    wyp_KwotaUrlopowegoStale = Column(MONEY, nullable=False)
    wyp_KwotaUrlopowegoZmienne = Column(MONEY, nullable=False)
    wyp_PodstUrlopSt0 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUrlopSt3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUrlopSt12 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUrlopZm3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUrlopZm12 = Column(MONEY, nullable=False)
    wyp_LiczbaDniWynChorobowego = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_LiczbaDniZasChorobowego = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_LiczbaGodzinUrlopowego = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_LiczbaDniUrlopowego = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_RozliczaECP = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_RozliczaNadgodziny = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_RozliczaAkordy = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_RozliczaProwizje = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_RozliczaNalPotr = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_StatDniChoroby = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniUrlWyp = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniUrlMac = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniUrlWych = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniUrlBezpl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniZwolnOkolPl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniZwolnPl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniOpiekiNadDzieckiem = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniOpieki = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniNieobUspPl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniNieobNieusp = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniNieobUspNiepl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniPoszPracy = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniSluzby = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniMiesiaca = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniDoPrzepr = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatDniPrzepr = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzDoPrzepr = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzPrzepr = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNadlDoWypl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNadlNoc = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNadlDoRozl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzAbsDoPotr = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzAbsDoRozl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNoc = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzBilansDoRozl = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_BudzetMacPodstEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetMacEmer = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetMacRent = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetWychPodstEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetWychPodstZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetWychEmer = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetWychRent = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_BudzetWychZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZusZasChor = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZusZasOp = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZusZasMac = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_Sledz = Column(Text(collation=u'Polish_CI_AS'))
    wyp_SledzWersja = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_CzyKorygowana = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_KorektaKiedy = Column(DateTime)
    wyp_KorektaKto = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'))
    wyp_PodstChorob = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PierwDzienZasChor = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_McPodstChorOd = Column(DateTime)
    wyp_McPodstChorDo = Column(DateTime)
    wyp_PodstChorob30 = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_UbezpZdrowotneNiepomniejszone = Column(MONEY, server_default=text("((0))"))
    wyp_UbezpZdrowotnePomniejszenie = Column(MONEY, server_default=text("((0))"))
    wyp_BylKWPrzelewWydruk = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_RozliczaPotraceniaKomornicze = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_StatDniDoPodstChorWyplKoryg = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNadlDoWyplPierwsze = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_StatGodzNadlDoWyplKolejne = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_FEP = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbFEP = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbFEPOryg = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbFEPPrzekroczona = Column(BIT, nullable=False, server_default=text("((0))"))
    wyp_ZusZasReh = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_SposobPrzeliczania = Column(Integer, nullable=False, server_default=text("((0))"))
    wyp_BruttoDuzeOdl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbEmReOdl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbChWyOdl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbZdrOdl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZUSPracOdl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_KosztUzyskDeklRoczne = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbEmReNieodlNieogr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbChWyNieodlNieogr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_ZUSPracNieodlNieogr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodstUbZdrNieodlNieogr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_UbezpZdrowotneNieodlNieogr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyp_PodwyzszenieZasilkuMacierzynskiego = Column(MONEY, nullable=False, server_default=text("((0))"))

    plb_ListaPlac = relationship(u'PlbListaPlac')
    pd_Uzytkownik = relationship(u'PdUzytkownik', primaryjoin='PlbWyplata.wyp_IdOsobyWyst == PdUzytkownik.uz_Id')
    plb_Umowa = relationship(u'PlbUmowa')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', primaryjoin='PlbWyplata.wyp_KorektaKto == PdUzytkownik.uz_Id')


class PlbWyplataSkladnik(Base):
    __tablename__ = u'plb_WyplataSkladnik'

    wyps_Id = Column(Integer, primary_key=True)
    wyps_IdWyplaty = Column(ForeignKey(u'plb_Wyplata.wyp_Id'), nullable=False)
    wyps_IdSkladnika = Column(ForeignKey(u'plb_Skladnik.sp_Id'), nullable=False)
    wyps_Nazwa = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wyps_WartoscNom = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_WartoscFin = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_Opodatkowany = Column(BIT, nullable=False, server_default=text("((1))"))
    wyps_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    wyps_KwotaDoChor = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_KwotaDoUrl = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_KwotaEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_KwotaChWy = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_KwotaZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_BylKWPrzelewWydruk = Column(Integer, nullable=False, server_default=text("((0))"))
    wyps_CzyPotracenieKomornicze = Column(BIT, nullable=False, server_default=text("((0))"))
    wyps_KwotaFEP = Column(MONEY, nullable=False, server_default=text("((0))"))
    wyps_ZwolnienieZPodatku = Column(BIT, nullable=False, server_default=text("((0))"))
    wyps_NieOgrSklZdr = Column(BIT, nullable=False, server_default=text("((0))"))

    plb_Skladnik = relationship(u'PlbSkladnik')
    plb_Wyplata = relationship(u'PlbWyplata')


t_plb_WyrokTrybunalu = Table(
    u'plb_WyrokTrybunalu', metadata,
    Column(u'wtko_IdWyplata', Integer),
    Column(u'wtko_IdWyplataSklad', Integer),
    Column(u'wtko_KwotaDoChor', MONEY, nullable=False)
)


class PojEksploatacja(Base):
    __tablename__ = u'poj_Eksploatacja'

    ppr_Id = Column(Integer, primary_key=True)
    ppr_IdPojazdu = Column(ForeignKey(u'poj_Pojazd.poj_Id'), nullable=False)
    ppr_Typ = Column(Integer, nullable=False)
    ppr_Zaksiegowany = Column(Integer, nullable=False)
    ppr_DataOtrzymania = Column(DateTime)
    ppr_Data = Column(DateTime, nullable=False)
    ppr_Cel = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_Trasa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_Km = Column(MONEY)
    ppr_CenaKm = Column(MONEY)
    ppr_WartoscP = Column(MONEY)
    ppr_WartoscR = Column(MONEY)
    ppr_NrDok = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    ppr_KhNazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_KhUlica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_KhMiasto = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_KhKodPocztowy = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_KhNIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ppr_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_CzyVAT = Column(BIT, nullable=False)
    ppr_DataZakDost = Column(DateTime)
    ppr_Kierowca = Column(String(51, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ppr_StanLicznika = Column(MONEY)
    ppr_Udostepnienie = Column(BIT, nullable=False, server_default=text("((0))"))
    ppr_KhNazwaPelna = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')
    poj_Pojazd = relationship(u'PojPojazd')


class PojKosztyEksploatacji(Base):
    __tablename__ = u'poj_KosztyEksploatacji'

    pojke_Id = Column(Integer, primary_key=True)
    pojke_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    pojke_NrDok = Column(String(30, u'Polish_CI_AS'), nullable=False)
    pojke_Data = Column(DateTime, nullable=False)
    pojke_Status = Column(Integer, nullable=False)
    pojke_Jako = Column(Integer, nullable=False)
    pojke_RachunkiMc = Column(MONEY, nullable=False)
    pojke_RachunkiRos = Column(MONEY, nullable=False)
    pojke_PrzejazdyMc = Column(MONEY, nullable=False)
    pojke_PrzejazdyRos = Column(MONEY, nullable=False)
    pojke_DoKsiegowania = Column(MONEY, nullable=False)
    pojke_DoKsiegowaniaRos = Column(MONEY, nullable=False)
    pojke_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    pojke_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')


class PojKosztyEksploatacjiWpi(Base):
    __tablename__ = u'poj_KosztyEksploatacjiWpis'

    pojkw_Id = Column(Integer, primary_key=True)
    pojkw_IdKosztyEksploatacji = Column(ForeignKey(u'poj_KosztyEksploatacji.pojke_Id'), nullable=False)
    pojkw_IdPojazdu = Column(ForeignKey(u'poj_Pojazd.poj_Id'), nullable=False)
    pojkw_RachunkiMc = Column(MONEY, nullable=False)
    pojkw_RachunkiRos = Column(MONEY, nullable=False)
    pojkw_PrzejazdyMc = Column(MONEY, nullable=False)
    pojkw_PrzejazdyRos = Column(MONEY, nullable=False)
    pojkw_DoKsiegowania = Column(MONEY, nullable=False)
    pojkw_DoKsiegowaniaRos = Column(MONEY, nullable=False)

    poj_KosztyEksploatacji = relationship(u'PojKosztyEksploatacji')
    poj_Pojazd = relationship(u'PojPojazd')


class PojKsiegowanie(Base):
    __tablename__ = u'poj_Ksiegowanie'

    pojk_Id = Column(Integer, primary_key=True)
    pojk_IdPojazdu = Column(ForeignKey(u'poj_Pojazd.poj_Id'), nullable=False)
    pojk_Rok = Column(Integer, nullable=False)
    pojk_Miesiac = Column(Integer, nullable=False)
    pojk_Wartosc = Column(MONEY, nullable=False)

    poj_Pojazd = relationship(u'PojPojazd')


class PojParametr(Base):
    __tablename__ = u'poj_Parametr'

    pp_Id = Column(Integer, primary_key=True)
    pp_PrzejazdIdTrasy = Column(ForeignKey(u'sl_PojTrasa.sptr_Id'))
    pp_PrzejazdIdCelu = Column(ForeignKey(u'sl_PojCel.spc_Id'))
    pp_RachunekIdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    pp_RachunekIdEwidVat = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    pp_RachunekIdKategoriiVat = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    pp_RachunekRodzajVat = Column(Integer)
    pp_RachunekOdliczenieVat = Column(Integer)
    pp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'))
    pp_PrzejazdWylicz = Column(Integer, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')
    sl_PojCel = relationship(u'SlPojCel')
    sl_PojTrasa = relationship(u'SlPojTrasa')
    sl_TypEwidVAT = relationship(u'SlTypEwidVAT')
    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='PojParametr.pp_RachunekIdKategorii == SlKategoria.kat_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='PojParametr.pp_RachunekIdKategoriiVat == SlKategoria.kat_Id')


class PojPojazd(Base):
    __tablename__ = u'poj_Pojazd'

    poj_Id = Column(Integer, primary_key=True)
    poj_Marka = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    poj_NrRej = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    poj_IdWlasciciela = Column(Integer, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    poj_Wlasciciel = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    poj_Typ = Column(Integer, nullable=False)
    poj_UzywanyJako = Column(Integer)
    poj_Uzywany = Column(BIT, nullable=False)
    poj_MalyPojazd = Column(Integer, nullable=False, server_default=text("((0))"))
    poj_PelneOdliczenieVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    poj_DataRozpoczecia = Column(DateTime)
    poj_StanLicznika = Column(MONEY, nullable=False, server_default=text("((0))"))
    poj_DataKoncaEwidencji = Column(DateTime)
    poj_NrAnalityka = Column(String(5, u'Polish_CI_AS'))


class PrBO(Base):
    __tablename__ = u'pr_BO'

    pbo_Id = Column(Integer, primary_key=True)
    pbo_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pbo_PrzychodW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_PrzychodR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_Przychod = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_KUPW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_KUPR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_KUP = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ZaliczkiW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ZaliczkiR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_Zaliczki = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_PodstEmReW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_PodstEmReR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_PodstEmRe = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklSpolW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklSpolR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklSpol = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdrW = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdrR = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdr = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdr2W = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdr2R = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_SklZdr2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_DniChorobowe = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrlopWyp = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst4 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst5 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst6 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst7 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst8 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst9 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst10 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst11 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorPodst12 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst1 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst2 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst3 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst4 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst5 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst6 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst7 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst8 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst9 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst10 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst11 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorWPodst12 = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt4 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt5 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt6 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt7 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt8 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt9 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt10 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt11 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklSt12 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm1 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm2 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm3 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm4 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm5 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm6 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm7 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm8 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm9 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm10 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm11 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrSklZm12 = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrGodz1 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz2 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz3 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz4 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz5 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz6 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz7 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz8 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz9 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz10 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz11 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_UrGodz12 = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_CiagloscZasChor = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_OkresyNieskladkowe = Column(String(4000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pbo_ChorobaWOst3Mies = Column(BIT, nullable=False, server_default=text("((0))"))
    pbo_ChorobaMiesiac = Column(Integer, nullable=False, server_default=text("((0))"))
    pbo_ChorobaPodstawa = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_PodstFEP = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_KosztyPrawAutor = Column(MONEY, nullable=False, server_default=text("((0))"))
    pbo_UrlopDobowyWymiar = Column(Integer, nullable=False, server_default=text("((480))"))

    pr_Pracownik = relationship(u'PrPracownik')


class PrBadaniaOkresowe(Base):
    __tablename__ = u'pr_BadaniaOkresowe'

    pbo_Id = Column(Integer, primary_key=True)
    pbo_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pbo_IdBadania = Column(ForeignKey(u'sl_BadanieOkresowe.bo_Id'), nullable=False)
    pbo_DataWykonania = Column(DateTime, nullable=False)
    pbo_DataWaznosci = Column(DateTime, nullable=False)

    sl_BadanieOkresowe = relationship(u'SlBadanieOkresowe')
    pr_Pracownik = relationship(u'PrPracownik')


class PrCechaPr(Base):
    __tablename__ = u'pr_CechaPr'

    cp_Id = Column(Integer, primary_key=True)
    cp_IdPrac = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    cp_IdCecha = Column(ForeignKey(u'sl_CechaPr.cpr_Id'), nullable=False, index=True)

    sl_CechaPr = relationship(u'SlCechaPr')
    pr_Pracownik = relationship(u'PrPracownik')


class PrDokument(Base):
    __tablename__ = u'pr_Dokument'

    pdk_Id = Column(Integer, primary_key=True)
    pdk_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pdk_IdKategorii = Column(ForeignKey(u'sl_KategoriaDokumentu.kd_Id'), nullable=False)
    pdk_Zablokowany = Column(BIT, nullable=False)
    pdk_DataModyfikacji = Column(DateTime, nullable=False)
    pdk_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_Tresc = Column(LargeBinary, nullable=False)
    pdk_Typ = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pdk_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    sl_KategoriaDokumentu = relationship(u'SlKategoriaDokumentu')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    pr_Pracownik = relationship(u'PrPracownik')


class PrGIODO(Base):
    __tablename__ = u'pr_GIODO'

    pgi_Id = Column(Integer, primary_key=True)
    pgi_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pgi_IdUzytkownika = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False, index=True)
    pgi_Czas = Column(DateTime, nullable=False, index=True, server_default=text("(getdate())"))
    pgi_Operacja = Column(Integer, nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class PrInneDochody(Base):
    __tablename__ = u'pr_InneDochody'

    pid_Id = Column(Integer, primary_key=True)
    pid_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pid_DataWpisu = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    pid_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pid_Rok = Column(Integer, nullable=False)
    pid_Kwota = Column(MONEY, nullable=False)
    pid_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    pid_Miesiac = Column(Integer, nullable=False, server_default=text("(datepart(month,getdate()))"))

    pr_Pracownik = relationship(u'PrPracownik')


class PrJezyki(Base):
    __tablename__ = u'pr_Jezyki'

    pje_Id = Column(Integer, primary_key=True)
    pje_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pje_Jezyk = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pje_StZnajomosci = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    pr_Pracownik = relationship(u'PrPracownik')


class PrKosztyZPrawAutorskich(Base):
    __tablename__ = u'pr_KosztyZPrawAutorskich'

    pka_Id = Column(Integer, primary_key=True)
    pka_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pka_DataWpisu = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    pka_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pka_Rok = Column(Integer, nullable=False)
    pka_Kwota = Column(MONEY, nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')


class PrKursy(Base):
    __tablename__ = u'pr_Kursy'

    pku_Id = Column(Integer, primary_key=True)
    pku_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pku_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pku_DataOd = Column(DateTime)
    pku_DataDo = Column(DateTime)

    pr_Pracownik = relationship(u'PrPracownik')


class PrKursyBHP(Base):
    __tablename__ = u'pr_KursyBHP'

    pbhp_Id = Column(Integer, primary_key=True)
    pbhp_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pbhp_IdKursu = Column(ForeignKey(u'sl_KursBHP.kbhp_Id'), nullable=False)
    pbhp_DataOdbycia = Column(DateTime, nullable=False)
    pbhp_DataWaznosci = Column(DateTime, nullable=False)

    sl_KursBHP = relationship(u'SlKursBHP')
    pr_Pracownik = relationship(u'PrPracownik')


class PrMotywacja(Base):
    __tablename__ = u'pr_Motywacja'

    pmo_Id = Column(Integer, primary_key=True)
    pmo_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pmo_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pmo_DataOtrzymania = Column(DateTime)

    pr_Pracownik = relationship(u'PrPracownik')


class PrOrganizacje(Base):
    __tablename__ = u'pr_Organizacje'

    por_Id = Column(Integer, primary_key=True)
    por_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    por_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    por_Funkcja = Column(String(255, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    por_DataOd = Column(DateTime)
    por_DataDo = Column(DateTime)

    pr_Pracownik = relationship(u'PrPracownik')


class PrPracownik(Base):
    __tablename__ = u'pr_Pracownik'

    pr_Id = Column(Integer, primary_key=True)
    pr_Imie = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_Imie2 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_Nazwisko = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_NazwiskoRodowe = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_EMail = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_DataObowiazywania = Column(DateTime, nullable=False)
    pr_DataUrodzenia = Column(DateTime, nullable=False)
    pr_MiejsceUrodzenia = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_ImieOjca = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_ImieMatki = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_IdStanuCywilnego = Column(ForeignKey(u'sl_StanCywilny.sc_Id'))
    pr_Plec = Column(Integer)
    pr_Obywatelstwo = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_TypIdentyfikatora = Column(ForeignKey(u'sl_TypIdentyfikatora.tid_Kod'))
    pr_DTNr = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_DTWydanyPrzez = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_DTDataWydania = Column(DateTime)
    pr_RodzajUbezp = Column(Integer, nullable=False)
    pr_PrawoDoEmer = Column(ForeignKey(u'sl_PrawoDoEmerytury.pde_Kod'))
    pr_StopienNiepelnosprawnosci = Column(ForeignKey(u'sl_StopienNiepelnosprawnosci.stn_Kod'))
    pr_NIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_PESEL = Column(String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_IdUrzeduSkarbowego = Column(ForeignKey(u'is__Instytucja.is_Id'))
    pr_IdGrupy = Column(ForeignKey(u'sl_GrupaPrac.grp_Id'))
    pr_NrAnalityki = Column(String(5, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_UzywajAdresKorespondencyjny = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_NazwiskoRodoweMatki = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_Narodowosc = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_Aktywny = Column(BIT, nullable=False, server_default=text("((1))"))
    pr_UzywajAdresZameldowania = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_WWW = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_StNiepelnosprawnosciDataOd = Column(DateTime)
    pr_StNiepelnosprawnosciDataDo = Column(DateTime)
    pr_StopienNiezdolnosciDoPracy = Column(ForeignKey(u'sl_StopienNiezdolnosciDoPracy.stnp_Kod'))
    pr_StNiezdolnosciDataOd = Column(DateTime)
    pr_StNiezdolnosciDataDo = Column(DateTime)
    pr_KartaPobytuStalego = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_KartaPobytuCzasowego = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_RozliczanieZMalzonkiem = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_OddzialNFZ = Column(ForeignKey(u'sl_OddzialNFZ.onfz_Kod'))
    pr_DataPrzystapieniaDoNFZ = Column(DateTime)
    pr_GospodarstwoZPracodawca = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_PokrewienstwoZPracodawca = Column(ForeignKey(u'sl_Pokrewienstwo.pokr_Kod'))
    pr_Wyksztalcenie = Column(ForeignKey(u'sl_Wyksztalcenie.wyk_Kod'))
    pr_ZawodWyuczony = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_UkonczonaSzkola = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_RokUkonczeniaSzkoly = Column(Integer)
    pr_LiczbaLatNauki = Column(Integer)
    pr_ObowiazekObrony = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_WKU = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_StopienWojskowy = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_NrKsiazeczkiWojskowej = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_NrSpecjalnosciWojskowej = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pr_DaneOsobowePrzetwarzanie = Column(BIT, nullable=False, server_default=text("((1))"))
    pr_DaneOsoboweMarketing = Column(BIT, nullable=False, server_default=text("((1))"))
    pr_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'))
    pr_DniDodatkowyUrlop = Column(Integer, nullable=False, server_default=text("((0))"))
    pr_IdentyfikacjaPodatkowa = Column(Integer, nullable=False, server_default=text("((2))"))
    pr_IdentyfikacjaPodatkowaMal = Column(Integer, nullable=False, server_default=text("((2))"))
    pr_ZwolnienieZeSkladekFPiFGSPOd = Column(DateTime)
    pr_ZwolnienieZeSkladekFPiFGSPDo = Column(DateTime)
    pr_NieOgraniczajKosztyAutorskie = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_DataUkonczeniaSzkoly = Column(DateTime)
    pr_PomijajPoprzOkrZatrWFirmie = Column(BIT, nullable=False, server_default=text("((0))"))
    pr_TypIdentyfikatoraDlaCudzoziemcow = Column(Integer, nullable=False, server_default=text("((0))"))
    pr_DTNrDlaCudzoziemcow = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_GrupaPrac = relationship(u'SlGrupaPrac')
    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    sl_StanCywilny = relationship(u'SlStanCywilny')
    is__Instytucja = relationship(u'IsInstytucja')
    sl_OddzialNFZ = relationship(u'SlOddzialNFZ')
    sl_Pokrewienstwo = relationship(u'SlPokrewienstwo')
    sl_PrawoDoEmerytury = relationship(u'SlPrawoDoEmerytury')
    sl_StopienNiepelnosprawnosci = relationship(u'SlStopienNiepelnosprawnosci')
    sl_StopienNiezdolnosciDoPracy = relationship(u'SlStopienNiezdolnosciDoPracy')
    sl_TypIdentyfikatora = relationship(u'SlTypIdentyfikatora')
    sl_Wyksztalcenie = relationship(u'SlWyksztalcenie')


class PrRodzina(Base):
    __tablename__ = u'pr_Rodzina'

    pro_Id = Column(Integer, primary_key=True)
    pro_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pro_Imie = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_Imie2 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_Nazwisko = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_DataUrodzenia = Column(DateTime)
    pro_Pokrewienstwo = Column(String(2, u'Polish_CI_AS'))
    pro_NIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_PESEL = Column(String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_TypIdentyfikatora = Column(String(1, u'Polish_CI_AS'))
    pro_DTNr = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pro_NaUtrzymaniuPracownika = Column(BIT, nullable=False)
    pro_GospodarstwoZPracownikiem = Column(BIT, nullable=False)
    pro_ZasilekRodzinny = Column(BIT, nullable=False)
    pro_ZasilekPielegnacyjny = Column(BIT, nullable=False)
    pro_StopienNiepelnosprawnosci = Column(String(1, u'Polish_CI_AS'))
    pro_UlgaNaWychowywanieDzieci = Column(BIT, nullable=False, server_default=text("((0))"))

    pr_Pracownik = relationship(u'PrPracownik')


class PrUprawnienia(Base):
    __tablename__ = u'pr_Uprawnienia'

    pup_Id = Column(Integer, primary_key=True)
    pup_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pup_IdUprawnienia = Column(ForeignKey(u'sl_Uprawnienie.upr_Id'), nullable=False)
    pup_DataUzyskania = Column(DateTime)
    pup_DataWaznosci = Column(DateTime)

    pr_Pracownik = relationship(u'PrPracownik')
    sl_Uprawnienie = relationship(u'SlUprawnienie')


class PrUrlopy(Base):
    __tablename__ = u'pr_Urlopy'
    __table_args__ = (
        Index(u'IX_pr_Urlopy_IdPracownika_Rok', u'pur_IdPracownika', u'pur_Rok', unique=True),
    )

    pur_Id = Column(Integer, primary_key=True)
    pur_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pur_Rok = Column(Integer, nullable=False)
    pur_ZaleglyUrlop = Column(Integer, nullable=False)
    pur_WymiarUrlopu = Column(Integer, nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')


class PrZatrudnienie(Base):
    __tablename__ = u'pr_Zatrudnienie'

    pza_Id = Column(Integer, primary_key=True)
    pza_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False, index=True)
    pza_Miejsce = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pza_IdZawodu = Column(ForeignKey(u'sl_Zawod.zw_Id'))
    pza_Stanowisko = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pza_DataOd = Column(DateTime, nullable=False)
    pza_DataDo = Column(DateTime, nullable=False)
    pza_IdPowoduRozwUmowy = Column(ForeignKey(u'sl_GratPrzyczynaRozwUmowy.gpru_Id'), index=True)
    pza_DniUrlopuWyp = Column(Integer, nullable=False, server_default=text("((0))"))
    pza_DniChoroby = Column(Integer, nullable=False, server_default=text("((0))"))
    pza_DniUrlopuWypNaZadanie = Column(Integer, nullable=False, server_default=text("((0))"))
    pza_DniOpiekiNadDzieckiem = Column(Integer, nullable=False, server_default=text("((0))"))
    pza_WliczajDoStazu = Column(BIT, nullable=False, server_default=text("((1))"))
    pza_GodzinOpiekiNadDzieckiem = Column(Integer, nullable=False, server_default=text("((0))"))

    sl_GratPrzyczynaRozwUmowy = relationship(u'SlGratPrzyczynaRozwUmowy')
    pr_Pracownik = relationship(u'PrPracownik')
    sl_Zawod = relationship(u'SlZawod')


class PrZdjecie(Base):
    __tablename__ = u'pr_Zdjecie'

    pzd_Id = Column(Integer, primary_key=True)
    pzd_PracownikId = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)
    pzd_Zdjecie = Column(LargeBinary, nullable=False)
    pzd_Glowne = Column(BIT, nullable=False, server_default=text("((1))"))

    pr_Pracownik = relationship(u'PrPracownik')


class PrmPromocjeAkcja(Base):
    __tablename__ = u'prm_PromocjeAkcja'

    prma_Id = Column(Integer, primary_key=True)
    prma_IdPromocja = Column(ForeignKey(u'prm__Promocje.prm_Id'), nullable=False)
    prma_Ident = Column(Integer, nullable=False)
    prma_TypIdent = Column(Integer, nullable=False)

    prm__Promocje = relationship(u'PrmPromocje')


class PrmPromocjeKontrahent(Base):
    __tablename__ = u'prm_PromocjeKontrahent'

    prmk_Id = Column(Integer, primary_key=True)
    prmk_IdPromocja = Column(ForeignKey(u'prm__Promocje.prm_Id'), nullable=False)
    prmk_Ident = Column(Integer, nullable=False)
    prmk_TypIdent = Column(Integer, nullable=False)

    prm__Promocje = relationship(u'PrmPromocje')


class PrmPromocjeMagazyn(Base):
    __tablename__ = u'prm_PromocjeMagazyn'

    prmm_Id = Column(Integer, primary_key=True)
    prmm_IdPromocja = Column(ForeignKey(u'prm__Promocje.prm_Id'), nullable=False)
    prmm_Ident = Column(ForeignKey(u'sl_Magazyn.mag_Id'), nullable=False)

    prm__Promocje = relationship(u'PrmPromocje')
    sl_Magazyn = relationship(u'SlMagazyn')


class PrmPromocjeTowar(Base):
    __tablename__ = u'prm_PromocjeTowar'

    prmt_Id = Column(Integer, primary_key=True)
    prmt_IdPromocja = Column(ForeignKey(u'prm__Promocje.prm_Id'), nullable=False)
    prmt_Ident = Column(Integer, nullable=False)
    prmt_TypIdent = Column(Integer, nullable=False)

    prm__Promocje = relationship(u'PrmPromocje')


class PrmPromocje(Base):
    __tablename__ = u'prm__Promocje'

    prm_Id = Column(Integer, primary_key=True)
    prm_Typ = Column(Integer, nullable=False)
    prm_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prm_NazwaPelna = Column(String(255, u'Polish_CI_AS'))
    prm_Nieaktywna = Column(BIT, server_default=text("((0))"))
    prm_Od = Column(DateTime)
    prm_Do = Column(DateTime)
    prm_OgraniczonaCzasowo = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_Interwal = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_CalyDzien = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_Robocze = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_PoczatekZCyklu = Column(DateTime)
    prm_CoIle = Column(Integer, nullable=False, server_default=text("((1))"))
    prm_DniTygodnia = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_DzienMiesiaca = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_DefinicjaZlozona = Column(BIT, server_default=text("((0))"))
    prm_DzienPorzadek = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_DzienRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_Miesiac = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_RodzajPowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_IlePowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_KoniecPowtorzen = Column(DateTime)
    prm_KumulujeSie = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_KrytMag = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKh = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTw = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytDok = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKhLista = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKhGrupy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKhCechy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKhSQL = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytKhSQLquery = Column(Text(collation=u'Polish_CI_AS'))
    prm_KrytKhAndOr = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_KrytTwLista = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwListaDowolny = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_KrytTwGrupy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwCechy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwSQL = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwSQLquery = Column(Text(collation=u'Polish_CI_AS'))
    prm_KrytTwAndOr = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_KrytDokTypWartosci = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_KrytDokWartosc = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    prm_KrytKhObrotOstMies = Column(MONEY)
    prm_KrytKhMaskaKoduPoczt = Column(String(12, u'Polish_CI_AS'))
    prm_KrytTwStProcWyzszyStMin = Column(MONEY)
    prm_KrytTwPowyzejStMin = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwStWartWyzszyStMin = Column(MONEY)
    prm_KrytTwWartTwNaDokumencie = Column(MONEY)
    prm_KrytTwWartTwNaDokumencieOsobno = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytTwIloscTwNaDokumencie = Column(MONEY)
    prm_KrytTwIloscTwNaDokumencieOsobno = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_KrytDokNpierwszychKh = Column(Integer, nullable=False, server_default=text("((0))"))
    prm_KrytDokTypFormyPlatnosci = Column(Integer)
    prm_KrytDokIdPlatnosci = Column(Integer)
    prm_AkcjaCenyTyp = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaProcent = Column(MONEY)
    prm_AkcjaKwota = Column(MONEY)
    prm_AkcjaCoNty = Column(Integer, server_default=text("((1))"))
    prm_AkcjaIlosc = Column(MONEY)
    prm_AkcjaTowaryTyp = Column(Integer)
    prm_AkcjaTwLista = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwGrupy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwCechy = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwSQL = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwSQLquery = Column(Text(collation=u'Polish_CI_AS'))
    prm_AkcjaTwAndOr = Column(BIT, nullable=False, server_default=text("((1))"))
    prm_AkcjaTwStProcWyzszyStMin = Column(MONEY)
    prm_AkcjaTwPowyzejStMin = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwStWartWyzszyStMin = Column(MONEY)
    prm_AkcjaTwWartTwNaDokumencie = Column(MONEY)
    prm_AkcjaTwWartTwNaDokumencieOsobno = Column(BIT, nullable=False, server_default=text("((0))"))
    prm_AkcjaTwIloscTwNaDokumencie = Column(MONEY)
    prm_AkcjaTwIloscTwNaDokumencieOsobno = Column(BIT, nullable=False, server_default=text("((0))"))


class PrzDanePrzychodu(Base):
    __tablename__ = u'prz_DanePrzychodu'

    przd_Id = Column(Integer, primary_key=True)
    przd_IdPrzychodu = Column(ForeignKey(u'prz__Przychod.prz_Id'), nullable=False)
    przd_IdStawkiRyczaltu = Column(ForeignKey(u'prz__StawkaRyczaltu.str_Id'), nullable=False)
    przd_Wartosc = Column(MONEY, nullable=False)

    prz__Przychod = relationship(u'PrzPrzychod')
    prz__StawkaRyczaltu = relationship(u'PrzStawkaRyczaltu')


class PrzObnizkaPodatku(Base):
    __tablename__ = u'prz_ObnizkaPodatku'

    obp_Id = Column(Integer, primary_key=True)
    obp_DataZapisu = Column(DateTime, nullable=False)
    obp_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    obp_Kwota = Column(MONEY, nullable=False)
    obp_IdRodzajuObnizki = Column(ForeignKey(u'sl_RodzajObnizki.rob_Id'), nullable=False)
    obp_SposobOdliczania = Column(Integer, nullable=False)
    obp_DataOd = Column(DateTime, nullable=False)
    obp_DataDo = Column(DateTime, nullable=False)
    obp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    obp_TypObiektu = Column(Integer)
    obp_IdObiektu = Column(Integer)

    sl_RodzajObnizki = relationship(u'SlRodzajObnizki')
    pd_Wspolnik = relationship(u'PdWspolnik')


class PrzOdliczenieDoliczenie(Base):
    __tablename__ = u'prz_OdliczenieDoliczenie'

    od_Id = Column(Integer, primary_key=True)
    od_Rodzaj = Column(Integer, nullable=False)
    od_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)
    od_DataZapisu = Column(DateTime, nullable=False)
    od_Kwota = Column(MONEY, nullable=False)
    od_SposobOdliczania = Column(Integer, nullable=False)
    od_IdRodzajuOdliczenia = Column(ForeignKey(u'sl_RodzajOdliczenia.rod_Id'))
    od_DataOd = Column(DateTime, nullable=False)
    od_DataDo = Column(DateTime, nullable=False)
    od_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    od_TypObiektu = Column(Integer)
    od_IdObiektu = Column(Integer)

    sl_RodzajOdliczenia = relationship(u'SlRodzajOdliczenia')
    pd_Wspolnik = relationship(u'PdWspolnik')


class PrzParametr(Base):
    __tablename__ = u'prz_Parametr'

    przp_Id = Column(Integer, primary_key=True)
    przp_IdKategoriiPrz = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    przp_IdKategoriiSN = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    przp_PrzepisywanieDtZapisu = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_PrzepisywanieDtZdarzenia = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_PrzepisywanieKategorii = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_PrzepisywanieOpisu = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_PrzepisywanieKh = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_KontrolaUniqNrDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_PrzepisywanieVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    przp_BrakKontrahenta = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria', primaryjoin='PrzParametr.przp_IdKategoriiPrz == SlKategoria.kat_Id')
    sl_Kategoria1 = relationship(u'SlKategoria', primaryjoin='PrzParametr.przp_IdKategoriiSN == SlKategoria.kat_Id')


class PrzPrzychod(Base):
    __tablename__ = u'prz__Przychod'

    prz_Id = Column(Integer, primary_key=True)
    prz_NrDokumentu = Column(String(50, u'Polish_CI_AS'), nullable=False)
    prz_DataZapisu = Column(DateTime, nullable=False)
    prz_DataZdarzenia = Column(DateTime, nullable=False)
    prz_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    prz_NazwaKh = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_NazwaPelnaKh = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_UlicaKh = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_MiastoKh = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_KodPocztowyKh = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_NIPKh = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    prz_Kwota = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    prz_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    prz_IdObiektu = Column(Integer)
    prz_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    prz_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    prz_KorektaSN = Column(BIT, nullable=False, server_default=text("((0))"))
    prz_Importowany = Column(BIT, nullable=False, server_default=text("((0))"))
    prz_IdDokImport = Column(Integer)
    prz_TypDokImport = Column(Integer)
    prz_IdOkresu = Column(ForeignKey(u'pd_Okres.okr_Id'), nullable=False)

    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')
    pd_Okre = relationship(u'PdOkre')


class PrzStawkaRyczaltu(Base):
    __tablename__ = u'prz__StawkaRyczaltu'

    str_Id = Column(Integer, primary_key=True)
    str_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    str_Wartosc = Column(MONEY, nullable=False)
    str_Systemowa = Column(BIT, nullable=False, server_default=text("((0))"))
    str_Aktywna = Column(BIT, nullable=False, server_default=text("((1))"))
    str_Pozycja = Column(Integer, nullable=False, server_default=text("((1))"))
    str_Specjalna10 = Column(BIT, nullable=False, server_default=text("((0))"))


class PwDane(Base):
    __tablename__ = u'pw_Dane'
    __table_args__ = (
        Index(u'IX_pw_Dane', u'pwd_TypObiektu', u'pwd_IdObiektu', u'pwd_IdPozycji', unique=True),
    )

    pwd_Id = Column(Integer, primary_key=True)
    pwd_TypObiektu = Column(Integer, nullable=False)
    pwd_IdObiektu = Column(Integer, nullable=False)
    pwd_IdPozycji = Column(Integer)
    pwd_Data01 = Column(DateTime)
    pwd_Data02 = Column(DateTime)
    pwd_Data03 = Column(DateTime)
    pwd_Data04 = Column(DateTime)
    pwd_Data05 = Column(DateTime)
    pwd_Data06 = Column(DateTime)
    pwd_Data07 = Column(DateTime)
    pwd_Data08 = Column(DateTime)
    pwd_Data09 = Column(DateTime)
    pwd_Data10 = Column(DateTime)
    pwd_Liczba01 = Column(Integer)
    pwd_Liczba02 = Column(Integer)
    pwd_Liczba03 = Column(Integer)
    pwd_Liczba04 = Column(Integer)
    pwd_Liczba05 = Column(Integer)
    pwd_Liczba06 = Column(Integer)
    pwd_Liczba07 = Column(Integer)
    pwd_Liczba08 = Column(Integer)
    pwd_Liczba09 = Column(Integer)
    pwd_Liczba10 = Column(Integer)
    pwd_Tekst01 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst02 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst03 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst04 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst05 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst06 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst07 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst08 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst09 = Column(String(255, u'Polish_CI_AS'))
    pwd_Tekst10 = Column(String(255, u'Polish_CI_AS'))
    pwd_Kwota01 = Column(MONEY)
    pwd_Kwota02 = Column(MONEY)
    pwd_Kwota03 = Column(MONEY)
    pwd_Kwota04 = Column(MONEY)
    pwd_Kwota05 = Column(MONEY)
    pwd_Kwota06 = Column(MONEY)
    pwd_Kwota07 = Column(MONEY)
    pwd_Kwota08 = Column(MONEY)
    pwd_Kwota09 = Column(MONEY)
    pwd_Kwota10 = Column(MONEY)
    pwd_Fk01 = Column(Integer)
    pwd_Fk02 = Column(Integer)
    pwd_Fk03 = Column(Integer)
    pwd_Fk04 = Column(Integer)
    pwd_Fk05 = Column(Integer)
    pwd_Fk06 = Column(Integer)
    pwd_Fk07 = Column(Integer)
    pwd_Fk08 = Column(Integer)
    pwd_Fk09 = Column(Integer)
    pwd_Fk10 = Column(Integer)
    pwd_Flaga01 = Column(BIT)
    pwd_Flaga02 = Column(BIT)
    pwd_Flaga03 = Column(BIT)
    pwd_Flaga04 = Column(BIT)
    pwd_Flaga05 = Column(BIT)
    pwd_Flaga06 = Column(BIT)
    pwd_Flaga07 = Column(BIT)
    pwd_Flaga08 = Column(BIT)
    pwd_Flaga09 = Column(BIT)
    pwd_Flaga10 = Column(BIT)


class PwPole(Base):
    __tablename__ = u'pw_Pole'

    pwp_Id = Column(Integer, primary_key=True)
    pwp_TypObiektu = Column(Integer, nullable=False, index=True)
    pwp_Pole = Column(String(128, u'Polish_CI_AS'), nullable=False)
    pwp_Typ = Column(Integer, nullable=False)
    pwp_Format = Column(Integer, nullable=False)
    pwp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pwp_RodzajSlownika = Column(Integer, nullable=False)
    pwp_Wymagane = Column(BIT, nullable=False)
    pwp_DefData = Column(Integer)
    pwp_DefLiczba = Column(Integer)
    pwp_DefTekst = Column(String(255, u'Polish_CI_AS'))
    pwp_DefKwota = Column(MONEY)
    pwp_IdSlownika = Column(ForeignKey(u'sl__Slownik.sl_Id'))
    pwp_Select = Column(String(8000, u'Polish_CI_AS'))
    pwp_DefFk = Column(Integer)
    pwp_SortSelect = Column(BIT)
    pwp_SelectWhere = Column(String(8000, u'Polish_CI_AS'))
    pwp_DefFlaga = Column(BIT)

    sl__Slownik = relationship(u'SlSlownik')


class RbRachBankowyHistoria(Base):
    __tablename__ = u'rb_RachBankowyHistoria'
    __table_args__ = (
        Index(u'IX_rb_RachBankowyHistoria', u'rbh_TypObiektu', u'rbh_IdObiektu'),
    )

    rbh_Id = Column(Integer, primary_key=True)
    rbh_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    rbh_Numer = Column(String(50, u'Polish_CI_AS'), nullable=False)
    rbh_Bank = Column(String(255, u'Polish_CI_AS'), nullable=False)
    rbh_IBAN = Column(BIT, nullable=False, server_default=text("((1))"))
    rbh_IdWaluty = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("('PLN')"))
    rbh_IdObiektu = Column(Integer)
    rbh_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))

    rb__RachBankowy = relationship(u'RbRachBankowy')
    sl_Waluta = relationship(u'SlWaluta')


class RbRachBankowyPersonel(Base):
    __tablename__ = u'rb_RachBankowyPersonel'

    rbe_Id = Column(Integer, primary_key=True)
    rbe_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    rbe_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    rbe_Synchronizacja = Column(BIT, nullable=False, server_default=text("((0))"))
    rbe_SynchMinuty = Column(Integer, nullable=False, server_default=text("((0))"))
    rbe_SynchWCzasie = Column(BIT, nullable=False, server_default=text("((0))"))
    rbe_SynchOd = Column(Integer, nullable=False, server_default=text("((0))"))
    rbe_SynchDo = Column(Integer, nullable=False, server_default=text("((0))"))
    rbe_TrybLogowania = Column(Integer, nullable=False, server_default=text("((0))"))
    rbe_Login = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rbe_CertyfikatHash = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rbe_BezLoginu = Column(BIT, nullable=False, server_default=text("((0))"))
    rbe_CertyfikatHashAutoryzacyjny = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    pd_Uzytkownik = relationship(u'PdUzytkownik')
    rb__RachBankowy = relationship(u'RbRachBankowy')


t_rb_RachBankowyProfil = Table(
    u'rb_RachBankowyProfil', metadata,
    Column(u'rbp_IdObiektu', ForeignKey(u'rb__RachBankowy.rb_Id'), primary_key=True, nullable=False),
    Column(u'rbp_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class RbRachBankowySynchDomyslne(Base):
    __tablename__ = u'rb_RachBankowySynchDomyslne'

    rbd_id = Column(Integer, primary_key=True)
    rbd_SymbolBanku = Column(Integer, nullable=False)
    rbd_Godzina = Column(DateTime, nullable=False)


class RbRachBankowySynchronizacja(Base):
    __tablename__ = u'rb_RachBankowySynchronizacja'

    rbs_Id = Column(Integer, primary_key=True)
    rbs_IdRachPersonel = Column(Integer, nullable=False)
    rbs_Godzina = Column(DateTime, nullable=False)


class RbRachBankowyWirtualny(Base):
    __tablename__ = u'rb_RachBankowyWirtualny'

    rbw_Id = Column(Integer, primary_key=True)
    rbw_IdRachunku = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    rbw_Identyfikator = Column(String(50, u'Polish_CI_AS'), nullable=False)
    rbw_PelnyNumer = Column(String(50, u'Polish_CI_AS'), nullable=False)

    rb__RachBankowy = relationship(u'RbRachBankowy')


class RbRachBankowyWirtualnyInstytucji(Base):
    __tablename__ = u'rb_RachBankowyWirtualnyInstytucji'

    rbi_Id = Column(Integer, primary_key=True)
    rbi_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'), nullable=False)
    rbi_IdInstytucji = Column(Integer, nullable=False)

    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')


class RbRachBankowyWirtualnyKontrahenta(Base):
    __tablename__ = u'rb_RachBankowyWirtualnyKontrahenta'

    rbk_Id = Column(Integer, primary_key=True)
    rbk_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'), nullable=False)
    rbk_IdKontrahenta = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)

    kh__Kontrahent = relationship(u'KhKontrahent')
    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')


class RbRachBankowyWirtualnyPracownika(Base):
    __tablename__ = u'rb_RachBankowyWirtualnyPracownika'

    rbp_Id = Column(Integer, primary_key=True)
    rbp_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'), nullable=False)
    rbp_IdPracownika = Column(ForeignKey(u'pr_Pracownik.pr_Id'), nullable=False)

    pr_Pracownik = relationship(u'PrPracownik')
    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')


class RbRachBankowyWirtualnyWspolnika(Base):
    __tablename__ = u'rb_RachBankowyWirtualnyWspolnika'

    rbws_Id = Column(Integer, primary_key=True)
    rbws_IdRachunkuWirtualnego = Column(ForeignKey(u'rb_RachBankowyWirtualny.rbw_Id'), nullable=False)
    rbws_IdWspolnika = Column(ForeignKey(u'pd_Wspolnik.pw_Id'), nullable=False)

    rb_RachBankowyWirtualny = relationship(u'RbRachBankowyWirtualny')
    pd_Wspolnik = relationship(u'PdWspolnik')


class RbRachBankowy(Base):
    __tablename__ = u'rb__RachBankowy'
    __table_args__ = (
        Index(u'IX_rb__RachBankowy', u'rb_TypObiektu', u'rb_IdObiektu', u'rb_Status'),
    )

    rb_Id = Column(Integer, primary_key=True)
    rb_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rb_TypObiektu = Column(Integer, nullable=False)
    rb_Numer = Column(String(50, u'Polish_CI_AS'), nullable=False)
    rb_Bank = Column(String(255, u'Polish_CI_AS'), nullable=False)
    rb_IBAN = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_IdWaluty = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), server_default=text("('PLN')"))
    rb_Podstawowy = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_Opis = Column(String(255, u'Polish_CI_AS'))
    rb_Analityka = Column(String(3, u'Polish_CI_AS'))
    rb_Status = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("('N')"))
    rb_IdObiektu = Column(Integer)
    rb_ZFSS = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_US = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_PodstawowyWirtualny = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_Mnemonik = Column(String(50, u'Polish_CI_AS'))
    rb_Licznik = Column(BigInteger, nullable=False, server_default=text("((0))"))
    rb_Wirtualny = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_TypIdentyfikacjiPlatnosci = Column(Integer, nullable=False, server_default=text("((0))"))
    rb_Ebank = Column(BIT, nullable=False, server_default=text("((0))"))
    rb_Dik = Column(String(30, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rb_DataHist = Column(DateTime)
    rb_Saldo = Column(MONEY)
    rb_DataSaldo = Column(DateTime)
    rb_IdUslugi = Column(ForeignKey(u'hb_Usluga.hbu_Id'), server_default=text("(NULL)"))
    rb_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))

    sl_Kategoria = relationship(u'SlKategoria')
    hb_Usluga = relationship(u'HbUsluga')
    sl_Waluta = relationship(u'SlWaluta')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'rb_RachBankowyProfil')


class RemPozycja(Base):
    __tablename__ = u'rem_Pozycja'

    rp_Id = Column(Integer, primary_key=True)
    rp_IdRemanentu = Column(ForeignKey(u'rem__Ewid.rem_Id'), nullable=False)
    rp_TypZrodla = Column(Integer, nullable=False)
    rp_IdZrodla = Column(Integer)
    rp_Kod = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rp_Jm = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rp_Ilosc = Column(MONEY, nullable=False)
    rp_Cena = Column(MONEY, nullable=False)
    rp_Wartosc = Column(MONEY, nullable=False)
    rp_NrKorektyKUP = Column(String(144, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rp_IdKorektyKUP = Column(ForeignKey(u'kpr__Ksiega.kpr_Id'))

    kpr__Ksiega = relationship(u'KprKsiega')
    rem__Ewid = relationship(u'RemEwid')


class RemEwid(Base):
    __tablename__ = u'rem__Ewid'

    rem_Id = Column(Integer, primary_key=True)
    rem_Data = Column(DateTime, nullable=False)
    rem_Zaksiegowany = Column(Integer, nullable=False)
    rem_IdKsiegi = Column(ForeignKey(u'kpr__Ksiega.kpr_Id'))
    rem_Wartosc = Column(MONEY, nullable=False)
    rem_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rem_NaZaliczce = Column(BIT, nullable=False, server_default=text("((1))"))
    rem_WartoscKorektyKUP = Column(MONEY, nullable=False, server_default=text("((0))"))

    kpr__Ksiega = relationship(u'KprKsiega')


class RewParametr(Base):
    __tablename__ = u'rew_Parametr'

    rewp_Id = Column(Integer, primary_key=True)
    rewp_BlokadaRozliczRozrWSub = Column(BIT, nullable=False, server_default=text("((0))"))
    rewp_NiePokazujRozrWSub = Column(BIT, nullable=False, server_default=text("((0))"))


class RozPlikRozszerzenia(Base):
    __tablename__ = u'roz_PlikRozszerzenia'

    rozpr_Id = Column(Integer, primary_key=True)
    rozpr_IdRozszerzenia = Column(ForeignKey(u'roz__Rozszerzenie.roz_Id'), nullable=False)
    rozpr_NazwaPliku = Column(String(512, u'Polish_CI_AS'), nullable=False)
    rozpr_Plik = Column(LargeBinary, nullable=False)
    rozpr_Hash = Column(String(32, u'Polish_CI_AS'), nullable=False)
    rozpr_TypPliku = Column(Integer, nullable=False)
    rozpr_Rejestrowany = Column(Integer, nullable=False)

    roz__Rozszerzenie = relationship(u'RozRozszerzenie')


class RozRozszerzenie(Base):
    __tablename__ = u'roz__Rozszerzenie'

    roz_Id = Column(Integer, primary_key=True)
    roz_Guid = Column(String(38, u'Polish_CI_AS'), nullable=False)
    roz_Nazwa = Column(String(150, u'Polish_CI_AS'), nullable=False)
    roz_SkryptPrzedInstalacja = Column(LargeBinary)
    roz_SkryptPoInstalacji = Column(LargeBinary)
    roz_SkryptPrzedAktualizacja = Column(LargeBinary)
    roz_SkryptPoAktualizacji = Column(LargeBinary)


class Sf2KomponentSferyczny(Base):
    __tablename__ = u'sf2_KomponentSferyczny'

    sf2ks_Id = Column(Integer, primary_key=True)
    sf2ks_Guid = Column(String(38, u'Polish_CI_AS'), nullable=False)
    sf2ks_GuidBiblioteki = Column(String(38, u'Polish_CI_AS'), nullable=False)
    sf2ks_Obiekt = Column(Integer, nullable=False)
    sf2ks_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False)
    sf2ks_Opis = Column(String(500, u'Polish_CI_AS'), nullable=False)
    sf2ks_Wersja = Column(String(50, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentNazwa = Column(String(150, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentWWW = Column(String(100, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentEmail = Column(String(50, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentAdres = Column(String(250, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentTelefon1 = Column(String(75, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentTelefon2 = Column(String(75, u'Polish_CI_AS'), nullable=False)
    sf2ks_ProducentFax = Column(String(75, u'Polish_CI_AS'), nullable=False)
    sf2ks_IdRozszerzenia = Column(Integer)
    sf2ks_Timer = Column(Integer)
    sf2ks_Grid = Column(String(50, u'Polish_CI_AS'))
    sf2ks_IdDefinicji = Column(Integer)


class Sf2KontrolaRozszerzen(Base):
    __tablename__ = u'sf2_KontrolaRozszerzen'

    sf2kr_IdRozszerzenia = Column(Integer, primary_key=True, nullable=False)
    sf2kr_IdUzytkownika = Column(Integer, primary_key=True, nullable=False)
    sf2kr_TypKontroli = Column(Integer, nullable=False, server_default=text("((0))"))


class Sf2OperacjaSferyczna(Base):
    __tablename__ = u'sf2_OperacjaSferyczna'

    sf2os_Id = Column(Integer, primary_key=True)
    sf2os_IdOperacji = Column(ForeignKey(u'ui_Operacja.uio_Id'))
    sf2os_IdKomponentu = Column(ForeignKey(u'sf2_KomponentSferyczny.sf2ks_Id'), nullable=False)
    sf2os_NazwaFunkcji = Column(String(100, u'Polish_CI_AS'), nullable=False)
    sf2os_NazwaWyswietlana = Column(String(100, u'Polish_CI_AS'))
    sf2os_Opis = Column(String(300, u'Polish_CI_AS'), nullable=False)
    sf2os_Stan = Column(Integer, nullable=False)
    sf2os_Typ = Column(Integer, nullable=False)
    sf2os_Kolejnosc = Column(Integer, nullable=False)
    sf2os_SkrotKlawiszowy = Column(Integer)

    sf2_KomponentSferyczny = relationship(u'Sf2KomponentSferyczny')
    ui_Operacja = relationship(u'UiOperacja')


class Sf2RozszerzenieGrida(Base):
    __tablename__ = u'sf2_RozszerzenieGrida'

    sf2rg_Id = Column(Integer, primary_key=True)
    sf2rg_IdKomponentu = Column(Integer, nullable=False)
    sf2rg_IdRozszerzenia = Column(Integer, nullable=False)


class Sf2Skrypt(Base):
    __tablename__ = u'sf2_Skrypt'

    sf2s_Id = Column(Integer, primary_key=True)
    sf2s_Strumien = Column(LargeBinary, nullable=False)
    sf2s_IdKomponentu = Column(ForeignKey(u'sf2_KomponentSferyczny.sf2ks_Id'), nullable=False)

    sf2_KomponentSferyczny = relationship(u'Sf2KomponentSferyczny')


class SfDefinicja(Base):
    __tablename__ = u'sf_Definicja'

    sfd_Id = Column(Integer, primary_key=True)
    sfd_IdRokuObrotowego = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'))
    sfd_Kolumna = Column(Integer, nullable=False)
    sfd_Funkcja = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfd_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False)
    sfd_Korygujaco = Column(BIT, nullable=False)
    sfd_IdPola = Column(Integer, nullable=False)

    pd_RokObrotowy = relationship(u'PdRokObrotowy')


class SfDefinicjaWzorzec(Base):
    __tablename__ = u'sf_DefinicjaWzorzec'

    sfdw_Id = Column(Integer, primary_key=True)
    sfdw_Kolumna = Column(Integer, nullable=False, server_default=text("((1))"))
    sfdw_Funkcja = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfdw_Konto = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfdw_Korygujaco = Column(BIT, nullable=False, server_default=text("((0))"))
    sfdw_IdPola = Column(ForeignKey(u'sf_Pole.sfp_Id'), nullable=False, server_default=text("((1))"))

    sf_Pole = relationship(u'SfPole')


class SfPole(Base):
    __tablename__ = u'sf_Pole'

    sfp_Id = Column(Integer, primary_key=True)
    sfp_IdSprawozdania = Column(ForeignKey(u'sf_Sprawozdanie.sf_Id'), nullable=False, server_default=text("((1))"))
    sfp_Poziom = Column(Integer, nullable=False, server_default=text("((1))"))
    sfp_Etykieta1 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfp_Etykieta2 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfp_Etykieta3 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sfp_Prefix = Column(String(1, u'Polish_CI_AS'))
    sfp_Sumowane = Column(BIT, nullable=False, server_default=text("((1))"))
    sfp_Korygujaco = Column(BIT, nullable=False, server_default=text("((0))"))
    sfp_Definiowalne = Column(BIT, nullable=False, server_default=text("((1))"))
    sfp_Kolejnosc = Column(Integer, nullable=False, server_default=text("((0))"))

    sf_Sprawozdanie = relationship(u'SfSprawozdanie')
    pd_RokObrotowy = relationship(u'PdRokObrotowy', secondary=u'sf_PoleNiewidoczne')


t_sf_PoleNiewidoczne = Table(
    u'sf_PoleNiewidoczne', metadata,
    Column(u'sfpn_IdRok', ForeignKey(u'pd_RokObrotowy.robr_Id'), nullable=False),
    Column(u'sfpn_IdPole', ForeignKey(u'sf_Pole.sfp_Id'), nullable=False)
)


class SfPozycjaRz(Base):
    __tablename__ = u'sf_PozycjaRzs'

    sfrp_Id = Column(Integer, primary_key=True)
    sfrp_IdRzs = Column(ForeignKey(u'sf_Rzs.sfr_Id'), nullable=False)
    sfrp_NrPola = Column(Integer, nullable=False)
    sfrp_Wartosc = Column(MONEY, nullable=False)
    sfrp_WartoscPoprzedniego = Column(MONEY, nullable=False)
    sfrp_Opis = Column(Unicode(255), nullable=False)

    sf_Rz = relationship(u'SfRz')


class SfRz(Base):
    __tablename__ = u'sf_Rzs'

    sfr_Id = Column(Integer, primary_key=True)
    sfr_IdRoku = Column(ForeignKey(u'pd_RokObrotowy.robr_Id'))
    sfr_Data = Column(DateTime)
    sfr_TylkoZaksiegowane = Column(BIT)
    sfr_Jezyk = Column(Integer)
    sfr_IdSprawozdania = Column(ForeignKey(u'sf_Sprawozdanie.sf_Id'))
    sfr_IdRokuZrodlowego = Column(Integer)

    pd_RokObrotowy = relationship(u'PdRokObrotowy')
    sf_Sprawozdanie = relationship(u'SfSprawozdanie')


class SfSprawozdanie(Base):
    __tablename__ = u'sf_Sprawozdanie'

    sf_Id = Column(Integer, primary_key=True)
    sf_Typ = Column(Integer, nullable=False)
    sf_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sf_ProgId = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sf_Domyslny = Column(BIT, nullable=False)
    sf_KolumnyEtykiet = Column(Integer, nullable=False)
    sf_KolumnyWartosci = Column(Integer, nullable=False)
    sf_Prefix = Column(String(10, u'Polish_CI_AS'))
    sf_tresc = Column(LargeBinary)
    sf_Uproszczone = Column(Integer, nullable=False, server_default=text("((0))"))
    sf_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("('')"))


class SfSprawozdanieZmiany(Base):
    __tablename__ = u'sf_SprawozdanieZmiany'

    sfsz_Id = Column(Integer, primary_key=True)
    sfsz_IdPole = Column(ForeignKey(u'sf_Pole.sfp_Id'), nullable=False)
    sfsz_WidoczneOd = Column(DateTime)
    sfsz_WidoczneDo = Column(DateTime)

    sf_Pole = relationship(u'SfPole')


class SlBadanieOkresowe(Base):
    __tablename__ = u'sl_BadanieOkresowe'

    bo_Id = Column(Integer, primary_key=True)
    bo_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlBank(Base):
    __tablename__ = u'sl_Bank'

    bn_NrRozliczeniowy = Column(Integer, primary_key=True)
    bn_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)


class SlBibObiekt(Base):
    __tablename__ = u'sl_BibObiekt'

    bic_Id = Column(Integer, primary_key=True)
    bic_ProgId = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    bic_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    bic_DokTyp = Column(Integer)
    bic_DokPodtyp = Column(Integer)
    bic_ProgIdCtx = Column(Integer)


class SlCRMPodTypZadania(Base):
    __tablename__ = u'sl_CRMPodTypZadania'

    ptz_Id = Column(Integer, primary_key=True)
    ptz_Zadanie = Column(Integer, nullable=False)
    ptz_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCROpi(Base):
    __tablename__ = u'sl_CROpis'

    cro_Id = Column(Integer, primary_key=True, nullable=False)
    cro_Typ = Column(Integer, primary_key=True, nullable=False)
    cro_Opis1 = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    cro_Opis2 = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCechaKh(Base):
    __tablename__ = u'sl_CechaKh'

    ckh_Id = Column(Integer, primary_key=True)
    ckh_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCechaPr(Base):
    __tablename__ = u'sl_CechaPr'

    cpr_Id = Column(Integer, primary_key=True)
    cpr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCechaTw(Base):
    __tablename__ = u'sl_CechaTw'

    ctw_Id = Column(Integer, primary_key=True)
    ctw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmBranza(Base):
    __tablename__ = u'sl_CrmBranza'

    bra_Id = Column(Integer, primary_key=True)
    bra_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmDzial(Base):
    __tablename__ = u'sl_CrmDzial'

    dzi_Id = Column(Integer, primary_key=True)
    dzi_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmEtap(Base):
    __tablename__ = u'sl_CrmEtap'

    trd_Id = Column(Integer, primary_key=True)
    trd_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    trd_Scenariusz = Column(Integer, nullable=False)
    trd_Kolejnosc = Column(Integer, nullable=False)
    trd_ProcentSukcesu = Column(Integer, nullable=False)
    trd_Zamowienie = Column(BIT, nullable=False, server_default=text("((0))"))
    trd_Koncowy = Column(BIT, nullable=False, server_default=text("((0))"))


class SlCrmGrupaTransakcji(Base):
    __tablename__ = u'sl_CrmGrupaTransakcji'

    trg_Id = Column(Integer, primary_key=True)
    trg_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmGrupaWiadomosci(Base):
    __tablename__ = u'sl_CrmGrupaWiadomosci'

    gwa_Id = Column(Integer, primary_key=True)
    gwa_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


t_sl_CrmPowitanie = Table(
    u'sl_CrmPowitanie', metadata,
    Column(u'pow_Nazwa', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
)


class SlCrmRegion(Base):
    __tablename__ = u'sl_CrmRegion'

    reg_Id = Column(Integer, primary_key=True)
    reg_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmScenariusz(Base):
    __tablename__ = u'sl_CrmScenariusz'

    trc_Id = Column(Integer, primary_key=True)
    trc_Nazwa = Column(Unicode(50), nullable=False)


class SlCrmTransakcjaNieudana(Base):
    __tablename__ = u'sl_CrmTransakcjaNieudana'

    trn_Id = Column(Integer, primary_key=True)
    trn_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlCrmTransakcjaPozyskana(Base):
    __tablename__ = u'sl_CrmTransakcjaPozyskana'

    tre_Id = Column(Integer, primary_key=True)
    tre_Nazwa = Column(Unicode(50), nullable=False)


class SlCrmZrodloPozyskania(Base):
    __tablename__ = u'sl_CrmZrodloPozyskania'

    zpo_Id = Column(Integer, primary_key=True)
    zpo_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlDystrybutor(Base):
    __tablename__ = u'sl_Dystrybutor'

    dy_Id = Column(Integer, primary_key=True)
    dy_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    dy_Miejscowosc = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlDzial(Base):
    __tablename__ = u'sl_Dzial'

    dzi_Id = Column(Integer, primary_key=True)
    dzi_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlFormaDzialaniaWindykacyjnego(Base):
    __tablename__ = u'sl_FormaDzialaniaWindykacyjnego'

    fdw_Id = Column(Integer, primary_key=True)
    fdw_Nazwa = Column(String(100, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fdw_Ponaglenie = Column(BIT, nullable=False, server_default=text("((0))"))
    fdw_Systemowa = Column(BIT, nullable=False, server_default=text("((0))"))


class SlFormaPlatnosci(Base):
    __tablename__ = u'sl_FormaPlatnosci'

    fp_Id = Column(Integer, primary_key=True)
    fp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fp_Termin = Column(Integer, nullable=False)
    fp_Typ = Column(Integer, nullable=False)
    fp_RachBankId = Column(Integer)
    fp_CentId = Column(Integer)
    fp_InstKredytId = Column(Integer)
    fp_Glowna = Column(BIT)


class SlFormatNumeracji(Base):
    __tablename__ = u'sl_FormatNumeracji'

    fn_Id = Column(Integer, primary_key=True)
    fn_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fn_TypNumeru = Column(Integer, nullable=False, server_default=text("((1))"))


class SlFormatNumeracjiElement(Base):
    __tablename__ = u'sl_FormatNumeracjiElement'

    fne_Id = Column(Integer, primary_key=True)
    fne_IdFormatu = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'), nullable=False)
    fne_Typ = Column(Integer, nullable=False)
    fne_Pozycja = Column(Integer, nullable=False, server_default=text("((0))"))
    fne_LicznikId = Column(ForeignKey(u'sl_LicznikNumeracji.ln_Id'))
    fne_LicznikFmt = Column(Integer, nullable=False, server_default=text("((0))"))
    fne_LicznikZliczanie = Column(Integer, server_default=text("((0))"))
    fne_RokFmt = Column(Integer)
    fne_MiesiacFmt = Column(Integer)
    fne_Tekst = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    fne_Separator = Column(String(1, u'Polish_CI_AS'))
    fne_MPK = Column(Integer, server_default=text("((0))"))

    sl_FormatNumeracji = relationship(u'SlFormatNumeracji')
    sl_LicznikNumeracji = relationship(u'SlLicznikNumeracji')


class SlGmina(Base):
    __tablename__ = u'sl_Gmina'

    gm_Id = Column(Integer, primary_key=True)
    gm_Nazwa = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gm_Typ = Column(Integer, nullable=False, server_default=text("((1))"))
    gm_KodGUS = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gm_Powiat = Column(String(40, u'Polish_CI_AS'), nullable=False)
    gm_Aktualna = Column(BIT, nullable=False, server_default=text("((1))"))


class SlGratAtrybutGodzinDni(Base):
    __tablename__ = u'sl_GratAtrybutGodzinDni'

    agd_Id = Column(Integer, primary_key=True)
    agd_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\

create default [DZnak] as 1

"""))
    agd_Wspolczynnik = Column(MONEY, nullable=False, server_default=text("((0))"))


class SlGratPrzyczynaRozwUmowy(Base):
    __tablename__ = u'sl_GratPrzyczynaRozwUmowy'

    gpru_Id = Column(Integer, primary_key=True)
    gpru_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    gpru_Kod = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlGratTrescDok(Base):
    __tablename__ = u'sl_GratTrescDok'

    td_Id = Column(Integer, primary_key=True)
    td_Domyslna = Column(BIT, nullable=False, server_default=text("((0))"))
    td_Opis = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    td_TypDokumentu = Column(Integer, nullable=False)
    td_Tresc = Column(LargeBinary)
    td_Format = Column(Integer)


class SlGrupaBlokadyObiektu(Base):
    __tablename__ = u'sl_GrupaBlokadyObiektu'

    grblo_Id = Column(Integer, primary_key=True)
    grblo_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)


class SlGrupaKh(Base):
    __tablename__ = u'sl_GrupaKh'

    grk_Id = Column(Integer, primary_key=True)
    grk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlGrupaPrac(Base):
    __tablename__ = u'sl_GrupaPrac'

    grp_Id = Column(Integer, primary_key=True)
    grp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlGrupaTw(Base):
    __tablename__ = u'sl_GrupaTw'

    grt_Id = Column(Integer, primary_key=True)
    grt_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    grt_NrAnalityka = Column(String(3, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlGrupaUz(Base):
    __tablename__ = u'sl_GrupaUz'

    ug_Id = Column(Integer, primary_key=True)
    ug_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlHarmonogramUmowyCP(Base):
    __tablename__ = u'sl_HarmonogramUmowyCP'

    hucp_Id = Column(Integer, primary_key=True)
    hucp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    hucp_RodzajPozycji = Column(Integer, nullable=False, server_default=text("((1))"))
    hucp_RodzajCyklu = Column(Integer, nullable=False, server_default=text("((0))"))
    hucp_OkresSposobOkreslenia = Column(Integer, nullable=False, server_default=text("((0))"))
    hucp_OkresWydluzOkres = Column(Integer, nullable=False, server_default=text("((0))"))
    hucp_DataRachDzien = Column(Integer, server_default=text("((1))"))
    hucp_DataRachDzienTygodnia = Column(Integer, server_default=text("((1))"))
    hucp_RozliczAkordy = Column(BIT, nullable=False, server_default=text("((0))"))
    hucp_RozliczProwizje = Column(BIT, nullable=False, server_default=text("((0))"))
    hucp_RozliczECP = Column(BIT, nullable=False, server_default=text("((0))"))
    hucp_RozliczECPMiesiac = Column(Integer, server_default=text("((1))"))
    hucp_IdSzablonuWydruku = Column(ForeignKey(u'sl_GratTrescDok.td_Id'), nullable=False)
    hucp_RodzajPrzychodu = Column(Integer)
    hucp_Ryczalt = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_GratTrescDok = relationship(u'SlGratTrescDok')


class SlKalendCykl(Base):
    __tablename__ = u'sl_KalendCykl'

    slc_Id = Column(Integer, primary_key=True)
    slc_IdKalend = Column(ForeignKey(u'sl_Kalendarz.slk_Id'), nullable=False)
    slc_Od = Column(DateTime, nullable=False)

    sl_Kalendarz = relationship(u'SlKalendarz')


class SlKalendDzien(Base):
    __tablename__ = u'sl_KalendDzien'

    sld_Id = Column(Integer, primary_key=True)
    sld_IdCykl = Column(Integer, nullable=False)
    sld_IdAtrybut = Column(Integer)
    sld_Nr = Column(Integer, nullable=False)
    sld_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sld_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    sld_IleDzienne = Column(Integer)
    sld_IleNocne = Column(Integer)


class SlKalendGodzina(Base):
    __tablename__ = u'sl_KalendGodzina'

    slg_Id = Column(Integer, primary_key=True)
    slg_IdDzien = Column(Integer, nullable=False)
    slg_PoraDnia = Column(Integer, nullable=False, server_default=text("((0))"))
    slg_Od = Column(Integer, nullable=False)
    slg_Do = Column(Integer, nullable=False)


class SlKalendWyjGodzina(Base):
    __tablename__ = u'sl_KalendWyjGodzina'

    slwg_Id = Column(Integer, primary_key=True)
    slwg_IdWyj = Column(Integer, nullable=False)
    slwg_PoraDnia = Column(Integer, nullable=False, server_default=text("((0))"))
    slwg_Od = Column(Integer, nullable=False)
    slwg_Do = Column(Integer, nullable=False)


class SlKalendWyjatek(Base):
    __tablename__ = u'sl_KalendWyjatek'

    slw_Id = Column(Integer, primary_key=True)
    slw_IdKalend = Column(ForeignKey(u'sl_Kalendarz.slk_Id'), nullable=False)
    slw_IdAtrybut = Column(Integer)
    slw_Data = Column(DateTime, nullable=False)
    slw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    slw_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    slw_IleDzienne = Column(Integer)
    slw_IleNocne = Column(Integer)
    slw_Ustawowy = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kalendarz = relationship(u'SlKalendarz')


class SlKalendarz(Base):
    __tablename__ = u'sl_Kalendarz'

    slk_Id = Column(Integer, primary_key=True)
    slk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    slk_RodzajGodzin = Column(Integer, nullable=False, server_default=text("((0))"))


class SlKategoriaDokumentu(Base):
    __tablename__ = u'sl_KategoriaDokumentu'

    kd_Id = Column(Integer, primary_key=True)
    kd_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kd_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kd_Domyslna = Column(BIT, nullable=False, server_default=text("((0))"))
    kd_Gratyfikant = Column(BIT, nullable=False, server_default=text("((0))"))


class SlKategoriaPozycjiDekretu(Base):
    __tablename__ = u'sl_KategoriaPozycjiDekretu'

    kpd_Id = Column(Integer, primary_key=True)
    kpd_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlKategoriaZestawien(Base):
    __tablename__ = u'sl_KategoriaZestawien'

    kz_Id = Column(Integer, primary_key=True)
    kz_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kz_Ikona = Column(Integer, nullable=False, server_default=text("((0))"))


class SlKodPocztowy(Base):
    __tablename__ = u'sl_KodPocztowy'

    kc_Id = Column(Integer, primary_key=True)
    kc_K = Column(String(6, u'Polish_CI_AS'), nullable=False)
    kc_W = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kc_P = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kc_G = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kc_M = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kc_U = Column(String(100, u'Polish_CI_AS'))


class SlKodPrzyczynyWyrejestrowania(Base):
    __tablename__ = u'sl_KodPrzyczynyWyrejestrowania'

    kpw_Id = Column(Integer, nullable=False)
    kpw_Kod = Column(String(3, u'Polish_CI_AS'), primary_key=True)
    kpw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)


class SlKodRodzajuTransakcji(Base):
    __tablename__ = u'sl_KodRodzajuTransakcji'

    krt_Kod = Column(Integer, primary_key=True)
    krt_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    krt_Aktywny = Column(BIT, nullable=False, server_default=text("((1))"))


class SlKodSwiadczenia(Base):
    __tablename__ = u'sl_KodSwiadczenia'

    ksw_Id = Column(Integer, nullable=False)
    ksw_Kod = Column(String(3, u'Polish_CI_AS'), primary_key=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ksw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)


class SlKrajPochodzenia(Base):
    __tablename__ = u'sl_KrajPochodzenia'

    krp_Id = Column(Integer, primary_key=True)
    krp_Kod = Column(String(3, u'Polish_CI_AS'), nullable=False)
    krp_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlKursBHP(Base):
    __tablename__ = u'sl_KursBHP'

    kbhp_Id = Column(Integer, primary_key=True)
    kbhp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlLicznikNumeracji(Base):
    __tablename__ = u'sl_LicznikNumeracji'

    ln_Id = Column(Integer, primary_key=True)
    ln_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ln_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    ln_Domyslna = Column(Integer, nullable=False, server_default=text("((1))"))
    ln_WartoscAktualna = Column(Integer, nullable=False, server_default=text("((1))"))


class SlLicznikNumeracjiRok(Base):
    __tablename__ = u'sl_LicznikNumeracjiRok'

    lnr_Id = Column(Integer, primary_key=True)
    lnr_IdLicznika = Column(ForeignKey(u'sl_LicznikNumeracji.ln_Id'), nullable=False)
    lnr_Rok = Column(Integer, nullable=False)
    lnr_WartoscAktualna = Column(Integer, nullable=False)

    sl_LicznikNumeracji = relationship(u'SlLicznikNumeracji')


class SlMagazyn(Base):
    __tablename__ = u'sl_Magazyn'

    mag_Id = Column(Integer, primary_key=True)
    mag_Symbol = Column(String(3, u'Polish_CI_AS'), nullable=False)
    mag_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    mag_Status = Column(Integer, nullable=False, server_default=text("((1))"))
    mag_Opis = Column(String(255, u'Polish_CI_AS'))
    mag_Analityka = Column(String(5, u'Polish_CI_AS'))
    mag_Glowny = Column(BIT, nullable=False, server_default=text("((0))"))
    mag_POS = Column(BIT, nullable=False, server_default=text("((0))"))
    mag_POSIdent = Column(UNIQUEIDENTIFIER)
    mag_POSNazwa = Column(String(255, u'Polish_CI_AS'))
    mag_POSAdres = Column(String(82, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'sl_MagazynProfil')
    pd_Uzytkownik1 = relationship(u'PdUzytkownik', secondary=u'pd_UzytkMagazyn')
    pd_Uzytkownik2 = relationship(u'PdUzytkownik', secondary=u'sl_MagazynPrzesunieciaProfil')


t_sl_MagazynProfil = Table(
    u'sl_MagazynProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'sl_Magazyn.mag_Id'), primary_key=True, nullable=False),
    Column(u'pf_idUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


t_sl_MagazynPrzesunieciaProfil = Table(
    u'sl_MagazynPrzesunieciaProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'sl_Magazyn.mag_Id'), primary_key=True, nullable=False),
    Column(u'pf_idUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class SlModelTowar(Base):
    __tablename__ = u'sl_ModelTowar'

    mtw_Id = Column(Integer, primary_key=True)
    mtw_IdModel = Column(ForeignKey(u'sl_ModelTw.mdt_Id'), nullable=False)
    mtw_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False, unique=True)

    sl_ModelTw = relationship(u'SlModelTw')
    tw__Towar = relationship(u'TwTowar')


class SlModelTw(Base):
    __tablename__ = u'sl_ModelTw'

    mdt_Id = Column(Integer, primary_key=True)
    mdt_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlOddzialNFZ(Base):
    __tablename__ = u'sl_OddzialNFZ'

    onfz_Id = Column(Integer, primary_key=True)
    onfz_Kod = Column(String(3, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    onfz_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlOpi(Base):
    __tablename__ = u'sl_Opis'

    sop_Id = Column(Integer, primary_key=True)
    sop_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("('')"))


class SlOpisAbsencji(Base):
    __tablename__ = u'sl_OpisAbsencji'

    oa_Id = Column(Integer, primary_key=True)
    oa_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlPKWiU(Base):
    __tablename__ = u'sl_PKWiU'

    pkw_Id = Column(Integer, primary_key=True)
    pkw_Numer = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pkw_Opis = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pkw_OdwrotneObciazenie = Column(BIT, nullable=False, server_default=text("((0))"))


class SlPanstwo(Base):
    __tablename__ = u'sl_Panstwo'

    pa_Id = Column(Integer, primary_key=True)
    pa_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pa_KodPanstwaUE = Column(String(2, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pa_CzlonekUE = Column(BIT, nullable=False, server_default=text("((0))"))


class SlPojCel(Base):
    __tablename__ = u'sl_PojCel'

    spc_Id = Column(Integer, primary_key=True)
    spc_Cel = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    spc_IdTrasy = Column(ForeignKey(u'sl_PojTrasa.sptr_Id'))

    sl_PojTrasa = relationship(u'SlPojTrasa')


class SlPojTrasa(Base):
    __tablename__ = u'sl_PojTrasa'

    sptr_Id = Column(Integer, primary_key=True)
    sptr_Trasa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sptr_Km = Column(MONEY, nullable=False)


class SlPojTypStawka(Base):
    __tablename__ = u'sl_PojTypStawka'

    sps_Id = Column(Integer, primary_key=True)
    sps_TypPojazdu = Column(Integer, nullable=False)
    sps_Stawka = Column(MONEY, nullable=False)
    sps_WaznaOd = Column(DateTime, nullable=False)


class SlPokrewienstwo(Base):
    __tablename__ = u'sl_Pokrewienstwo'

    pokr_Id = Column(Integer, primary_key=True)
    pokr_Kod = Column(String(2, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pokr_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlPowodRozwiazaniaUmowy(Base):
    __tablename__ = u'sl_PowodRozwiazaniaUmowy'

    pru_Id = Column(Integer, primary_key=True)
    pru_Powod = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlPracaSzczegolnyCharakter(Base):
    __tablename__ = u'sl_PracaSzczegolnyCharakter'

    pch_Id = Column(Integer, primary_key=True)
    pch_Tresc = Column(String(255, u'Polish_CI_AS'), nullable=False)
    pch_Kod = Column(String(9, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlPrawoDoEmerytury(Base):
    __tablename__ = u'sl_PrawoDoEmerytury'

    pde_Id = Column(Integer, primary_key=True)
    pde_Kod = Column(String(1, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    pde_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlPrzyczynaKorekty(Base):
    __tablename__ = u'sl_PrzyczynaKorekty'

    pkr_Id = Column(Integer, primary_key=True)
    pkr_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlRabat(Base):
    __tablename__ = u'sl_Rabat'

    rt_id = Column(Integer, primary_key=True)
    rt_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rt_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    rt_Procent = Column(MONEY, nullable=False)


class SlRejestrKsiegowy(Base):
    __tablename__ = u'sl_RejestrKsiegowy'

    rks_Id = Column(Integer, primary_key=True)
    rks_Symbol = Column(String(3, u'Polish_CI_AS'), nullable=False, unique=True)
    rks_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rks_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    rks_KontrolaBilansowania = Column(Integer, nullable=False, server_default=text("((1))"))
    rks_DefWalutaDekretow = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False, server_default=text("('PLN')"))
    rks_DefRodzajKursuWal = Column(Integer, nullable=False, server_default=text("((2))"))
    rks_PowiazanieVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    rks_IdTypuEwidVAT = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'))
    rks_RodzajZakupu = Column(Integer)
    rks_SposobOdliczania = Column(Integer)
    rks_KontrolaDanychVAT = Column(Integer, nullable=False, server_default=text("((2))"))
    rks_KontrolaZgodnosciEwidencjiVAT = Column(Integer, nullable=False, server_default=text("((1))"))
    rks_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    rks_KopiujTresc = Column(BIT, nullable=False, server_default=text("((1))"))

    sl_Waluta = relationship(u'SlWaluta')
    sl_Kategoria = relationship(u'SlKategoria')
    sl_TypEwidVAT = relationship(u'SlTypEwidVAT')


class SlRodzajKontaktu(Base):
    __tablename__ = u'sl_RodzajKontaktu'

    rk_Id = Column(Integer, primary_key=True)
    rk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlRodzajObnizki(Base):
    __tablename__ = u'sl_RodzajObnizki'

    rob_Id = Column(Integer, primary_key=True)
    rob_Numer = Column(Integer, nullable=False)
    rob_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlRodzajOdliczenia(Base):
    __tablename__ = u'sl_RodzajOdliczenia'

    rod_Id = Column(Integer, primary_key=True)
    rod_Numer = Column(Integer, nullable=False)
    rod_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlStanCywilny(Base):
    __tablename__ = u'sl_StanCywilny'

    sc_Id = Column(Integer, primary_key=True)
    sc_Stan = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlStanowisko(Base):
    __tablename__ = u'sl_Stanowisko'

    stn_Id = Column(Integer, primary_key=True)
    stn_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stn_KategoriaMin = Column(ForeignKey(u'sl_StawkaZaszeregowania.sza_Id'))
    stn_KategoriaMax = Column(ForeignKey(u'sl_StawkaZaszeregowania.sza_Id'))

    sl_StawkaZaszeregowania = relationship(u'SlStawkaZaszeregowania', primaryjoin='SlStanowisko.stn_KategoriaMax == SlStawkaZaszeregowania.sza_Id')
    sl_StawkaZaszeregowania1 = relationship(u'SlStawkaZaszeregowania', primaryjoin='SlStanowisko.stn_KategoriaMin == SlStawkaZaszeregowania.sza_Id')


class SlStawkaAkordowa(Base):
    __tablename__ = u'sl_StawkaAkordowa'

    sa_Id = Column(Integer, primary_key=True)
    sa_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sa_Jednostka = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sa_TypStawki = Column(Integer, nullable=False, server_default=text("((0))"))
    sa_LiniowaPrzelicznik = Column(MONEY, server_default=text("((0))"))


class SlStawkaAkordowaProg(Base):
    __tablename__ = u'sl_StawkaAkordowaProg'

    sap_Id = Column(Integer, primary_key=True)
    sap_IdStawkiAkordowej = Column(Integer, nullable=False)
    sap_Lp = Column(Integer, nullable=False, server_default=text("((0))"))
    sap_Prog = Column(MONEY, nullable=False)
    sap_Wartosc = Column(MONEY, nullable=False)


class SlStawkaProwizyjna(Base):
    __tablename__ = u'sl_StawkaProwizyjna'

    sp_Id = Column(Integer, primary_key=True)
    sp_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sp_TypStawki = Column(Integer, nullable=False, server_default=text("((0))"))
    sp_LiniowaPrzelicznik = Column(MONEY, server_default=text("((0))"))


class SlStawkaProwizyjnaProg(Base):
    __tablename__ = u'sl_StawkaProwizyjnaProg'

    spp_Id = Column(Integer, primary_key=True)
    spp_IdStawkiProwizyjnej = Column(Integer, nullable=False)
    spp_Lp = Column(Integer, nullable=False, server_default=text("((0))"))
    spp_Prog = Column(MONEY, nullable=False)
    spp_Wartosc = Column(MONEY, nullable=False)


class SlStawkaVAT(Base):
    __tablename__ = u'sl_StawkaVAT'

    vat_Id = Column(Integer, primary_key=True, unique=True)
    vat_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    vat_Stawka = Column(MONEY, nullable=False)
    vat_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    vat_CzySystemowa = Column(BIT, nullable=False)
    vat_CzyWidoczna = Column(BIT, nullable=False)
    vat_Pozycja = Column(Integer, nullable=False)
    vat_PozSprzedaz = Column(Integer, nullable=False, server_default=text("((0))"))
    vat_PozZakup = Column(Integer, nullable=False, server_default=text("((0))"))
    vat_PozRR = Column(Integer, nullable=False, server_default=text("((0))"))
    vat_PozDomyslna = Column(Integer, nullable=False, server_default=text("((0))"))
    vat_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))


class SlStawkaZaszeregowania(Base):
    __tablename__ = u'sl_StawkaZaszeregowania'

    sza_Id = Column(Integer, primary_key=True)
    sza_Kategoria = Column(Integer)
    sza_Nazwa = Column(String(255, u'Polish_CI_AS'))
    sza_MiesiecznaMin = Column(MONEY)
    sza_MiesiecznaMax = Column(MONEY)
    sza_DziennaMin = Column(MONEY)
    sza_DziennaMax = Column(MONEY)
    sza_GodzinowaMin = Column(MONEY)
    sza_GodzinowaMax = Column(MONEY)


class SlStopienNiepelnosprawnosci(Base):
    __tablename__ = u'sl_StopienNiepelnosprawnosci'

    stn_Id = Column(Integer, primary_key=True)
    stn_Kod = Column(String(1, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stn_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlStopienNiezdolnosciDoPracy(Base):
    __tablename__ = u'sl_StopienNiezdolnosciDoPracy'

    stnp_Id = Column(Integer, primary_key=True)
    stnp_Kod = Column(String(2, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stnp_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlSymbolDeklaracjiUSEBank(Base):
    __tablename__ = u'sl_SymbolDeklaracjiUSEBank'

    sdu_Id = Column(Integer, primary_key=True)
    sdu_Symbol = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sdu_Zobowiazanie = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sdu_TypRachBank = Column(Integer, nullable=False)
    sdu_Systemowy = Column(BIT, nullable=False, server_default=text("((0))"))


class SlSzablonDzialania(Base):
    __tablename__ = u'sl_SzablonDzialania'

    szdz_Id = Column(Integer, primary_key=True)
    szdz_DzialanieRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    szdz_NazwaSzablonu = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    szdz_Nazwa = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    szdz_Status = Column(Integer)
    szdz_Podtyp = Column(ForeignKey(u'sl_CRMPodTypZadania.ptz_Id'))
    szdz_Personel = Column(Integer, nullable=False)
    szdz_CalyDzien = Column(BIT, nullable=False, server_default=text("((0))"))
    szdz_Poczatek = Column(Integer, nullable=False, server_default=text("((0))"))
    szdz_CzasTrwania = Column(Integer, nullable=False)
    szdz_Lokalizacja = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    szdz_Priorytet = Column(Integer, nullable=False, server_default=text("((2))"))
    szdz_Kolor = Column(String(11, u'Polish_CI_AS'), nullable=False)
    szdz_PokazujWKalendarzu = Column(BIT, nullable=False)
    szdz_Rezultat = Column(Integer)
    szdz_Kierunek = Column(Integer)
    szdz_KiedyPrzypomnienie = Column(Integer, nullable=False)
    szdz_BezCzasu = Column(BIT, nullable=False, server_default=text("((0))"))
    szdz_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    szdz_Prywatne = Column(BIT, nullable=False, server_default=text("((0))"))
    szdz_Klasa = Column(Integer, nullable=False, server_default=text("((0))"))
    szdz_FormaDzialaniaWindykacyjnego = Column(Integer, nullable=False, server_default=text("((0))"))
    szdz_Opis = Column(UnicodeText(1073741823), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    szdz_Predefiniowany = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_CRMPodTypZadania = relationship(u'SlCRMPodTypZadania')


class SlSzablonRachunku(Base):
    __tablename__ = u'sl_SzablonRachunku'

    sr_Id = Column(Integer, primary_key=True)
    sr_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    sr_Tekst = Column(LargeBinary, nullable=False)


class SlSzablonUmowyCP(Base):
    __tablename__ = u'sl_SzablonUmowyCP'

    sucp_Id = Column(Integer, primary_key=True)
    sucp_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sucp_Tekst = Column(LargeBinary, nullable=False)


class SlSzablonUmowyOPrace(Base):
    __tablename__ = u'sl_SzablonUmowyOPrace'

    sup_Id = Column(Integer, primary_key=True)
    sup_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sup_Tekst = Column(LargeBinary, nullable=False)
    sup_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))


class SlTresc(Base):
    __tablename__ = u'sl_Tresc'

    sltr_Id = Column(Integer, primary_key=True)
    sltr_Tresc = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("('')"))


class SlTypEwidVAT(Base):
    __tablename__ = u'sl_TypEwidVAT'

    te_Id = Column(Integer, primary_key=True)
    te_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    te_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    te_Rodzaj = Column(Integer, nullable=False)
    te_CzySystemowa = Column(BIT, nullable=False, server_default=text("((0))"))
    te_CzyKorekty = Column(BIT, nullable=False, server_default=text("((0))"))
    te_Pozycja = Column(Integer, nullable=False)
    te_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    te_RodzajZakupu = Column(Integer, nullable=False, server_default=text("((2))"))
    te_SposobOdliczania = Column(Integer, nullable=False, server_default=text("((0))"))
    te_TransakcjaVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    te_MiesiacOdliczVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    te_IdTerminPlatnosci = Column(ForeignKey(u'sl_FormaPlatnosci.fp_Id'))
    te_RozliczanaUsluga = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')
    sl_FormaPlatnosci = relationship(u'SlFormaPlatnosci')


class SlTypIdentyfikatora(Base):
    __tablename__ = u'sl_TypIdentyfikatora'

    tid_Id = Column(Integer, primary_key=True)
    tid_Kod = Column(String(1, u'Polish_CI_AS'), nullable=False, unique=True)
    tid_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlTypWplaty(Base):
    __tablename__ = u'sl_TypWplaty'

    wpt_Id = Column(Integer, primary_key=True)
    wpt_Symbol = Column(String(1, u'Polish_CI_AS'), nullable=False)
    wpt_Nazwa = Column(String(30, u'Polish_CI_AS'), nullable=False)


class SlTytulUbezpieczenia(Base):
    __tablename__ = u'sl_TytulUbezpieczenia'

    tu_Id = Column(Integer, primary_key=True)
    tu_Kod = Column(String(4, u'Polish_CI_AS'), nullable=False, unique=True)
    tu_Opis = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlUprawnienie(Base):
    __tablename__ = u'sl_Uprawnienie'

    upr_Id = Column(Integer, primary_key=True)
    upr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlUrzadCelny(Base):
    __tablename__ = u'sl_UrzadCelny'

    suc_Id = Column(Integer, primary_key=True)
    suc_Kod = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    suc_Opis = Column(String(255, u'Polish_CI_AS'))


class SlUrzadSkarbowy(Base):
    __tablename__ = u'sl_UrzadSkarbowy'

    sus_Id = Column(Integer, primary_key=True)
    sus_Kod = Column(String(8, u'Polish_CI_AS'), nullable=False)
    sus_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)


class SlWaluta(Base):
    __tablename__ = u'sl_Waluta'

    wl_Id = Column(Integer, nullable=False, unique=True)
    wl_Symbol = Column(String(3, u'Polish_CI_AS'), primary_key=True)
    wl_Nazwa = Column(String(25, u'Polish_CI_AS'), nullable=False)
    wl_LiczbaJednostek = Column(Integer, nullable=False, server_default=text("((1))"))
    wl_Aktywna = Column(BIT, nullable=False, server_default=text("((1))"))


class SlWalutaBank(Base):
    __tablename__ = u'sl_WalutaBank'

    wbn_ID = Column(Integer, primary_key=True)
    wbn_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wbn_Podstawowy = Column(BIT, nullable=False, server_default=text("((0))"))


class SlWalutaKur(Base):
    __tablename__ = u'sl_WalutaKurs'

    wk_Id = Column(Integer, primary_key=True)
    wk_Data = Column(DateTime, nullable=False)
    wk_IdWaluty = Column(Integer, nullable=False)
    wk_Symbol = Column(ForeignKey(u'sl_Waluta.wl_Symbol'), nullable=False)
    wk_Zakup = Column(MONEY, nullable=False, server_default=text("((0))"))
    wk_Sprzedaz = Column(MONEY, nullable=False, server_default=text("((0))"))
    wk_Sredni = Column(MONEY, nullable=False, server_default=text("((0))"))
    wk_IdTabeli = Column(ForeignKey(u'sl_WalutaTabelaKursow.wtk_ID'))

    sl_WalutaTabelaKursow = relationship(u'SlWalutaTabelaKursow')
    sl_Waluta = relationship(u'SlWaluta')


class SlWalutaNominal(Base):
    __tablename__ = u'sl_WalutaNominal'

    wln_Id = Column(Integer, primary_key=True)
    wln_IdWaluty = Column(Integer, nullable=False)
    wln_Nominal = Column(MONEY, nullable=False)
    wln_Opis = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wln_Pozycja = Column(Integer, nullable=False)


class SlWalutaTabelaKursow(Base):
    __tablename__ = u'sl_WalutaTabelaKursow'

    wtk_ID = Column(Integer, primary_key=True)
    wtk_Data = Column(DateTime, nullable=False)
    wtk_IdBanku = Column(ForeignKey(u'sl_WalutaBank.wbn_ID'), nullable=False)
    wtk_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wtk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl_WalutaBank = relationship(u'SlWalutaBank')


class SlWlasciwCechTw(Base):
    __tablename__ = u'sl_WlasciwCechTw'

    wct_Id = Column(Integer, primary_key=True)
    wct_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlWlasciwoscCecha(Base):
    __tablename__ = u'sl_WlasciwoscCecha'

    wch_Id = Column(Integer, primary_key=True)
    wch_IdWlasciwosc = Column(ForeignKey(u'sl_WlasciwCechTw.wct_Id'), nullable=False)
    wch_IdCecha = Column(ForeignKey(u'sl_CechaTw.ctw_Id'), nullable=False, unique=True)

    sl_CechaTw = relationship(u'SlCechaTw')
    sl_WlasciwCechTw = relationship(u'SlWlasciwCechTw')


class SlWlasny(Base):
    __tablename__ = u'sl_Wlasny'
    __table_args__ = (
        Index(u'IX_sl_Wlasny', u'sw_Id', u'sw_SlownikId', unique=True),
    )

    sw_Id = Column(Integer, primary_key=True)
    sw_SlownikId = Column(ForeignKey(u'sl__Slownik.sl_Id'), nullable=False)
    sw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    sl__Slownik = relationship(u'SlSlownik')


class SlWojewodztwo(Base):
    __tablename__ = u'sl_Wojewodztwo'

    woj_Id = Column(Integer, primary_key=True)
    woj_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)


class SlWyksztalcenie(Base):
    __tablename__ = u'sl_Wyksztalcenie'

    wyk_Id = Column(Integer, primary_key=True)
    wyk_Kod = Column(String(2, u'Polish_CI_AS'), nullable=False, unique=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wyk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlWzorzecSkladnikaPlacowego(Base):
    __tablename__ = u'sl_WzorzecSkladnikaPlacowego'

    wsp_Id = Column(Integer, primary_key=True)
    wsp_Nazwa = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wsp_PodstOpodatkowania = Column(BIT, nullable=False)
    wsp_PodstSklUbEmerRent = Column(BIT, nullable=False)
    wsp_PodstSklUbChorWyp = Column(BIT, nullable=False)
    wsp_PodstSklUbZdr = Column(BIT, nullable=False)
    wsp_Naliczany = Column(BIT, nullable=False)
    wsp_PlatnyPracodawca = Column(BIT, nullable=False)
    wsp_PoleWyplaty = Column(Integer)
    wsp_Systemowy = Column(BIT, nullable=False, server_default=text("((0))"))


class SlZawod(Base):
    __tablename__ = u'sl_Zawod'

    zw_Id = Column(Integer, primary_key=True)
    zw_Kod = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zw_Wersja = Column(Integer)


class SlZestawAkordowy(Base):
    __tablename__ = u'sl_ZestawAkordowy'

    za_Id = Column(Integer, primary_key=True)
    za_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class SlZestawAkordowyAkord(Base):
    __tablename__ = u'sl_ZestawAkordowyAkord'

    zal_Id = Column(Integer, primary_key=True)
    zal_IdZestawu = Column(ForeignKey(u'sl_ZestawAkordowy.za_Id'), nullable=False)
    zal_IdStawkiAkrodowej = Column(ForeignKey(u'sl_StawkaAkordowa.sa_Id'), nullable=False)

    sl_StawkaAkordowa = relationship(u'SlStawkaAkordowa')
    sl_ZestawAkordowy = relationship(u'SlZestawAkordowy')


class SlZwolnienieZAkcyzy(Base):
    __tablename__ = u'sl_ZwolnienieZAkcyzy'

    akc_Id = Column(Integer, primary_key=True)
    akc_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    akc_CzyWidoczna = Column(BIT)


class SlSlownik(Base):
    __tablename__ = u'sl__Slownik'

    sl_Id = Column(Integer, primary_key=True)
    sl_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    sl_Opis = Column(String(500, u'Polish_CI_AS'), nullable=False)
    sl_Programy = Column(Integer, nullable=False)

    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'sl__SlownikProfil')


t_sl__SlownikProfil = Table(
    u'sl__SlownikProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'sl__Slownik.sl_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class StKST(Base):
    __tablename__ = u'st_KST'

    stk_Id = Column(Integer, primary_key=True)
    stk_Nr = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stk_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stk_KRST = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stk_Opis = Column(String(5000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class StMPK(Base):
    __tablename__ = u'st_MPK'

    stm_Id = Column(Integer, primary_key=True)
    stm_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stm_NrAnalityka = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    stm_Symbol = Column(String(5, u'Polish_CI_AS'))


class StOperacja(Base):
    __tablename__ = u'st_Operacja'
    __table_args__ = (
        Index(u'IX_st_NrDok', u'sto_TypOper', u'sto_NrDok', unique=True),
    )

    sto_Id = Column(Integer, primary_key=True)
    sto_IdSrodka = Column(ForeignKey(u'st_SrodekTrwaly.st_Id'), nullable=False)
    sto_Data = Column(DateTime, nullable=False)
    sto_NrDok = Column(String(30, u'Polish_CI_AS'), nullable=False)
    sto_TypOper = Column(Integer, nullable=False)
    sto_Wartosc = Column(MONEY, nullable=False)
    sto_WartoscBil = Column(MONEY)
    sto_IdMPK = Column(ForeignKey(u'st_MPK.stm_Id'))
    sto_Uzytkownik = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    sto_CzyAmort = Column(BIT)
    sto_CzyAmortBil = Column(BIT)
    sto_Metoda = Column(Integer)
    sto_MetodaBil = Column(Integer)
    sto_Stopa = Column(MONEY)
    sto_StopaBil = Column(MONEY)
    sto_WspolczynnikDegr = Column(MONEY)
    sto_WspolczynnikDegrBil = Column(MONEY)
    sto_RozpoczecieAM = Column(Integer, server_default=text("((1))"))
    sto_RozpoczecieAMBil = Column(Integer)
    sto_CzyPDUW = Column(BIT)
    sto_UmorzPocz = Column(MONEY)
    sto_UmorzPoczBil = Column(MONEY)
    sto_Przyczyna = Column(String(255, u'Polish_CI_AS'))
    sto_Sposob = Column(String(255, u'Polish_CI_AS'))
    sto_Komisja = Column(String(255, u'Polish_CI_AS'))
    sto_DokSprzedazy = Column(String(30, u'Polish_CI_AS'))
    sto_Nabywca = Column(String(255, u'Polish_CI_AS'))
    sto_CzyPodwyzszonaStopa = Column(BIT, server_default=text("((0))"))
    sto_CzyPodwyzszonaStopaBil = Column(BIT)
    sto_PodwyzszonaStopa = Column(MONEY)
    sto_PodwyzszonaStopaBil = Column(MONEY)
    sto_SumaAM = Column(MONEY)
    sto_SumaAMBil = Column(MONEY)
    sto_Import = Column(Integer, nullable=False, server_default=text("((0))"))
    sto_IdKategorii = Column(Integer)

    st_MPK = relationship(u'StMPK')
    st_SrodekTrwaly = relationship(u'StSrodekTrwaly')


class StPlanAMRok(Base):
    __tablename__ = u'st_PlanAMRok'

    stp_Id = Column(Integer, primary_key=True)
    stp_IdSrodka = Column(ForeignKey(u'st_SrodekTrwaly.st_Id'), nullable=False)
    stp_Rok = Column(Integer, nullable=False)
    stp_OK = Column(BIT, nullable=False)

    st_SrodekTrwaly = relationship(u'StSrodekTrwaly')


class StPlanAMRozbicie(Base):
    __tablename__ = u'st_PlanAMRozbicie'

    stps_Id = Column(Integer, primary_key=True)
    stps_IdPlanuAM = Column(ForeignKey(u'st_PlanAMRok.stp_Id'), nullable=False)
    stps_Miesiac = Column(Integer, nullable=False)
    stps_Licznik = Column(Integer, nullable=False)
    stps_Mianownik = Column(Integer, nullable=False)
    stps_Bilans = Column(Integer)

    st_PlanAMRok = relationship(u'StPlanAMRok')


class StSrodekTrwaly(Base):
    __tablename__ = u'st_SrodekTrwaly'

    st_Id = Column(Integer, primary_key=True)
    st_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    st_IdKST = Column(ForeignKey(u'st_KST.stk_Id'))
    st_TypWNiP = Column(Integer)
    st_GUS = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_NrInw = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_Charakterystyka = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_DaneTechniczne = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_Producent = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_RokProdukcji = Column(Integer)
    st_Sprzedawca = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_DokNabycia = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_StanTechniczny = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_WartoscNabycia = Column(MONEY)
    st_DataNabycia = Column(DateTime)
    st_SposobNabycia = Column(Integer)
    st_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    st_NrAnalityka = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    st_IdKategoriiDok = Column(Integer)

    st_KST = relationship(u'StKST')


class StSrodekTrwalyDane(Base):
    __tablename__ = u'st_SrodekTrwalyDane'

    std_Id = Column(Integer, primary_key=True)
    std_idSrodka = Column(ForeignKey(u'st_SrodekTrwaly.st_Id'), nullable=False)
    std_WartoscPocz = Column(MONEY)
    std_WartoscPoczBil = Column(MONEY)
    std_UmorzDotych = Column(MONEY)
    std_UmorzDotychBil = Column(MONEY)
    std_WartoscNetto = Column(MONEY)
    std_WartoscNettoBil = Column(MONEY)
    std_IdMPK = Column(ForeignKey(u'st_MPK.stm_Id'))
    std_Uzytkownik = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    std_Metoda = Column(Integer)
    std_MetodaBil = Column(Integer)
    std_Stopa = Column(MONEY)
    std_StopaBil = Column(MONEY)
    std_WspolczynnikDegr = Column(MONEY)
    std_WspolczynnikDegrBil = Column(MONEY)

    st_MPK = relationship(u'StMPK')
    st_SrodekTrwaly = relationship(u'StSrodekTrwaly')


class StSrodekTrwalyPlanAM(Base):
    __tablename__ = u'st_SrodekTrwalyPlanAM'

    sta_Id = Column(Integer, primary_key=True)
    sta_IdSrodka = Column(ForeignKey(u'st_SrodekTrwaly.st_Id'), nullable=False)
    sta_Miesiac = Column(Integer, nullable=False)
    sta_Licznik = Column(Integer, nullable=False)
    sta_Mianownik = Column(Integer, nullable=False)
    sta_Bilans = Column(BIT)

    st_SrodekTrwaly = relationship(u'StSrodekTrwaly')


class StWyposazenie(Base):
    __tablename__ = u'st_Wyposazenie'

    wps_Id = Column(Integer, primary_key=True)
    wps_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wps_DataNabycia = Column(DateTime, nullable=False)
    wps_Wartosc = Column(MONEY, nullable=False)
    wps_DokNabycia = Column(String(30, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wps_NrInw = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wps_NrPozycji = Column(Integer)
    wps_CzyZlikwidowany = Column(BIT, nullable=False, server_default=text("((0))"))
    wps_DataLikwidacji = Column(DateTime)
    wps_Przyczyna = Column(String(255, u'Polish_CI_AS'))


class SuParametr(Base):
    __tablename__ = u'su_Parametr'

    su_Id = Column(Integer, primary_key=True)
    su_Algorytm = Column(Integer, nullable=False, server_default=text("((0))"))
    su_Kontrola = Column(BIT, nullable=False, server_default=text("((1))"))
    su_PlatOdr = Column(BIT, nullable=False, server_default=text("((0))"))
    su_KartaSpr = Column(BIT, nullable=False, server_default=text("((0))"))
    su_KartaSprId = Column(Integer)
    su_KartaZak = Column(BIT, nullable=False, server_default=text("((0))"))
    su_KartaZakId = Column(Integer)
    su_KredytSpr = Column(BIT, nullable=False, server_default=text("((0))"))
    su_KredytSprId = Column(Integer)
    su_VatExId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    su_VatExProc = Column(MONEY)
    su_VatZwId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    su_VatZwProc = Column(MONEY)
    su_VatUJId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    su_VatUJProc = Column(MONEY)
    su_Rabat = Column(Integer)
    su_VatUEId = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    su_VatUEProc = Column(MONEY)
    su_KursEUR = Column(MONEY)
    su_Wizard = Column(Integer, nullable=False, server_default=text("((1))"))
    su_MinMarza = Column(MONEY, nullable=False, server_default=text("((0))"))
    su_StatusDokSp = Column(Integer, nullable=False, server_default=text("((1))"))
    su_StatusDokZak = Column(Integer, nullable=False, server_default=text("((1))"))
    su_StatusDokWyd = Column(Integer, nullable=False, server_default=text("((1))"))
    su_StatusDokPrz = Column(Integer, nullable=False, server_default=text("((1))"))
    su_StatusDokMM = Column(Integer, nullable=False, server_default=text("((1))"))
    su_StatusDokZK = Column(Integer, nullable=False, server_default=text("((6))"))
    su_AutoDyspozycja = Column(Integer, nullable=False, server_default=text("((0))"))
    su_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    su_PrzelewSpr = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PrzelewZak = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PrzedplataSpr = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PrzedplataZak = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PdpSprPodlaczajZal = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PdpSprSplatyNiepowiazane = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PdpZakPodlaczajZal = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PdpZakSplatyNiepowiazane = Column(BIT, nullable=False, server_default=text("((0))"))
    su_WlaczBlokadeKK = Column(BIT, nullable=False, server_default=text("((1))"))
    su_PrzejsciowyVATZaliczki = Column(BIT, nullable=False, server_default=text("((0))"))
    su_NaliczajVATFaktWewn = Column(BIT, nullable=False, server_default=text("((1))"))
    su_VatOOId = Column(Integer)
    su_VatOOProc = Column(MONEY)
    su_PodpisPDF = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PodpisEPP = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PodpisSkrot = Column(Text(collation=u'Polish_CI_AS'))
    su_PodpisOpis = Column(Text(collation=u'Polish_CI_AS'))
    su_PodpisPIN = Column(Text(collation=u'Polish_CI_AS'))
    su_FoPlNaPoprDok = Column(Integer, nullable=False, server_default=text("((5))"))
    su_FoPlNaPoprZam = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PokazDokDost = Column(BIT, nullable=False, server_default=text("((0))"))
    su_AutoDyspozZK = Column(Integer, nullable=False, server_default=text("((0))"))
    su_SynchronizatorNazwaKomputera = Column(String(255, u'Polish_CI_AS'))
    su_MarzaNieKoloruj = Column(BIT, nullable=False, server_default=text("((0))"))
    su_FakturyMieszane = Column(Integer, nullable=False, server_default=text("((1))"))
    su_VatSPTKId = Column(Integer)
    su_VatSPTKProc = Column(MONEY)
    su_WymagajPrzyczynyKorekty = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PozycjeWklej = Column(LargeBinary)
    su_PozycjeWklejSpecjalne = Column(LargeBinary)
    su_IgnorujBlokadeMagSS = Column(BIT, nullable=False, server_default=text("((0))"))
    su_IgnorujMOOzLimitami = Column(BIT, nullable=False, server_default=text("((0))"))
    su_PromocjaCzasOtwarciaDokum = Column(BIT, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')
    sl_StawkaVAT = relationship(u'SlStawkaVAT', primaryjoin='SuParametr.su_VatExId == SlStawkaVAT.vat_Id')
    sl_StawkaVAT1 = relationship(u'SlStawkaVAT', primaryjoin='SuParametr.su_VatUEId == SlStawkaVAT.vat_Id')
    sl_StawkaVAT2 = relationship(u'SlStawkaVAT', primaryjoin='SuParametr.su_VatUJId == SlStawkaVAT.vat_Id')
    sl_StawkaVAT3 = relationship(u'SlStawkaVAT', primaryjoin='SuParametr.su_VatZwId == SlStawkaVAT.vat_Id')


class SvsdParametr(Base):
    __tablename__ = u'svsd_Parametr'

    ssd_Id = Column(Integer, primary_key=True)
    ssd_WydaniaMagazynowe = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_SprzedazDetaliczna = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_PrzyjeciaMagazynowe = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_ZamowieniaKlienta = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_FakturySprzedazy = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_FakturyZakupu = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_WydaniaOdbiorcy = Column(Integer, nullable=False, server_default=text("((-1))"))
    ssd_PrzyjeciaDostawcy = Column(Integer, nullable=False, server_default=text("((-1))"))


class TelEwid(Base):
    __tablename__ = u'tel__Ewid'

    tel_Id = Column(Integer, primary_key=True)
    tel_IdAdresu = Column(ForeignKey(u'adr__Ewid.adr_Id'), nullable=False, index=True)
    tel_Faks = Column(BIT, nullable=False, server_default=text("((0))"))
    tel_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    tel_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tel_Numer = Column(String(35, u'Polish_CI_AS'), nullable=False)
    tel_Podstawowy = Column(BIT, nullable=False, server_default=text("((0))"))

    adr__Ewid = relationship(u'AdrEwid')


class TelObiekt(Base):
    __tablename__ = u'tel__Obiekt'

    to_Id = Column(Integer, primary_key=True)
    to_IdObiektu = Column(Integer, nullable=False)
    to_TypObiektu = Column(Integer, nullable=False)
    to_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    to_Numer = Column(String(35, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    to_Podstawowy = Column(BIT, nullable=False, server_default=text("((0))"))


class TrHistoria(Base):
    __tablename__ = u'tr_Historia'

    trh_Id = Column(Integer, primary_key=True)
    trh_Transakcja = Column(Integer, nullable=False)
    trh_Operator = Column(Integer, nullable=False)
    trh_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    trh_Data = Column(DateTime, nullable=False)


class TrOpi(Base):
    __tablename__ = u'tr_Opis'

    tro_Id = Column(Integer, primary_key=True)
    tro_Transakcja = Column(Integer)
    tro_Opis = Column(Text(collation=u'Polish_CI_AS'))


class TrParametr(Base):
    __tablename__ = u'tr_Parametr'

    trp_Id = Column(Integer, primary_key=True)
    trp_DokZamowienie = Column(Integer)
    trp_DokKoncowy = Column(Integer)
    trp_Scenariusz = Column(Integer)
    trp_Grupa = Column(Integer)
    trp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    trp_TerminRealizacji = Column(String(500, u'Polish_CI_AS'))
    trp_WarunkiPlatnosci = Column(String(500, u'Polish_CI_AS'))
    trp_WarunkiDostawy = Column(String(500, u'Polish_CI_AS'))
    trp_UwagiDok = Column(String(500, u'Polish_CI_AS'))
    trp_PokazujWKal = Column(BIT)
    trp_Kolor = Column(String(11, u'Polish_CI_AS'))
    trp_CzasTrwania = Column(Integer)
    trp_OkreslGodzine = Column(BIT, nullable=False, server_default=text("((0))"))

    par__Ewid = relationship(u'ParEwid')


class TrTransakcja(Base):
    __tablename__ = u'tr__Transakcja'

    tr_Id = Column(Integer, primary_key=True)
    tr_IdTransakcji = Column(Integer, nullable=False)
    tr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tr_Klient = Column(Integer, nullable=False)
    tr_Stan = Column(Integer, nullable=False)
    tr_Status = Column(Integer, nullable=False)
    tr_StatusOpis = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tr_Scenariusz = Column(Integer, nullable=False)
    tr_Etap = Column(Integer, nullable=False)
    tr_Pozyskana = Column(Integer)
    tr_DataOtwarcia = Column(DateTime, nullable=False)
    tr_PlanowanaDataZamkniecia = Column(DateTime)
    tr_DataUtworzenia = Column(DateTime, nullable=False)
    tr_Utworzyl = Column(Integer, nullable=False)
    tr_DataModyfikacji = Column(DateTime)
    tr_Zmodyfikowal = Column(Integer)
    tr_DataZamkniecia = Column(DateTime)
    tr_Zamknal = Column(Integer)
    tr_MaObsluzyc = Column(Integer, nullable=False)
    tr_MaObsluzycOdKlienta = Column(Integer)
    tr_Oferta = Column(Integer)
    tr_WartoscNetto = Column(MONEY)
    tr_WartoscBrutto = Column(MONEY)
    tr_WartoscVat = Column(MONEY)
    tr_Waluta = Column(String(3, u'Polish_CI_AS'))
    tr_DokZamowienie = Column(Integer)
    tr_DokKoncowy = Column(Integer)
    tr_DokZamowienieId = Column(Integer)
    tr_DokKoncowyId = Column(Integer)
    tr_DokZamowienieSymbol = Column(String(20, u'Polish_CI_AS'))
    tr_DokKoncowySymbol = Column(String(20, u'Polish_CI_AS'))
    tr_Grupa = Column(Integer)
    tr_DlaczegoNieudana = Column(Integer)
    tr_WartoscRecznie = Column(BIT)
    tr_WalutaKurs = Column(MONEY)
    tr_WarunkiDostawy = Column(String(500, u'Polish_CI_AS'))
    tr_WarunkiPlatnosci = Column(String(500, u'Polish_CI_AS'))
    tr_UwagiDok = Column(String(500, u'Polish_CI_AS'))
    tr_DataRealizacji = Column(String(500, u'Polish_CI_AS'))
    tr_PokazujWKal = Column(BIT)
    tr_Kolor = Column(String(11, u'Polish_CI_AS'))
    tr_PlanowanaGodzinaZamkniecia = Column(Integer)
    tr_ZlecenieId = Column(Integer)


class TwCechaTw(Base):
    __tablename__ = u'tw_CechaTw'

    cht_Id = Column(Integer, primary_key=True)
    cht_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    cht_IdCecha = Column(ForeignKey(u'sl_CechaTw.ctw_Id'), ForeignKey(u'sl_CechaTw.ctw_Id'), nullable=False)

    sl_CechaTw = relationship(u'SlCechaTw', primaryjoin='TwCechaTw.cht_IdCecha == SlCechaTw.ctw_Id')
    sl_CechaTw1 = relationship(u'SlCechaTw', primaryjoin='TwCechaTw.cht_IdCecha == SlCechaTw.ctw_Id')
    tw__Towar = relationship(u'TwTowar')


class TwCena(Base):
    __tablename__ = u'tw_Cena'

    tc_Id = Column(Integer, primary_key=True)
    tc_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False, unique=True)
    tc_CenaNetto0 = Column(MONEY)
    tc_CenaBrutto0 = Column(MONEY)
    tc_WalutaId = Column(String(3, u'Polish_CI_AS'))
    tc_IdWalutaKurs = Column(Integer)
    tc_WalutaKurs = Column(MONEY)
    tc_CenaNettoWaluta = Column(MONEY)
    tc_CenaNettoWaluta2 = Column(MONEY)
    tc_CenaWalutaNarzut = Column(MONEY)
    tc_WalutaJedn = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tc_PodstawaKC = Column(Integer, server_default=text("((0))"))
    tc_CenaNetto1 = Column(MONEY)
    tc_CenaNetto2 = Column(MONEY)
    tc_CenaNetto3 = Column(MONEY)
    tc_CenaNetto4 = Column(MONEY)
    tc_CenaNetto5 = Column(MONEY)
    tc_CenaNetto6 = Column(MONEY)
    tc_CenaNetto7 = Column(MONEY)
    tc_CenaNetto8 = Column(MONEY)
    tc_CenaNetto9 = Column(MONEY)
    tc_CenaNetto10 = Column(MONEY)
    tc_CenaBrutto1 = Column(MONEY)
    tc_CenaBrutto2 = Column(MONEY)
    tc_CenaBrutto3 = Column(MONEY)
    tc_CenaBrutto4 = Column(MONEY)
    tc_CenaBrutto5 = Column(MONEY)
    tc_CenaBrutto6 = Column(MONEY)
    tc_CenaBrutto7 = Column(MONEY)
    tc_CenaBrutto8 = Column(MONEY)
    tc_CenaBrutto9 = Column(MONEY)
    tc_CenaBrutto10 = Column(MONEY)
    tc_Zysk1 = Column(MONEY)
    tc_Zysk2 = Column(MONEY)
    tc_Zysk3 = Column(MONEY)
    tc_Zysk4 = Column(MONEY)
    tc_Zysk5 = Column(MONEY)
    tc_Zysk6 = Column(MONEY)
    tc_Zysk7 = Column(MONEY)
    tc_Zysk8 = Column(MONEY)
    tc_Zysk9 = Column(MONEY)
    tc_Zysk10 = Column(MONEY)
    tc_Narzut1 = Column(MONEY)
    tc_Narzut2 = Column(MONEY)
    tc_Narzut3 = Column(MONEY)
    tc_Narzut4 = Column(MONEY)
    tc_Narzut5 = Column(MONEY)
    tc_Narzut6 = Column(MONEY)
    tc_Narzut7 = Column(MONEY)
    tc_Narzut8 = Column(MONEY)
    tc_Narzut9 = Column(MONEY)
    tc_Narzut10 = Column(MONEY)
    tc_Marza1 = Column(MONEY)
    tc_Marza2 = Column(MONEY)
    tc_Marza3 = Column(MONEY)
    tc_Marza4 = Column(MONEY)
    tc_Marza5 = Column(MONEY)
    tc_Marza6 = Column(MONEY)
    tc_Marza7 = Column(MONEY)
    tc_Marza8 = Column(MONEY)
    tc_Marza9 = Column(MONEY)
    tc_Marza10 = Column(MONEY)
    tc_IdWaluta0 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta1 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta2 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta3 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta4 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta5 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta6 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta7 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta8 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta9 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_IdWaluta10 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    tc_KursWaluty1 = Column(Integer)
    tc_KursWaluty2 = Column(Integer)
    tc_KursWaluty3 = Column(Integer)
    tc_KursWaluty4 = Column(Integer)
    tc_KursWaluty5 = Column(Integer)
    tc_KursWaluty6 = Column(Integer)
    tc_KursWaluty7 = Column(Integer)
    tc_KursWaluty8 = Column(Integer)
    tc_KursWaluty9 = Column(Integer)
    tc_KursWaluty10 = Column(Integer)
    tc_DataKursuWaluty = Column(DateTime)
    tc_BankKursuWaluty = Column(Integer)

    tw__Towar = relationship(u'TwTowar')


class TwDokument(Base):
    __tablename__ = u'tw_Dokument'

    tdk_Id = Column(Integer, primary_key=True)
    tdk_IdTowaru = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    tdk_IdKategorii = Column(ForeignKey(u'sl_KategoriaDokumentu.kd_Id'), nullable=False)
    tdk_Zablokowany = Column(BIT, nullable=False)
    tdk_DataModyfikacji = Column(DateTime, nullable=False)
    tdk_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    tdk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    tdk_Tresc = Column(LargeBinary, nullable=False)
    tdk_Typ = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tdk_IdPersonelu = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)

    sl_KategoriaDokumentu = relationship(u'SlKategoriaDokumentu')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    tw__Towar = relationship(u'TwTowar')


class TwJednMiary(Base):
    __tablename__ = u'tw_JednMiary'
    __table_args__ = (
        Index(u'IX_tw_JednMiary', u'jm_IdTowar', u'jm_IdJednMiary', unique=True),
    )

    jm_Id = Column(Integer, primary_key=True)
    jm_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    jm_IdJednMiary = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    jm_Przelicznik = Column(MONEY, nullable=False)
    jm_DlaNaklejek = Column(BIT, nullable=False, server_default=text("((0))"))

    tw__Towar = relationship(u'TwTowar')


class TwKodKreskowy(Base):
    __tablename__ = u'tw_KodKreskowy'
    __table_args__ = (
        Index(u'IX_tw_KodKreskowy', u'kk_IdTowar', u'kk_Kod', unique=True),
    )

    kk_Id = Column(Integer, primary_key=True)
    kk_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    kk_Kod = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    kk_Ilosc = Column(MONEY)

    tw__Towar = relationship(u'TwTowar')


class TwKomplet(Base):
    __tablename__ = u'tw_Komplet'

    kpl_Id = Column(Integer, primary_key=True)
    kpl_IdKomplet = Column(Integer, nullable=False)
    kpl_IdSkladnik = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    kpl_Liczba = Column(MONEY, nullable=False, server_default=text("((0))"))

    tw__Towar = relationship(u'TwTowar')


class TwNarzutTw(Base):
    __tablename__ = u'tw_NarzutTw'
    __table_args__ = (
        Index(u'IX_tw_NarzutTw', u'ct_IdCena', u'ct_IdNarzut', u'ct_Kolejnosc', unique=True),
    )

    ct_Id = Column(Integer, primary_key=True)
    ct_IdCena = Column(ForeignKey(u'tw_Cena.tc_Id'), nullable=False)
    ct_IdNarzut = Column(Integer, nullable=False)
    ct_Kolejnosc = Column(Integer, nullable=False)
    ct_Narzut = Column(MONEY)
    ct_Wartosc = Column(MONEY)

    tw_Cena = relationship(u'TwCena')


class TwParametr(Base):
    __tablename__ = u'tw_Parametr'

    twp_Id = Column(Integer, primary_key=True)
    twp_Nazwa1 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa2 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa3 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa4 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa5 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa6 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa7 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_Nazwa8 = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny1 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny3 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny4 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny5 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny6 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny7 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny8 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny9 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaCeny10 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_DomNarzut1 = Column(MONEY)
    twp_DomNarzut2 = Column(MONEY)
    twp_DomNarzut3 = Column(MONEY)
    twp_DomNarzut4 = Column(MONEY)
    twp_DomNarzut5 = Column(MONEY)
    twp_DomNarzut6 = Column(MONEY)
    twp_DomNarzut7 = Column(MONEY)
    twp_DomNarzut8 = Column(MONEY)
    twp_DomNarzut9 = Column(MONEY)
    twp_DomNarzut10 = Column(MONEY)
    twp_WalutaCeny1 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny2 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny3 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny4 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny5 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny6 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny7 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny8 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny9 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_WalutaCeny10 = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("('PLN')"))
    twp_KursCeny1 = Column(Integer)
    twp_KursCeny2 = Column(Integer)
    twp_KursCeny3 = Column(Integer)
    twp_KursCeny4 = Column(Integer)
    twp_KursCeny5 = Column(Integer)
    twp_KursCeny6 = Column(Integer)
    twp_KursCeny7 = Column(Integer)
    twp_KursCeny8 = Column(Integer)
    twp_KursCeny9 = Column(Integer)
    twp_KursCeny10 = Column(Integer)
    twp_SymbolAuto = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_DlugoscAuto = Column(Integer)
    twp_Kolejny = Column(Integer)
    twp_KolejnyWolny = Column(Integer)
    twp_Grupa = Column(Integer)
    twp_StawkaVAT = Column(Integer, nullable=False)
    twp_JednMiary = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_KodUnikalny = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_KodNumeryczny = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_KodUsunPoczZera = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_NazwaNarzutu1 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaNarzutu2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaNarzutu3 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaNarzutu4 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_NazwaNarzutu5 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    twp_DomWartNarzutu1 = Column(MONEY)
    twp_DomWartNarzutu2 = Column(MONEY)
    twp_DomWartNarzutu3 = Column(MONEY)
    twp_DomWartNarzutu4 = Column(MONEY)
    twp_DomWartNarzutu5 = Column(MONEY)
    twp_NarzutRosnacy1 = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_NarzutRosnacy2 = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_NarzutRosnacy3 = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_NarzutRosnacy4 = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_NarzutRosnacy5 = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_UstawiajZdjecia = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_PrzepisujNazwe = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_MontRWKatId = Column(Integer)
    twp_MontPWKatId = Column(Integer)
    twp_RozmontRWKatId = Column(Integer)
    twp_RozmontPWKatId = Column(Integer)
    twp_StalaCena1 = Column(BIT)
    twp_StalaCena2 = Column(BIT)
    twp_StalaCena3 = Column(BIT)
    twp_StalaCena4 = Column(BIT)
    twp_StalaCena5 = Column(BIT)
    twp_StalaCena6 = Column(BIT)
    twp_StalaCena7 = Column(BIT)
    twp_StalaCena8 = Column(BIT)
    twp_StalaCena9 = Column(BIT)
    twp_StalaCena10 = Column(BIT)
    twp_ZmianaSklKpl = Column(Integer, server_default=text("((0))"))
    twp_InfRuchTowAuto = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_InfRuchTowBezNarast = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_RodzajKartoteki = Column(Integer, server_default=text("((1))"))
    twp_ZakupStawkaVAT = Column(Integer)
    twp_ZakupVATJakPrzySpr = Column(BIT)
    twp_ObrotMarza = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_MarzaCombo1 = Column(Integer, nullable=False, server_default=text("((0))"))
    twp_MarzaCombo2 = Column(Integer, nullable=False, server_default=text("((0))"))
    twp_CzyDzialanieDodaj = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_CzyDzialanieEdycja = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_RodzajDzialanieDodaj = Column(Integer, nullable=False, server_default=text("((1))"))
    twp_RodzajDzialanieEdycja = Column(Integer, nullable=False, server_default=text("((1))"))
    twp_SzablonDzialanieDodaj = Column(ForeignKey(u'sl_SzablonDzialania.szdz_Id'))
    twp_SzablonDzialanieEdycja = Column(ForeignKey(u'sl_SzablonDzialania.szdz_Id'))
    twp_PrzepisujSymbol = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_OdwrotneObciazenie = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_AutoOOzPKWiU = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_OstrzegajVatZakInnyVatSprz = Column(BIT, nullable=False, server_default=text("((1))"))
    twp_ProgKwotowyOO = Column(Integer, nullable=False, server_default=text("((0))"))
    twp_SynchSymbolKodKresk = Column(BIT, nullable=False, server_default=text("((0))"))
    twp_SynchNazwaNazwaUrz = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_SzablonDzialania = relationship(u'SlSzablonDzialania', primaryjoin='TwParametr.twp_SzablonDzialanieDodaj == SlSzablonDzialania.szdz_Id')
    sl_SzablonDzialania1 = relationship(u'SlSzablonDzialania', primaryjoin='TwParametr.twp_SzablonDzialanieEdycja == SlSzablonDzialania.szdz_Id')


class TwStan(Base):
    __tablename__ = u'tw_Stan'
    __table_args__ = (
        Index(u'IX_tw_Stany', u'st_TowId', u'st_MagId', unique=True),
        Index(u'IX_tw_Stany_1', u'st_TowId', u'st_MagId', u'st_Stan', u'st_StanRez')
    )

    st_TowId = Column(ForeignKey(u'tw__Towar.tw_Id'), primary_key=True, nullable=False)
    st_MagId = Column(ForeignKey(u'sl_Magazyn.mag_Id'), primary_key=True, nullable=False)
    st_Stan = Column(MONEY, nullable=False)
    st_StanMin = Column(MONEY, nullable=False)
    st_StanRez = Column(MONEY, nullable=False)
    st_StanMax = Column(MONEY, nullable=False, server_default=text("((0))"))

    sl_Magazyn = relationship(u'SlMagazyn')
    tw__Towar = relationship(u'TwTowar')


class TwTypKodu(Base):
    __tablename__ = u'tw_TypKodu'

    tk_Id = Column(Integer, primary_key=True)
    tk_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class TwZdjecieTw(Base):
    __tablename__ = u'tw_ZdjecieTw'

    zd_Id = Column(Integer, primary_key=True)
    zd_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    zd_Zdjecie = Column(LargeBinary)
    zd_Glowne = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_CRC = Column(Integer, server_default=text("(NULL)"))

    tw__Towar = relationship(u'TwTowar')


class TwZmiana(Base):
    __tablename__ = u'tw_Zmiana'

    zt_Id = Column(Integer, primary_key=True)
    zt_TowarId = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False)
    zt_ZmianaSymbol = Column(DateTime, server_default=text("(NULL)"))
    zt_ZmianaNazwa = Column(DateTime)
    zt_ZmianaOpis = Column(DateTime)
    zt_ZmianaOpisHtml = Column(DateTime)
    zt_ZmianaZdjecie = Column(DateTime)
    zt_ZmianaAdresWWW = Column(DateTime)
    zt_ZmianaProducent = Column(DateTime)
    zt_ZmianaGrupa = Column(DateTime)
    zt_ZmianaCecha = Column(DateTime)
    zt_ZmianaCenaSprzedazy = Column(DateTime)
    zt_ZmianaStawkaVATSprzed = Column(DateTime)
    zt_ZmianaStanMinimalny = Column(DateTime)
    zt_ZmianaMasaTowaru = Column(DateTime)

    tw__Towar = relationship(u'TwTowar')


t_tw_ZmianaTw = Table(
    u'tw_ZmianaTw', metadata,
    Column(u'twz_TowarId', Integer, nullable=False),
    Column(u'twz_NrZmiany', Integer, nullable=False, server_default=text("((0))")),
    Column(u'twz_CzasModyf', DateTime, nullable=False, server_default=text("(getdate())"))
)


class TwTowar(Base):
    __tablename__ = u'tw__Towar'

    tw_Id = Column(Integer, primary_key=True)
    tw_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_Rodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    tw_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_IdVatSp = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    tw_IdVatZak = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'))
    tw_JakPrzySp = Column(BIT, nullable=False, server_default=text("((1))"))
    tw_JednMiary = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_PKWiU = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_SWW = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_IdRabat = Column(ForeignKey(u'sl_Rabat.rt_id'))
    tw_IdOpakowanie = Column(ForeignKey(u'tw__Towar.tw_Id'))
    tw_PrzezWartosc = Column(BIT, nullable=False, server_default=text("((1))"))
    tw_IdPodstDostawca = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    tw_DostSymbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_CzasDostawy = Column(Integer)
    tw_UrzNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_PLU = Column(Integer)
    tw_PodstKodKresk = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_IdTypKodu = Column(Integer)
    tw_CenaOtwarta = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_WagaEtykiet = Column(BIT, server_default=text("((0))"))
    tw_KontrolaTW = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_StanMin = Column(MONEY)
    tw_JednStanMin = Column(String(10, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_DniWaznosc = Column(Integer)
    tw_IdGrupa = Column(ForeignKey(u'sl_GrupaTw.grt_Id'))
    tw_WWW = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_SklepInternet = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_Pole1 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole3 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole4 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole5 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole6 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole7 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Pole8 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_Logo = Column(BINARY(50))
    tw_Usuniety = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_Objetosc = Column(MONEY)
    tw_Masa = Column(MONEY)
    tw_Charakter = Column(Text(collation=u'Polish_CI_AS'))
    tw_JednMiaryZak = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_JMZakInna = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_KodTowaru = Column(String(8, u'Polish_CI_AS'))
    tw_IdKrajuPochodzenia = Column(ForeignKey(u'sl_KrajPochodzenia.krp_Id'))
    tw_IdUJM = Column(Integer)
    tw_JednMiarySprz = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    tw_JMSprzInna = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_SerwisAukcyjny = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_IdProducenta = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    tw_SprzedazMobilna = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_IsFundPromocji = Column(BIT)
    tw_IdFundPromocji = Column(Integer)
    tw_DomyslnaKategoria = Column(Integer)
    tw_Wysokosc = Column(MONEY)
    tw_Szerokosc = Column(MONEY)
    tw_Glebokosc = Column(MONEY)
    tw_StanMaks = Column(MONEY)
    tw_Akcyza = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_AkcyzaZaznacz = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_AkcyzaKwota = Column(MONEY)
    tw_ObrotMarza = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_OdwrotneObciazenie = Column(BIT, nullable=False, server_default=text("((0))"))
    tw_ProgKwotowyOO = Column(Integer, nullable=False, server_default=text("((0))"))
    tw_DodawalnyDoZW = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_GrupaTw = relationship(u'SlGrupaTw')
    sl_KrajPochodzenia = relationship(u'SlKrajPochodzenia')
    parent = relationship(u'TwTowar', remote_side=[tw_Id])
    kh__Kontrahent = relationship(u'KhKontrahent', primaryjoin='TwTowar.tw_IdPodstDostawca == KhKontrahent.kh_Id')
    kh__Kontrahent1 = relationship(u'KhKontrahent', primaryjoin='TwTowar.tw_IdProducenta == KhKontrahent.kh_Id')
    sl_Rabat = relationship(u'SlRabat')
    sl_StawkaVAT = relationship(u'SlStawkaVAT', primaryjoin='TwTowar.tw_IdVatSp == SlStawkaVAT.vat_Id')
    sl_StawkaVAT1 = relationship(u'SlStawkaVAT', primaryjoin='TwTowar.tw_IdVatZak == SlStawkaVAT.vat_Id')


class UfAdministracja(Base):
    __tablename__ = u'uf_Administracja'

    uad_Id = Column(Integer, primary_key=True)
    uad_ZapisTransmisji = Column(BIT, nullable=False, server_default=text("((0))"))
    uad_CzyRTDni = Column(BIT, nullable=False, server_default=text("((1))"))
    uad_RTDni = Column(Integer, nullable=False, server_default=text("((30))"))
    uad_CzyRTLiczba = Column(BIT, nullable=False, server_default=text("((1))"))
    uad_RTLiczba = Column(Integer, nullable=False, server_default=text("((1000))"))
    uad_CzySynchronizacja = Column(BIT, nullable=False, server_default=text("((1))"))
    uad_UsuwanieOperacji = Column(Integer, nullable=False, server_default=text("((0))"))
    uad_CzyszczenieKolejki = Column(Integer, nullable=False, server_default=text("((0))"))


class UfCena(Base):
    __tablename__ = u'uf_Cena'

    uce_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), primary_key=True, nullable=False)
    uce_IdCenaUF = Column(Integer, primary_key=True, nullable=False, server_default=text("((-1))"))
    uce_IdCenaSb = Column(Integer, nullable=False, server_default=text("((-1))"))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')


class UfDzialGrupa(Base):
    __tablename__ = u'uf_DzialGrupa'

    udg_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), primary_key=True, nullable=False)
    udg_IdDzialGrupaUF = Column(Integer, primary_key=True, nullable=False, server_default=text("((-1))"))
    udg_IdGrupaSb = Column(Integer, nullable=False, server_default=text("((-1))"))
    udg_IdVatUF = Column(Integer, nullable=False, server_default=text("((-1))"))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')


class UfInne(Base):
    __tablename__ = u'uf_Inne'

    uin_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), primary_key=True, nullable=False)
    uin_IdInneUF = Column(Integer, primary_key=True, nullable=False, server_default=text("((-1))"))
    uin_IdWlasneSb = Column(Integer, nullable=False, server_default=text("((-1))"))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')


class UfInstalator(Base):
    __tablename__ = u'uf_Instalator'

    uis_Stanowisko = Column(String(50, u'Polish_CI_AS'), primary_key=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uis_WersjaProduktu = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class UfJednostkaMiary(Base):
    __tablename__ = u'uf_JednostkaMiary'

    ujm_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), primary_key=True, nullable=False)
    ujm_IdJednostkaUF = Column(Integer, primary_key=True, nullable=False, server_default=text("((-1))"))
    ujm_JednostkaSb = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')


class UfKonfiguracja(Base):
    __tablename__ = u'uf_Konfiguracja'

    uko_Id = Column(Integer, primary_key=True)
    uko_IdUrzadzenie = Column(ForeignKey(u'uf_Urzadzenie.uur_Id'), nullable=False)
    uko_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    uko_IdMagazyn = Column(ForeignKey(u'sl_Magazyn.mag_Id'))
    uko_Siec = Column(BIT, nullable=False)
    uko_Komputer = Column(String(50, u'Polish_CI_AS'), nullable=False)
    uko_Medium = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uko_Binarna = Column(VARBINARY(7800))
    uko_SkrotKlawiszowy = Column(String(1, u'Polish_CI_AS'), nullable=False, server_default=text("((0))"))
    uko_OnLine = Column(BIT, nullable=False, server_default=text("((0))"))
    uko_Usunieta = Column(BIT, nullable=False, server_default=text("((0))"))
    uko_RemoteUser = Column(String(50, u'Polish_CI_AS'))
    uko_RemotePassword = Column(String(50, u'Polish_CI_AS'))
    uko_LocalUser = Column(String(50, u'Polish_CI_AS'))
    uko_LocalPassword = Column(String(50, u'Polish_CI_AS'))

    sl_Magazyn = relationship(u'SlMagazyn')
    uf_Urzadzenie = relationship(u'UfUrzadzenie')


class UfKonfiguracjaProfil(Base):
    __tablename__ = u'uf_KonfiguracjaProfil'

    ukp_UzytkId = Column(Integer, primary_key=True, nullable=False)
    ukp_KonfiguracjaId = Column(Integer, primary_key=True, nullable=False)


class UfOperacja(Base):
    __tablename__ = u'uf_Operacja'

    uop_Id = Column(Integer, primary_key=True)
    uop_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)


class UfPlu(Base):
    __tablename__ = u'uf_Plu'

    upl_Id = Column(Integer, primary_key=True)
    upl_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), nullable=False)
    upl_IdTowar = Column(ForeignKey(u'tw__Towar.tw_Id'), nullable=False, server_default=text("((-1))"))
    upl_KodPlu = Column(Integer, nullable=False)
    upl_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')
    tw__Towar = relationship(u'TwTowar')


class UfSterownik(Base):
    __tablename__ = u'uf_Sterownik'

    ust_Id = Column(Integer, primary_key=True)
    ust_Typ = Column(Integer, nullable=False)
    ust_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    ust_Wersja = Column(String(20, u'Polish_CI_AS'), nullable=False)
    ust_AboutCLSID = Column(String(38, u'Polish_CI_AS'), nullable=False)
    ust_DriverCLSID = Column(String(38, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ust_DialogCLSID = Column(String(38, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ust_Stanowisko = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class UfSynchTemp(Base):
    __tablename__ = u'uf_SynchTemp'
    __table_args__ = (
        Index(u'IX_uf_SynchTemp', u'usyt_IdZadanie', u'usyt_IdTowar'),
    )

    usyt_Id = Column(Integer, primary_key=True)
    usyt_IdZadanie = Column(Integer, nullable=False)
    usyt_IdTowar = Column(Integer, nullable=False)
    usyt_TowarUF = Column(String(50, u'Polish_CI_AS'), nullable=False)


class UfSynchroKodyKresk(Base):
    __tablename__ = u'uf_SynchroKodyKresk'

    usk_Id = Column(Integer, primary_key=True)
    usk_IdSynchronizacja = Column(ForeignKey(u'uf_Synchronizacja.usy_Id'), nullable=False)
    usk_Kod = Column(String(20, u'Polish_CI_AS'), nullable=False)

    uf_Synchronizacja = relationship(u'UfSynchronizacja')


class UfSynchronizacja(Base):
    __tablename__ = u'uf_Synchronizacja'
    __table_args__ = (
        Index(u'IX_uf_Synchronizacja', u'usy_IdZadanie', u'usy_IdTowar', u'usy_IdKonfiguracja', u'usy_Id'),
    )

    usy_Id = Column(Integer, primary_key=True)
    usy_IdKonfiguracja = Column(Integer, nullable=False)
    usy_IdTowar = Column(Integer, nullable=False, server_default=text("((-1))"))
    usy_TowarUF = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdZadanie = Column(ForeignKey(u'uf_Zadanie.uza_Id'))
    usy_Rodzaj = Column(Integer)
    usy_Symbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_UrzNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_StawkaVat = Column(MONEY)
    usy_IdVatSp = Column(Integer)
    usy_IdVatUF = Column(Integer)
    usy_JednMiary = Column(String(10, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdJednostkaUF = Column(Integer)
    usy_IdOpakowanie = Column(Integer)
    usy_UrzNazwa2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_PLU = Column(Integer)
    usy_PodstKodKresk = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_CenaOtwarta = Column(BIT)
    usy_WagaEtykiet = Column(BIT)
    usy_IdGrupa = Column(Integer)
    usy_IdDzialGrupaUF = Column(Integer)
    usy_IdVatGrupaUF = Column(Integer)
    usy_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_SWW = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_RabatRodzaj = Column(Integer)
    usy_RabatProcent = Column(MONEY)
    usy_DniWaznosc = Column(Integer)
    usy_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_CenaBrutto1 = Column(MONEY)
    usy_IdCenaUF1 = Column(Integer)
    usy_CenaBrutto2 = Column(MONEY)
    usy_IdCenaUF2 = Column(Integer)
    usy_CenaBrutto3 = Column(MONEY)
    usy_IdCenaUF3 = Column(Integer)
    usy_CenaBrutto4 = Column(MONEY)
    usy_IdCenaUF4 = Column(Integer)
    usy_CenaBrutto5 = Column(MONEY)
    usy_IdCenaUF5 = Column(Integer)
    usy_CenaBrutto6 = Column(MONEY)
    usy_IdCenaUF6 = Column(Integer)
    usy_CenaBrutto7 = Column(MONEY)
    usy_IdCenaUF7 = Column(Integer)
    usy_CenaBrutto8 = Column(MONEY)
    usy_IdCenaUF8 = Column(Integer)
    usy_CenaBrutto9 = Column(MONEY)
    usy_IdCenaUF9 = Column(Integer)
    usy_CenaBrutto10 = Column(MONEY)
    usy_IdCenaUF10 = Column(Integer)
    usy_Pole1 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF1 = Column(Integer)
    usy_Pole2 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF2 = Column(Integer)
    usy_Pole3 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF3 = Column(Integer)
    usy_Pole4 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF4 = Column(Integer)
    usy_Pole5 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF5 = Column(Integer)
    usy_Pole6 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF6 = Column(Integer)
    usy_Pole7 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF7 = Column(Integer)
    usy_Pole8 = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    usy_IdInneUF8 = Column(Integer)

    uf_Zadanie = relationship(u'UfZadanie')


class UfTransmisja(Base):
    __tablename__ = u'uf_Transmisja'

    utr_Id = Column(Integer, primary_key=True)
    utr_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), nullable=False)
    utr_IdOperacja = Column(ForeignKey(u'uf_Operacja.uop_Id'), nullable=False)
    utr_OperacjaOpis = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    utr_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    utr_StatusOpis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    utr_DataCzas = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    utr_IdUzytkownik = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False, server_default=text("((-1))"))
    utr_Komputer = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')
    uf_Operacja = relationship(u'UfOperacja')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


class UfTransmisjaKontekst(Base):
    __tablename__ = u'uf_TransmisjaKontekst'

    utk_Id = Column(Integer, primary_key=True)
    utk_IdTransmisjaSzczegol = Column(ForeignKey(u'uf_TransmisjaSzczegol.uts_Id'), nullable=False)
    utk_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    utk_Parametr1 = Column(Integer, nullable=False, server_default=text("((-1))"))
    utk_Parametr2 = Column(Integer, nullable=False, server_default=text("((0))"))

    uf_TransmisjaSzczegol = relationship(u'UfTransmisjaSzczegol')


class UfTransmisjaSzczegol(Base):
    __tablename__ = u'uf_TransmisjaSzczegol'

    uts_Id = Column(Integer, primary_key=True)
    uts_IdTransmisja = Column(ForeignKey(u'uf_Transmisja.utr_Id'), nullable=False)
    uts_Lp = Column(Integer, nullable=False)
    uts_Status = Column(Integer)
    uts_Numer = Column(Integer)
    uts_Komunikat = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    uf_Transmisja = relationship(u'UfTransmisja')


class UfUrzadzenie(Base):
    __tablename__ = u'uf_Urzadzenie'

    uur_Id = Column(Integer, primary_key=True)
    uur_IdSterownik = Column(ForeignKey(u'uf_Sterownik.ust_Id'), nullable=False)
    uur_Nazwa = Column(String(101, u'Polish_CI_AS'), nullable=False)
    uur_Operacje = Column(Integer, nullable=False, server_default=text("((0))"))
    uur_TowarUF = Column(Integer, nullable=False, server_default=text("((0))"))

    uf_Sterownik = relationship(u'UfSterownik')


class UfVat(Base):
    __tablename__ = u'uf_Vat'

    uva_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), primary_key=True, nullable=False)
    uva_IdVatUF = Column(Integer, primary_key=True, nullable=False, server_default=text("((-1))"))
    uva_IdVatSb = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'), nullable=False, server_default=text("((-1))"))

    uf_Konfiguracja = relationship(u'UfKonfiguracja')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class UfZadanie(Base):
    __tablename__ = u'uf_Zadanie'

    uza_Id = Column(Integer, primary_key=True)
    uza_IdOperacja = Column(ForeignKey(u'uf_Operacja.uop_Id'), nullable=False)
    uza_IdKonfiguracja = Column(ForeignKey(u'uf_Konfiguracja.uko_Id'), nullable=False)
    uza_IdUzytkownik = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    uza_IdTransmisja = Column(ForeignKey(u'uf_Transmisja.utr_Id'))
    uza_Lp = Column(Integer, nullable=False)
    uza_DataCzas = Column(DateTime, nullable=False, server_default=text("(getdate())"))
    uza_Status = Column(Integer, nullable=False, server_default=text("((0))"))
    uza_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uza_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    uza_Parametry = Column(LargeBinary)

    uf_Konfiguracja = relationship(u'UfKonfiguracja')
    uf_Operacja = relationship(u'UfOperacja')
    uf_Transmisja = relationship(u'UfTransmisja')
    pd_Uzytkownik = relationship(u'PdUzytkownik')


t_uf_ZadanieTowar = Table(
    u'uf_ZadanieTowar', metadata,
    Column(u'uzt_IdZadanie', ForeignKey(u'uf_Zadanie.uza_Id'), nullable=False),
    Column(u'uzt_IdTowar', Integer, nullable=False)
)


class UiFiltr(Base):
    __tablename__ = u'ui_Filtr'

    uil_Id = Column(Integer, primary_key=True)
    uil_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    uil_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uil_Sql = Column(String(1000, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    ui_Modul = relationship(u'UiModul')


class UiFiltrModul(Base):
    __tablename__ = u'ui_FiltrModul'

    uiu_Id = Column(Integer, primary_key=True)
    uiu_UserId = Column(Integer, nullable=False)
    uiu_ServiceId = Column(Integer, nullable=False)
    uiu_FilterId = Column(Integer, nullable=False)


class UiFunkcja(Base):
    __tablename__ = u'ui_Funkcja'

    uif_Id = Column(Integer, primary_key=True)
    uif_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    uif_Worek = Column(Integer, nullable=False)
    uif_Pozycja = Column(Integer, nullable=False)
    uif_PozycjaOjca = Column(Integer)
    uif_TypOperacji = Column(Integer)
    uif_IdOperacji = Column(Integer)
    uif_Styl = Column(Integer, nullable=False, server_default=text("((0))"))
    uif_Napis = Column(String(100, u'Polish_CI_AS'), nullable=False)
    uif_Podwidok = Column(Integer)
    uif_Domyslna = Column(BIT, nullable=False, server_default=text("((0))"))
    uif_Rozwijaj = Column(BIT)
    uif_OdRazuMenu = Column(BIT)
    uif_Parametr = Column(UnicodeText(1073741823))

    ui_Modul = relationship(u'UiModul')


class UiIkona(Base):
    __tablename__ = u'ui_Ikona'

    uik_Id = Column(Integer, primary_key=True)
    uik_TypPolecenia = Column(Integer, nullable=False)
    uik_IdPolecenia = Column(Integer, nullable=False)
    uik_IdSerwisu = Column(Integer)
    uik_URL = Column(String(2083, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class UiKolor(Base):
    __tablename__ = u'ui_Kolor'

    uic_Id = Column(Integer, primary_key=True)
    uic_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uic_SerwisTloGora = Column(String(11, u'Polish_CI_AS'), nullable=False)
    uic_SerwisTloDol = Column(String(11, u'Polish_CI_AS'), nullable=False)
    uic_SerwisTekst = Column(String(11, u'Polish_CI_AS'), nullable=False)


class UiModul(Base):
    __tablename__ = u'ui_Modul'

    uim_Id = Column(Integer, primary_key=True)
    uim_Typ = Column(Integer, nullable=False)
    uim_Program = Column(Integer, nullable=False, server_default=text("((1))"))
    uim_IdWzorca = Column(ForeignKey(u'ui_Modul.uim_Id'))
    uim_Progid = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uim_TypKontekstu = Column(Integer, nullable=False, server_default=text("((1))"))
    uim_Kontekst = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uim_Tytul = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uim_Podtytul = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uim_VespDef = Column(UnicodeText(1073741823))
    uim_XSLT = Column(UnicodeText(1073741823))
    uim_HTML = Column(BIT, nullable=False, server_default=text("((0))"))
    uim_SchematKolorow = Column(ForeignKey(u'ui_Kolor.uic_Id'), nullable=False)
    uim_FiltrWymagany = Column(BIT, nullable=False, server_default=text("((0))"))

    parent = relationship(u'UiModul', remote_side=[uim_Id])
    ui_Kolor = relationship(u'UiKolor')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'ui_ModulProfil')


class UiModulPowiazany(Base):
    __tablename__ = u'ui_ModulPowiazany'

    uimp_Id = Column(Integer, primary_key=True)
    uimp_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    uimp_Typ = Column(Integer, nullable=False)
    uimp_IdObiektu = Column(Integer, nullable=False)
    uimp_Pozycja = Column(Integer, nullable=False)
    uimp_Styl = Column(Integer, nullable=False)
    uimp_Napis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    ui_Modul = relationship(u'UiModul')


t_ui_ModulProfil = Table(
    u'ui_ModulProfil', metadata,
    Column(u'uip_IdModulu', ForeignKey(u'ui_Modul.uim_Id'), primary_key=True, nullable=False),
    Column(u'uip_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class UiOperacja(Base):
    __tablename__ = u'ui_Operacja'

    uio_Id = Column(Integer, primary_key=True)
    ODPOWIEDZIALNY = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uio_StrId = Column(String(255, u'Polish_CI_AS'), nullable=False, unique=True)
    uio_Typ = Column(Integer, nullable=False)
    uio_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uio_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False)
    uio_ProgId = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uio_TypKontekstu = Column(Integer, nullable=False, server_default=text("((1))"))
    uio_Kontekst = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    uio_IdUprawnienia = Column(ForeignKey(u'pd_Uprawnienie.upr_Id'))
    uio_Parametr = Column(UnicodeText(1073741823))

    pd_Uprawnienie = relationship(u'PdUprawnienie')


class UiOperacjaModul(Base):
    __tablename__ = u'ui_OperacjaModul'

    uiom_Id = Column(Integer, primary_key=True)
    uiom_IdOperacji = Column(ForeignKey(u'ui_Operacja.uio_Id'), nullable=False)
    uiom_IdWzorcaModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)

    ui_Operacja = relationship(u'UiOperacja')
    ui_Modul = relationship(u'UiModul')


class UiPodwidok(Base):
    __tablename__ = u'ui_Podwidok'

    uig_Id = Column(Integer, primary_key=True)
    uig_IdWidoku = Column(Integer, nullable=False)
    uig_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    uig_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    uig_Konfiguracja = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    ui_Modul = relationship(u'UiModul')


class UiSkrotModul(Base):
    __tablename__ = u'ui_SkrotModul'

    uis_Id = Column(Integer, primary_key=True)
    uis_IdModulu = Column(ForeignKey(u'ui_Modul.uim_Id'), nullable=False)
    uis_TypOperacji = Column(Integer, nullable=False)
    uis_IdOperacji = Column(Integer, nullable=False)
    uis_Klawisz = Column(Integer, nullable=False)
    uis_Alt = Column(BIT, nullable=False)
    uis_Ctrl = Column(BIT, nullable=False)
    uis_Shift = Column(BIT, nullable=False)

    ui_Modul = relationship(u'UiModul')


class UiZasob(Base):
    __tablename__ = u'ui_Zasob'

    uiz_Id = Column(Integer, primary_key=True)
    uiz_Typ = Column(String(128, u'Polish_CI_AS'))
    uiz_Dane = Column(LargeBinary, nullable=False)


class UiKompozycja(Base):
    __tablename__ = u'ui__Kompozycja'

    ui_Id = Column(Integer, primary_key=True)
    ui_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ui_Definicja = Column(UnicodeText(1073741823), nullable=False)


class VatDaneVAT(Base):
    __tablename__ = u'vat_DaneVAT'

    dv_Id = Column(Integer, primary_key=True)
    dv_IdEwidVAT = Column(ForeignKey(u'vat__EwidVAT.ev_Id'), nullable=False, index=True)
    dv_Typ = Column(Integer, nullable=False)
    dv_IdStawkiVAT = Column(ForeignKey(u'sl_StawkaVAT.vat_Id'), nullable=False, index=True)
    dv_Wartosc = Column(MONEY, nullable=False)
    dv_KwotaVAT = Column(MONEY, nullable=False, server_default=text("((0))"))
    dv_Netto = Column(MONEY, nullable=False, server_default=text("((0))"))
    dv_Brutto = Column(MONEY, nullable=False, server_default=text("((0))"))

    vat__EwidVAT = relationship(u'VatEwidVAT')
    sl_StawkaVAT = relationship(u'SlStawkaVAT')


class VatMetodaRozl(Base):
    __tablename__ = u'vat_MetodaRozl'

    mv_Id = Column(Integer, primary_key=True)
    mv_Rok = Column(Integer)
    mv_Kwartal = Column(Integer)
    mv_Metoda = Column(Integer, nullable=False)
    mv_IdObiektu = Column(Integer, nullable=False, server_default=text("((1))"))
    mv_MetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))


class VatMetodaRozlUE(Base):
    __tablename__ = u'vat_MetodaRozlUE'

    mvu_Id = Column(Integer, primary_key=True)
    mvu_Rok = Column(Integer)
    mvu_Kwartal = Column(Integer)
    mvu_Metoda = Column(Integer, nullable=False)
    mvu_IdObiektu = Column(Integer, nullable=False)


class VatParametr(Base):
    __tablename__ = u'vat_Parametr'

    vatp_Id = Column(Integer, primary_key=True)
    vatp_KolumnaKsZao = Column(Integer, nullable=False, server_default=text("((10))"))
    vatp_KolumnaKsKoszt = Column(Integer, nullable=False, server_default=text("((14))"))
    vatp_KsWyborKolumn = Column(Integer, nullable=False, server_default=text("((1))"))
    vatp_GenTransNabycia = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_IdEwidVATSpNabycia = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), nullable=False, server_default=text("((1))"))
    vatp_AktTransNabycia = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_GenTransImport = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_IdEwidVATSpImport = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), nullable=False, server_default=text("((1))"))
    vatp_AktTransImport = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieEwidVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieDtWpisu = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieMOV = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieKategorii = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieTransakcjiVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieOpisu = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieKh = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieSO = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_KontrolaUniqNrDokumentu = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieDtSpWyst = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieTP = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_EwidSpSortowanie = Column(Integer, nullable=False, server_default=text("((0))"))
    vatp_EwidZakSortowanie = Column(Integer, nullable=False, server_default=text("((0))"))
    vatp_PrzeliczajDokImportowane = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_KursRodzaj = Column(Integer, nullable=False, server_default=text("((1))"))
    vatp_KursRodzajDaty = Column(Integer, nullable=False, server_default=text("((0))"))
    vatp_KursIdBanku = Column(ForeignKey(u'sl_WalutaBank.wbn_ID'), nullable=False, server_default=text("((1))"))
    vatp_KursPobierajOstatni = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'), unique=True)
    vatp_GenTransOO = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_IdEwidVATSpOO = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), nullable=False, server_default=text("((1))"))
    vatp_AktTransOO = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzepisywanieDtZakDost = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieKorektyVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_VATUzupelnianieDblClck = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_SpKorygowanieVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_ZakKorygowanieVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzepisywanieVatMK = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_PrzepisywanieDatyZaplaty = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_KorektaZakupuTylkoVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_BlokujVatInnyOkresZamkniety = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_VatNpo = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_Netto50 = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_GenTransITPU = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_IdEwidVATSpITPU = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), nullable=False, server_default=text("((100006))"))
    vatp_AktTransITPU = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_EwidSpSortWydruk = Column(Integer, nullable=False, server_default=text("((1))"))
    vatp_EwidZakSortWydruk = Column(Integer, nullable=False, server_default=text("((2))"))
    vatp_BrakKontrahenta = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_VATKorygMsgBox = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzenoszenieDatyEwidSp = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzenoszenieDatyEwidZak = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzypadekSzczegolnyTylkoVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_ProporcjaBazowaTylkoVAT = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_BlokujVatOkresNieistniejacy = Column(BIT, nullable=False, server_default=text("((1))"))
    vatp_GenTransOODT = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_IdEwidVATSpOODT = Column(Integer, nullable=False, server_default=text("((100008))"))
    vatp_AktTransOODT = Column(BIT, nullable=False, server_default=text("((0))"))
    vatp_PrzepisywanieCelZakupu = Column(BIT, nullable=False, server_default=text("((1))"))

    sl_TypEwidVAT = relationship(u'SlTypEwidVAT', primaryjoin='VatParametr.vatp_IdEwidVATSpITPU == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT1 = relationship(u'SlTypEwidVAT', primaryjoin='VatParametr.vatp_IdEwidVATSpImport == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT2 = relationship(u'SlTypEwidVAT', primaryjoin='VatParametr.vatp_IdEwidVATSpNabycia == SlTypEwidVAT.te_Id')
    sl_TypEwidVAT3 = relationship(u'SlTypEwidVAT', primaryjoin='VatParametr.vatp_IdEwidVATSpOO == SlTypEwidVAT.te_Id')
    sl_WalutaBank = relationship(u'SlWalutaBank')
    par__Ewid = relationship(u'ParEwid')


class VatPozycja(Base):
    __tablename__ = u'vat_Pozycja'

    poz_Id = Column(Integer, primary_key=True)
    poz_IdEwVat = Column(ForeignKey(u'vat__EwidVAT.ev_Id'), nullable=False)
    poz_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    poz_Wartosc = Column(MONEY, nullable=False)

    vat__EwidVAT = relationship(u'VatEwidVAT')


class VatProporcjaBazowa(Base):
    __tablename__ = u'vat_ProporcjaBazowa'

    vpb_Id = Column(Integer, primary_key=True)
    vpb_Rok = Column(Integer, nullable=False)
    vpb_OPN = Column(MONEY, nullable=False)
    vpb_OZ = Column(MONEY, nullable=False)
    vpb_SD = Column(MONEY, nullable=False)
    vpb_Wartosc = Column(MONEY, nullable=False)
    vpb_WartoscDoDeklaracji = Column(MONEY, nullable=False)
    vpb_OkresOd = Column(DateTime)
    vpb_OkresDo = Column(DateTime)
    vpb_WartoscPreproporcja = Column(MONEY, nullable=False, server_default=text("((100))"))


class VatPrzypomnienia(Base):
    __tablename__ = u'vat_Przypomnienia'

    przy_Id = Column(Integer, primary_key=True)
    przy_StatusPrzypomnieniaZmianyVAT = Column(Integer, nullable=False)
    przy_DataPonownegoPrzypomnienia = Column(DateTime)
    przy_Program = Column(Integer, nullable=False)


t_vat_WizTowar = Table(
    u'vat_WizTowar', metadata,
    Column(u'vwtw_Id', Integer, nullable=False),
    Column(u'vwtw_Wersja', Integer, nullable=False),
    Column(u'vwtw_LiczbaUruchom', Integer, nullable=False),
    Column(u'vwtw_IdVatSpOld', Integer, nullable=False),
    Column(u'vwtw_IdVatSpNew', Integer, nullable=False),
    Column(u'vwtw_IdVatZakOld', Integer, nullable=False),
    Column(u'vwtw_IdVatZakNew', Integer, nullable=False),
    Column(u'vwtw_BlokadaSpr', BIT, nullable=False),
    Column(u'vwtw_BlokadaZak', BIT, nullable=False),
    Column(u'vwtw_Data', DateTime, nullable=False, server_default=text("(getdate())"))
)


t_vat_WizTowar2013 = Table(
    u'vat_WizTowar2013', metadata,
    Column(u'vwtw2_Id', Integer, nullable=False),
    Column(u'vwtw2_Wersja', Integer, nullable=False),
    Column(u'vwtw2_LiczbaUruchom', Integer, nullable=False),
    Column(u'vwtw2_IdVatSpOld', Integer, nullable=False),
    Column(u'vwtw2_IdVatSpNew', Integer, nullable=False),
    Column(u'vwtw2_IdVatZakOld', Integer, nullable=False),
    Column(u'vwtw2_IdVatZakNew', Integer, nullable=False),
    Column(u'vwtw2_BlokadaSpr', BIT, nullable=False),
    Column(u'vwtw2_BlokadaZak', BIT, nullable=False),
    Column(u'vwtw2_Data', DateTime, nullable=False, server_default=text("(getdate())"))
)


class VatWizzard(Base):
    __tablename__ = u'vat_Wizzard'

    vw_Id = Column(Integer, primary_key=True)
    vw_Krok = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    vw_Wersja = Column(Integer, nullable=False)
    vw_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))


class VatWizzard2013(Base):
    __tablename__ = u'vat_Wizzard2013'

    vw2_Id = Column(Integer, primary_key=True)
    vw2_Krok = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    vw2_Wersja = Column(Integer, nullable=False)
    vw2_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))


class VatWizzard2014(Base):
    __tablename__ = u'vat_Wizzard2014'

    vw3_Id = Column(Integer, primary_key=True)
    vw3_Krok = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    vw3_Wersja = Column(Integer, nullable=False)
    vw3_Data = Column(DateTime, nullable=False, server_default=text("(getdate())"))


class VatEwidVAT(Base):
    __tablename__ = u'vat__EwidVAT'

    ev_Id = Column(Integer, primary_key=True)
    ev_NrDokumentu = Column(String(50, u'Polish_CI_AS'), nullable=False)
    ev_Rodzaj = Column(Integer, nullable=False)
    ev_IdKh = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    ev_NazwaKh = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_NazwaPelnaKh = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_UlicaKh = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_MiastoKh = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_KodPocztowyKh = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_NIPKh = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_DataWpisu = Column(DateTime, nullable=False)
    ev_DataSZ = Column(DateTime, nullable=False)
    ev_MiesiacOdliczVAT = Column(DateTime)
    ev_IdKategorii = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    ev_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_Netto = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    ev_KwotaVAT = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    ev_Brutto = Column(MONEY, nullable=False, server_default=text("((0.0))"))
    ev_IdTypuEwidVAT = Column(ForeignKey(u'sl_TypEwidVAT.te_Id'), index=True)
    ev_FakturaRR = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_DataPlatnosciRR = Column(DateTime)
    ev_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_RodzajZakupu = Column(Integer)
    ev_SposobOdliczania = Column(Integer)
    ev_TypObiektu = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_IdObiektu = Column(Integer)
    ev_Ksiegowany = Column(BIT, nullable=False, server_default=text("((1))"))
    ev_Importowany = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_KorektaSN = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_IdDokImport = Column(Integer)
    ev_TypDokImport = Column(Integer)
    ev_ImportPochodzenie = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_TransakcjaVAT = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_IdDokVAT = Column(Integer)
    ev_NieWliczanyDoPB = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_IdOkresuRoku = Column(Integer, nullable=False)
    ev_MalyPojazd = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_PlatnoscKredyt = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_IdTerminPlatnosci = Column(ForeignKey(u'sl_FormaPlatnosci.fp_Id'))
    ev_TerminPlatnosci = Column(DateTime)
    ev_NrDokumentuSort = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    ev_AutoPrzeliczaj = Column(BIT, nullable=False, server_default=text("((1))"))
    ev_RozliczanaUsluga = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_DokVatMarza = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_DataZakDostawy = Column(DateTime)
    ev_WlaczKorygowanieVAT = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_KorektaVATTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    ev_KorektaVATDataPlatnosci = Column(DateTime)
    ev_KorektaVATTerminKorekty = Column(DateTime)
    ev_KorektaVATIdDokKorygowany = Column(ForeignKey(u'vat__EwidVAT.ev_Id'))
    ev_KorektaVATNrDokKorygowany = Column(String(30, u'Polish_CI_AS'))
    ev_KorektaVATPlatnoscCzesciowa = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_KorektaVATDataWystawieniaDokKorygowany = Column(DateTime)
    ev_KorektaVATTerminPlatnosciDokKorygowany = Column(DateTime)
    ev_VatMetodaKasowa = Column(BIT, nullable=False, server_default=text("((0))"))
    ev_IdDokVATDod = Column(Integer)
    ev_IdRachunkuZaPrzejazd = Column(Integer)
    ev_CelZakupu = Column(Integer, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')
    sl_FormaPlatnosci = relationship(u'SlFormaPlatnosci')
    sl_TypEwidVAT = relationship(u'SlTypEwidVAT')
    parent = relationship(u'VatEwidVAT', remote_side=[ev_Id])


t_vwAP2 = Table(
    u'vwAP2', metadata,
    Column(u'Ident', Integer, nullable=False),
    Column(u'Zabl', BIT, nullable=False),
    Column(u'Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'DataUruchomienia', DateTime),
    Column(u'OkresOd', DateTime),
    Column(u'OkresDo', DateTime),
    Column(u'Uruchomil', String(3, u'Polish_CI_AS'))
)


t_vwAPLogPod = Table(
    u'vwAPLogPod', metadata,
    Column(u'al_Id', Integer, nullable=False),
    Column(u'al_IdAP', Integer),
    Column(u'al_Wynik', Integer, nullable=False),
    Column(u'ap_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'al_NrDekretu', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'al_NazwaUzytkownika', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'al_DataUruchomienia', DateTime, nullable=False),
    Column(u'al_OkresOd', DateTime, nullable=False),
    Column(u'al_OkresDo', DateTime, nullable=False),
    Column(u'al_Log', UnicodeText(1073741823))
)


t_vwAPRun = Table(
    u'vwAPRun', metadata,
    Column(u'ap_Id', Integer, nullable=False),
    Column(u'ap_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'al_DataUruchomienia', DateTime),
    Column(u'al_OkresOd', DateTime),
    Column(u'al_OkresDo', DateTime)
)


t_vwBankowoscTransakcjeOczekujace = Table(
    u'vwBankowoscTransakcjeOczekujace', metadata,
    Column(u'Ident', Integer, nullable=False),
    Column(u'IdObiektu', Integer, nullable=False),
    Column(u'TypObiektu', Integer),
    Column(u'NazwaKontrahenta', String(255, u'Polish_CI_AS')),
    Column(u'TypZlecenia', Integer, nullable=False),
    Column(u'DataWyslania', DateTime),
    Column(u'DataRealizacji', DateTime),
    Column(u'OplatyKto', Integer),
    Column(u'Program', Integer),
    Column(u'Waluta', String(3, u'Polish_CI_AS')),
    Column(u'Kwota', MONEY, nullable=False),
    Column(u'Tytul', String(146, u'Polish_CI_AS')),
    Column(u'StatusTransakcji', Integer, nullable=False),
    Column(u'StatusBank', Integer),
    Column(u'NumerRachunkuNaszego', String(50, u'Polish_CI_AS')),
    Column(u'NumerRachunkuKontrahenta', String(50, u'Polish_CI_AS')),
    Column(u'NumerRachunkuKontrahentaHist', String(50, u'Polish_CI_AS')),
    Column(u'IdRachunkuPodmiotu', Integer),
    Column(u'IdentBank', String(35, u'Polish_CI_AS')),
    Column(u'AdresKontrahenta', String(133, u'Polish_CI_AS')),
    Column(u'adrh_Id', Integer),
    Column(u'NIPPESELKontrahenta', String(20, u'Polish_CI_AS')),
    Column(u'SymbolKontrahenta', String(20, u'Polish_CI_AS')),
    Column(u'NazwaDoPrzelewu', String(35, u'Polish_CI_AS')),
    Column(u'Wystawil', String(51, u'Polish_CI_AS')),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'hb_DataWaluty', DateTime),
    Column(u'IdentPaczki', String(35, u'Polish_CI_AS'))
)


t_vwBibliotekaDokumentow = Table(
    u'vwBibliotekaDokumentow', metadata,
    Column(u'bib_Id', Integer, nullable=False),
    Column(u'bib_TypObiektuTxt', String(50, u'Polish_CI_AS')),
    Column(u'bib_TypObiektu', Integer, nullable=False),
    Column(u'bib_IdObiektu', Integer, nullable=False),
    Column(u'bib_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'bib_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'bib_Typ', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'bib_IdKategorii', Integer, nullable=False),
    Column(u'bib_DataModyfikacji', DateTime, nullable=False),
    Column(u'bib_Zmodyfikowal', Integer, nullable=False),
    Column(u'bib_DataDodania', DateTime, nullable=False),
    Column(u'bib_Dodal', Integer, nullable=False),
    Column(u'bib_Zablokowany', BIT, nullable=False),
    Column(u'bib_Rozmiar', MONEY, nullable=False),
    Column(u'kd_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'uz_Zmod_NazwiskoImie', String(51, u'Polish_CI_AS')),
    Column(u'uz_Utw_NazwiskoImie', String(51, u'Polish_CI_AS')),
    Column(u'bib_NazwaObiektu', String(100, u'Polish_CI_AS')),
    Column(u'bib_EPodpis', BIT, nullable=False),
    Column(u'bib_PowiazanyNazwa', String(255, u'Polish_CI_AS')),
    Column(u'bib_SciezkaDoPliku', String(512, u'Polish_CI_AS')),
    Column(u'bib_JestWBazie', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'bib_Stanowisko', String(255, u'Polish_CI_AS'))
)


t_vwDataDokHandlowego = Table(
    u'vwDataDokHandlowego', metadata,
    Column(u'TYP_DATY', Integer, nullable=False)
)


t_vwDatyBlokad = Table(
    u'vwDatyBlokad', metadata,
    Column(u'bl_Id', Integer, nullable=False),
    Column(u'bl_BlokadaSubiekt', DateTime),
    Column(u'bl_BlokadaRew', DateTime),
    Column(u'bl_ParamEwidId', Integer, nullable=False)
)


t_vwDekl = Table(
    u'vwDekl', metadata,
    Column(u'de_Id', Integer, nullable=False),
    Column(u'de_idWzorca', Integer, nullable=False),
    Column(u'de_TypObiektu', Integer, nullable=False),
    Column(u'de_IdObiektu', Integer),
    Column(u'de_NazwaObiektu', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'de_OkresOd', DateTime, nullable=False),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'de_Okres', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'de_DataAktualizacji', DateTime, nullable=False),
    Column(u'de_DoZaplaty', MONEY),
    Column(u'de_Korekta', BIT),
    Column(u'de_IdDeklGlownej', Integer),
    Column(u'de_CzyGlownyZal', BIT),
    Column(u'wys_Status', Integer, nullable=False)
)


t_vwDeklaracjePitB_LiniowyKwart_ver1 = Table(
    u'vwDeklaracjePitB_LiniowyKwart_ver1', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS')),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_LiniowyKwart_ver2 = Table(
    u'vwDeklaracjePitB_LiniowyKwart_ver2', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS')),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_LiniowyMies_ver1 = Table(
    u'vwDeklaracjePitB_LiniowyMies_ver1', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS')),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_LiniowyMies_ver2 = Table(
    u'vwDeklaracjePitB_LiniowyMies_ver2', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS')),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_ProgresKwart_ver1 = Table(
    u'vwDeklaracjePitB_ProgresKwart_ver1', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_ProgresKwart_ver2 = Table(
    u'vwDeklaracjePitB_ProgresKwart_ver2', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_ProgresMies_ver1 = Table(
    u'vwDeklaracjePitB_ProgresMies_ver1', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDeklaracjePitB_ProgresMies_ver2 = Table(
    u'vwDeklaracjePitB_ProgresMies_ver2', metadata,
    Column(u'de_IdObiektu', Integer),
    Column(u'de_OkresDo', DateTime, nullable=False),
    Column(u'dp_nrPola', Integer, nullable=False),
    Column(u'_NIP', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'_REGON', String(3500, u'Polish_CI_AS')),
    Column(u'_NazwaPelna', String(3500, u'Polish_CI_AS')),
    Column(u'_Miejsce', String(3500, u'Polish_CI_AS')),
    Column(u'_Udzial', String(3500, u'Polish_CI_AS')),
    Column(u'_Przychod', String(3500, u'Polish_CI_AS')),
    Column(u'_Koszty', String(3500, u'Polish_CI_AS'))
)


t_vwDekretBankowy = Table(
    u'vwDekretBankowy', metadata,
    Column(u'dkr_Id', Integer, nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_IdDokImport', Integer)
)


t_vwDekretHandlowy = Table(
    u'vwDekretHandlowy', metadata,
    Column(u'dkr_Id', Integer, nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_IdDokImport', Integer)
)


t_vwDekretKasowy = Table(
    u'vwDekretKasowy', metadata,
    Column(u'dkr_Id', Integer, nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_IdDokImport', Integer)
)


t_vwDok4FSFZGrid = Table(
    u'vwDok4FSFZGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_KorNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_KorNrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(40, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime),
    Column(u'dkp_DataOtrzymaniaJakoDataDlaBlokadyOkresu', BIT),
    Column(u'dok_PodpisanoElektronicznie', BIT)
)


t_vwDok4FSFZGridSimple = Table(
    u'vwDok4FSFZGridSimple', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_KorNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_KorNrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime),
    Column(u'dkp_DataOtrzymaniaJakoDataDlaBlokadyOkresu', BIT),
    Column(u'dok_PodpisanoElektronicznie', BIT)
)


t_vwDok4GTAGrid = Table(
    u'vwDok4GTAGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'statusreal', Integer, nullable=False)
)


t_vwDok4IST = Table(
    u'vwDok4IST', metadata,
    Column(u'dok_id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_nrpelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'ob_towid', Integer),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusEx', Integer)
)


t_vwDok4KFSGrid = Table(
    u'vwDok4KFSGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwDok4KFZGrid = Table(
    u'vwDok4KFZGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokNrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime),
    Column(u'dkp_DataOtrzymaniaJakoDataDlaBlokadyOkresu', BIT),
    Column(u'dok_PodpisanoElektronicznie', BIT)
)


t_vwDok4PAGrid = Table(
    u'vwDok4PAGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwDok4ZWGrid = Table(
    u'vwDok4ZWGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwDok4ZamGrid = Table(
    u'vwDok4ZamGrid', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'pow_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'pow_DataWyst', DateTime),
    Column(u'zre_KwWartosc', MONEY),
    Column(u'statusreal', Integer, nullable=False),
    Column(u'statusrez', Integer, nullable=False),
    Column(u'blokada', Integer, nullable=False),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_Przedplata', MONEY),
    Column(u'ss_PrzetworzonoZKwZD', BIT, nullable=False),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'VenderoData2', DateTime),
    Column(u'ZaliczkaZK', MONEY),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDok4ZamGridvenderoNO = Table(
    u'vwDok4ZamGridvenderoNO', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'pow_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'pow_DataWyst', DateTime),
    Column(u'zre_KwWartosc', MONEY),
    Column(u'statusreal', Integer, nullable=False),
    Column(u'statusrez', Integer, nullable=False),
    Column(u'blokada', Integer, nullable=False),
    Column(u'ss_PrzetworzonoZKwZD', BIT, nullable=False),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'VenderoSymbolInt', Integer),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDok4ZamGridvenderoOP = Table(
    u'vwDok4ZamGridvenderoOP', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'pow_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'pow_DataWyst', DateTime),
    Column(u'zre_KwWartosc', MONEY),
    Column(u'statusreal', Integer, nullable=False),
    Column(u'statusrez', Integer, nullable=False),
    Column(u'blokada', Integer, nullable=False),
    Column(u'ss_PrzetworzonoZKwZD', BIT, nullable=False),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'VenderoSymbolInt', Integer),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDokDoDekretacji = Table(
    u'vwDokDoDekretacji', metadata,
    Column(u'IDENT', Integer),
    Column(u'dok_Id', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DataWyst', DateTime),
    Column(u'TypDlugi', Integer),
    Column(u'NazwaTypu', String(500, u'Polish_CI_AS')),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(2048, u'Polish_CI_AS')),
    Column(u'dok_NrPelnyOryg', Unicode(144)),
    Column(u'kh_Symbol', Unicode(30)),
    Column(u'adrh_Nazwa', Unicode(51)),
    Column(u'adrh_Adres', Unicode(82)),
    Column(u'adrh_Miejscowosc', Unicode(40)),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'dok_StatusKsieg', Integer),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'dok_Status', Integer),
    Column(u'kat_Id', Integer),
    Column(u'SI', Integer)
)


t_vwDokFWPowiazane = Table(
    u'vwDokFWPowiazane', metadata,
    Column(u'fwn_Id', Integer, nullable=False),
    Column(u'fwn_Typ', Integer, nullable=False),
    Column(u'fwn_Podtyp', Integer, nullable=False),
    Column(u'fwn_MagId', Integer),
    Column(u'fwn_Nr', Integer),
    Column(u'fwn_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'fwn_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokId', Integer),
    Column(u'fwn_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokDataWyst', DateTime),
    Column(u'fwn_KorId', Integer),
    Column(u'fwn_KorNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'fwn_KorDataWyst', DateTime),
    Column(u'fwn_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DataWyst', DateTime, nullable=False),
    Column(u'fwn_DataSprz', DateTime, nullable=False),
    Column(u'fwn_KhntId', Integer),
    Column(u'fwn_KhntAdreshId', Integer),
    Column(u'fwn_WartNetto', MONEY, nullable=False),
    Column(u'fwn_WartVat', MONEY, nullable=False),
    Column(u'fwn_WartBrutto', MONEY, nullable=False),
    Column(u'fwn_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_PersonelId', Integer),
    Column(u'fwn_Status', Integer, nullable=False),
    Column(u'fwn_StatusKsieg', Integer, nullable=False),
    Column(u'fwn_KatId', Integer),
    Column(u'fwn_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'fwn_KodRodzajuTransakcji', Integer),
    Column(u'fwn_KontrolaTyp', Integer),
    Column(u'fwn_CenyPoziom', Integer),
    Column(u'fwn_WartUsNetto', MONEY, nullable=False),
    Column(u'fwn_WartUsBrutto', MONEY, nullable=False),
    Column(u'fwn_WartTwNetto', MONEY, nullable=False),
    Column(u'fwn_WartTwBrutto', MONEY, nullable=False),
    Column(u'fwn_WartOpZwr', MONEY, nullable=False),
    Column(u'fwn_WartOpWyd', MONEY, nullable=False),
    Column(u'fwn_JestVatAuto', BIT, nullable=False),
    Column(u'fwn_VatTyp', Integer),
    Column(u'pow_Id', Integer)
)


t_vwDokKorKoszt = Table(
    u'vwDokKorKoszt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'dok_DoDokNrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwDokLookupDlaKorekt = Table(
    u'vwDokLookupDlaKorekt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDokLookupDlaKorektZak = Table(
    u'vwDokLookupDlaKorektZak', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDokLookupSprzed = Table(
    u'vwDokLookupSprzed', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer)
)


t_vwDokMagWart = Table(
    u'vwDokMagWart', metadata,
    Column(u'mw_SeriaId', Integer, nullable=False),
    Column(u'mw_PozId', Integer, nullable=False),
    Column(u'mw_Data', DateTime, nullable=False),
    Column(u'mw_Cena', MONEY)
)


t_vwDokPowiazane = Table(
    u'vwDokPowiazane', metadata,
    Column(u'dok_Id', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_Podtyp', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS')),
    Column(u'dok_DataWyst', DateTime),
    Column(u'dok_DataMag', DateTime),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS')),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY),
    Column(u'dok_RabatProc', MONEY),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartMagP', MONEY),
    Column(u'dok_WartMagR', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS')),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS')),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS')),
    Column(u'dok_Status', Integer),
    Column(u'dok_StatusKsieg', Integer),
    Column(u'dok_StatusFiskal', Integer),
    Column(u'dok_StatusBlok', BIT),
    Column(u'dok_JestTylkoDoOdczytu', BIT),
    Column(u'dok_JestRuchMag', BIT),
    Column(u'dok_JestZmianaDatyDokKas', BIT),
    Column(u'dok_JestHOP', BIT),
    Column(u'dok_JestVatNaEksport', BIT),
    Column(u'dok_JestVatAuto', BIT),
    Column(u'dok_Algorytm', Integer),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'pow_Id', Integer)
)


t_vwDokPowiazaneInw = Table(
    u'vwDokPowiazaneInw', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'adrh_Nazwa', Integer),
    Column(u'dok_KwWartosc', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_DataMag', DateTime),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokNrPelny', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'iw_RwId', Integer),
    Column(u'iw_PwId', Integer)
)


t_vwDokPowiazaneZaliczki = Table(
    u'vwDokPowiazaneZaliczki', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'pow_Id', Integer)
)


t_vwDokPozycjaFinalna = Table(
    u'vwDokPozycjaFinalna', metadata,
    Column(u'ob_Id', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Rabat', MONEY, nullable=False),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_VatProc', MONEY, nullable=False),
    Column(u'cenaPierwotna', MONEY),
    Column(u'ob_CenaNetto', MONEY),
    Column(u'ob_CenaBrutto', MONEY),
    Column(u'ob_CenaMag', MONEY),
    Column(u'ob_CenaWaluta', MONEY),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_Znak', SmallInteger, nullable=False)
)


t_vwDokum_InfTwKontrahenci = Table(
    u'vwDokum_InfTwKontrahenci', metadata,
    Column(u'dok_id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_nrpelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_status', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'ob_towid', Integer),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_WartNetto', MONEY)
)


t_vwDokumentJestFsZalCzKFS_CR = Table(
    u'vwDokumentJestFsZalCzKFS_CR', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'JestFsZalCz', BIT)
)


t_vwDokumenty = Table(
    u'vwDokumenty', metadata,
    Column(u'dok_id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_nrpelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'ob_towid', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_CenaBrutto', MONEY),
    Column(u'ob_CenaNetto', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_OdbiorcaId', Integer)
)


t_vwDokumentyCzastkoweKFS_CR = Table(
    u'vwDokumentyCzastkoweKFS_CR', metadata,
    Column(u'dok_Id', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'doDokId', Integer),
    Column(u'dok_WalutaKurs', MONEY, nullable=False)
)


t_vwEwidVAT4Grid = Table(
    u'vwEwidVAT4Grid', metadata,
    Column(u'ev_Id_2', Integer, nullable=False),
    Column(u'ev_NrDokumentu_2', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwFakturyWewnetrzneGrid = Table(
    u'vwFakturyWewnetrzneGrid', metadata,
    Column(u'fwn_Id', Integer, nullable=False),
    Column(u'fwn_Typ', Integer, nullable=False),
    Column(u'fwn_Podtyp', Integer, nullable=False),
    Column(u'fwn_MagId', Integer, nullable=False),
    Column(u'fwn_Nr', Integer, nullable=False),
    Column(u'fwn_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'fwn_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokId', Integer),
    Column(u'fwn_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokDataWyst', DateTime),
    Column(u'fwn_KorId', Integer),
    Column(u'fwn_KorNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_KorDataWyst', DateTime),
    Column(u'fwn_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DataWyst', DateTime, nullable=False),
    Column(u'fwn_DataSprz', DateTime, nullable=False),
    Column(u'fwn_KhntId', Integer),
    Column(u'fwn_KhntAdreshId', Integer),
    Column(u'fwn_WartNetto', MONEY, nullable=False),
    Column(u'fwn_WartVat', MONEY, nullable=False),
    Column(u'fwn_WartBrutto', MONEY, nullable=False),
    Column(u'fwn_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_PersonelId', Integer, nullable=False),
    Column(u'fwn_Status', Integer, nullable=False),
    Column(u'fwn_StatusKsieg', Integer, nullable=False),
    Column(u'fwn_KatId', Integer),
    Column(u'fwn_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'fwn_KodRodzajuTransakcji', Integer),
    Column(u'fwn_KontrolaTyp', Integer),
    Column(u'fwn_CenyPoziom', Integer),
    Column(u'fwn_WartUsNetto', MONEY, nullable=False),
    Column(u'fwn_WartUsBrutto', MONEY, nullable=False),
    Column(u'fwn_WartTwNetto', MONEY, nullable=False),
    Column(u'fwn_WartTwBrutto', MONEY, nullable=False),
    Column(u'fwn_WartOpZwr', MONEY, nullable=False),
    Column(u'fwn_WartOpWyd', MONEY, nullable=False),
    Column(u'fwn_JestVatAuto', BIT, nullable=False),
    Column(u'fwn_VatTyp', Integer),
    Column(u'fwn_PodpisanoElektronicznie', BIT)
)


t_vwFakturyWewnetrzneGridSub = Table(
    u'vwFakturyWewnetrzneGridSub', metadata,
    Column(u'fwn_Id', Integer, nullable=False),
    Column(u'fwn_Typ', Integer, nullable=False),
    Column(u'fwn_Podtyp', Integer, nullable=False),
    Column(u'fwn_MagId', Integer, nullable=False),
    Column(u'fwn_Nr', Integer, nullable=False),
    Column(u'fwn_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'fwn_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokId', Integer),
    Column(u'fwn_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DoDokDataWyst', DateTime),
    Column(u'fwn_KorId', Integer),
    Column(u'fwn_KorNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_KorDataWyst', DateTime),
    Column(u'fwn_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_DataWyst', DateTime, nullable=False),
    Column(u'fwn_DataSprz', DateTime, nullable=False),
    Column(u'fwn_KhntId', Integer),
    Column(u'fwn_KhntAdreshId', Integer),
    Column(u'fwn_WartNetto', MONEY, nullable=False),
    Column(u'fwn_WartVat', MONEY, nullable=False),
    Column(u'fwn_WartBrutto', MONEY, nullable=False),
    Column(u'fwn_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_PersonelId', Integer, nullable=False),
    Column(u'fwn_Status', Integer, nullable=False),
    Column(u'fwn_StatusKsieg', Integer, nullable=False),
    Column(u'fwn_KatId', Integer),
    Column(u'fwn_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fwn_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'fwn_KodRodzajuTransakcji', Integer),
    Column(u'fwn_KontrolaTyp', Integer),
    Column(u'fwn_CenyPoziom', Integer),
    Column(u'fwn_WartUsNetto', MONEY, nullable=False),
    Column(u'fwn_WartUsBrutto', MONEY, nullable=False),
    Column(u'fwn_WartTwNetto', MONEY, nullable=False),
    Column(u'fwn_WartTwBrutto', MONEY, nullable=False),
    Column(u'fwn_WartOpZwr', MONEY, nullable=False),
    Column(u'fwn_WartOpWyd', MONEY, nullable=False),
    Column(u'fwn_JestVatAuto', BIT, nullable=False),
    Column(u'fwn_VatTyp', Integer),
    Column(u'fwn_PodpisanoElektronicznie', BIT),
    Column(u'ss_typ_obiektu', Integer),
    Column(u'ss_typ_obiektu_ex', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFeniksCechaTw = Table(
    u'vwFeniksCechaTw', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'ProductMultiStoreId', Integer),
    Column(u'ProductAttributeMultiStoreId', Integer),
    Column(u'FeniksFeatureKeyId', Integer)
)


t_vwFeniksCenaTw = Table(
    u'vwFeniksCenaTw', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId1', Integer),
    Column(u'MultiStoreId2', Integer),
    Column(u'MultiStoreId3', Integer),
    Column(u'MultiStoreId4', Integer),
    Column(u'MultiStoreId5', Integer),
    Column(u'MultiStoreId6', Integer),
    Column(u'MultiStoreId7', Integer),
    Column(u'MultiStoreId8', Integer),
    Column(u'MultiStoreId9', Integer),
    Column(u'MultiStoreId10', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'ProductMultiStoreId', Integer),
    Column(u'tc_CenaNetto1', MONEY),
    Column(u'tc_CenaNetto2', MONEY),
    Column(u'tc_CenaNetto3', MONEY),
    Column(u'tc_CenaNetto4', MONEY),
    Column(u'tc_CenaNetto5', MONEY),
    Column(u'tc_CenaNetto6', MONEY),
    Column(u'tc_CenaNetto7', MONEY),
    Column(u'tc_CenaNetto8', MONEY),
    Column(u'tc_CenaNetto9', MONEY),
    Column(u'tc_CenaNetto10', MONEY),
    Column(u'tc_CenaBrutto1', MONEY),
    Column(u'tc_CenaBrutto2', MONEY),
    Column(u'tc_CenaBrutto3', MONEY),
    Column(u'tc_CenaBrutto4', MONEY),
    Column(u'tc_CenaBrutto5', MONEY),
    Column(u'tc_CenaBrutto6', MONEY),
    Column(u'tc_CenaBrutto7', MONEY),
    Column(u'tc_CenaBrutto8', MONEY),
    Column(u'tc_CenaBrutto9', MONEY),
    Column(u'tc_CenaBrutto10', MONEY),
    Column(u'tc_IdWaluta1', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta2', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta3', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta4', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta5', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta6', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta7', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta8', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta9', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta10', String(3, u'Polish_CI_AS')),
    Column(u'tc_KursWaluty1', Integer),
    Column(u'tc_KursWaluty2', Integer),
    Column(u'tc_KursWaluty3', Integer),
    Column(u'tc_KursWaluty4', Integer),
    Column(u'tc_KursWaluty5', Integer),
    Column(u'tc_KursWaluty6', Integer),
    Column(u'tc_KursWaluty7', Integer),
    Column(u'tc_KursWaluty8', Integer),
    Column(u'tc_KursWaluty9', Integer),
    Column(u'tc_KursWaluty10', Integer),
    Column(u'tc_DataKursuWaluty', DateTime),
    Column(u'par_MultiStoreId1', Integer),
    Column(u'par_MultiStoreId2', Integer),
    Column(u'par_MultiStoreId3', Integer),
    Column(u'par_MultiStoreId4', Integer),
    Column(u'par_MultiStoreId5', Integer),
    Column(u'par_MultiStoreId6', Integer),
    Column(u'par_MultiStoreId7', Integer),
    Column(u'par_MultiStoreId8', Integer),
    Column(u'par_MultiStoreId9', Integer),
    Column(u'par_MultiStoreId10', Integer)
)


t_vwFeniksDokumentSync = Table(
    u'vwFeniksDokumentSync', metadata,
    Column(u'StateId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'Description', Unicode(255)),
    Column(u'firstDocId', Integer),
    Column(u'firstDocTyp', Integer, nullable=False),
    Column(u'WarehouseId', Integer),
    Column(u'firstDocNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'firstDocStatus', Integer, nullable=False),
    Column(u'firstDocRealisationDocumentNumber', String(30, u'Polish_CI_AS')),
    Column(u'secondDocId', Integer),
    Column(u'secondDocTyp', Integer, nullable=False),
    Column(u'secondDocNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'secondDocStatus', Integer, nullable=False),
    Column(u'isPaid', BIT)
)


t_vwFeniksFirmaSync = Table(
    u'vwFeniksFirmaSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'pd_Regon', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pd_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pd_Email', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Telefon', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Faks', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Ulica', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NrDomu', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NrLokalu', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Kod', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Miejscowosc', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Poczta', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Gmina', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Powiat', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Skrytka', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'NazwaWojewodztwa', String(50, u'Polish_CI_AS')),
    Column(u'NazwaPanstwa', String(50, u'Polish_CI_AS')),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer),
    Column(u'mt_LastSynchDate', DateTime),
    Column(u'mt_LastChangeDate', DateTime),
    Column(u'mt_StateId', Integer),
    Column(u'NumerRachunku', String(50, u'Polish_CI_AS')),
    Column(u'NazwaRachunku', String(50, u'Polish_CI_AS')),
    Column(u'NazwaBanku', String(255, u'Polish_CI_AS'))
)


t_vwFeniksGrupaTwSync = Table(
    u'vwFeniksGrupaTwSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'grt_Id', Integer, nullable=False),
    Column(u'grt_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'grt_NrAnalityka', String(3, u'Polish_CI_AS'))
)


t_vwFeniksKategoriaSync = Table(
    u'vwFeniksKategoriaSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kat_Podtytul', String(60, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksKontrahentSync = Table(
    u'vwFeniksKontrahentSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_REGON', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_EMail', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Telefon', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Faks', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Ulica', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NrDomu', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NrLokalu', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Kod', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Miejscowosc', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Poczta', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Gmina', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Powiat', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Skrytka', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'NazwaWojewodztwa', String(50, u'Polish_CI_AS')),
    Column(u'NazwaPanstwa', String(50, u'Polish_CI_AS'))
)


t_vwFeniksMagazynSync = Table(
    u'vwFeniksMagazynSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'mag_Id', Integer, nullable=False),
    Column(u'mag_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Status', Integer, nullable=False),
    Column(u'mag_Opis', String(255, u'Polish_CI_AS')),
    Column(u'mag_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'mag_Glowny', BIT, nullable=False),
    Column(u'mag_POS', BIT, nullable=False)
)


t_vwFeniksParametrSync = Table(
    u'vwFeniksParametrSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId1', Integer),
    Column(u'MultiStoreId2', Integer),
    Column(u'MultiStoreId3', Integer),
    Column(u'MultiStoreId4', Integer),
    Column(u'MultiStoreId5', Integer),
    Column(u'MultiStoreId6', Integer),
    Column(u'MultiStoreId7', Integer),
    Column(u'MultiStoreId8', Integer),
    Column(u'MultiStoreId9', Integer),
    Column(u'MultiStoreId10', Integer),
    Column(u'twp_Id', Integer, nullable=False),
    Column(u'twp_Nazwa1', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa3', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa4', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa5', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa6', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa7', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa8', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny9', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_NazwaCeny10', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny1', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny2', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny3', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny4', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny5', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny6', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny7', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny8', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny9', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_WalutaCeny10', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'mt_SubiektGrupaId', Integer),
    Column(u'mt_MultiStoreGrupaId', Integer)
)


t_vwFeniksPlatnoscSync = Table(
    u'vwFeniksPlatnoscSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'fp_Id', Integer, nullable=False),
    Column(u'fp_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'fp_Termin', Integer, nullable=False),
    Column(u'fp_Typ', Integer, nullable=False),
    Column(u'fp_RachBankId', Integer),
    Column(u'fp_CentId', Integer),
    Column(u'fp_InstKredytId', Integer),
    Column(u'fp_Glowna', BIT)
)


t_vwFeniksPoleWlasneSync = Table(
    u'vwFeniksPoleWlasneSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'twp_Id', Integer, nullable=False),
    Column(u'twp_Nazwa1', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa3', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa4', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa5', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa6', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa7', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'twp_Nazwa8', String(20, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksProducentSync = Table(
    u'vwFeniksProducentSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_REGON', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_EMail', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Telefon', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Faks', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NIP', String(20, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksSlCechaTwSync = Table(
    u'vwFeniksSlCechaTwSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'ctw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksSlModelTwSync = Table(
    u'vwFeniksSlModelTwSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'Nazwa', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksSlWalutaSync = Table(
    u'vwFeniksSlWalutaSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'wl_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'wl_Nazwa', String(25, u'Polish_CI_AS'), nullable=False),
    Column(u'wl_LiczbaJednostek', Integer, nullable=False),
    Column(u'wl_Aktywna', BIT, nullable=False)
)


t_vwFeniksSlWlasciwoscCechaTwSync = Table(
    u'vwFeniksSlWlasciwoscCechaTwSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'FeniksFeatureKeyId', Integer),
    Column(u'FeniksFeatureId', Integer)
)


t_vwFeniksSlWlasciwoscTwSync = Table(
    u'vwFeniksSlWlasciwoscTwSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'Nazwa', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwFeniksStanSync = Table(
    u'vwFeniksStanSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'mt_SubiektWarehouseId', Integer, nullable=False),
    Column(u'mt_SubiektProductId', Integer, nullable=False),
    Column(u'StateId', Integer, nullable=False),
    Column(u'st_Stan', MONEY),
    Column(u'mt_MultiStoreWarehouseId', Integer),
    Column(u'mt_MultiStoreTowarId', Integer)
)


t_vwFeniksStawkaVATSync = Table(
    u'vwFeniksStawkaVATSync', metadata,
    Column(u'SubiektId', Integer, nullable=False),
    Column(u'MultiStoreId', Integer),
    Column(u'StateId', Integer, nullable=False),
    Column(u'vat_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'vat_Stawka', MONEY, nullable=False),
    Column(u'vat_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'vat_CzySystemowa', BIT, nullable=False),
    Column(u'vat_CzyWidoczna', BIT, nullable=False),
    Column(u'vat_Pozycja', Integer, nullable=False),
    Column(u'vat_PozSprzedaz', Integer, nullable=False),
    Column(u'vat_PozZakup', Integer, nullable=False),
    Column(u'vat_PozRR', Integer, nullable=False),
    Column(u'vat_PozDomyslna', Integer, nullable=False),
    Column(u'vat_Rodzaj', Integer, nullable=False)
)


t_vwFinanseBankRazem = Table(
    u'vwFinanseBankRazem', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_WyslanaHB', BIT, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'wplata', MONEY),
    Column(u'wyplata', MONEY),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'wplataWaluta', MONEY),
    Column(u'wyplataWaluta', MONEY),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'pr_Id', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'jest_na_wyciagu', BIT),
    Column(u'nr_wyciagu', String(30, u'Polish_CI_AS')),
    Column(u'PowiazanieZTransakcja', Integer, nullable=False)
)


t_vwFinanseBankRazemRew = Table(
    u'vwFinanseBankRazemRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_WyslanaHB', BIT, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'wplata', MONEY),
    Column(u'wyplata', MONEY),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'wplataWaluta', MONEY),
    Column(u'wyplataWaluta', MONEY),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'pr_Id', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'jest_na_wyciagu', BIT),
    Column(u'nr_wyciagu', String(30, u'Polish_CI_AS')),
    Column(u'PowiazanieZTransakcja', Integer, nullable=False),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseDekrety = Table(
    u'vwFinanseDekrety', metadata,
    Column(u'nzd_IdRozrachunku', Integer, nullable=False),
    Column(u'nzd_IdDekretu', Integer, nullable=False),
    Column(u'dko_Konto', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS'), nullable=False)
)


t_vwFinanseDekretyKompensat = Table(
    u'vwFinanseDekretyKompensat', metadata,
    Column(u'dkr_Id', Integer, nullable=False),
    Column(u'dkr_IdRoku', Integer, nullable=False),
    Column(u'dkr_DataDekretacji', DateTime, nullable=False),
    Column(u'dkr_DataDokumentu', DateTime, nullable=False),
    Column(u'dkr_DataOperacji', DateTime, nullable=False),
    Column(u'dkr_Status', Integer, nullable=False),
    Column(u'dkr_Rejestr', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_Numer', Integer, nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_DokumentZrodlowy', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_KontrolaBilansowania', Integer, nullable=False),
    Column(u'dkr_Waluta', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_WalutaWyswietlana', String(13, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_KursDokumentu', MONEY, nullable=False),
    Column(u'dkr_LiczbaJednostek', Integer, nullable=False),
    Column(u'dkr_RodzajKursu', Integer),
    Column(u'dkr_DataKursu', DateTime),
    Column(u'dkr_IdBanku', Integer),
    Column(u'dkr_Kwota', MONEY, nullable=False),
    Column(u'dkr_KwotaWaluta', MONEY, nullable=False),
    Column(u'dkr_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_IdKategorii', Integer),
    Column(u'dkr_Dekretowal', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_Ksiegowal', String(3, u'Polish_CI_AS')),
    Column(u'dkr_TypObiektu', Integer, nullable=False),
    Column(u'dkr_IdObiektu', Integer),
    Column(u'dkr_TypDokImport', Integer),
    Column(u'dkr_IdDokImport', Integer),
    Column(u'dkr_ImportPochodzenie', Integer, nullable=False),
    Column(u'dkr_IdKh', Integer),
    Column(u'dkr_SymbolKh', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_NrWDzienniku', Integer),
    Column(u'dkr_Podtyp', Integer, nullable=False),
    Column(u'dkr_TrybWprowadzaniaRozrachunkow', Integer, nullable=False),
    Column(u'dkr_WalutaKursWyswietlany', String(15, u'Polish_CI_AS'), nullable=False),
    Column(u'dkr_KwotaWn', MONEY, nullable=False),
    Column(u'dkr_KwotaMa', MONEY, nullable=False),
    Column(u'dkr_KwotaWalutaWn', MONEY, nullable=False),
    Column(u'dkr_KwotaWalutaMa', MONEY, nullable=False),
    Column(u'dkr_Storno', Integer, nullable=False)
)


t_vwFinanseDekretyWszystkie = Table(
    u'vwFinanseDekretyWszystkie', metadata,
    Column(u'nzd_IdRozrachunku', Integer, nullable=False),
    Column(u'nzd_IdDekretu', Integer, nullable=False),
    Column(u'nzd_IdRoku', Integer, nullable=False),
    Column(u'nzd_Status', Integer, nullable=False),
    Column(u'dko_Konto', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'Strona', Integer, nullable=False),
    Column(u'dkr_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dkr_Id', Integer)
)


t_vwFinanseDokumentKasowy = Table(
    u'vwFinanseDokumentKasowy', metadata,
    Column(u'dks_Id', Integer, nullable=False),
    Column(u'dks_IdKasy', Integer),
    Column(u'dks_Typ', Integer, nullable=False),
    Column(u'dks_Status', Integer, nullable=False),
    Column(u'dks_Data', DateTime, nullable=False),
    Column(u'dks_Numer', Integer),
    Column(u'dks_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'dks_Wartosc', MONEY, nullable=False),
    Column(u'dks_WartoscWaluta', MONEY, nullable=False),
    Column(u'dks_Splata', MONEY, nullable=False),
    Column(u'dks_SplataWaluta', MONEY, nullable=False),
    Column(u'dks_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'dks_Kurs', MONEY, nullable=False),
    Column(u'dks_RodzajKursu', Integer, nullable=False),
    Column(u'dks_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'dks_IdKategorii', Integer),
    Column(u'dks_Import', Integer),
    Column(u'dks_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'dks_IdWystawil', Integer, nullable=False),
    Column(u'dks_Odebral', String(255, u'Polish_CI_AS')),
    Column(u'dks_Opis', String(255, u'Polish_CI_AS')),
    Column(u'dks_IdDokumentAuto', Integer),
    Column(u'dks_IdHistoriiAdresu', Integer),
    Column(u'dks_IdAdresu', Integer),
    Column(u'dks_Zaliczka', BIT, nullable=False),
    Column(u'dks_TypObiektu', Integer, nullable=False),
    Column(u'dks_IdObiektu', Integer),
    Column(u'dks_GenerujTytulem', BIT, nullable=False),
    Column(u'dks_DlaNieznany', BIT, nullable=False),
    Column(u'dks_DataKursu', DateTime),
    Column(u'dks_IdBanku', Integer),
    Column(u'dks_LiczbaJednostek', Integer, nullable=False)
)


t_vwFinanseDokumenty = Table(
    u'vwFinanseDokumenty', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'DniSpoznienia', Integer),
    Column(u'WartoscPierwotna', MONEY, nullable=False),
    Column(u'WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'Wartosc', MONEY),
    Column(u'WartoscWaluta', MONEY),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'nzf_Zaliczka', BIT, nullable=False)
)


t_vwFinanseKasaRazem = Table(
    u'vwFinanseKasaRazem', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Numer', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Odebral', String(255, u'Polish_CI_AS')),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_Opis', String(255, u'Polish_CI_AS')),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_GenerujTytulem', BIT, nullable=False),
    Column(u'wplata', MONEY),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'wyplata', MONEY),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'wplataWaluta', MONEY),
    Column(u'wyplataWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'pr_Id', Integer),
    Column(u'jest_na_raporcie', BIT),
    Column(u'nr_raportu', String(30, u'Polish_CI_AS'))
)


t_vwFinanseKasaRazemRew = Table(
    u'vwFinanseKasaRazemRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Numer', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Odebral', String(255, u'Polish_CI_AS')),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_Opis', String(255, u'Polish_CI_AS')),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_GenerujTytulem', BIT, nullable=False),
    Column(u'wplata', MONEY),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'wyplata', MONEY),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'wplataWaluta', MONEY),
    Column(u'wyplataWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'pr_Id', Integer),
    Column(u'jest_na_raporcie', BIT),
    Column(u'nr_raportu', String(30, u'Polish_CI_AS')),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseOperacjaBankowa = Table(
    u'vwFinanseOperacjaBankowa', metadata,
    Column(u'op_Id', Integer, nullable=False),
    Column(u'op_IdRachunku', Integer),
    Column(u'op_IdRachunkuHist', Integer),
    Column(u'op_Wartosc', MONEY, nullable=False),
    Column(u'op_WartoscWaluta', MONEY, nullable=False),
    Column(u'op_Splata', MONEY, nullable=False),
    Column(u'op_SplataWaluta', MONEY, nullable=False),
    Column(u'op_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'op_Kurs', MONEY, nullable=False),
    Column(u'op_RodzajKursu', Integer, nullable=False),
    Column(u'op_Data', DateTime, nullable=False),
    Column(u'op_Typ', Integer, nullable=False),
    Column(u'op_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'op_Status', Integer, nullable=False),
    Column(u'op_IdKategorii', Integer),
    Column(u'op_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'op_DataUzgodnienia', DateTime),
    Column(u'op_Import', Integer),
    Column(u'op_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'op_IdWystawil', Integer, nullable=False),
    Column(u'op_WyslanaHB', BIT, nullable=False),
    Column(u'op_Wydrukowana', BIT, nullable=False),
    Column(u'op_Zaliczka', BIT, nullable=False),
    Column(u'op_GenerujTytulem', BIT, nullable=False),
    Column(u'op_ObslugaRachunku', BIT, nullable=False),
    Column(u'op_Gotowkowa', BIT, nullable=False),
    Column(u'op_IdDokumentAuto', Integer),
    Column(u'op_IdAdresu', Integer),
    Column(u'op_IdHistoriiAdresu', Integer),
    Column(u'op_IdRachObiekt', Integer),
    Column(u'op_IdRachObiektHist', Integer),
    Column(u'op_TypObiektu', Integer, nullable=False),
    Column(u'op_IdObiektu', Integer),
    Column(u'op_TypPrzelewu', String(1, u'Polish_CI_AS'), nullable=False),
    Column(u'op_ZUSPodIdentyfikator', String(14, u'Polish_CI_AS')),
    Column(u'op_ZUSPodTypIdentyfikatora', String(1, u'Polish_CI_AS')),
    Column(u'op_ZUSTypWplaty', String(1, u'Polish_CI_AS')),
    Column(u'op_ZUSDeklaracja', String(6, u'Polish_CI_AS')),
    Column(u'op_ZUSNrDeklaracji', String(2, u'Polish_CI_AS')),
    Column(u'op_PodSymbol', String(6, u'Polish_CI_AS')),
    Column(u'op_PodIdentyfikacjaZobowiazania', String(25, u'Polish_CI_AS')),
    Column(u'op_PodOkres', String(7, u'Polish_CI_AS')),
    Column(u'op_Transfer', BIT, nullable=False),
    Column(u'op_ZUSNrDecyzji', String(50, u'Polish_CI_AS')),
    Column(u'op_DataKursu', DateTime),
    Column(u'op_IdBanku', Integer),
    Column(u'op_LiczbaJednostek', Integer, nullable=False),
    Column(u'op_Podtyp', Integer)
)


t_vwFinanseRozDekretow = Table(
    u'vwFinanseRozDekretow', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'wartoscPierwotna', MONEY),
    Column(u'wartoscPierwotnaWaluta', MONEY),
    Column(u'wartosc', MONEY),
    Column(u'wartoscWaluta', MONEY),
    Column(u'dko_IdDokumentu', Integer),
    Column(u'dko_Konto', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwFinanseRozDokumenty = Table(
    u'vwFinanseRozDokumenty', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime)
)


t_vwFinanseRozDokumentyWszystkie = Table(
    u'vwFinanseRozDokumentyWszystkie', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_DataKursu', DateTime),
    Column(u'nzf_IdBanku', Integer),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False)
)


t_vwFinanseRozKhInstykt = Table(
    u'vwFinanseRozKhInstykt', metadata,
    Column(u'Ident', Integer, nullable=False),
    Column(u'Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'Opis', String(208, u'Polish_CI_AS'), nullable=False),
    Column(u'Symbol', String(72, u'Polish_CI_AS')),
    Column(u'Ulica', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'Analityka1', String(5, u'Polish_CI_AS')),
    Column(u'Analityka2', String(5, u'Polish_CI_AS')),
    Column(u'Typ', Integer, nullable=False),
    Column(u'GaduGadu', String(20, u'Polish_CI_AS')),
    Column(u'Skype', String(255, u'Polish_CI_AS'))
)


t_vwFinanseRozKhInstyktKonta = Table(
    u'vwFinanseRozKhInstyktKonta', metadata,
    Column(u'Konto', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'RokObrotowy', Integer, nullable=False),
    Column(u'Ident', Integer),
    Column(u'Typ', Integer, nullable=False)
)


t_vwFinanseRozKhLookup = Table(
    u'vwFinanseRozKhLookup', metadata,
    Column(u'Ident', Integer, nullable=False),
    Column(u'Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'Opis', String(208, u'Polish_CI_AS')),
    Column(u'Symbol', String(72, u'Polish_CI_AS'), nullable=False),
    Column(u'Ulica', String(60, u'Polish_CI_AS')),
    Column(u'Konto', Integer),
    Column(u'RokObrotowy', Integer),
    Column(u'Analityka1', String(5, u'Polish_CI_AS')),
    Column(u'Analityka2', String(5, u'Polish_CI_AS')),
    Column(u'Typ', Integer, nullable=False)
)


t_vwFinanseRozKontrahenci = Table(
    u'vwFinanseRozKontrahenci', metadata,
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY)
)


t_vwFinanseRozKontrahenciDok = Table(
    u'vwFinanseRozKontrahenciDok', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime)
)


t_vwFinanseRozKontrahenciDokBazowy = Table(
    u'vwFinanseRozKontrahenciDokBazowy', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime)
)


t_vwFinanseRozKontrahenciDokBazowyWszystkie = Table(
    u'vwFinanseRozKontrahenciDokBazowyWszystkie', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'nzf_Zaliczka', BIT, nullable=False),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime)
)


t_vwFinanseRozKontrahenciDokRew = Table(
    u'vwFinanseRozKontrahenciDokRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'ANALITYKA_D', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_O', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_WSPOLNA', String(5, u'Polish_CI_AS'))
)


t_vwFinanseRozKontrahenciDokRewBazowy = Table(
    u'vwFinanseRozKontrahenciDokRewBazowy', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'ANALITYKA_D', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_O', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_WSPOLNA', String(5, u'Polish_CI_AS'))
)


t_vwFinanseRozKontrahenciDokRewBazowyWszystkie = Table(
    u'vwFinanseRozKontrahenciDokRewBazowyWszystkie', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'ANALITYKA_D', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_O', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_WSPOLNA', String(5, u'Polish_CI_AS')),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'nzf_Zaliczka', BIT, nullable=False),
    Column(u'dok_MagId', Integer)
)


t_vwFinanseRozKontrahenciDokWszystkie = Table(
    u'vwFinanseRozKontrahenciDokWszystkie', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer)
)


t_vwFinanseRozNierozliczone = Table(
    u'vwFinanseRozNierozliczone', metadata,
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY)
)


t_vwFinanseRozRozliczone = Table(
    u'vwFinanseRozRozliczone', metadata,
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'dok_MagId', Integer)
)


t_vwFinanseRozRozliczoneRew = Table(
    u'vwFinanseRozRozliczoneRew', metadata,
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseRozSplaty = Table(
    u'vwFinanseRozSplaty', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'DniSpoznienia', Integer),
    Column(u'WartoscPierwotna', MONEY, nullable=False),
    Column(u'WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'Wartosc', MONEY),
    Column(u'WartoscWaluta', MONEY),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'RodzajSplaty', Integer),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False)
)


t_vwFinanseRozSplatyDoWyk = Table(
    u'vwFinanseRozSplatyDoWyk', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Odebral', String(255, u'Polish_CI_AS')),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_Numer', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_Opis', String(255, u'Polish_CI_AS')),
    Column(u'nzf_GenerujTytulem', BIT, nullable=False),
    Column(u'nzf_Zaliczka', BIT, nullable=False),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_IdRachunkuHist', Integer),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'nzf_DataUzgodnienia', DateTime),
    Column(u'nzf_WyslanaHB', BIT, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_TypPrzelewu', String(1, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_ZUSPodIdentyfikator', String(14, u'Polish_CI_AS')),
    Column(u'nzf_ZUSPodTypIdentyfikatora', String(1, u'Polish_CI_AS')),
    Column(u'nzf_ZUSTypWplaty', String(1, u'Polish_CI_AS')),
    Column(u'nzf_ZUSDeklaracja', String(6, u'Polish_CI_AS')),
    Column(u'nzf_ZUSNrDeklaracji', String(2, u'Polish_CI_AS')),
    Column(u'nzf_PodSymbol', String(6, u'Polish_CI_AS')),
    Column(u'nzf_PodIdentyfikacjaZobowiazania', String(25, u'Polish_CI_AS')),
    Column(u'nzf_PodOkres', String(7, u'Polish_CI_AS')),
    Column(u'nzf_Transfer', BIT, nullable=False),
    Column(u'nzf_ZUSNrDecyzji', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdRozliczenia', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_DataKursu', DateTime),
    Column(u'nzf_IdBanku', Integer),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'nzf_RodzajSplaty', Integer),
    Column(u'nzf_IdRachunkuWirtualnego', Integer),
    Column(u'nzf_TypKorekty', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'nzf_IdTransakcjiVat', Integer, nullable=False),
    Column(u'nzf_IzbaCelna', BIT, nullable=False),
    Column(u'Wartosc', MONEY)
)


t_vwFinanseRozSplatyRew = Table(
    u'vwFinanseRozSplatyRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'DniSpoznienia', Integer),
    Column(u'WartoscPierwotna', MONEY, nullable=False),
    Column(u'WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'Wartosc', MONEY),
    Column(u'WartoscWaluta', MONEY),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'RodzajSplaty', Integer),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseRozSplatyRozliczenia = Table(
    u'vwFinanseRozSplatyRozliczenia', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'DniSpoznienia', Integer),
    Column(u'WartoscPierwotna', MONEY, nullable=False),
    Column(u'WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'Wartosc', MONEY),
    Column(u'WartoscWaluta', MONEY),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'RodzajSplaty', Integer),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'nzs_Id', Integer, nullable=False),
    Column(u'nzs_IdSplaty', Integer),
    Column(u'nzs_IdDlugu', Integer, nullable=False),
    Column(u'nzs_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzs_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzs_Data', DateTime, nullable=False),
    Column(u'nzs_Typ', Integer, nullable=False),
    Column(u'nzs_IdKompensaty', Integer),
    Column(u'nzs_Auto', BIT, nullable=False),
    Column(u'nzs_Przedplata', BIT, nullable=False),
    Column(u'nzs_WartoscWalutaDlugu', MONEY, nullable=False),
    Column(u'nzs_IdWalutyDlugu', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzs_WartoscSplatyPLN', MONEY),
    Column(u'nzs_WartoscDluguPLN', MONEY),
    Column(u'nzs_WylaczBadanieZgodnosci', BIT, nullable=False),
    Column(u'nzs_MetodaKasowa', BIT, nullable=False),
    Column(u'nzs_Rodzaj', Integer, nullable=False),
    Column(u'nzs_AutoPrzeliczanie', BIT, nullable=False),
    Column(u'nzs_StatusKsieg', Integer, nullable=False),
    Column(u'nzs_BrakKontroliSumy', BIT, nullable=False),
    Column(u'nzs_IdTransakcjiVat', Integer, nullable=False),
    Column(u'nzs_IdKategorii', Integer),
    Column(u'nzs_Wartosc', MONEY),
    Column(u'IdWalutyRozRozliczanego', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'IdWalutyDokRozliczajacego', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'TypDlugu', Integer, nullable=False)
)


t_vwFinanseRozSplatyRozliczeniaRew = Table(
    u'vwFinanseRozSplatyRozliczeniaRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'DniSpoznienia', Integer),
    Column(u'WartoscPierwotna', MONEY, nullable=False),
    Column(u'WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'Wartosc', MONEY),
    Column(u'WartoscWaluta', MONEY),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'RodzajSplaty', Integer),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'nzs_Id', Integer, nullable=False),
    Column(u'nzs_IdSplaty', Integer),
    Column(u'nzs_IdDlugu', Integer, nullable=False),
    Column(u'nzs_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzs_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzs_Data', DateTime, nullable=False),
    Column(u'nzs_Typ', Integer, nullable=False),
    Column(u'nzs_IdKompensaty', Integer),
    Column(u'nzs_Auto', BIT, nullable=False),
    Column(u'nzs_Przedplata', BIT, nullable=False),
    Column(u'nzs_WartoscWalutaDlugu', MONEY, nullable=False),
    Column(u'nzs_IdWalutyDlugu', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzs_WartoscSplatyPLN', MONEY),
    Column(u'nzs_WartoscDluguPLN', MONEY),
    Column(u'nzs_WylaczBadanieZgodnosci', BIT, nullable=False),
    Column(u'nzs_MetodaKasowa', BIT, nullable=False),
    Column(u'nzs_Rodzaj', Integer, nullable=False),
    Column(u'nzs_AutoPrzeliczanie', BIT, nullable=False),
    Column(u'nzs_StatusKsieg', Integer, nullable=False),
    Column(u'nzs_BrakKontroliSumy', BIT, nullable=False),
    Column(u'nzs_IdTransakcjiVat', Integer, nullable=False),
    Column(u'nzs_IdKategorii', Integer),
    Column(u'nzs_Wartosc', MONEY),
    Column(u'IdWalutyRozRozliczanego', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'IdWalutyDokRozliczajacego', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'TypDlugu', Integer, nullable=False),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseRozliczenia = Table(
    u'vwFinanseRozliczenia', metadata,
    Column(u'IdRozliczenia', Integer, nullable=False),
    Column(u'TypRozliczenia', Integer, nullable=False),
    Column(u'IdRozrachunku', Integer),
    Column(u'TypRozrachunku', Integer),
    Column(u'NrPelnyRozrachunku', String(144, u'Polish_CI_AS')),
    Column(u'DataRozrachunku', DateTime),
    Column(u'StatusRozliczeniaRozrachunku', Integer),
    Column(u'IdSplaty', Integer),
    Column(u'TypSplaty', Integer),
    Column(u'NrPelnySplaty', String(144, u'Polish_CI_AS')),
    Column(u'DataSplaty', DateTime),
    Column(u'StatusRozliczeniaSplaty', Integer),
    Column(u'KwotaRozliczeniaWaluta', MONEY, nullable=False),
    Column(u'WalutaRozliczenia', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'KwotaRozliczeniaPLN', MONEY),
    Column(u'NrPelnyRozliczenia', String(291, u'Polish_CI_AS')),
    Column(u'DataRozliczenia', DateTime, nullable=False),
    Column(u'IdHistAdresu', Integer),
    Column(u'KontrahentSymbol', String(20, u'Polish_CI_AS')),
    Column(u'KontrahentNazwa', String(51, u'Polish_CI_AS')),
    Column(u'KontoRozrachunku', String(50, u'Polish_CI_AS')),
    Column(u'KontoSplaty', String(50, u'Polish_CI_AS')),
    Column(u'KategoriaRozrachunku', Integer),
    Column(u'KategoriaSplaty', Integer),
    Column(u'WartoscPierwotnaRozrachunkuPLN', MONEY),
    Column(u'WartoscRozrachunkuPLN', MONEY),
    Column(u'WartoscPierwotnaSplatyPLN', MONEY),
    Column(u'WartoscSplatyPLN', MONEY),
    Column(u'JestVat', Integer),
    Column(u'StatusKsiegowy', Integer, nullable=False),
    Column(u'KategoriaRozliczenia', Integer)
)


t_vwFinanseRozrachunek = Table(
    u'vwFinanseRozrachunek', metadata,
    Column(u'nz_Id', Integer, nullable=False),
    Column(u'nz_DataPowstania', DateTime, nullable=False),
    Column(u'nz_TerminPlatnosci', DateTime),
    Column(u'nz_Typ', Integer, nullable=False),
    Column(u'nz_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nz_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nz_Wartosc', MONEY, nullable=False),
    Column(u'nz_WartoscWaluta', MONEY, nullable=False),
    Column(u'nz_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nz_Kurs', MONEY, nullable=False),
    Column(u'nz_RodzajKursu', Integer, nullable=False),
    Column(u'nz_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nz_TypOdsetek', Integer),
    Column(u'nz_StopaOdsetek', MONEY),
    Column(u'nz_DataOstatniejSplaty', DateTime),
    Column(u'nz_IdDokumentAuto', Integer),
    Column(u'nz_IdAdresu', Integer),
    Column(u'nz_IdHistoriiAdresu', Integer),
    Column(u'nz_IdObiektu', Integer),
    Column(u'nz_TypObiektu', Integer, nullable=False),
    Column(u'nz_Status', Integer, nullable=False),
    Column(u'nz_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nz_IdKategorii', Integer),
    Column(u'nz_IdWystawil', Integer, nullable=False),
    Column(u'nz_Przeniesiony', BIT, nullable=False),
    Column(u'nz_Nota', BIT, nullable=False),
    Column(u'nz_Podtyp', Integer),
    Column(u'nz_Zrodlo', Integer),
    Column(u'nz_Program', Integer),
    Column(u'nz_IdRozrachunku', Integer),
    Column(u'nz_Powiazanie', BIT, nullable=False),
    Column(u'nz_Korekta', BIT, nullable=False),
    Column(u'nz_Transakcja', String(144, u'Polish_CI_AS'))
)


t_vwFinanseRozrachunkiWgDokumentow = Table(
    u'vwFinanseRozrachunkiWgDokumentow', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'naleznoscSplaty', MONEY),
    Column(u'zobowiazaniaSplaty', MONEY),
    Column(u'naleznoscSplatyWaluta', MONEY),
    Column(u'zobowiazaniaSplatyWaluta', MONEY),
    Column(u'naleznoscSplatyPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyPierwotne', MONEY),
    Column(u'naleznoscSplatyWalutaPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyWalutaPierwotne', MONEY),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'nzf_Korekta', Integer, nullable=False),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'WartoscRD', MONEY),
    Column(u'WartoscRU', MONEY),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False)
)


t_vwFinanseRozrachunkiWgDokumentowRew = Table(
    u'vwFinanseRozrachunkiWgDokumentowRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'naleznoscSplaty', MONEY),
    Column(u'zobowiazaniaSplaty', MONEY),
    Column(u'naleznoscSplatyWaluta', MONEY),
    Column(u'zobowiazaniaSplatyWaluta', MONEY),
    Column(u'naleznoscSplatyPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyPierwotne', MONEY),
    Column(u'naleznoscSplatyWalutaPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyWalutaPierwotne', MONEY),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'nzf_Korekta', Integer, nullable=False),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'WartoscRD', MONEY),
    Column(u'WartoscRU', MONEY),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseRozrachunkiWgKontrahentow = Table(
    u'vwFinanseRozrachunkiWgKontrahentow', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'naleznoscSplaty', MONEY),
    Column(u'zobowiazaniaSplaty', MONEY),
    Column(u'naleznoscSplatyWaluta', MONEY),
    Column(u'zobowiazaniaSplatyWaluta', MONEY),
    Column(u'naleznoscSplatyPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyPierwotne', MONEY),
    Column(u'naleznoscSplatyWalutaPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyWalutaPierwotne', MONEY),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', Integer, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'WartoscRD', MONEY),
    Column(u'WartoscRU', MONEY),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False)
)


t_vwFinanseRozrachunkiWgKontrahentowKh = Table(
    u'vwFinanseRozrachunkiWgKontrahentowKh', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer)
)


t_vwFinanseRozrachunkiWgKontrahentowKhRew = Table(
    u'vwFinanseRozrachunkiWgKontrahentowKhRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'ANALITYKA_D', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_O', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA', String(5, u'Polish_CI_AS')),
    Column(u'ANALITYKA_WSPOLNA', String(5, u'Polish_CI_AS')),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseRozrachunkiWgKontrahentowRew = Table(
    u'vwFinanseRozrachunkiWgKontrahentowRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'spoznienie', Integer),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'naleznoscSplaty', MONEY),
    Column(u'zobowiazaniaSplaty', MONEY),
    Column(u'naleznoscSplatyWaluta', MONEY),
    Column(u'zobowiazaniaSplatyWaluta', MONEY),
    Column(u'naleznoscSplatyPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyPierwotne', MONEY),
    Column(u'naleznoscSplatyWalutaPierwotne', MONEY),
    Column(u'zobowiazaniaSplatyWalutaPierwotne', MONEY),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'dok_PlatnikAdresHId', Integer),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Korekta', Integer, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'Identyfikator', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'WartoscRD', MONEY),
    Column(u'WartoscRU', MONEY),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseWolneSplaty = Table(
    u'vwFinanseWolneSplaty', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'TypSplaty', Integer, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS'))
)


t_vwFinanseWolneSplatyRew = Table(
    u'vwFinanseWolneSplatyRew', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'spNal', MONEY),
    Column(u'spZob', MONEY),
    Column(u'spNalWaluta', MONEY),
    Column(u'spZobWaluta', MONEY),
    Column(u'spNalPierwotna', MONEY),
    Column(u'spZobPierwotna', MONEY),
    Column(u'spNalPierwotnaWaluta', MONEY),
    Column(u'spZobPierwotnaWaluta', MONEY),
    Column(u'dok_Typ', Integer),
    Column(u'Rozliczenie', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'TypSplaty', Integer, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwFinanseWszystkie = Table(
    u'vwFinanseWszystkie', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'DniSpoznienia', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'naleznosc', MONEY),
    Column(u'zobowiazanie', MONEY),
    Column(u'nalWaluta', MONEY),
    Column(u'zobWaluta', MONEY),
    Column(u'nalPierwotna', MONEY),
    Column(u'zobPierwotna', MONEY),
    Column(u'nalPierwotnaWaluta', MONEY),
    Column(u'zobPierwotnaWaluta', MONEY),
    Column(u'dok_PlatnikAdresHId', Integer)
)


t_vwGmina = Table(
    u'vwGmina', metadata,
    Column(u'gm_Id', Integer, nullable=False),
    Column(u'gm_Nazwa', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'gm_Typ', Integer, nullable=False),
    Column(u'gm_KodGUS', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'gm_Powiat', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'gm_Gmina', String(142, u'Polish_CI_AS')),
    Column(u'gm_Aktualna', BIT, nullable=False)
)


t_vwGratAkordy = Table(
    u'vwGratAkordy', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'ZATRUDNIENIE', String(106, u'Polish_CI_AS')),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY', String(20, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY_ID', Integer),
    Column(u'STAWKA_ID', Integer, nullable=False),
    Column(u'STAWKA_AKORDOWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ILOSC', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'UMOWA_ID', Integer),
    Column(u'UMOWA_CP_ID', Integer),
    Column(u'RACH_ID', Integer),
    Column(u'WYPLATA_ID', Integer),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'pr_Id', Integer),
    Column(u'pr_IdGrupy', Integer)
)


t_vwGratCRAkord = Table(
    u'vwGratCRAkord', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY', String(20, u'Polish_CI_AS')),
    Column(u'STAWKA_ID', Integer, nullable=False),
    Column(u'ILOSC', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_Id', Integer)
)


t_vwGratCRKartaWynagrodzenAdresGmina = Table(
    u'vwGratCRKartaWynagrodzenAdresGmina', metadata,
    Column(u'ADRES_ID', Integer, nullable=False),
    Column(u'ADRES_IDOBIEKTU', Integer, nullable=False),
    Column(u'ADRES_TYP', Integer, nullable=False),
    Column(u'ADRES_KOD_MIEJSCOWOSC', String(136, u'Polish_CI_AS'), nullable=False),
    Column(u'GMINA', String(40, u'Polish_CI_AS'))
)


t_vwGratCRKartaWynagrodzenDaty = Table(
    u'vwGratCRKartaWynagrodzenDaty', metadata,
    Column(u'DATA', Integer)
)


t_vwGratCRKartaWynagrodzenPracownik = Table(
    u'vwGratCRKartaWynagrodzenPracownik', metadata,
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'IMIE', String(41, u'Polish_CI_AS'), nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE_OJCA', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE_MATKI', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA_URODZENIA', DateTime, nullable=False),
    Column(u'MIEJSCE_URODZENIA', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'NIP', String(20, u'Polish_CI_AS'), nullable=False)
)


t_vwGratCRKartaWynagrodzenRachunki = Table(
    u'vwGratCRKartaWynagrodzenRachunki', metadata,
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'UMOWA_OD', DateTime, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'PRZYCHODY_BRUTTO', MONEY, nullable=False),
    Column(u'KOSZT_UZYSKANIA', MONEY, nullable=False),
    Column(u'DOCHOD', MONEY, nullable=False),
    Column(u'OB_ZAL_NA_POD_DOCH', MONEY),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_ODLICZANE', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_NIEODLICZANE', MONEY, nullable=False),
    Column(u'NAL_ZAL_NA_POD_DOCH', MONEY, nullable=False),
    Column(u'DATA_ZALICZKI', DateTime, nullable=False),
    Column(u'UB_EMERYTALNE', MONEY),
    Column(u'UB_RENTOWE', MONEY, nullable=False),
    Column(u'UB_CHOROBOWE', MONEY, nullable=False),
    Column(u'MIESIAC', DateTime, nullable=False),
    Column(u'RYCZALT', BIT, nullable=False)
)


t_vwGratCRKartaWynagrodzenWyplaty = Table(
    u'vwGratCRKartaWynagrodzenWyplaty', metadata,
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'UMOWA_OD', DateTime, nullable=False),
    Column(u'DATA', DateTime),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'PRZYCHODY_BRUTTO', MONEY, nullable=False),
    Column(u'KOSZT_UZYSKANIA', MONEY, nullable=False),
    Column(u'DOCHOD', MONEY, nullable=False),
    Column(u'OB_ZAL_NA_POD_DOCH', MONEY),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_ODLICZANE', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_NIEODLICZANE', MONEY, nullable=False),
    Column(u'NAL_ZAL_NA_POD_DOCH', MONEY, nullable=False),
    Column(u'DATA_ZALICZKI', DateTime),
    Column(u'UB_EMERYTALNE', MONEY),
    Column(u'UB_RENTOWE', MONEY, nullable=False),
    Column(u'UB_CHOROBOWE', MONEY, nullable=False),
    Column(u'MIESIAC', DateTime)
)


t_vwGratCRKwestionariuszOsobowyPracownicy = Table(
    u'vwGratCRKwestionariuszOsobowyPracownicy', metadata,
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'IMIE', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA_URODZENIA', DateTime, nullable=False),
    Column(u'IMIE_OJCA', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE_MATKI', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'OBYWATELSTWO', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'DOWOD_TOZSAMOSCI_NUMER', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'DOWOD_TOZSAMOSCI_WYDANY_PRZEZ', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'DOWOD_TOZSAMOSCI_DATA_WYDANIA', DateTime),
    Column(u'NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'ZAWOD_WYUCZONY', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'SZKOLA', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ROK_UKONCZENIA_SZKOLY', Integer),
    Column(u'OBOWIAZEK_OBRONNY', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'WKU', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'STOPIEN_WOJSKOWY', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER_KS_WOJSKOWEJ', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER_SPECJALNOSCI_WOJSKOWEJ', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ZDJECIE', LargeBinary),
    Column(u'WYKSZTALCENIE', String(255, u'Polish_CI_AS'))
)


t_vwGratCRListaPlac = Table(
    u'vwGratCRListaPlac', metadata,
    Column(u'ID_LP', Integer, nullable=False),
    Column(u'TYTUL', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'MIESIAC', DateTime, nullable=False),
    Column(u'DATA_WYPLATY', DateTime, nullable=False)
)


t_vwGratCRListaPlacKasowaWyplaty = Table(
    u'vwGratCRListaPlacKasowaWyplaty', metadata,
    Column(u'ID_LISTY_PLAC', Integer, nullable=False),
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'PRACOWNIK', String(72, u'Polish_CI_AS'), nullable=False),
    Column(u'KWOTA_W_KASIE', MONEY, nullable=False)
)


t_vwGratCRListaPlacSkladnik = Table(
    u'vwGratCRListaPlacSkladnik', metadata,
    Column(u'ID_SKLADNIKA', Integer, nullable=False),
    Column(u'NAZWA', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'RODZAJ', Integer, nullable=False),
    Column(u'OPODATKOWANY', BIT, nullable=False),
    Column(u'PLATNY_PRZEZ', Integer, nullable=False),
    Column(u'AKTYWNY', BIT, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinek = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinek', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'lp_Tytul', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'lp_Numer', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'lp_Miesiac', DateTime, nullable=False),
    Column(u'LP_DATA_WYPLATY', DateTime, nullable=False),
    Column(u'UMOWA', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'PRACOWNIK', String(72, u'Polish_CI_AS'), nullable=False),
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'UP_WYMIAR', String(21, u'Polish_CI_AS')),
    Column(u'pr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_EMail', String(100, u'Polish_CI_AS'), nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekBrutto = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekBrutto', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'BRUTTO_MALE', MONEY, nullable=False),
    Column(u'ZUS_PRAC', MONEY, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekDoWyplaty = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekDoWyplaty', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_2', MONEY, nullable=False),
    Column(u'PRACOWNIK_OTRZYMUJE', MONEY, nullable=False),
    Column(u'PRZELEW', MONEY, nullable=False),
    Column(u'DO_REKI', MONEY, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekNetto = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekNetto', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'BRUTTO_MALE', MONEY, nullable=False),
    Column(u'KOSZT_UZYSKANIA', MONEY, nullable=False),
    Column(u'PODSTAWA_OPODATKOWANIA', MONEY, nullable=False),
    Column(u'PODATEK', MONEY, nullable=False),
    Column(u'ODLICZENIA', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE', MONEY, nullable=False),
    Column(u'ZALICZKA_OBLICZONA', MONEY, nullable=False),
    Column(u'ZALICZKA_NA_PODATEK', MONEY, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'PODST_UB_ZDROWOTN', MONEY, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekPodatek = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekPodatek', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'BRUTTO_MALE', MONEY, nullable=False),
    Column(u'ZALICZKA_NA_PODATEK', MONEY, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'NE_RAZEM', MONEY, nullable=False),
    Column(u'PRACOWNIK_OTRZYMUJE', MONEY, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekSkladniki = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekSkladniki', metadata,
    Column(u'ID_RECORDU', Integer, nullable=False),
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'ID_SKLADNIKA', Integer, nullable=False),
    Column(u'NAZWA', String(60, u'Polish_CI_AS')),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'OPODATKOWANY', BIT, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekUbezpieczenia = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekUbezpieczenia', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'ZUS_PRAC', MONEY, nullable=False),
    Column(u'ZUS_FIRMA', MONEY, nullable=False),
    Column(u'ZUS', MONEY, nullable=False),
    Column(u'ZUS_ZASILKI', MONEY, nullable=False),
    Column(u'ZUS_RAZEM', MONEY, nullable=False),
    Column(u'OBCIAZENIE_PRACODAWCY', MONEY, nullable=False)
)


t_vwGratCRListaPlacSzczegolowyOdcinekZUS = Table(
    u'vwGratCRListaPlacSzczegolowyOdcinekZUS', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'PODST_UB_EMER_RENT', MONEY, nullable=False),
    Column(u'PODST_UB_CHOR_WYP', MONEY, nullable=False),
    Column(u'ZUS_UB_EMERYT_1PRAC', MONEY, nullable=False),
    Column(u'ZUS_UB_EMERYT_1FIRMA', MONEY, nullable=False),
    Column(u'ZUS_UB_EMERYT_2PRAC', MONEY, nullable=False),
    Column(u'ZUS_UB_RENTOWE_PRAC', MONEY, nullable=False),
    Column(u'ZUS_UB_RENTOWE_FIRMA', MONEY, nullable=False),
    Column(u'ZUS_UB_CHOROBOWE_PRAC', MONEY, nullable=False),
    Column(u'ZUS_UB_WYP_FIRMA', MONEY, nullable=False),
    Column(u'FP', MONEY, nullable=False),
    Column(u'FGSP', MONEY, nullable=False),
    Column(u'FEP', MONEY, nullable=False)
)


t_vwGratCRListaPlacWyplaty = Table(
    u'vwGratCRListaPlacWyplaty', metadata,
    Column(u'ID_RECORDU', Integer, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'BRUTTO_MALE', MONEY, nullable=False),
    Column(u'KOSZT_UZYSKANIA', MONEY, nullable=False),
    Column(u'PODSTAWA_OPODATKOWANIA', MONEY, nullable=False),
    Column(u'PODATEK', MONEY, nullable=False),
    Column(u'ODLICZENIA', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE', MONEY, nullable=False),
    Column(u'ZALICZKA_OBLICZONA', MONEY, nullable=False),
    Column(u'ZALICZKA_NA_PODATEK', MONEY, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'UBEZPIECZENIE_ZDROWOTNE_2', MONEY, nullable=False),
    Column(u'PRACOWNIK_OTRZYMUJE', MONEY, nullable=False),
    Column(u'PRZELEW', MONEY, nullable=False),
    Column(u'DO_REKI', MONEY, nullable=False),
    Column(u'ZUS_EMER_1_PRAC', MONEY, nullable=False),
    Column(u'ZUS_EMER_1_FIRMA', MONEY, nullable=False),
    Column(u'ZUS_EMER_2_PRAC', MONEY, nullable=False),
    Column(u'ZUS_RENT_PRAC', MONEY, nullable=False),
    Column(u'ZUS_RENT_FIRMA', MONEY, nullable=False),
    Column(u'ZUS_CHOR_PRAC', MONEY, nullable=False),
    Column(u'ZUS_WYP_FIRMA', MONEY, nullable=False),
    Column(u'FP', MONEY, nullable=False),
    Column(u'FGSP', MONEY, nullable=False),
    Column(u'ZUS_PRAC', MONEY, nullable=False),
    Column(u'ZUS_FIRMA', MONEY, nullable=False),
    Column(u'ZUS', MONEY, nullable=False),
    Column(u'STAT_DNI_CHOROBY', Integer, nullable=False),
    Column(u'STAT_DNI_URL_WYP', Integer, nullable=False),
    Column(u'STAT_DNI_URL_MAC', Integer, nullable=False),
    Column(u'STAT_DNI_URL_WYCH', Integer, nullable=False),
    Column(u'STAT_DNI_URL_BEZPL', Integer, nullable=False),
    Column(u'STAT_DNI_ZWOLN_OKOL_PL', Integer, nullable=False),
    Column(u'STAT_DNI_ZWOLN_PL', Integer, nullable=False),
    Column(u'STAT_DNI_OPIEKI_NAD_DZIECKIEM', Integer, nullable=False),
    Column(u'STAT_DNI_OPIEKI', Integer, nullable=False),
    Column(u'STAT_DNI_NIEOB_USP_PL', Integer, nullable=False),
    Column(u'STAT_DNI_NIEOB_NIEUSP', Integer, nullable=False),
    Column(u'STAT_DNI_NIEOB_USP_NIEPL', Integer, nullable=False),
    Column(u'STAT_DNI_POSZ_PRACY', Integer, nullable=False),
    Column(u'STAT_DNI_SLUZBY', Integer, nullable=False),
    Column(u'STAT_DNI_MIESIACA', Integer, nullable=False),
    Column(u'STAT_DNI_DO_PRZEPR', Integer, nullable=False),
    Column(u'STAT_DNI_PRZEPR', Integer, nullable=False),
    Column(u'STAT_GODZ_DO_PRZEPR', Integer, nullable=False),
    Column(u'STAT_GODZ_PRZEPR', Integer, nullable=False),
    Column(u'STAT_GODZ_NADL_DO_WYPL', Integer, nullable=False),
    Column(u'STAT_GODZ_NADL_DO_WYPL_PIERWSZE', Integer, nullable=False),
    Column(u'STAT_GODZ_NADL_DO_WYPL_KOLEJNE', Integer, nullable=False),
    Column(u'STAT_GODZ_NADL_NOC', Integer, nullable=False),
    Column(u'STAT_GODZ_NADL_ROZL', Integer, nullable=False),
    Column(u'STAT_GODZ_ABS_DO_POTR', Integer, nullable=False),
    Column(u'STAT_GODZ_ABS_DO_ROZL', Integer, nullable=False),
    Column(u'STAT_GODZ_NOC', Integer, nullable=False),
    Column(u'STAT_GODZ_BILANS_DO_ROZL', Integer, nullable=False),
    Column(u'ID_LISTY_PLAC', Integer, nullable=False),
    Column(u'TYTUL_LP', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER_LP', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'MIESIAC_LP', DateTime, nullable=False),
    Column(u'DATA_WYPLATY', DateTime, nullable=False),
    Column(u'ID_PRACOWNIKA', Integer, nullable=False),
    Column(u'PRACOWNIK', String(72, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER_UMOWY', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'PODSTAWA_UBEZPIECZENIA_ZDROWOTNEGO', MONEY, nullable=False),
    Column(u'SUMA_UBEZPIECZENIA_ZDROWOTNEGO_PRAC', MONEY),
    Column(u'PODSTAWA_EM_RE', MONEY, nullable=False),
    Column(u'PODSTAWA_CH_WY', MONEY, nullable=False),
    Column(u'FEP', MONEY, nullable=False),
    Column(u'STAT_GODZ_PRZEPR_WSZYSTKIE', Integer)
)


t_vwGratCRListaPlacWyplatySkladniki = Table(
    u'vwGratCRListaPlacWyplatySkladniki', metadata,
    Column(u'ID_WYPLATY', Integer, nullable=False),
    Column(u'ID_SKLADNIKA', Integer, nullable=False),
    Column(u'WARTOSC', MONEY)
)


t_vwGratCRNaliczeniaPotracenia = Table(
    u'vwGratCRNaliczeniaPotracenia', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'SKLADNIK', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'SKLADNIK_NAZWA_NA_LISCIE_PLAC', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'SKLADNIK_OPODOTKOWANY', BIT, nullable=False),
    Column(u'SKLADNIK_DO_PODST_EM_RE', BIT, nullable=False),
    Column(u'SKLADNIK_DO_PODST_CH_WY', BIT, nullable=False),
    Column(u'SKLADNIK_DO_PODST_ZDR', BIT, nullable=False),
    Column(u'KWOTA', MONEY, nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ID_PRACOWNIKA', Integer)
)


t_vwGratCRPracownicy = Table(
    u'vwGratCRPracownicy', metadata,
    Column(u'PRACOWNIK_ID', Integer, nullable=False),
    Column(u'PRACOWNIK', String(72, u'Polish_CI_AS'), nullable=False)
)


t_vwGratCRPracownicyWDziale = Table(
    u'vwGratCRPracownicyWDziale', metadata,
    Column(u'PRACOWNIK_ID', Integer, nullable=False),
    Column(u'DZIAL_ID', Integer),
    Column(u'GRUPA_PRACOWNIKA_ID', Integer),
    Column(u'PRACOWNIK_IMIE', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'PRACOWNIK_IMIE2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'PRACOWNIK_NAZWISKO', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'DZIAL_NAZWA', String(50, u'Polish_CI_AS')),
    Column(u'UMOWA_PRACY_NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'UMOWA_PRACY_W_DZIALE_DATA_OD', DateTime),
    Column(u'UMOWA_PRACY_W_DZIALE_DATA_DO', DateTime)
)


t_vwGratCRProwizja = Table(
    u'vwGratCRProwizja', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY', String(20, u'Polish_CI_AS')),
    Column(u'STAWKA_ID', Integer, nullable=False),
    Column(u'ILOSC', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_Id', Integer)
)


t_vwGratCRSkladnikPlacowyDefinicje = Table(
    u'vwGratCRSkladnikPlacowyDefinicje', metadata,
    Column(u'ID_SPDEF', Integer, nullable=False),
    Column(u'ID_SP', Integer, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA_OD', DateTime),
    Column(u'DATA_DO', DateTime)
)


t_vwGratCRZestawPlacowy = Table(
    u'vwGratCRZestawPlacowy', metadata,
    Column(u'ZP_ID', Integer, nullable=False),
    Column(u'ZP_NAZWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ZP_OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ZP_ROZLICZAC_ECP', BIT, nullable=False),
    Column(u'ZP_ROZLICZAC_NADGODZINY', BIT, nullable=False),
    Column(u'ZP_ROZLICZAC_AKORDY', BIT, nullable=False),
    Column(u'ZP_ROZLICZAC_PROWIZJE', BIT, nullable=False),
    Column(u'ZP_ROZLICZAC_NAL_POT', BIT, nullable=False),
    Column(u'ZP_ROZLICZAC_PKZP', Integer, nullable=False),
    Column(u'ZP_STYCZEN', BIT, nullable=False),
    Column(u'ZP_LUTY', BIT, nullable=False),
    Column(u'ZP_MARZEC', BIT, nullable=False),
    Column(u'ZP_KWIECIEN', BIT, nullable=False),
    Column(u'ZP_MAJ', BIT, nullable=False),
    Column(u'ZP_CZERWIEC', BIT, nullable=False),
    Column(u'ZP_LIPIEC', BIT, nullable=False),
    Column(u'ZP_SIERPIEN', BIT, nullable=False),
    Column(u'ZP_WRZESIEN', BIT, nullable=False),
    Column(u'ZP_PAZDZIENIK', BIT, nullable=False),
    Column(u'ZP_LISTOPAD', BIT, nullable=False),
    Column(u'ZP_GRUDZIEN', BIT, nullable=False),
    Column(u'ZP_UZUPELNIENIE_DO_MINIMALNEJ', BIT, nullable=False),
    Column(u'LP_NAZWA', String(50, u'Polish_CI_AS')),
    Column(u'LP_OPIS', String(255, u'Polish_CI_AS'))
)


t_vwGratCRZestawPlacowySkladniki = Table(
    u'vwGratCRZestawPlacowySkladniki', metadata,
    Column(u'ID_SKLADNIKA', Integer, nullable=False),
    Column(u'ID_ZP', Integer, nullable=False),
    Column(u'NAZWA', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'RODZAJ', Integer, nullable=False),
    Column(u'PODSTAWA_EMERYTURY_RENTY', BIT, nullable=False),
    Column(u'PODSTAWA_CHOROBOWEGO', BIT, nullable=False),
    Column(u'PODSTAWA_ZDROWOTNEGO', BIT, nullable=False)
)


t_vwGratInfoPrac_Umowy = Table(
    u'vwGratInfoPrac_Umowy', metadata,
    Column(u'up_Id', Integer, nullable=False),
    Column(u'up_IdPracownika', Integer, nullable=False),
    Column(u'up_Numer', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'Rodzaj', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'up_DataOd', DateTime, nullable=False),
    Column(u'DataDo', DateTime),
    Column(u'Wymiar', String(23, u'Polish_CI_AS')),
    Column(u'slk_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'stn_Nazwa', String(255, u'Polish_CI_AS')),
    Column(u'dzi_Nazwa', String(50, u'Polish_CI_AS'))
)


t_vwGratInfoPrac_UmowyCP = Table(
    u'vwGratInfoPrac_UmowyCP', metadata,
    Column(u'ucp_Id', Integer, nullable=False),
    Column(u'ucp_IdPracownika', Integer, nullable=False),
    Column(u'ucp_Numer', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'Rodzaj', String(20, u'Polish_CI_AS')),
    Column(u'Okres', String(12, u'Polish_CI_AS')),
    Column(u'ucp_DataOd', DateTime, nullable=False),
    Column(u'DataDo', DateTime),
    Column(u'ucp_Tytul', String(144, u'Polish_CI_AS'), nullable=False),
    Column(u'ucp_Kwota', MONEY, nullable=False)
)


t_vwGratNaliczeniaPotracenia = Table(
    u'vwGratNaliczeniaPotracenia', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'ZATRUDNIENIE', String(106, u'Polish_CI_AS')),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'SKLADNIK', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'SKLADNIK_ID', Integer, nullable=False),
    Column(u'NALICZENIE', MONEY),
    Column(u'POTRACENIE', MONEY),
    Column(u'PARAMETR', MONEY),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'UMOWA_ID', Integer, nullable=False),
    Column(u'WYPLATA_ID', Integer),
    Column(u'pr_Id', Integer),
    Column(u'pr_IdGrupy', Integer)
)


t_vwGratPotraceniaKomornicze = Table(
    u'vwGratPotraceniaKomornicze', metadata,
    Column(u'kp_Id', Integer, nullable=False),
    Column(u'kp_IdPracownika', Integer, nullable=False),
    Column(u'kp_IdSkladnika', Integer, nullable=False),
    Column(u'StatusRozliczenia', Integer),
    Column(u'kp_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'Pracownik', String(51, u'Polish_CI_AS')),
    Column(u'Rodzaj', String(24, u'Polish_CI_AS')),
    Column(u'kp_SygnaturaSprawy', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kp_Rodzaj', Integer, nullable=False),
    Column(u'kp_SposobPotracania', Integer, nullable=False),
    Column(u'kp_ProcentWynagrodzeniaPotracany', MONEY, nullable=False),
    Column(u'kp_SumaPotracenia', MONEY, nullable=False),
    Column(u'kp_DataOd', DateTime, nullable=False),
    Column(u'kp_DataDo', DateTime),
    Column(u'kp_KwotaPotraceniaMiesiecznego', MONEY, nullable=False),
    Column(u'kp_ProcentOchronyWynagrodzenia', MONEY, nullable=False),
    Column(u'kp_CzestotliwoscPotracania', Integer, nullable=False),
    Column(u'kp_PriorytetPotracenia', Integer, nullable=False),
    Column(u'kp_ZawieszenieDataOd', DateTime),
    Column(u'kp_ZawieszenieDataDo', DateTime),
    Column(u'kp_CzyNaSwiadectwiePracy', BIT, nullable=False),
    Column(u'kp_Komornik', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'Skladnik', String(60, u'Polish_CI_AS')),
    Column(u'SumKwotaWyliczona', MONEY),
    Column(u'SumKwotaPotracona', MONEY),
    Column(u'Saldo', MONEY),
    Column(u'SposobPotracania', String(31, u'Polish_CI_AS')),
    Column(u'Zawieszenie', Integer, nullable=False),
    Column(u'WartoscPotraceniaJednorazowoNext', MONEY, nullable=False),
    Column(u'flg_Numer', Integer),
    Column(u'flw_CzasOstatniejZmiany', DateTime),
    Column(u'uz_Identyfikator', String(3, u'Polish_CI_AS')),
    Column(u'flw_Komentarz', String(1000, u'Polish_CI_AS')),
    Column(u'flw_IdFlagi', Integer),
    Column(u'flg_Text', String(50, u'Polish_CI_AS')),
    Column(u'flg_Id', Integer),
    Column(u'DataDoWirtualna', DateTime),
    Column(u'IdUmowaOPraceOstatnia', Integer),
    Column(u'pr_Id', Integer),
    Column(u'pr_IdGrupy', Integer)
)


t_vwGratPracownicyLookup = Table(
    u'vwGratPracownicyLookup', metadata,
    Column(u'pr_Id', Integer, nullable=False),
    Column(u'pr_IdGrupy', Integer),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'pr_Imie', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_Nazwisko', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_Imie2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_DataUrodzenia', DateTime, nullable=False),
    Column(u'pr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS')),
    Column(u'adr_Miejscowosc', String(40, u'Polish_CI_AS')),
    Column(u'grp_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'up_Numer', String(30, u'Polish_CI_AS')),
    Column(u'pr_Aktywny', BIT, nullable=False)
)


t_vwGratProwizje = Table(
    u'vwGratProwizje', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'ZATRUDNIENIE', String(106, u'Polish_CI_AS')),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'UMOWA', String(30, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY', String(20, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY_ID', Integer),
    Column(u'STAWKA_PROWIZYJNA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'STAWKA_ID', Integer, nullable=False),
    Column(u'ILOSC', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(86, u'Polish_CI_AS')),
    Column(u'UMOWA_ID', Integer),
    Column(u'UMOWA_CP_ID', Integer),
    Column(u'SPOSOB', Integer, nullable=False),
    Column(u'RACH_ID', Integer),
    Column(u'WYPLATA_ID', Integer),
    Column(u'pr_Id', Integer),
    Column(u'pr_IdGrupy', Integer)
)


t_vwGratRachunkiDoUmowCP = Table(
    u'vwGratRachunkiDoUmowCP', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS_RACH', Integer, nullable=False),
    Column(u'STATUS_SKLADKI', Integer, nullable=False),
    Column(u'STATUS_ZALICZKI', Integer, nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS')),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'DO_WYPLATY', MONEY, nullable=False),
    Column(u'ZUS_PRACOWNIK', MONEY, nullable=False),
    Column(u'ZUS_PRACODAWCA', MONEY, nullable=False),
    Column(u'ZALICZKA_PODATEK', MONEY, nullable=False),
    Column(u'ZDROWOTNE', MONEY),
    Column(u'NUMER_UMOWY', String(30, u'Polish_CI_AS')),
    Column(u'RODZAJ_UMOWY_ID', Integer),
    Column(u'RODZAJ_UMOWY', String(20, u'Polish_CI_AS')),
    Column(u'NA_CZAS', String(12, u'Polish_CI_AS')),
    Column(u'DATA_OD', DateTime),
    Column(u'DATA_DO', DateTime),
    Column(u'DATA_ROZWIAZANIA', DateTime),
    Column(u'ID_KATEGORIA', Integer),
    Column(u'KATEGORIA_NAZWA', String(50, u'Polish_CI_AS')),
    Column(u'pr_Id', Integer),
    Column(u'pr_IdGrupy', Integer),
    Column(u'NIP', String(20, u'Polish_CI_AS')),
    Column(u'PESEL', String(11, u'Polish_CI_AS')),
    Column(u'PODSTAWA_OPODATKOWANIA', MONEY, nullable=False),
    Column(u'PODSTAWA_EMER_RENT', MONEY, nullable=False),
    Column(u'ru_Flagi', Integer, nullable=False),
    Column(u'ru_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ZATWIERDZONY', BIT, nullable=False),
    Column(u'ru_BylPrzelew', Integer, nullable=False),
    Column(u'ru_BylKW', Integer, nullable=False),
    Column(u'ru_BylWydruk', Integer, nullable=False),
    Column(u'ru_Ryczalt', BIT, nullable=False),
    Column(u'ru_PodatekProcent', MONEY, nullable=False)
)


t_vwGratSkladnikPlacowyInstytucja = Table(
    u'vwGratSkladnikPlacowyInstytucja', metadata,
    Column(u'INSTYTUCJA_ID', Integer, nullable=False),
    Column(u'INSTYTUCJA_SYMBOL', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_RODZAJ', Integer, nullable=False),
    Column(u'INSTYTUCJA_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_EMAIL', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_NAZWA', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_NAZWAPELNA', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_TELEFON', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_FAKS', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_ADRES', String(82, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_KOD', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_MIEJSCOWOSC', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_GMINA', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_POWIAT', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'INSTYTUCJA_NIP', String(20, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSkladnikiPlacowe = Table(
    u'vwGratSkladnikiPlacowe', metadata,
    Column(u'sp_Id', Integer, nullable=False),
    Column(u'sp_Aktywny', BIT, nullable=False),
    Column(u'sp_Typ', Integer, nullable=False),
    Column(u'sp_Nazwa', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'sp_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'sp_Rodzaj', Integer, nullable=False),
    Column(u'sp_PlatnyPrzez', Integer, nullable=False),
    Column(u'sp_Opodatkowany', BIT, nullable=False),
    Column(u'sp_DoPodstEmRe', BIT, nullable=False),
    Column(u'sp_DoPodstChWy', BIT, nullable=False),
    Column(u'sp_DoPodstZdr', BIT, nullable=False),
    Column(u'spd_DataOd', DateTime),
    Column(u'spd_DataDo', DateTime),
    Column(u'WARTOSC', String(255, u'Polish_CI_AS')),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'))
)


t_vwGratSqlView_Akord = Table(
    u'vwGratSqlView_Akord', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS')),
    Column(u'IMIE', String(20, u'Polish_CI_AS')),
    Column(u'IMIE2', String(20, u'Polish_CI_AS')),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'NAZWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'TYP_STAWKI', String(11, u'Polish_CI_AS')),
    Column(u'PRZELICZNIK_LINIOWY', MONEY),
    Column(u'ILOSC', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'ROZLICZONY', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'SPOSOB_ROZLICZENIA', String(13, u'Polish_CI_AS'), nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(70, u'Polish_CI_AS')),
    Column(u'SUMA', MONEY),
    Column(u'sa_Jednostka', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'ak_Opis', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSqlView_HarmonogramRachunkow_Lista = Table(
    u'vwGratSqlView_HarmonogramRachunkow_Lista', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'OPIS', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'RODZAJ_HARMONOGRAMU', String(11, u'Polish_CI_AS')),
    Column(u'RODZAJ_HARMONOGRAMU_ID', Integer, nullable=False),
    Column(u'DATA_RACHUNKU', DateTime, nullable=False),
    Column(u'RODZAJ_CYKLU', String(10, u'Polish_CI_AS')),
    Column(u'DATA_OBOWIAZYWANIA_OD', DateTime),
    Column(u'DATA_OBOWIAZYWANIA_DO', DateTime),
    Column(u'DZIEN_RACHUNKU', String(25, u'Polish_CI_AS')),
    Column(u'KWOTA_RACHUNKU', MONEY, nullable=False),
    Column(u'KWOTA_POTRACEN', MONEY, nullable=False),
    Column(u'ROZLICZ_AKORDY', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ROZLICZ_PROWIZJE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ROZLICZ_ECP', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'uch_IdUmowy', Integer, nullable=False)
)


t_vwGratSqlView_ListaRachunkowUmowy = Table(
    u'vwGratSqlView_ListaRachunkowUmowy', metadata,
    Column(u'ID_UMOWY', Integer, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'BRUTTO_DUZE', MONEY, nullable=False),
    Column(u'SKLADKI_ZUS', MONEY),
    Column(u'ZALICZKA_NA_PODATEK', MONEY, nullable=False),
    Column(u'SKLADKA_ZDROWOTNA', MONEY, nullable=False),
    Column(u'NETTO', MONEY, nullable=False),
    Column(u'KWOTA_DO_WYPLATY', MONEY, nullable=False),
    Column(u'OBCIAZENIE_PRACODAWCY', MONEY, nullable=False)
)


t_vwGratSqlView_NaliczeniePotracenie = Table(
    u'vwGratSqlView_NaliczeniePotracenie', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS')),
    Column(u'IMIE', String(20, u'Polish_CI_AS')),
    Column(u'IMIE2', String(20, u'Polish_CI_AS')),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'NAZWA', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'RODZAJ', String(10, u'Polish_CI_AS')),
    Column(u'OPODATKOWANY', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'DO_PODST_EMERYTALNE_RENTOWE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'DO_PODST_CHOROBOWE_WYPADKOWE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'ROZLICZONY', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'SPOSOB_ROZLICZENIA', String(13, u'Polish_CI_AS'), nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(70, u'Polish_CI_AS')),
    Column(u'SUMA_NALICZEN', MONEY),
    Column(u'SUMA_POTRACEN', MONEY),
    Column(u'nalp_Opis', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSqlView_Prowizja = Table(
    u'vwGratSqlView_Prowizja', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS')),
    Column(u'IMIE', String(20, u'Polish_CI_AS')),
    Column(u'IMIE2', String(20, u'Polish_CI_AS')),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'NAZWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'TYP_STAWKI', String(11, u'Polish_CI_AS')),
    Column(u'OPIS_PRZELICZNIKA_STAWKI', MONEY),
    Column(u'KWOTA', MONEY, nullable=False),
    Column(u'WARTOSC', MONEY, nullable=False),
    Column(u'ROZLICZONY', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'SPOSOB_ROZLICZENIA', String(13, u'Polish_CI_AS'), nullable=False),
    Column(u'DOKUMENT_ROZLICZAJACY', String(70, u'Polish_CI_AS')),
    Column(u'SUMA', MONEY),
    Column(u'pr_Opis', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSqlView_UmowaCP_Header = Table(
    u'vwGratSqlView_UmowaCP_Header', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NAZWISKO', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'IMIE2', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'NUMER_UMOWY', String(30, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSqlView_UmowyCP = Table(
    u'vwGratSqlView_UmowyCP', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'RODZAJ_UMOWY_CP', String(19, u'Polish_CI_AS')),
    Column(u'NA_CZAS', String(12, u'Polish_CI_AS')),
    Column(u'DATA_OD', DateTime, nullable=False),
    Column(u'DATA_DO', DateTime),
    Column(u'DATA_ROZWIAZANIA', DateTime),
    Column(u'PRZYCZYNA_ROZWIAZANIA', String(255, u'Polish_CI_AS')),
    Column(u'TYTUL', String(144, u'Polish_CI_AS'), nullable=False),
    Column(u'SZCZEGOLY', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'KWOTA', MONEY, nullable=False),
    Column(u'ZUS_EMERYTALNE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_RENTOWE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_CHOROBOWE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_WYPADKOWE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_ZDROWOTNE', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_FP', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ZUS_FGSP', String(3, u'Polish_CI_AS'), nullable=False)
)


t_vwGratSumaInnychDochodowOrSkladekEmRe = Table(
    u'vwGratSumaInnychDochodowOrSkladekEmRe', metadata,
    Column(u'IdUmowyCP', Integer, nullable=False),
    Column(u'Suma', MONEY),
    Column(u'Rok', Integer),
    Column(u'Miesiac', Integer)
)


t_vwGratUmowy = Table(
    u'vwGratUmowy', metadata,
    Column(u'up_Id', Integer, nullable=False),
    Column(u'pr_Id', Integer, nullable=False),
    Column(u'pracownik', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_DataUrodzenia', DateTime, nullable=False),
    Column(u'up_Numer', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'up_Rodzaj', Integer, nullable=False),
    Column(u'up_DataOd', DateTime, nullable=False),
    Column(u'up_DataDo', DateTime),
    Column(u'up_DataRozwiazania', DateTime),
    Column(u'ZatrudnienieKrotkie', String(84, u'Polish_CI_AS'), nullable=False),
    Column(u'Zatrudnienie', String(126, u'Polish_CI_AS')),
    Column(u'dzi_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'stn_Nazwa', String(255, u'Polish_CI_AS')),
    Column(u'DataOstatniejWyplaty', DateTime),
    Column(u'up_IdPracownika', Integer, nullable=False),
    Column(u'dzi_Id', Integer),
    Column(u'uk_Id', Integer),
    Column(u'slk_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'Wymiar', String(13, u'Polish_CI_AS')),
    Column(u'pr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'stn_Id', Integer),
    Column(u'up_Uczen', Integer, nullable=False)
)


t_vwGratUmowyCP = Table(
    u'vwGratUmowyCP', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA_URODZENIA', DateTime, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'RODZAJ_ID', Integer, nullable=False),
    Column(u'RODZAJ_UMOWY_CP', String(19, u'Polish_CI_AS')),
    Column(u'NA_CZAS_ID', Integer, nullable=False),
    Column(u'NA_CZAS', String(12, u'Polish_CI_AS')),
    Column(u'DATA_ROZP', DateTime, nullable=False),
    Column(u'DATA_ZAK', DateTime),
    Column(u'DATA_ROZW', DateTime),
    Column(u'ZATRUDNIENIE_KROTKIE', String(85, u'Polish_CI_AS'), nullable=False),
    Column(u'ZATRUDNIENIE', String(126, u'Polish_CI_AS')),
    Column(u'DATA_RACH', DateTime),
    Column(u'pr_Id', Integer, nullable=False),
    Column(u'pr_IdGrupy', Integer),
    Column(u'ID_DZIALU', Integer),
    Column(u'NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'PODATEK', MONEY, nullable=False)
)


t_vwGratUmowyLookup = Table(
    u'vwGratUmowyLookup', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'POD_TYP', Integer),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'DATA_OD', DateTime, nullable=False),
    Column(u'DATA_DO', DateTime),
    Column(u'DATA_ZAK', DateTime),
    Column(u'PRAC_IMIE', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'PRAC_NAZWISKO', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'PRAC_DATA_UR', DateTime, nullable=False),
    Column(u'NA_CZAS', Integer, nullable=False),
    Column(u'ID_DZIALU', Integer),
    Column(u'ID_PRAC', Integer, nullable=False),
    Column(u'PRAC_NAZWISKO_IMIE', String(51, u'Polish_CI_AS'), nullable=False)
)


t_vwGratUpZpLookup = Table(
    u'vwGratUpZpLookup', metadata,
    Column(u'upz_Id', Integer, nullable=False),
    Column(u'upz_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'upz_IdSzablonuLP', Integer),
    Column(u'slp_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'upz_RozliczacECP', BIT, nullable=False),
    Column(u'upz_RozliczacNadgodziny', BIT, nullable=False),
    Column(u'upz_RozliczacAkordy', BIT, nullable=False),
    Column(u'upz_RozliczacProwizje', BIT, nullable=False),
    Column(u'upz_RozliczacNaliczeniaPotracenia', BIT, nullable=False),
    Column(u'upz_RozliczacPotraceniaKomornicze', BIT, nullable=False),
    Column(u'up_Numer', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'Pracownik', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'DataOd', DateTime, nullable=False),
    Column(u'DataDo', DateTime),
    Column(u'up_Rodzaj', Integer, nullable=False),
    Column(u'up_Id', Integer, nullable=False),
    Column(u'pr_Id', Integer, nullable=False),
    Column(u'upz_UzupelniacDoMinimalnej', BIT, nullable=False)
)


t_vwGratWyplaty = Table(
    u'vwGratWyplaty', metadata,
    Column(u'lp_Id', Integer, nullable=False),
    Column(u'wyp_Id', Integer, nullable=False),
    Column(u'up_Id', Integer, nullable=False),
    Column(u'pr_Id', Integer, nullable=False),
    Column(u'kat_Id', Integer),
    Column(u'uz_Id', Integer, nullable=False),
    Column(u'lp_Zatwierdzona', BIT, nullable=False),
    Column(u'lp_StatusKsiegowyLP', Integer, nullable=False),
    Column(u'lp_StatusKsiegowySkladki', Integer, nullable=False),
    Column(u'lp_StatusKsiegowyZaliczki', Integer, nullable=False),
    Column(u'wyp_RozliczaECP', BIT, nullable=False),
    Column(u'wyp_RozliczaNadgodziny', BIT, nullable=False),
    Column(u'wyp_RozliczaAkordy', BIT, nullable=False),
    Column(u'wyp_RozliczaProwizje', BIT, nullable=False),
    Column(u'wyp_RozliczaNalPotr', BIT, nullable=False),
    Column(u'wyp_Status', Integer, nullable=False),
    Column(u'wyp_Flagi', Integer, nullable=False),
    Column(u'lp_Numer', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'lp_Miesiac', DateTime, nullable=False),
    Column(u'lp_DataWyplaty', DateTime, nullable=False),
    Column(u'lp_DataSkladek', DateTime, nullable=False),
    Column(u'lp_DataZaliczek', DateTime, nullable=False),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'wyp_BruttoDuze', MONEY, nullable=False),
    Column(u'wyp_BruttoMale', MONEY, nullable=False),
    Column(u'wyp_ZUSPrac', MONEY, nullable=False),
    Column(u'wyp_ZUSFirma', MONEY, nullable=False),
    Column(u'wyp_ZaliczkaNaPodatek', MONEY, nullable=False),
    Column(u'wyp_Netto', MONEY, nullable=False),
    Column(u'wyp_PracownikOtrzymuje', MONEY, nullable=False),
    Column(u'wyp_ObciazeniePracodawcy', MONEY, nullable=False),
    Column(u'uz_Identyfikator', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'wyp_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'wyp_CzyKorygowana', BIT, nullable=False),
    Column(u'wyp_KwotaChorobowego', MONEY, nullable=False),
    Column(u'wyp_KwotaUrlopowegoStale', MONEY, nullable=False),
    Column(u'wyp_KwotaUrlopowegoZmienne', MONEY, nullable=False),
    Column(u'pr_NIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'pr_PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'wyp_PodstawaOpodatkowania', MONEY, nullable=False),
    Column(u'wyp_PodstUbEmerRent', MONEY, nullable=False),
    Column(u'wyp_Przelew', MONEY, nullable=False),
    Column(u'wyp_DoReki', MONEY, nullable=False),
    Column(u'wyp_BylPrzelew', Integer, nullable=False),
    Column(u'wyp_BylKW', Integer, nullable=False),
    Column(u'wyp_BylWydruk', Integer, nullable=False),
    Column(u'wyp_OstatniaWyplataPracownika', Integer, nullable=False)
)


t_vwGratZFSS = Table(
    u'vwGratZFSS', metadata,
    Column(u'ZFSSID', Integer, nullable=False),
    Column(u'ROK', Integer, nullable=False),
    Column(u'TYP', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'KWOTA', MONEY, nullable=False),
    Column(u'OPIS', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ODBIORCA', String(51, u'Polish_CI_AS'))
)


t_vwGratZawodLookup = Table(
    u'vwGratZawodLookup', metadata,
    Column(u'zw_Id', Integer, nullable=False),
    Column(u'zw_Kod', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'zw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zw_Wersja', Integer),
    Column(u'zw_Uzywane', Integer, nullable=False)
)


t_vwGridCoSlFormatNumeracji = Table(
    u'vwGridCoSlFormatNumeracji', metadata,
    Column(u'fn_Id', Integer, nullable=False),
    Column(u'fn_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'TypNumeru', String(50, u'Polish_CI_AS'))
)


t_vwHBE_transakcje_grid_view = Table(
    u'vwHBE_transakcje_grid_view', metadata,
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'hb_IdNaglowekTr', Integer, nullable=False),
    Column(u'hb_idOperacjiBankowej', Integer),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hb_BilansOtwarciaWaluta', String(3, u'Polish_CI_AS')),
    Column(u'hb_Oznaczenie', String(1, u'Polish_CI_AS')),
    Column(u'hb_Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Status', Integer, nullable=False),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_DataUtworzeniaWyciagu', DateTime),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'hb_Kontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_RachKontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kwota', MONEY),
    Column(u'Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kurs', MONEY),
    Column(u'hb_KwotaWaluty', MONEY),
    Column(u'hb_DataWaluty', DateTime),
    Column(u'hb_NumerWyciagu', String(15, u'Polish_CI_AS')),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS')),
    Column(u'hb_OpisTranzakcji', String(5000, u'Polish_CI_AS')),
    Column(u'Wygenerowana', Integer, nullable=False),
    Column(u'pominieta', Integer, nullable=False),
    Column(u'hb_Tytul', String(4000, u'Polish_CI_AS')),
    Column(u'hb_SprawdzonoSkojarzanie', BIT, nullable=False),
    Column(u'hb_IdentyfikatorMP', String(50, u'Polish_CI_AS')),
    Column(u'hb_PelnyNumerMP', String(50, u'Polish_CI_AS')),
    Column(u'PowiazanieOpWb', Integer, nullable=False),
    Column(u'wb_Nr', String(30, u'Polish_CI_AS')),
    Column(u'wb_Data', DateTime),
    Column(u'wb_Id', Integer),
    Column(u'hb_IdRachunku', Integer),
    Column(u'hb_Zrodlo', Integer, nullable=False),
    Column(u'hbto_Id', Integer),
    Column(u'PowiazaneTrOczk', Integer, nullable=False),
    Column(u'hbto_Program', Integer)
)


t_vwHB_SkojarzoneAutomatycznie = Table(
    u'vwHB_SkojarzoneAutomatycznie', metadata,
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'TypTransakcji', Integer, nullable=False),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS'))
)


t_vwHB_operacja_do_skojarzenia = Table(
    u'vwHB_operacja_do_skojarzenia', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'widoczna', Integer, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'zamkniety', Integer, nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'adrh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(123, u'Polish_CI_AS')),
    Column(u'adrh_NIP', String(20, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False)
)


t_vwHB_operacja_do_skojarzenia_ebank = Table(
    u'vwHB_operacja_do_skojarzenia_ebank', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'widoczna', Integer, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'zamkniety', Integer, nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'adrh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(123, u'Polish_CI_AS')),
    Column(u'adrh_NIP', String(20, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False)
)


t_vwHB_operacje = Table(
    u'vwHB_operacje', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'widoczna', Integer, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'zamkniety', Integer, nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'adrh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(123, u'Polish_CI_AS')),
    Column(u'adrh_NIP', String(20, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'hb_Status', Integer),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False)
)


t_vwHB_operacje_ebank = Table(
    u'vwHB_operacje_ebank', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'widoczna', Integer, nullable=False),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'zamkniety', Integer, nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'adrh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(123, u'Polish_CI_AS')),
    Column(u'adrh_NIP', String(20, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'hb_Status', Integer),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False)
)


t_vwHB_operacje_i_transakcje_skojarzone = Table(
    u'vwHB_operacje_i_transakcje_skojarzone', metadata,
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'hb_IdNaglowekTr', Integer, nullable=False),
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'zamkniety', Integer, nullable=False),
    Column(u'nzf_Import', Integer),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_DataUtworzeniaWyciagu', DateTime),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_DataUzgodnienia', DateTime),
    Column(u'hb_Kontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_RachKontrahent', String(390, u'Polish_CI_AS')),
    Column(u'adrh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(82, u'Polish_CI_AS')),
    Column(u'adrh_NIP', String(20, u'Polish_CI_AS')),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'hb_NumerWyciagu', String(15, u'Polish_CI_AS')),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS')),
    Column(u'hb_OpisTranzakcji', String(5000, u'Polish_CI_AS')),
    Column(u'hb_Tytul', String(4000, u'Polish_CI_AS')),
    Column(u'skojarzone', Integer, nullable=False)
)


t_vwHB_transakcje_do_rozliczenia_grid_view = Table(
    u'vwHB_transakcje_do_rozliczenia_grid_view', metadata,
    Column(u'hbStatus', Integer, nullable=False),
    Column(u'wieleRozrachunkow', Integer, nullable=False),
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'hb_IdNaglowekTr', Integer, nullable=False),
    Column(u'hb_idOperacjiBankowej', Integer),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hb_BilansOtwarciaWaluta', String(3, u'Polish_CI_AS')),
    Column(u'hb_Oznaczenie', String(1, u'Polish_CI_AS')),
    Column(u'hb_Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Status', Integer, nullable=False),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_DataUtworzeniaWyciagu', DateTime),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'hb_Kontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_RachKontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kwota', MONEY),
    Column(u'Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kurs', MONEY),
    Column(u'hb_KwotaWaluty', MONEY),
    Column(u'hb_DataWaluty', DateTime),
    Column(u'hb_NumerWyciagu', String(15, u'Polish_CI_AS')),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS')),
    Column(u'hb_OpisTranzakcji', String(5000, u'Polish_CI_AS')),
    Column(u'hb_Tytul', String(4000, u'Polish_CI_AS')),
    Column(u'hb_SprawdzonoSkojarzanie', BIT, nullable=False),
    Column(u'rb_IdObiektu', Integer),
    Column(u'rb_TypObiektu', Integer),
    Column(u'hb_IdentyfikatorMP', String(50, u'Polish_CI_AS')),
    Column(u'hb_PelnyNumerMP', String(50, u'Polish_CI_AS'))
)


t_vwHB_transakcje_do_skojarzenia = Table(
    u'vwHB_transakcje_do_skojarzenia', metadata,
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'hb_IdNaglowekTr', Integer, nullable=False),
    Column(u'hb_Status', Integer, nullable=False),
    Column(u'widoczna', Integer, nullable=False),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hb_Oznaczenie', String(1, u'Polish_CI_AS')),
    Column(u'hb_BilansOtwarciaWaluta', String(3, u'Polish_CI_AS')),
    Column(u'hb_Waluta', String(390, u'Polish_CI_AS')),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_DataUtworzeniaWyciagu', DateTime),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'hb_Kontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_RachKontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kwota', MONEY),
    Column(u'Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kurs', MONEY),
    Column(u'hb_KwotaWaluty', MONEY),
    Column(u'hb_DataWaluty', DateTime),
    Column(u'hb_NumerWyciagu', String(15, u'Polish_CI_AS')),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS')),
    Column(u'hb_OpisTranzakcji', String(5000, u'Polish_CI_AS')),
    Column(u'hb_Tytul', String(4000, u'Polish_CI_AS'))
)


t_vwHB_transakcje_grid_view = Table(
    u'vwHB_transakcje_grid_view', metadata,
    Column(u'hb_IdTransakcji', Integer, nullable=False),
    Column(u'hb_IdNaglowekTr', Integer, nullable=False),
    Column(u'hb_idOperacjiBankowej', Integer),
    Column(u'hb_NumerRachunku', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'hb_BilansOtwarciaWaluta', String(3, u'Polish_CI_AS')),
    Column(u'hb_Oznaczenie', String(1, u'Polish_CI_AS')),
    Column(u'hb_Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Status', Integer, nullable=False),
    Column(u'TypOperacji', Integer, nullable=False),
    Column(u'hb_DataUtworzeniaWyciagu', DateTime),
    Column(u'hb_DataKsiegowania', DateTime),
    Column(u'hb_Kontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_RachKontrahent', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kwota', MONEY),
    Column(u'Waluta', String(390, u'Polish_CI_AS')),
    Column(u'hb_Kurs', MONEY),
    Column(u'hb_KwotaWaluty', MONEY),
    Column(u'hb_DataWaluty', DateTime),
    Column(u'hb_NumerWyciagu', String(15, u'Polish_CI_AS')),
    Column(u'hb_KodTranzakcji', String(3, u'Polish_CI_AS')),
    Column(u'hb_OpisTranzakcji', String(5000, u'Polish_CI_AS')),
    Column(u'Wygenerowana', Integer, nullable=False),
    Column(u'pominieta', Integer, nullable=False),
    Column(u'hb_Tytul', String(4000, u'Polish_CI_AS')),
    Column(u'hb_SprawdzonoSkojarzanie', BIT, nullable=False),
    Column(u'hb_IdentyfikatorMP', String(50, u'Polish_CI_AS')),
    Column(u'hb_PelnyNumerMP', String(50, u'Polish_CI_AS')),
    Column(u'PowiazanieOpWb', Integer, nullable=False),
    Column(u'wb_Nr', String(30, u'Polish_CI_AS')),
    Column(u'wb_Data', DateTime),
    Column(u'wb_Id', Integer)
)


t_vwImp_FakturyWewnetrzne = Table(
    u'vwImp_FakturyWewnetrzne', metadata,
    Column(u'fwn_Id', Integer, nullable=False),
    Column(u'fwn_MagId', Integer, nullable=False),
    Column(u'fwn_DataWyst', DateTime, nullable=False),
    Column(u'TypDlugi', Integer),
    Column(u'NazwaTypu', String(500, u'Polish_CI_AS')),
    Column(u'fwn_Nr', Integer, nullable=False),
    Column(u'fwn_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'ORYGINAL', Unicode(30)),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(82, u'Polish_CI_AS')),
    Column(u'adrh_Miejscowosc', String(40, u'Polish_CI_AS')),
    Column(u'fwn_WartNetto', MONEY, nullable=False),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'fwn_StatusKsieg', Integer, nullable=False),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'fwn_Status', Integer, nullable=False),
    Column(u'kat_Id', Integer),
    Column(u'fwn_Typ', Integer, nullable=False),
    Column(u'fwn_Podtyp', Integer, nullable=False),
    Column(u'fwn_KhntId', Integer)
)


t_vwImp_Handlowe = Table(
    u'vwImp_Handlowe', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DataWyst', DateTime),
    Column(u'TypDlugi', Integer),
    Column(u'NazwaTypu', String(500, u'Polish_CI_AS')),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'adrh_Adres', String(82, u'Polish_CI_AS')),
    Column(u'adrh_Miejscowosc', String(40, u'Polish_CI_AS')),
    Column(u'dok_KwWartosc', MONEY, nullable=False),
    Column(u'kat_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'kat_Id', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False)
)


t_vwImp_KorektyKosztow = Table(
    u'vwImp_KorektyKosztow', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'MAG_ID', Integer, nullable=False),
    Column(u'dok_Data', DateTime, nullable=False),
    Column(u'TYP_ZLOZONY', Integer),
    Column(u'NAZWA_TYPU', String(500, u'Polish_CI_AS')),
    Column(u'NR', Integer, nullable=False),
    Column(u'NR_PELNY', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'NR_ORYGNALU', Unicode(30)),
    Column(u'SYMBOL_KH', Unicode(30)),
    Column(u'NAZWA_KH', Unicode(30)),
    Column(u'ADRES', Unicode(30)),
    Column(u'MIEJSC', Unicode(30)),
    Column(u'KWOTA', MONEY),
    Column(u'NAZWA_KATEGORII', String(50, u'Polish_CI_AS')),
    Column(u'STATUS_KSIEG', Integer, nullable=False),
    Column(u'ID_KATEGORII', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False)
)


t_vwImp_ListaPlac = Table(
    u'vwImp_ListaPlac', metadata,
    Column(u'lp_Id', Integer, nullable=False),
    Column(u'lp_DataWyplaty', DateTime, nullable=False),
    Column(u'lp_DataSkladek', DateTime, nullable=False),
    Column(u'lp_DataZaliczek', DateTime),
    Column(u'lp_StatusKsiegowyLP', Integer, nullable=False),
    Column(u'lp_StatusKsiegowySkladki', Integer, nullable=False),
    Column(u'lp_StatusKsiegowyZaliczki', Integer),
    Column(u'lp_Numer', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'lp_Tytul', String(70, u'Polish_CI_AS'), nullable=False),
    Column(u'lp_IdKategorii', Integer)
)


t_vwImp_Rachunek = Table(
    u'vwImp_Rachunek', metadata,
    Column(u'ru_Id', Integer, nullable=False),
    Column(u'ru_IdUmowy', Integer, nullable=False),
    Column(u'ru_IdKategorii', Integer),
    Column(u'ru_DataWystawienia', DateTime, nullable=False),
    Column(u'ru_DataSkladek', DateTime, nullable=False),
    Column(u'ru_DataZaliczek', DateTime),
    Column(u'ru_StatusImportuRachunku', Integer, nullable=False),
    Column(u'ru_StatusImportuSkladek', Integer, nullable=False),
    Column(u'ru_StatusImportuZaliczek', Integer),
    Column(u'ru_Numer', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'ru_IdPracownika', Integer, nullable=False),
    Column(u'ru_KwotaRachunku', MONEY, nullable=False),
    Column(u'ru_ZUSFirma', MONEY, nullable=False),
    Column(u'ru_UbezpZdrowotne', MONEY, nullable=False),
    Column(u'ru_UbezpZdrowotne2', MONEY, nullable=False),
    Column(u'ru_ZUSRazem', MONEY, nullable=False),
    Column(u'ru_ZaliczkaNaPodatek', MONEY, nullable=False),
    Column(u'ru_FP', MONEY, nullable=False),
    Column(u'ru_FGSP', MONEY, nullable=False)
)


t_vwImp_Wyplata = Table(
    u'vwImp_Wyplata', metadata,
    Column(u'wyp_Id', Integer, nullable=False),
    Column(u'wyp_IdListyPlac', Integer, nullable=False),
    Column(u'wyp_BruttoDuze', MONEY, nullable=False),
    Column(u'wyp_BrZasilkiZUS', MONEY),
    Column(u'wyp_NeDoplaty', MONEY),
    Column(u'wyp_NeInnePrac', MONEY),
    Column(u'wyp_ZUSFirma', MONEY, nullable=False),
    Column(u'wyp_UbezpZdrowotne', MONEY, nullable=False),
    Column(u'wyp_UbezpZdrowotne2', MONEY, nullable=False),
    Column(u'wyp_ZUSRazem', MONEY, nullable=False),
    Column(u'wyp_ZaliczkaNaPodatek', MONEY, nullable=False),
    Column(u'wyp_Fp', MONEY, nullable=False),
    Column(u'wyp_FGSP', MONEY, nullable=False)
)


t_vwInstynktSzumy = Table(
    u'vwInstynktSzumy', metadata,
    Column(u'szum_Id', Integer, nullable=False),
    Column(u'szum_Item', String(50, u'Polish_CI_AS')),
    Column(u'szum_Typ', Integer)
)


t_vwInstytucje = Table(
    u'vwInstytucje', metadata,
    Column(u'is_Id', Integer, nullable=False),
    Column(u'is_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'is_Rodzaj', Integer, nullable=False),
    Column(u'is_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'is_EMail', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'is_NrAnalityka', String(3, u'Polish_CI_AS')),
    Column(u'is_RachunekPIT', Integer),
    Column(u'is_RachunekVAT', Integer),
    Column(u'is_RachunekCIT', Integer),
    Column(u'is_KodUS', Integer),
    Column(u'is_FunduszPromocji', BIT, nullable=False),
    Column(u'is_SposobNaliczania', Integer),
    Column(u'is_WartoscNaliczenia', MONEY),
    Column(u'is_IdRachunkuWirtualnego', Integer),
    Column(u'is_IzbaCelna', BIT, nullable=False),
    Column(u'is_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwInwCz = Table(
    u'vwInwCz', metadata,
    Column(u'iw_Id', Integer, nullable=False),
    Column(u'iw_Typ', Integer, nullable=False),
    Column(u'iw_MagId', Integer, nullable=False),
    Column(u'Iw_DoIwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_Status', Integer, nullable=False),
    Column(u'iw_Nr', Integer),
    Column(u'iw_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'iw_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_StatusBlok', BIT, nullable=False),
    Column(u'iw_DataWyst', DateTime, nullable=False),
    Column(u'iw_MiejsceWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_DataZatw', DateTime),
    Column(u'iw_DataMag', DateTime),
    Column(u'iw_Wartosc', MONEY, nullable=False),
    Column(u'iw_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_Zatwierdzil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_KatId', Integer),
    Column(u'iw_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_PwId', Integer),
    Column(u'iw_PwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_RwId', Integer),
    Column(u'iw_RwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_CenyPoziom', Integer),
    Column(u'iw_CenyNarzut', MONEY, nullable=False),
    Column(u'iw_FiltrCheckRodzaje', BIT, nullable=False),
    Column(u'iw_FiltrRodzaje', Integer, nullable=False),
    Column(u'iw_FiltrCheckStan', BIT, nullable=False),
    Column(u'iw_FiltrStan', Integer, nullable=False),
    Column(u'iw_FiltrCheckPLU', BIT, nullable=False),
    Column(u'iw_FiltrPLUOd', Integer),
    Column(u'iw_FiltrPLUDo', Integer),
    Column(u'iw_FiltrCheckGrupa', BIT, nullable=False),
    Column(u'iw_FiltrCheckCecha', BIT),
    Column(u'iw_FiltrCheckFlaga', BIT, nullable=False),
    Column(u'iw_IdIWcRaport', Integer),
    Column(u'iw_CenyIdBanku', Integer),
    Column(u'iw_CenyKurs', MONEY),
    Column(u'iw_CenyKursData', DateTime),
    Column(u'iw_StatusMagOdlozony', BIT, nullable=False),
    Column(u'iw_CenyLiczbaJedn', Integer, nullable=False),
    Column(u'iw_CenyRodzajKursu', Integer),
    Column(u'iw_PodpisanoElektronicznie', BIT),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwInwZb = Table(
    u'vwInwZb', metadata,
    Column(u'iw_Id', Integer, nullable=False),
    Column(u'iw_Typ', Integer, nullable=False),
    Column(u'iw_MagId', Integer, nullable=False),
    Column(u'Iw_DoIwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_Status', Integer, nullable=False),
    Column(u'iw_Nr', Integer),
    Column(u'iw_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'iw_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_StatusBlok', BIT, nullable=False),
    Column(u'iw_DataWyst', DateTime, nullable=False),
    Column(u'iw_MiejsceWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_DataZatw', DateTime),
    Column(u'iw_DataMag', DateTime),
    Column(u'iw_Wartosc', MONEY, nullable=False),
    Column(u'iw_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_Zatwierdzil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_KatId', Integer),
    Column(u'iw_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_PwId', Integer),
    Column(u'iw_PwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_RwId', Integer),
    Column(u'iw_RwNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'iw_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'iw_CenyPoziom', Integer),
    Column(u'iw_CenyNarzut', MONEY, nullable=False),
    Column(u'iw_FiltrCheckRodzaje', BIT, nullable=False),
    Column(u'iw_FiltrRodzaje', Integer, nullable=False),
    Column(u'iw_FiltrCheckStan', BIT, nullable=False),
    Column(u'iw_FiltrStan', Integer, nullable=False),
    Column(u'iw_FiltrCheckPLU', BIT, nullable=False),
    Column(u'iw_FiltrPLUOd', Integer),
    Column(u'iw_FiltrPLUDo', Integer),
    Column(u'iw_FiltrCheckGrupa', BIT, nullable=False),
    Column(u'iw_FiltrCheckCecha', BIT),
    Column(u'iw_FiltrCheckFlaga', BIT, nullable=False),
    Column(u'iw_IdIWcRaport', Integer),
    Column(u'iw_CenyIdBanku', Integer),
    Column(u'iw_CenyKurs', MONEY),
    Column(u'iw_CenyKursData', DateTime),
    Column(u'iw_StatusMagOdlozony', BIT, nullable=False),
    Column(u'iw_CenyLiczbaJedn', Integer, nullable=False),
    Column(u'iw_CenyRodzajKursu', Integer),
    Column(u'iw_PodpisanoElektronicznie', BIT),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwKlienci = Table(
    u'vwKlienci', metadata,
    Column(u'adr_Id', Integer, nullable=False),
    Column(u'kh_Id', Integer, nullable=False),
    Column(u'kh_Zablokowany', BIT, nullable=False),
    Column(u'kh_Typ', Integer, nullable=False),
    Column(u'kh_Rodzaj', Integer, nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'IdFirmy', Integer),
    Column(u'Firma', String(51, u'Polish_CI_AS')),
    Column(u'adr_Miejscowosc', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NIP', String(20, u'Polish_CI_AS')),
    Column(u'kh_REGON', String(20, u'Polish_CI_AS')),
    Column(u'adr_Kod', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Telefon', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_EMail', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_GaduGadu', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Skype', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_WWW', String(255, u'Polish_CI_AS')),
    Column(u'kh_Pracownik', String(51, u'Polish_CI_AS')),
    Column(u'pk_Telefon', String(35, u'Polish_CI_AS')),
    Column(u'pk_Email', String(100, u'Polish_CI_AS')),
    Column(u'kh_Uwagi', String(500, u'Polish_CI_AS')),
    Column(u'kh_ZgodaDO', BIT),
    Column(u'kh_ZgodaMark', BIT),
    Column(u'kh_ZgodaEMail', BIT),
    Column(u'adr_IdPanstwo', Integer),
    Column(u'adr_IdWojewodztwo', Integer),
    Column(u'pk_IdKh', Integer),
    Column(u'kh_IdGrupa', Integer),
    Column(u'kh_IdRodzajKontaktu', Integer),
    Column(u'kh_IdPozyskany', Integer),
    Column(u'kh_IdBranza', Integer),
    Column(u'kh_IdRegion', Integer),
    Column(u'kh_IdDzial', Integer),
    Column(u'kh_Stanowisko', String(50, u'Polish_CI_AS')),
    Column(u'kh_LiczbaPrac', Integer),
    Column(u'kh_Potencjalny', Integer, nullable=False),
    Column(u'kh_Jednorazowy', Integer, nullable=False),
    Column(u'kh_IdOpiekun', Integer),
    Column(u'kh_IdDodal', Integer),
    Column(u'kh_IdZmienil', Integer),
    Column(u'kh_DataDodania', DateTime),
    Column(u'kh_DataZmiany', DateTime),
    Column(u'kh_DataOkolicznosciowa', DateTime),
    Column(u'pk_Podstaw', BIT),
    Column(u'kh_Pole1', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole2', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole3', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole4', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole5', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole6', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole7', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole8', String(50, u'Polish_CI_AS')),
    Column(u'adr_Faks', String(35, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_PESEL', String(11, u'Polish_CI_AS'))
)


t_vwKompensatyRew = Table(
    u'vwKompensatyRew', metadata,
    Column(u'nzk_Id', Integer, nullable=False),
    Column(u'nzk_Status', Integer, nullable=False),
    Column(u'nzk_DataWystawienia', DateTime, nullable=False),
    Column(u'nzk_DataRealizacji', DateTime),
    Column(u'nzk_Numer', Integer, nullable=False),
    Column(u'nzk_NrPelny', String(50, u'Polish_CI_AS')),
    Column(u'nzk_IdObiektu', Integer, nullable=False),
    Column(u'nzk_TypObiektu', Integer, nullable=False),
    Column(u'nzk_IdKategorii', Integer),
    Column(u'nzk_IdHistoriiAdresu', Integer, nullable=False),
    Column(u'nzk_Wartosc', MONEY, nullable=False),
    Column(u'nzk_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzk_Waluta', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzk_IdPersonelu', Integer, nullable=False),
    Column(u'nzk_Import', Integer, nullable=False),
    Column(u'nzk_Program', Integer, nullable=False),
    Column(u'ss_typ_obiektu', Integer),
    Column(u'ss_typ_obiektu_ex', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwKontaPrzeciwstawne = Table(
    u'vwKontaPrzeciwstawne', metadata,
    Column(u'IdZapisu', Integer, nullable=False),
    Column(u'konto', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'przeciwstawne', String(50, u'Polish_CI_AS')),
    Column(u'ilosc_Kont', Integer)
)


t_vwKosztyDoKorekty = Table(
    u'vwKosztyDoKorekty', metadata,
    Column(u'kpr_Id', Integer, nullable=False),
    Column(u'kpr_NrDokumentu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_DataZdarzenia', DateTime, nullable=False),
    Column(u'kpr_Rodzaj', Integer, nullable=False),
    Column(u'kpr_IdKh', Integer),
    Column(u'kpr_NazwaKh', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_NazwaPelnaKh', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_UlicaKh', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_MiastoKh', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_KodPocztowyKh', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_NIPKh', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_IdKategorii', Integer),
    Column(u'kpr_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_KolPrzychSpTowUsl', MONEY, nullable=False),
    Column(u'kpr_KolPrzychPozostale', MONEY, nullable=False),
    Column(u'kpr_KolPrzychRazem', MONEY),
    Column(u'kpr_KolZakTowarow', MONEY, nullable=False),
    Column(u'kpr_KolZakKosztyUbocz', MONEY, nullable=False),
    Column(u'kpr_KolWydReprRekl', MONEY, nullable=False),
    Column(u'kpr_KolWydWynagr', MONEY, nullable=False),
    Column(u'kpr_KolWydPozostale', MONEY, nullable=False),
    Column(u'kpr_KolWydRazem', MONEY),
    Column(u'kpr_KolInne', MONEY, nullable=False),
    Column(u'kpr_KolUwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'kpr_Zakupy', MONEY),
    Column(u'kpr_ZakupyWydatki', MONEY),
    Column(u'kpr_Dochod', MONEY),
    Column(u'kpr_Uniewazniony', BIT, nullable=False),
    Column(u'kpr_TypObiektu', Integer, nullable=False),
    Column(u'kpr_IdObiektu', Integer),
    Column(u'kpr_Importowany', BIT, nullable=False),
    Column(u'kpr_KorektaSN', BIT, nullable=False),
    Column(u'kpr_IdDokImport', Integer),
    Column(u'kpr_TypDokImport', Integer),
    Column(u'kpr_IdOkresu', Integer, nullable=False),
    Column(u'kpr_DataZdarzeniaGospodarczego', DateTime, nullable=False),
    Column(u'kpr_KorektaKUPTyp', Integer, nullable=False),
    Column(u'kpr_KorektaKUPTerminPlatnosci', DateTime),
    Column(u'kpr_KorektaKUPDataPlatnosci', DateTime),
    Column(u'kpr_KorektaKUPTerminKorekty', DateTime),
    Column(u'kpr_KorektaKUPIdDokKorygowany', Integer),
    Column(u'kpr_KorektaKUPPlatnoscCzesciowa', BIT, nullable=False),
    Column(u'kpr_KorektaKUPNrDokKorygowany', String(30, u'Polish_CI_AS')),
    Column(u'kpr_WlaczKorygowanieKUP', BIT, nullable=False),
    Column(u'kpr_KorektaKUPDowodZaplaty', String(30, u'Polish_CI_AS')),
    Column(u'kpr_MalyPojazd', Integer, nullable=False),
    Column(u'kpr_StawkaVAT', Integer),
    Column(u'kpr_WersjaKPiR', Integer, nullable=False),
    Column(u'kpr_KolBadaniaRozwoj', MONEY, nullable=False),
    Column(u'kpr_TypOpisuKolBadaniaRozwoj', Integer),
    Column(u'kpr_OpisKolBadaniaRozwoj', String(255, u'Polish_CI_AS')),
    Column(u'tmp_Skorygowany', Integer, nullable=False),
    Column(u'tmp_PonownieZaliczony', Integer, nullable=False)
)


t_vwKursyCen = Table(
    u'vwKursyCen', metadata,
    Column(u'Kurs1', MONEY, nullable=False),
    Column(u'Kurs2', MONEY, nullable=False),
    Column(u'Kurs3', MONEY, nullable=False),
    Column(u'Kurs4', MONEY, nullable=False),
    Column(u'Kurs5', MONEY, nullable=False),
    Column(u'Kurs6', MONEY, nullable=False),
    Column(u'Kurs7', MONEY, nullable=False),
    Column(u'Kurs8', MONEY, nullable=False),
    Column(u'Kurs9', MONEY, nullable=False),
    Column(u'Kurs10', MONEY, nullable=False),
    Column(u'Jednostki1', Integer, nullable=False),
    Column(u'Jednostki2', Integer, nullable=False),
    Column(u'Jednostki3', Integer, nullable=False),
    Column(u'Jednostki4', Integer, nullable=False),
    Column(u'Jednostki5', Integer, nullable=False),
    Column(u'Jednostki6', Integer, nullable=False),
    Column(u'Jednostki7', Integer, nullable=False),
    Column(u'Jednostki8', Integer, nullable=False),
    Column(u'Jednostki9', Integer, nullable=False),
    Column(u'Jednostki10', Integer, nullable=False)
)


t_vwListaCesji = Table(
    u'vwListaCesji', metadata,
    Column(u'Ident', Integer, nullable=False),
    Column(u'Opis_cesji', String(255, u'Polish_CI_AS')),
    Column(u'Kontrahent', String(20, u'Polish_CI_AS')),
    Column(u'Platnik', String(20, u'Polish_CI_AS')),
    Column(u'DataUtworzenia', DateTime, nullable=False),
    Column(u'Kierunek', Integer, nullable=False),
    Column(u'Wartosc_naleznosci', MONEY),
    Column(u'Ile', Integer),
    Column(u'SumaSplat', MONEY),
    Column(u'Zgodnosc_kwoty', Integer),
    Column(u'Ilosc_rozrachunkow', Integer, nullable=False)
)


t_vwMagazyn = Table(
    u'vwMagazyn', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_DoDokTyp', Integer),
    Column(u'dok_DoDokPodtyp', Integer),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime),
    Column(u'dok_PodpisanoElektronicznie', BIT)
)


t_vwMarzaCalkowitaFM = Table(
    u'vwMarzaCalkowitaFM', metadata,
    Column(u'DokIdFM', Integer),
    Column(u'DokMarzaNetto', MONEY),
    Column(u'DokMarzaBrutto', MONEY)
)


t_vwModul = Table(
    u'vwModul', metadata,
    Column(u'uim_Id', Integer, nullable=False),
    Column(u'uim_IdWzorca', Integer),
    Column(u'uim_Tytul', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'uim_TytulWzorca', String(255, u'Polish_CI_AS')),
    Column(u'uim_Program', Integer, nullable=False)
)


t_vwNetParametrInd = Table(
    u'vwNetParametrInd', metadata,
    Column(u'nep_Id', Integer, nullable=False),
    Column(u'nep_PowiadomWersjaProgramu', BIT, nullable=False),
    Column(u'nep_PowiadomWersjaParametrow', BIT, nullable=False),
    Column(u'nep_PowiadomKursy', BIT, nullable=False),
    Column(u'nep_PowiadomLicWygasanie', BIT, nullable=False),
    Column(u'nep_PowiadomLicRozbieznosci', BIT, nullable=False),
    Column(u'nep_InfoTechniczne', BIT, nullable=False),
    Column(u'nep_InfoMerytoryczne', BIT, nullable=False),
    Column(u'nep_InfoMarketingowe', BIT, nullable=False),
    Column(u'nep_ParamEwidId', Integer),
    Column(u'nep_PokazujWiadomosciPrzez', Integer, nullable=False)
)


t_vwNetWiadomosci = Table(
    u'vwNetWiadomosci', metadata,
    Column(u'new_Id', Integer, nullable=False),
    Column(u'new_ZrodloTyp', Integer, nullable=False),
    Column(u'new_ZrodloNIP', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_ZrodloUzytkownik', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Adresaci', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Typ', Integer, nullable=False),
    Column(u'new_Tytul', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Tresc', String(7000, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Data', DateTime),
    Column(u'Przeczytana', BIT)
)


t_vwNetWiadomosciNowaWersja = Table(
    u'vwNetWiadomosciNowaWersja', metadata,
    Column(u'new_Id', Integer, nullable=False),
    Column(u'new_ZrodloTyp', Integer, nullable=False),
    Column(u'new_ZrodloNIP', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_ZrodloUzytkownik', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Adresaci', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Typ', Integer, nullable=False),
    Column(u'new_Tytul', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Tresc', String(7000, u'Polish_CI_AS'), nullable=False),
    Column(u'new_Data', DateTime),
    Column(u'Przeczytana', BIT),
    Column(u'OdczytanaWStarejWersji', BIT),
    Column(u'nef_DataPrzypomnienia', DateTime),
    Column(u'nef_Pobrano', BIT)
)


t_vwNotaKoryg4Grid = Table(
    u'vwNotaKoryg4Grid', metadata,
    Column(u'dnk_Id', Integer, nullable=False),
    Column(u'dnk_Typ', Integer, nullable=False),
    Column(u'dnk_Podtyp', Integer, nullable=False),
    Column(u'dnk_MagId', Integer, nullable=False),
    Column(u'dnk_Nr', Integer, nullable=False),
    Column(u'dnk_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dnk_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_DataWyst', DateTime, nullable=False),
    Column(u'dnk_DataPotw', DateTime),
    Column(u'dnk_Potwierdzenie', BIT),
    Column(u'dnk_OdbiorcaId', Integer),
    Column(u'dnk_OdbiorcaAdreshId', Integer),
    Column(u'dnk_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_PersonelId', Integer),
    Column(u'dnk_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_KatId', Integer),
    Column(u'dnk_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_TrescDoKor', String(1000, u'Polish_CI_AS'), nullable=False),
    Column(u'dnk_TrescPoKor', String(1000, u'Polish_CI_AS'), nullable=False)
)


t_vwObPowiazane = Table(
    u'vwObPowiazane', metadata,
    Column(u'op_Id', Integer, nullable=False),
    Column(u'op_TypWskazywanego', Integer, nullable=False),
    Column(u'op_OpisTypuWskazywanego', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'op_IdWskazywanego', Integer, nullable=False),
    Column(u'op_OpisObiektu', Unicode(1000)),
    Column(u'op_TypOb', Integer, nullable=False),
    Column(u'op_OpisTypuOb', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'op_IdOb', Integer, nullable=False),
    Column(u'op_OpisOb', Unicode(1000)),
    Column(u'op_OpisPowiazania', Unicode(255), nullable=False),
    Column(u'op_Prywatne', Integer),
    Column(u'op_Opiekun', Integer),
    Column(u'op_KontoEmail', Integer),
    Column(u'op_EmailUsuniety', Integer),
    Column(u'op_PrywatneWskazywanego', Integer),
    Column(u'op_OpiekunWskazywanego', Integer),
    Column(u'op_KontoEmailWskazywanego', Integer),
    Column(u'op_EmailUsunietyWskazywanego', Integer)
)


t_vwObPowiazaneGrid = Table(
    u'vwObPowiazaneGrid', metadata,
    Column(u'op_Id', Integer),
    Column(u'op_Kierunek', Integer, nullable=False),
    Column(u'op_IdObiektu', Integer, nullable=False),
    Column(u'op_OpisObiektu', Unicode(1000)),
    Column(u'op_TypObiektu', Integer, nullable=False),
    Column(u'op_OpisTypu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'op_IdIdent', Integer, nullable=False),
    Column(u'op_TypIdent', Integer, nullable=False),
    Column(u'op_OpisPowiazania', Unicode(255), nullable=False),
    Column(u'op_Prywatne', Integer),
    Column(u'op_Opiekun', Integer),
    Column(u'op_KontoEmail', Integer),
    Column(u'op_EmailUsuniety', Integer)
)


t_vwObPowiazaneGridSymbolTr = Table(
    u'vwObPowiazaneGridSymbolTr', metadata,
    Column(u'op_Id', Integer),
    Column(u'op_Kierunek', Integer, nullable=False),
    Column(u'op_IdObiektu', Integer, nullable=False),
    Column(u'op_OpisObiektu', Unicode(1033)),
    Column(u'op_TypObiektu', Integer, nullable=False),
    Column(u'op_OpisTypu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'op_IdIdent', Integer, nullable=False),
    Column(u'op_TypIdent', Integer, nullable=False),
    Column(u'op_OpisPowiazania', Unicode(255), nullable=False),
    Column(u'op_Prywatne', Integer),
    Column(u'op_EmailUsuniety', Integer),
    Column(u'em_DeleteStat', Integer)
)


t_vwOdliczeniaDoliczenia = Table(
    u'vwOdliczeniaDoliczenia', metadata,
    Column(u'od_Id', Integer, nullable=False),
    Column(u'od_Rodzaj', Integer, nullable=False),
    Column(u'od_IdWspolnika', Integer, nullable=False),
    Column(u'od_DataZapisu', DateTime, nullable=False),
    Column(u'od_Kwota', MONEY, nullable=False),
    Column(u'od_SposobOdliczania', Integer, nullable=False),
    Column(u'od_IdRodzajuOdliczenia', Integer),
    Column(u'od_DataOd', DateTime, nullable=False),
    Column(u'od_DataDo', DateTime, nullable=False),
    Column(u'od_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'KwotaOdliczenia', MONEY),
    Column(u'KwotaDoliczenia', MONEY),
    Column(u'od_TypObiektu', Integer),
    Column(u'od_IdObiektu', Integer)
)


t_vwOperacjePrzyjeciaST = Table(
    u'vwOperacjePrzyjeciaST', metadata,
    Column(u'sto_Id', Integer, nullable=False),
    Column(u'sto_IdSrodka', Integer, nullable=False),
    Column(u'sto_Data', DateTime, nullable=False),
    Column(u'sto_NrDok', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'sto_TypOper', Integer, nullable=False),
    Column(u'sto_Wartosc', MONEY, nullable=False),
    Column(u'sto_IdMPK', Integer),
    Column(u'sto_Uzytkownik', String(50, u'Polish_CI_AS')),
    Column(u'sto_CzyAmort', BIT),
    Column(u'sto_Metoda', Integer),
    Column(u'sto_Stopa', MONEY),
    Column(u'sto_WspolczynnikDegr', MONEY),
    Column(u'sto_RozpoczecieAM', Integer),
    Column(u'sto_CzyPDUW', BIT),
    Column(u'sto_UmorzPocz', MONEY),
    Column(u'sto_Przyczyna', String(255, u'Polish_CI_AS')),
    Column(u'sto_Sposob', String(255, u'Polish_CI_AS')),
    Column(u'sto_Komisja', String(255, u'Polish_CI_AS')),
    Column(u'sto_DokSprzedazy', String(30, u'Polish_CI_AS')),
    Column(u'sto_Nabywca', String(255, u'Polish_CI_AS')),
    Column(u'sto_CzyPodwyzszonaStopa', BIT),
    Column(u'sto_PodwyzszonaStopa', MONEY),
    Column(u'sto_WartoscBil', MONEY),
    Column(u'sto_CzyAmortBil', BIT),
    Column(u'sto_MetodaBil', Integer),
    Column(u'sto_StopaBil', MONEY),
    Column(u'sto_WspolczynnikDegrBil', MONEY),
    Column(u'sto_RozpoczecieAMBil', Integer),
    Column(u'sto_UmorzPoczBil', MONEY),
    Column(u'sto_CzyPodwyzszonaStopaBil', BIT),
    Column(u'sto_PodwyzszonaStopaBil', MONEY)
)


t_vwPdUprawnienia = Table(
    u'vwPdUprawnienia', metadata,
    Column(u'upr_Id', Integer, nullable=False),
    Column(u'upr_Nazwa', String(100, u'Polish_CI_AS')),
    Column(u'upr_Program', Integer),
    Column(u'upr_Modul', String(50, u'Polish_CI_AS'))
)


t_vwPersonelRachunkuBankOnline = Table(
    u'vwPersonelRachunkuBankOnline', metadata,
    Column(u'uz_Id', Integer, nullable=False),
    Column(u'uz_Identyfikator', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'uz_Nazwisko', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'uz_Imie', String(20, u'Polish_CI_AS')),
    Column(u'rbe_IdRachunku', Integer, nullable=False)
)


t_vwPodsumowanieKPIR = Table(
    u'vwPodsumowanieKPIR', metadata,
    Column(u'sum_kpr_Kolumna7', MONEY),
    Column(u'sum_kpr_Kolumna8', MONEY),
    Column(u'sum_kpr_Kolumna9', MONEY),
    Column(u'sum_kpr_Kolumna10', MONEY),
    Column(u'sum_kpr_Kolumna11', MONEY),
    Column(u'sum_kpr_Kolumna12', MONEY),
    Column(u'sum_kpr_Kolumna13', MONEY),
    Column(u'sum_kpr_Kolumna14', MONEY),
    Column(u'sum_kpr_Kolumna15', MONEY),
    Column(u'sum_kpr_Kolumna16', MONEY),
    Column(u'kpr_DataZdarzenia', Integer)
)


t_vwPojEksploatacjaRew = Table(
    u'vwPojEksploatacjaRew', metadata,
    Column(u'ppr_Id', Integer, nullable=False),
    Column(u'ppr_IdPojazdu', Integer, nullable=False),
    Column(u'ppr_Typ', Integer, nullable=False),
    Column(u'ppr_Zaksiegowany', Integer, nullable=False),
    Column(u'ppr_DataOtrzymania', DateTime),
    Column(u'ppr_Data', DateTime, nullable=False),
    Column(u'ppr_Cel', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_Trasa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_Km', MONEY),
    Column(u'ppr_CenaKm', MONEY),
    Column(u'ppr_WartoscP', MONEY),
    Column(u'ppr_WartoscR', MONEY),
    Column(u'ppr_NrDok', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_IdKh', Integer),
    Column(u'ppr_KhNazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_KhUlica', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_KhMiasto', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_KhKodPocztowy', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_KhNIP', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_IdKategorii', Integer),
    Column(u'ppr_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_CzyVAT', BIT, nullable=False),
    Column(u'ppr_DataZakDost', DateTime),
    Column(u'ppr_Kierowca', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'ppr_StanLicznika', MONEY),
    Column(u'ppr_Udostepnienie', BIT, nullable=False),
    Column(u'ppr_KhNazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ss_typ_obiektu', Integer),
    Column(u'ss_typ_obiektu_ex', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vwPolaWlasne_Dokument = Table(
    u'vwPolaWlasne_Dokument', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Finanse = Table(
    u'vwPolaWlasne_Finanse', metadata,
    Column(u'nzf_Id', Integer, nullable=False),
    Column(u'nzf_Data', DateTime, nullable=False),
    Column(u'nzf_TerminPlatnosci', DateTime),
    Column(u'nzf_Typ', Integer, nullable=False),
    Column(u'nzf_WartoscPierwotna', MONEY, nullable=False),
    Column(u'nzf_WartoscPierwotnaWaluta', MONEY, nullable=False),
    Column(u'nzf_Wartosc', MONEY, nullable=False),
    Column(u'nzf_WartoscWaluta', MONEY, nullable=False),
    Column(u'nzf_Splata', MONEY, nullable=False),
    Column(u'nzf_SplataWaluta', MONEY, nullable=False),
    Column(u'nzf_IdWaluty', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_Kurs', MONEY, nullable=False),
    Column(u'nzf_RodzajKursu', Integer, nullable=False),
    Column(u'nzf_Tytulem', String(144, u'Polish_CI_AS')),
    Column(u'nzf_TypOdsetek', Integer),
    Column(u'nzf_StopaOdsetek', MONEY),
    Column(u'nzf_DataOstatniejSplaty', DateTime),
    Column(u'nzf_IdDokumentAuto', Integer),
    Column(u'nzf_IdAdresu', Integer),
    Column(u'nzf_IdHistoriiAdresu', Integer),
    Column(u'nzf_IdObiektu', Integer),
    Column(u'nzf_TypObiektu', Integer, nullable=False),
    Column(u'nzf_Status', Integer, nullable=False),
    Column(u'nzf_PRB', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdKategorii', Integer),
    Column(u'nzf_IdWystawil', Integer, nullable=False),
    Column(u'nzf_Odebral', String(255, u'Polish_CI_AS')),
    Column(u'nzf_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'nzf_Przeniesiony', BIT, nullable=False),
    Column(u'nzf_Nota', BIT, nullable=False),
    Column(u'nzf_Podtyp', Integer),
    Column(u'nzf_Zrodlo', Integer),
    Column(u'nzf_Program', Integer),
    Column(u'nzf_IdRozrachunku', Integer),
    Column(u'nzf_Powiazanie', BIT, nullable=False),
    Column(u'nzf_Korekta', BIT, nullable=False),
    Column(u'nzf_Transakcja', String(144, u'Polish_CI_AS')),
    Column(u'nzf_IdKasy', Integer),
    Column(u'nzf_Numer', Integer),
    Column(u'nzf_NumerPelny', String(144, u'Polish_CI_AS')),
    Column(u'nzf_Import', Integer),
    Column(u'nzf_Opis', String(255, u'Polish_CI_AS')),
    Column(u'nzf_GenerujTytulem', BIT, nullable=False),
    Column(u'nzf_Zaliczka', BIT, nullable=False),
    Column(u'nzf_DlaNieznany', BIT, nullable=False),
    Column(u'nzf_IdRachunku', Integer),
    Column(u'nzf_IdRachunkuHist', Integer),
    Column(u'nzf_NumerWyciagu', String(50, u'Polish_CI_AS')),
    Column(u'nzf_DataUzgodnienia', DateTime),
    Column(u'nzf_WyslanaHB', BIT, nullable=False),
    Column(u'nzf_Wydrukowana', BIT, nullable=False),
    Column(u'nzf_ObslugaRachunku', BIT, nullable=False),
    Column(u'nzf_Gotowkowa', BIT, nullable=False),
    Column(u'nzf_IdRachObiekt', Integer),
    Column(u'nzf_IdRachObiektHist', Integer),
    Column(u'nzf_TypPrzelewu', String(1, u'Polish_CI_AS'), nullable=False),
    Column(u'nzf_ZUSPodIdentyfikator', String(14, u'Polish_CI_AS')),
    Column(u'nzf_ZUSPodTypIdentyfikatora', String(1, u'Polish_CI_AS')),
    Column(u'nzf_ZUSTypWplaty', String(1, u'Polish_CI_AS')),
    Column(u'nzf_ZUSDeklaracja', String(6, u'Polish_CI_AS')),
    Column(u'nzf_ZUSNrDeklaracji', String(2, u'Polish_CI_AS')),
    Column(u'nzf_PodSymbol', String(6, u'Polish_CI_AS')),
    Column(u'nzf_PodIdentyfikacjaZobowiazania', String(25, u'Polish_CI_AS')),
    Column(u'nzf_PodOkres', String(7, u'Polish_CI_AS')),
    Column(u'nzf_Transfer', BIT, nullable=False),
    Column(u'nzf_ZUSNrDecyzji', String(50, u'Polish_CI_AS')),
    Column(u'nzf_IdRozliczenia', Integer),
    Column(u'nzf_Flaga', Integer),
    Column(u'nzf_FlagaZmianaPersonelId', Integer),
    Column(u'nzf_FlagaZmianaCzas', DateTime),
    Column(u'nzf_DataKursu', DateTime),
    Column(u'nzf_IdBanku', Integer),
    Column(u'nzf_LiczbaJednostek', Integer, nullable=False),
    Column(u'nzf_RodzajSplaty', Integer),
    Column(u'nzf_IdRachunkuWirtualnego', Integer),
    Column(u'nzf_TypKorekty', Integer),
    Column(u'nzf_MetodaKasowa', BIT, nullable=False),
    Column(u'nzf_IdTransakcjiVat', Integer, nullable=False),
    Column(u'nzf_IzbaCelna', BIT, nullable=False),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Kontrahent = Table(
    u'vwPolaWlasne_Kontrahent', metadata,
    Column(u'kh_Id', Integer, nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Rodzaj', Integer, nullable=False),
    Column(u'kh_REGON', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_IdOdbiorca', Integer),
    Column(u'kh_Kontakt', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_PESEL', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_NrDowodu', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_DataWyd', DateTime),
    Column(u'kh_OrganWyd', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_CentrumAut', BIT, nullable=False),
    Column(u'kh_InstKredytowa', BIT, nullable=False),
    Column(u'kh_PrefKontakt', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_EMail', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_IdGrupa', Integer),
    Column(u'kh_IdFormaP', Integer),
    Column(u'kh_Cena', Integer),
    Column(u'kh_PlatOdroczone', BIT, nullable=False),
    Column(u'kh_OdbDet', BIT, nullable=False),
    Column(u'kh_IdRabat', Integer),
    Column(u'kh_MaxDokKred', Integer, nullable=False),
    Column(u'kh_MaxWartDokKred', MONEY, nullable=False),
    Column(u'kh_MaxWartKred', MONEY, nullable=False),
    Column(u'kh_MaxDniSp', Integer, nullable=False),
    Column(u'kh_NrAnalitykaD', String(5, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_NrAnalitykaO', String(5, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_ZgodaDO', BIT, nullable=False),
    Column(u'kh_IdOsobaDO', Integer),
    Column(u'kh_ZgodaMark', BIT, nullable=False),
    Column(u'kh_ZgodaEMail', BIT, nullable=False),
    Column(u'kh_CzyKomunikat', BIT, nullable=False),
    Column(u'kh_Komunikat', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_KomunikatZawsze', BIT, nullable=False),
    Column(u'kh_KomunikatOd', DateTime),
    Column(u'kh_Grafika', LargeBinary),
    Column(u'kh_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Jednorazowy', BIT, nullable=False),
    Column(u'kh_Pracownik', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Zablokowany', BIT, nullable=False),
    Column(u'kh_AdresKoresp', BIT, nullable=False),
    Column(u'kh_UpowaznienieVAT', BIT, nullable=False),
    Column(u'kh_DataVAT', DateTime),
    Column(u'kh_OsobaVAT', Integer),
    Column(u'kh_ProcKarta', MONEY, nullable=False),
    Column(u'kh_ProcKredyt', MONEY, nullable=False),
    Column(u'kh_ProcGotowka', MONEY, nullable=False),
    Column(u'kh_ProcPozostalo', MONEY, nullable=False),
    Column(u'kh_IdKategoriaKH', Integer),
    Column(u'kh_IdEwVATSp', Integer),
    Column(u'kh_EwVATSpMcOdliczenia', Integer, nullable=False),
    Column(u'kh_IdEwVATSpKateg', Integer),
    Column(u'kh_IdEwVATZak', Integer),
    Column(u'kh_EwVATZakRodzaj', Integer, nullable=False),
    Column(u'kh_EwVATZakSposobOdliczenia', Integer, nullable=False),
    Column(u'kh_EwVATZakMcOdliczenia', Integer, nullable=False),
    Column(u'kh_IdEwVATZakKateg', Integer),
    Column(u'kh_IdRachKategPrzychod', Integer),
    Column(u'kh_IdRachKategRozchod', Integer),
    Column(u'kh_TransakcjaVATSp', Integer, nullable=False),
    Column(u'kh_TransakcjaVATZak', Integer, nullable=False),
    Column(u'kh_PodVATZarejestrowanyWUE', BIT, nullable=False),
    Column(u'kh_DataWaznosciVAT', DateTime),
    Column(u'kh_OpisOperacji', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_PlatPrzelew', BIT, nullable=False),
    Column(u'kh_GaduGadu', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Skype', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Powitanie', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_AdresDostawy', BIT, nullable=False),
    Column(u'kh_IdRodzajKontaktu', Integer),
    Column(u'kh_IdPozyskany', Integer),
    Column(u'kh_IdBranza', Integer),
    Column(u'kh_IdRegion', Integer),
    Column(u'kh_LiczbaPrac', Integer),
    Column(u'kh_IdOpiekun', Integer),
    Column(u'kh_Imie', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Nazwisko', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_CRM', BIT, nullable=False),
    Column(u'kh_Potencjalny', BIT, nullable=False),
    Column(u'kh_IdDodal', Integer),
    Column(u'kh_IdZmienil', Integer),
    Column(u'kh_DataDodania', DateTime),
    Column(u'kh_DataZmiany', DateTime),
    Column(u'kh_ProcPrzelew', MONEY, nullable=False),
    Column(u'kh_DataOkolicznosciowa', DateTime),
    Column(u'kh_Osoba', BIT, nullable=False),
    Column(u'kh_IdRachunkuWirtualnego', Integer),
    Column(u'kh_KRS', String(255, u'Polish_CI_AS')),
    Column(u'kh_Domena', String(50, u'Polish_CI_AS')),
    Column(u'kh_Akcyza', Integer, nullable=False),
    Column(u'kh_EFakturyZgoda', BIT, nullable=False),
    Column(u'kh_EFakturyData', DateTime),
    Column(u'kh_MetodaKasowa', BIT, nullable=False),
    Column(u'kh_Lokalizacja', Unicode(256)),
    Column(u'kh_StatusAkcyza', Integer, nullable=False),
    Column(u'kh_CzynnyPodatnikVAT', BIT, nullable=False),
    Column(u'kh_KorygowanieKUP', BIT),
    Column(u'kh_KorygowanieVATSp', BIT),
    Column(u'kh_KorygowanieVATZak', BIT),
    Column(u'kh_WzwIdFS', Integer, nullable=False),
    Column(u'kh_WzwIdWZ', Integer, nullable=False),
    Column(u'kh_WzwIdWZVAT', Integer, nullable=False),
    Column(u'kh_WzwIdZK', Integer, nullable=False),
    Column(u'kh_WzwIdZKZAL', Integer, nullable=False),
    Column(u'kh_ZgodaNewsletterVendero', BIT, nullable=False),
    Column(u'kh_KlientSklepuInternetowego', BIT, nullable=False),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Pozycja = Table(
    u'vwPolaWlasne_Pozycja', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Opis', String(255, u'Polish_CI_AS')),
    Column(u'ob_DokHanLp', Integer),
    Column(u'ob_DokMagLp', Integer),
    Column(u'ob_Ilosc', MONEY, nullable=False),
    Column(u'ob_IloscMag', MONEY, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_CenaMag', MONEY, nullable=False),
    Column(u'ob_CenaWaluta', MONEY, nullable=False),
    Column(u'ob_CenaNetto', MONEY, nullable=False),
    Column(u'ob_CenaBrutto', MONEY, nullable=False),
    Column(u'ob_Rabat', MONEY, nullable=False),
    Column(u'ob_WartMag', MONEY, nullable=False),
    Column(u'ob_WartNetto', MONEY, nullable=False),
    Column(u'ob_WartVat', MONEY, nullable=False),
    Column(u'ob_WartBrutto', MONEY, nullable=False),
    Column(u'ob_VatId', Integer),
    Column(u'ob_VatProc', MONEY, nullable=False),
    Column(u'ob_Termin', DateTime),
    Column(u'ob_MagId', Integer),
    Column(u'ob_NumerSeryjny', String(40, u'Polish_CI_AS')),
    Column(u'ob_KategoriaId', Integer),
    Column(u'ob_Akcyza', BIT),
    Column(u'ob_AkcyzaKwota', MONEY),
    Column(u'ob_AkcyzaWartosc', MONEY),
    Column(u'ob_CenaNabycia', MONEY),
    Column(u'ob_WartNabycia', MONEY),
    Column(u'ob_PrzyczynaKorektyId', Integer),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_SzansaSprzedazy = Table(
    u'vwPolaWlasne_SzansaSprzedazy', metadata,
    Column(u'tr_Id', Integer, nullable=False),
    Column(u'tr_IdTransakcji', Integer, nullable=False),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tr_Klient', Integer, nullable=False),
    Column(u'tr_Stan', Integer, nullable=False),
    Column(u'tr_Status', Integer, nullable=False),
    Column(u'tr_StatusOpis', String(50, u'Polish_CI_AS')),
    Column(u'tr_Scenariusz', Integer, nullable=False),
    Column(u'tr_Etap', Integer, nullable=False),
    Column(u'tr_Pozyskana', Integer),
    Column(u'tr_DataOtwarcia', DateTime, nullable=False),
    Column(u'tr_PlanowanaDataZamkniecia', DateTime),
    Column(u'tr_DataUtworzenia', DateTime, nullable=False),
    Column(u'tr_Utworzyl', Integer, nullable=False),
    Column(u'tr_DataModyfikacji', DateTime),
    Column(u'tr_Zmodyfikowal', Integer),
    Column(u'tr_DataZamkniecia', DateTime),
    Column(u'tr_Zamknal', Integer),
    Column(u'tr_MaObsluzyc', Integer, nullable=False),
    Column(u'tr_MaObsluzycOdKlienta', Integer),
    Column(u'tr_Oferta', Integer),
    Column(u'tr_WartoscNetto', MONEY),
    Column(u'tr_WartoscBrutto', MONEY),
    Column(u'tr_WartoscVat', MONEY),
    Column(u'tr_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'tr_DokZamowienie', Integer),
    Column(u'tr_DokKoncowy', Integer),
    Column(u'tr_DokZamowienieId', Integer),
    Column(u'tr_DokKoncowyId', Integer),
    Column(u'tr_DokZamowienieSymbol', String(20, u'Polish_CI_AS')),
    Column(u'tr_DokKoncowySymbol', String(20, u'Polish_CI_AS')),
    Column(u'tr_Grupa', Integer),
    Column(u'tr_DlaczegoNieudana', Integer),
    Column(u'tr_WartoscRecznie', BIT),
    Column(u'tr_WalutaKurs', MONEY),
    Column(u'tr_WarunkiDostawy', String(500, u'Polish_CI_AS')),
    Column(u'tr_WarunkiPlatnosci', String(500, u'Polish_CI_AS')),
    Column(u'tr_UwagiDok', String(500, u'Polish_CI_AS')),
    Column(u'tr_DataRealizacji', String(500, u'Polish_CI_AS')),
    Column(u'tr_PokazujWKal', BIT),
    Column(u'tr_Kolor', String(11, u'Polish_CI_AS')),
    Column(u'tr_PlanowanaGodzinaZamkniecia', Integer),
    Column(u'tr_ZlecenieId', Integer),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Towar = Table(
    u'vwPolaWlasne_Towar', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_IdVatZak', Integer),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_KontrolaTW', BIT, nullable=False),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_JednStanMin', String(10, u'Polish_CI_AS')),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_Usuniety', BIT, nullable=False),
    Column(u'tw_Objetosc', MONEY),
    Column(u'tw_Masa', MONEY),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_JednMiaryZak', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMZakInna', BIT, nullable=False),
    Column(u'tw_KodTowaru', String(8, u'Polish_CI_AS')),
    Column(u'tw_IdKrajuPochodzenia', Integer),
    Column(u'tw_IdUJM', Integer),
    Column(u'tw_JednMiarySprz', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMSprzInna', BIT, nullable=False),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tw_IdProducenta', Integer),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'tw_IsFundPromocji', BIT),
    Column(u'tw_IdFundPromocji', Integer),
    Column(u'tw_DomyslnaKategoria', Integer),
    Column(u'tw_Wysokosc', MONEY),
    Column(u'tw_Szerokosc', MONEY),
    Column(u'tw_Glebokosc', MONEY),
    Column(u'tw_StanMaks', MONEY),
    Column(u'tw_Akcyza', BIT, nullable=False),
    Column(u'tw_AkcyzaZaznacz', BIT, nullable=False),
    Column(u'tw_AkcyzaKwota', MONEY),
    Column(u'tw_ObrotMarza', BIT, nullable=False),
    Column(u'tw_OdwrotneObciazenie', BIT, nullable=False),
    Column(u'tw_ProgKwotowyOO', Integer, nullable=False),
    Column(u'tw_DodawalnyDoZW', BIT, nullable=False),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Zadanie = Table(
    u'vwPolaWlasne_Zadanie', metadata,
    Column(u'zd_Id', Integer, nullable=False),
    Column(u'zd_IdZrodla', Integer),
    Column(u'zd_Rodzaj', Integer, nullable=False),
    Column(u'zd_Podtyp', Integer),
    Column(u'zd_Personel', Integer),
    Column(u'zd_CalyDzien', BIT, nullable=False),
    Column(u'zd_Poczatek', DateTime, nullable=False),
    Column(u'zd_Koniec', DateTime),
    Column(u'zd_PoczatekZCyklu', DateTime),
    Column(u'zd_Lokalizacja', String(50, u'Polish_CI_AS')),
    Column(u'zd_Temat', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Priorytet', Integer, nullable=False),
    Column(u'zd_Kolor', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Interwal', Integer, nullable=False),
    Column(u'zd_CoIle', Integer, nullable=False),
    Column(u'zd_Robocze', BIT, nullable=False),
    Column(u'zd_DniTygodnia', Integer, nullable=False),
    Column(u'zd_DzienMiesiaca', Integer, nullable=False),
    Column(u'zd_DefinicjaZlozona', BIT),
    Column(u'zd_DzienPorzadek', Integer, nullable=False),
    Column(u'zd_DzienRodzaj', Integer, nullable=False),
    Column(u'zd_Miesiac', Integer, nullable=False),
    Column(u'zd_RodzajPowtorzen', Integer, nullable=False),
    Column(u'zd_IlePowtorzen', Integer, nullable=False),
    Column(u'zd_KoniecPowtorzen', DateTime),
    Column(u'zd_Status', Integer),
    Column(u'zd_Rezultat', Integer),
    Column(u'zd_PokazujWKalendarzu', BIT),
    Column(u'zd_Kierunek', Integer),
    Column(u'zd_KiedyPrzypomnienie', Integer),
    Column(u'zd_OpisPowtorzen', String(255, u'Polish_CI_AS')),
    Column(u'zd_BezCzasu', BIT, nullable=False),
    Column(u'zd_NastepnePrzypomnienie', DateTime),
    Column(u'zd_Przypomniane', BIT, nullable=False),
    Column(u'zd_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Uczestnicy', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Prywatne', BIT, nullable=False),
    Column(u'zd_Transakcja', Integer),
    Column(u'zd_FormaDzialaniaWindykacyjnego', Integer, nullable=False),
    Column(u'zd_Klasa', Integer, nullable=False),
    Column(u'zd_NotaOdsetkowa', Integer),
    Column(u'zd_WezwanieDoZaplaty', Integer),
    Column(u'zd_Dluznik', String(255, u'Polish_CI_AS')),
    Column(u'zd_LokalizacjaMapy', Unicode(256)),
    Column(u'zd_WystapienieDoPrzypomnienia', DateTime),
    Column(u'zd_DokumentId', Integer),
    Column(u'zd_DokumentUwagi', String(500, u'Polish_CI_AS')),
    Column(u'zd_DokumentPrzepisuj', BIT, nullable=False),
    Column(u'zd_WystawionyDokId', Integer),
    Column(u'zd_ZlecenieId', Integer),
    Column(u'zd_LiczbaUczestnikowBezPersonelu', Integer, nullable=False),
    Column(u'zd_LiczbaUczestnikowWszystkich', Integer, nullable=False),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPolaWlasne_Zlecenie = Table(
    u'vwPolaWlasne_Zlecenie', metadata,
    Column(u'zlpz_Id', Integer, nullable=False),
    Column(u'zlpz_NumerZlecenia', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'zlpz_DataRejestracjiZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_TerminWykonania', DateTime),
    Column(u'zlpz_IdKontrahenta', Integer, nullable=False),
    Column(u'zlpz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zlpz_Opis', String(2000, u'Polish_CI_AS')),
    Column(u'zlpz_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'zlpz_StatusZlecenia', Integer, nullable=False),
    Column(u'zlpz_MPK', Integer),
    Column(u'pwd_Id', Integer),
    Column(u'pwd_TypObiektu', Integer),
    Column(u'pwd_IdObiektu', Integer),
    Column(u'pwd_IdPozycji', Integer),
    Column(u'pwd_Data01', DateTime),
    Column(u'pwd_Data02', DateTime),
    Column(u'pwd_Data03', DateTime),
    Column(u'pwd_Data04', DateTime),
    Column(u'pwd_Data05', DateTime),
    Column(u'pwd_Data06', DateTime),
    Column(u'pwd_Data07', DateTime),
    Column(u'pwd_Data08', DateTime),
    Column(u'pwd_Data09', DateTime),
    Column(u'pwd_Data10', DateTime),
    Column(u'pwd_Liczba01', Integer),
    Column(u'pwd_Liczba02', Integer),
    Column(u'pwd_Liczba03', Integer),
    Column(u'pwd_Liczba04', Integer),
    Column(u'pwd_Liczba05', Integer),
    Column(u'pwd_Liczba06', Integer),
    Column(u'pwd_Liczba07', Integer),
    Column(u'pwd_Liczba08', Integer),
    Column(u'pwd_Liczba09', Integer),
    Column(u'pwd_Liczba10', Integer),
    Column(u'pwd_Tekst01', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst02', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst03', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst04', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst05', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst06', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst07', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst08', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst09', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Tekst10', String(255, u'Polish_CI_AS')),
    Column(u'pwd_Kwota01', MONEY),
    Column(u'pwd_Kwota02', MONEY),
    Column(u'pwd_Kwota03', MONEY),
    Column(u'pwd_Kwota04', MONEY),
    Column(u'pwd_Kwota05', MONEY),
    Column(u'pwd_Kwota06', MONEY),
    Column(u'pwd_Kwota07', MONEY),
    Column(u'pwd_Kwota08', MONEY),
    Column(u'pwd_Kwota09', MONEY),
    Column(u'pwd_Kwota10', MONEY),
    Column(u'pwd_Fk01', Integer),
    Column(u'pwd_Fk02', Integer),
    Column(u'pwd_Fk03', Integer),
    Column(u'pwd_Fk04', Integer),
    Column(u'pwd_Fk05', Integer),
    Column(u'pwd_Fk06', Integer),
    Column(u'pwd_Fk07', Integer),
    Column(u'pwd_Fk08', Integer),
    Column(u'pwd_Fk09', Integer),
    Column(u'pwd_Fk10', Integer),
    Column(u'pwd_Flaga01', BIT),
    Column(u'pwd_Flaga02', BIT),
    Column(u'pwd_Flaga03', BIT),
    Column(u'pwd_Flaga04', BIT),
    Column(u'pwd_Flaga05', BIT),
    Column(u'pwd_Flaga06', BIT),
    Column(u'pwd_Flaga07', BIT),
    Column(u'pwd_Flaga08', BIT),
    Column(u'pwd_Flaga09', BIT),
    Column(u'pwd_Flaga10', BIT)
)


t_vwPoziomyCen = Table(
    u'vwPoziomyCen', metadata,
    Column(u'IDENT', Integer),
    Column(u'NAZWA', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwPoziomyCenWaluty = Table(
    u'vwPoziomyCenWaluty', metadata,
    Column(u'IDENT', Integer),
    Column(u'NAZWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'WALUTA', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'RODZAJ', Integer)
)


t_vwPracownicyPodmiotuSubiekt = Table(
    u'vwPracownicyPodmiotuSubiekt', metadata,
    Column(u'mag_Id', Integer, nullable=False),
    Column(u'uz_Id', Integer, nullable=False),
    Column(u'uz_Nazwisko', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'uz_Imie', String(20, u'Polish_CI_AS')),
    Column(u'uz_NazwiskoImie', String(51, u'Polish_CI_AS')),
    Column(u'uz_ImieNazwisko', String(51, u'Polish_CI_AS'))
)


t_vwProfilEwidParam = Table(
    u'vwProfilEwidParam', metadata,
    Column(u'pe_Id', Integer, nullable=False),
    Column(u'pe_IdTypu', Integer, nullable=False),
    Column(u'pe_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'pe_Domyslne', BIT, nullable=False),
    Column(u'pt_Id', Integer, nullable=False),
    Column(u'pt_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Indywidualizowalny', BIT, nullable=False),
    Column(u'pt_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Programy', Integer, nullable=False),
    Column(u'pt_ProgId', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_ProgIdCtx', Integer),
    Column(u'pt_AppObjId', Integer, nullable=False),
    Column(u'pt_Ukryte', BIT, nullable=False)
)


t_vwProfilTypyParam = Table(
    u'vwProfilTypyParam', metadata,
    Column(u'pt_Id', Integer, nullable=False),
    Column(u'pt_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Indywidualizowalny', BIT, nullable=False),
    Column(u'pt_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Programy', Integer, nullable=False),
    Column(u'pt_ProgId', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_ProgIdCtx', Integer),
    Column(u'pt_AppObjId', Integer, nullable=False),
    Column(u'pt_Ukryte', BIT, nullable=False)
)


t_vwProfileMagazynyERP = Table(
    u'vwProfileMagazynyERP', metadata,
    Column(u'mag_Id', Integer, nullable=False),
    Column(u'mag_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS'))
)


t_vwProfileModuly = Table(
    u'vwProfileModuly', metadata,
    Column(u'uim_Id', Integer, nullable=False),
    Column(u'uim_Tytul', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'uim_Progid', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'uim_TypKontekstu', Integer, nullable=False),
    Column(u'uim_Kontekst', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwProfileModulyNav = Table(
    u'vwProfileModulyNav', metadata,
    Column(u'uim_Id', Integer, nullable=False),
    Column(u'uim_Tytul', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'uim_Progid', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'uim_TypKontekstu', Integer, nullable=False),
    Column(u'uim_Kontekst', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwProfilePodgladyERP = Table(
    u'vwProfilePodgladyERP', metadata,
    Column(u'gtt_Id', Integer, nullable=False),
    Column(u'gtt_IsBuiltIn', BIT),
    Column(u'gto_Nazwa', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'gtt_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'gtt_Domyslna', BIT, nullable=False),
    Column(u'gtt_DefinicjaId', Integer),
    Column(u'gtt_ObiektId', Integer, nullable=False)
)


t_vwProfileProduktyOdwr = Table(
    u'vwProfileProduktyOdwr', metadata,
    Column(u'epr_Id', Integer, nullable=False),
    Column(u'epr_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'epr_LiczbaStanowisk', Integer),
    Column(u'epr_Wykorzystanie', Integer)
)


t_vwProfileSlowniki = Table(
    u'vwProfileSlowniki', metadata,
    Column(u'sl_id', Integer, nullable=False),
    Column(u'sl_nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'sl_opis', String(500, u'Polish_CI_AS'), nullable=False)
)


t_vwProfileUprawnienia = Table(
    u'vwProfileUprawnienia', metadata,
    Column(u'upr_Id', Integer, nullable=False),
    Column(u'upr_Modul', String(50, u'Polish_CI_AS')),
    Column(u'upr_Nazwa', String(100, u'Polish_CI_AS')),
    Column(u'nvp_ProfilowanieKlientowStylGT', BIT, nullable=False),
    Column(u'upr_Magazynowe', BIT)
)


t_vwProfileUprawnieniaMag = Table(
    u'vwProfileUprawnieniaMag', metadata,
    Column(u'upr_Id', Integer, nullable=False),
    Column(u'upr_Modul', String(50, u'Polish_CI_AS')),
    Column(u'upr_Nazwa', String(100, u'Polish_CI_AS')),
    Column(u'upr_Magazynowe', BIT)
)


t_vwProfileUzytkownicyERP = Table(
    u'vwProfileUzytkownicyERP', metadata,
    Column(u'uz_Id', Integer, nullable=False),
    Column(u'grupa', String(2, u'Polish_CI_AS')),
    Column(u'uz_Imie', String(20, u'Polish_CI_AS')),
    Column(u'uz_Nazwisko', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'uz_Identyfikator', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'uz_Status', BIT, nullable=False),
    Column(u'pracownik', String(51, u'Polish_CI_AS')),
    Column(u'uz_PracaZdalna', BIT, nullable=False),
    Column(u'ug_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'uz_Program', Integer, nullable=False),
    Column(u'uz_IdGrupy', Integer),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'ks_Nazwa', String(80, u'Polish_CI_AS')),
    Column(u'ui_Nazwa', String(50, u'Polish_CI_AS'))
)


t_vwProfileWydrukiERP = Table(
    u'vwProfileWydrukiERP', metadata,
    Column(u'wzw_Id', Integer, nullable=False),
    Column(u'wgr_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'wtp_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'wzw_Nazwa', String(80, u'Polish_CI_AS'), nullable=False)
)


t_vwProfileZestawieniaERP = Table(
    u'vwProfileZestawieniaERP', metadata,
    Column(u'zst_Id', Integer, nullable=False),
    Column(u'grupa', String(50, u'Polish_CI_AS')),
    Column(u'zst_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zst_Typ', Integer, nullable=False),
    Column(u'zst_ProgId', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vwRachBankPdm = Table(
    u'vwRachBankPdm', metadata,
    Column(u'rb_Id', Integer, nullable=False),
    Column(u'rb_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_Numer', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_Bank', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_Podstawowy', BIT, nullable=False),
    Column(u'rb_Ebank', BIT, nullable=False),
    Column(u'rb_ZFSS', BIT, nullable=False),
    Column(u'rb_US', BIT, nullable=False),
    Column(u'rb_Analityka', String(3, u'Polish_CI_AS'))
)


t_vwRachunkiHarmonogram = Table(
    u'vwRachunkiHarmonogram', metadata,
    Column(u'ID_HARM', Integer, nullable=False),
    Column(u'NAZWA', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'CZY_JEDNORAZOWY', Integer, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'PRACOWNIK', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'ZATRUDNIENIE', String(126, u'Polish_CI_AS')),
    Column(u'DATA_JEDNORAZOWA', DateTime),
    Column(u'OKRES_OD', DateTime, nullable=False),
    Column(u'OKRES_DO', DateTime),
    Column(u'CYKL_TYGODNIOWY', Integer, nullable=False),
    Column(u'RODZAJ_PRZYCHODU', Integer),
    Column(u'SZABLON_RACHUNKU', Integer, nullable=False),
    Column(u'DZIEN_MIESIACA', Integer),
    Column(u'DZIEN_TYGODNIA', Integer),
    Column(u'KWOTA_RACHUNKU', MONEY, nullable=False),
    Column(u'POTRACENIA', MONEY, nullable=False),
    Column(u'ZASILEK_RODZINNY', MONEY, nullable=False),
    Column(u'DODATEK_RODZINNY', MONEY, nullable=False),
    Column(u'PIELEGNACYJNY', MONEY, nullable=False),
    Column(u'REHABILITACYJNE', MONEY, nullable=False),
    Column(u'AKORDY', BIT, nullable=False),
    Column(u'PROWIZJE', BIT, nullable=False),
    Column(u'ECP', BIT, nullable=False),
    Column(u'ECP_MIESIAC', Integer),
    Column(u'DODATKI_NIEOPODATKOWANE', MONEY, nullable=False)
)


t_vwRaportyKasowe = Table(
    u'vwRaportyKasowe', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'ZAMKNIETY', Integer, nullable=False),
    Column(u'ZATWIERDZONY', BIT, nullable=False),
    Column(u'PROGRAM', Integer),
    Column(u'STATUS_KSIEGOWY', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'DATA_ZATWIERDZENIA', DateTime),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'OKRES_OD', DateTime, nullable=False),
    Column(u'OKRES_DO', DateTime, nullable=False),
    Column(u'SALDO_POCZATKOWE', MONEY),
    Column(u'SALDO_KONCOWE', MONEY),
    Column(u'PERSALDO', MONEY),
    Column(u'WALUTA', String(3, u'Polish_CI_AS')),
    Column(u'NAZWA_KASY', String(80, u'Polish_CI_AS')),
    Column(u'SYMBOL_KASY', String(3, u'Polish_CI_AS')),
    Column(u'ID_KASY', Integer),
    Column(u'ID_KATEGORII', Integer),
    Column(u'KATEGORIA', String(50, u'Polish_CI_AS')),
    Column(u'WYSTAWIL', String(51, u'Polish_CI_AS')),
    Column(u'ZATWIERDZIL', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'ss_data_zamkniecia', DateTime)
)


t_vwRejKsiegowySymbol = Table(
    u'vwRejKsiegowySymbol', metadata,
    Column(u'rks_Id', Integer, nullable=False),
    Column(u'rks_Symbol', String(3, u'Polish_CI_AS'), nullable=False)
)


t_vwRejestrUF = Table(
    u'vwRejestrUF', metadata,
    Column(u'utr_Id', Integer, nullable=False),
    Column(u'utr_IdKonfiguracja', Integer, nullable=False),
    Column(u'utr_Status', Integer, nullable=False),
    Column(u'utr_DataCzas', DateTime, nullable=False),
    Column(u'uko_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'operacja', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'utr_StatusOpis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'uzytkownik', String(51, u'Polish_CI_AS')),
    Column(u'utr_Komputer', String(50, u'Polish_CI_AS'), nullable=False)
)


t_vwRewSchematyImportu = Table(
    u'vwRewSchematyImportu', metadata,
    Column(u'si_Id', Integer, nullable=False),
    Column(u'si_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'si_ImportDoVAT', BIT, nullable=False),
    Column(u'si_ImportDoKPIR', BIT),
    Column(u'si_ImportDoEP', BIT),
    Column(u'NazwaTypu', String(559, u'Polish_CI_AS')),
    Column(u'si_IdKatDokZrodlowego', Integer),
    Column(u'si_DowolnaKategoria', BIT, nullable=False),
    Column(u'NazwaTransakcji', String(500, u'Polish_CI_AS')),
    Column(u'si_TypTransakcji', Integer, nullable=False),
    Column(u'si_IdRejestruKs', Integer),
    Column(u'si_IdKategoriiKH', Integer),
    Column(u'si_IdKategoriiVAT', Integer),
    Column(u'si_Zablokowany', BIT, nullable=False),
    Column(u'si_TypDokImport', Integer),
    Column(u'si_IdDataDekretacji', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataDokumentu', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataOperacji', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_DataWpisuVAT', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_DataSprzWyst', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_MiesiacOdliczenia', Integer),
    Column(u'si_TypDokZrodlowego', Integer, nullable=False),
    Column(u'NazwaGrupyDok', String(50, u'Polish_CI_AS')),
    Column(u'Wydatki', Integer),
    Column(u'Przeznaczenie', Integer),
    Column(u'si_DataZakDost', Integer),
    Column(u'si_RozliczenieVat', Integer, nullable=False)
)


t_vwRewSchematyImportuUEPiK = Table(
    u'vwRewSchematyImportuUEPiK', metadata,
    Column(u'si_Id', Integer, nullable=False),
    Column(u'si_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'si_ImportDoVAT', BIT, nullable=False),
    Column(u'si_ImportDoKPIR', BIT),
    Column(u'si_ImportDoEP', BIT),
    Column(u'NazwaTypu', String(559, u'Polish_CI_AS')),
    Column(u'si_IdKatDokZrodlowego', Integer),
    Column(u'si_DowolnaKategoria', BIT, nullable=False),
    Column(u'NazwaTransakcji', String(500, u'Polish_CI_AS')),
    Column(u'si_TypTransakcji', Integer, nullable=False),
    Column(u'si_IdRejestruKs', Integer),
    Column(u'si_IdKategoriiKH', Integer),
    Column(u'si_IdKategoriiVAT', Integer),
    Column(u'si_IdKategoriiZPiK', Integer),
    Column(u'si_Zablokowany', BIT, nullable=False),
    Column(u'si_TypDokImport', Integer),
    Column(u'si_IdDataDekretacji', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataDokumentu', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataOperacji', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_DataWpisuVAT', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_DataSprzWyst', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataWpisuZPiK', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_IdDataZdarzeniaGospZPiK', String(27, u'Polish_CI_AS'), nullable=False),
    Column(u'si_MiesiacOdliczenia', Integer),
    Column(u'si_TypDokZrodlowego', Integer, nullable=False),
    Column(u'NazwaGrupyDok', String(50, u'Polish_CI_AS')),
    Column(u'Wydatki', Integer),
    Column(u'Przeznaczenie', Integer),
    Column(u'si_DataZakDost', Integer),
    Column(u'si_RozliczenieVat', Integer, nullable=False)
)


t_vwRozliczeniaMiedzyokresoweKosztow = Table(
    u'vwRozliczeniaMiedzyokresoweKosztow', metadata,
    Column(u'Id', Integer),
    Column(u'StatusKsiegowy', Integer, nullable=False),
    Column(u'Typ', Integer, nullable=False),
    Column(u'NazwaKosztu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'NumerKosztu', String(17, u'Polish_CI_AS'), nullable=False),
    Column(u'NumerDok', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'Data', DateTime, nullable=False),
    Column(u'WartoscKosztu', MONEY, nullable=False),
    Column(u'WartoscRozliczenia', MONEY, nullable=False),
    Column(u'Kategoria', Integer),
    Column(u'IdKosztu', Integer, nullable=False),
    Column(u'StatusKosztu', Integer, nullable=False)
)


t_vwRozszerzeniaSferyczne = Table(
    u'vwRozszerzeniaSferyczne', metadata,
    Column(u'sf2ks_Id', Integer, nullable=False),
    Column(u'sf2ks_Nazwa', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'sf2ks_Wersja', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'sf2ks_ProducentNazwa', String(150, u'Polish_CI_AS'), nullable=False),
    Column(u'sf2ks_ProducentWWW', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'sf2ks_ProducentEmail', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'sf2ks_Pliki', Integer)
)


t_vwSchematyImportu = Table(
    u'vwSchematyImportu', metadata,
    Column(u'si_Id', Integer, nullable=False),
    Column(u'si_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'si_ImportDoVAT', BIT, nullable=False),
    Column(u'si_ImportDoKPIR', BIT),
    Column(u'si_ImportDoEP', BIT),
    Column(u'NazwaTypu', String(500, u'Polish_CI_AS')),
    Column(u'si_IdKatDokZrodlowego', Integer),
    Column(u'si_DowolnaKategoria', BIT, nullable=False),
    Column(u'NazwaTransakcji', String(500, u'Polish_CI_AS')),
    Column(u'si_TypTransakcji', Integer, nullable=False),
    Column(u'si_IdRejestruKs', Integer),
    Column(u'si_IdKategoriiKH', Integer),
    Column(u'si_IdKategoriiVAT', Integer),
    Column(u'si_Zablokowany', BIT, nullable=False),
    Column(u'si_TypDokImport', Integer),
    Column(u'si_Wydatki', Integer),
    Column(u'si_IdDataDekretacji', Integer),
    Column(u'si_IdDataDokumentu', Integer),
    Column(u'si_IdDataOperacji', Integer),
    Column(u'si_DataWpisuVAT', Integer),
    Column(u'si_DataSprzWyst', Integer),
    Column(u'si_Przeznaczenie', Integer),
    Column(u'si_MiesiacOdliczenia', Integer),
    Column(u'si_ImportDoDW', BIT),
    Column(u'si_DataZakDost', Integer),
    Column(u'si_RozliczenieVat', Integer, nullable=False)
)


t_vwSlPanstwo4IST = Table(
    u'vwSlPanstwo4IST', metadata,
    Column(u'pa_Id', Integer, nullable=False),
    Column(u'pa_KodPanstwaUE', String(2, u'Polish_CI_AS'), nullable=False)
)


t_vwSprzMOOLimit = Table(
    u'vwSprzMOOLimit', metadata,
    Column(u'dok_Id', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'ob_Id', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_Ilosc', MONEY),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_CenaMag', MONEY),
    Column(u'ob_CenaWalutaPLN', MONEY),
    Column(u'ob_CenaNetto', MONEY),
    Column(u'ob_CenaBrutto', MONEY),
    Column(u'ob_Rabat', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY)
)


t_vwStawkaVAT = Table(
    u'vwStawkaVAT', metadata,
    Column(u'vat_Id', Integer, nullable=False),
    Column(u'vat_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'vat_Stawka', MONEY, nullable=False),
    Column(u'vat_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'vat_CzySystemowa', BIT, nullable=False),
    Column(u'vat_CzyWidoczna', BIT, nullable=False),
    Column(u'vat_Pozycja', Integer, nullable=False),
    Column(u'vat_PozSprzedaz', Integer, nullable=False),
    Column(u'vat_PozZakup', Integer, nullable=False),
    Column(u'vat_PozRR', Integer, nullable=False),
    Column(u'vat_PozDomyslna', Integer, nullable=False),
    Column(u'vat_Rodzaj', Integer, nullable=False)
)


t_vwTowar = Table(
    u'vwTowar', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'st_TowId', Integer),
    Column(u'st_MagId', Integer),
    Column(u'st_Stan', MONEY),
    Column(u'Stan', MONEY),
    Column(u'Rezerwacja', MONEY),
    Column(u'Dostepne', MONEY),
    Column(u'st_StanMin', MONEY),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_IdVatZak', Integer),
    Column(u'vat_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'Dostawca', String(51, u'Polish_CI_AS')),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tc_CenaNetto1', MONEY),
    Column(u'tc_CenaNetto2', MONEY),
    Column(u'tc_CenaNetto3', MONEY),
    Column(u'tc_CenaNetto4', MONEY),
    Column(u'tc_CenaNetto5', MONEY),
    Column(u'tc_CenaNetto6', MONEY),
    Column(u'tc_CenaNetto7', MONEY),
    Column(u'tc_CenaNetto8', MONEY),
    Column(u'tc_CenaNetto9', MONEY),
    Column(u'tc_CenaNetto10', MONEY),
    Column(u'tc_CenaBrutto1', MONEY),
    Column(u'tc_CenaBrutto2', MONEY),
    Column(u'tc_CenaBrutto3', MONEY),
    Column(u'tc_CenaBrutto4', MONEY),
    Column(u'tc_CenaBrutto5', MONEY),
    Column(u'tc_CenaBrutto6', MONEY),
    Column(u'tc_CenaBrutto7', MONEY),
    Column(u'tc_CenaBrutto8', MONEY),
    Column(u'tc_CenaBrutto9', MONEY),
    Column(u'tc_CenaBrutto10', MONEY),
    Column(u'tc_IdTowar', Integer),
    Column(u'tc_Zysk1', MONEY),
    Column(u'tc_Zysk2', MONEY),
    Column(u'tc_Zysk3', MONEY),
    Column(u'tc_Zysk4', MONEY),
    Column(u'tc_Zysk5', MONEY),
    Column(u'tc_Zysk6', MONEY),
    Column(u'tc_Zysk7', MONEY),
    Column(u'tc_Zysk8', MONEY),
    Column(u'tc_Zysk9', MONEY),
    Column(u'tc_Zysk10', MONEY),
    Column(u'tc_Narzut1', MONEY),
    Column(u'tc_Narzut2', MONEY),
    Column(u'tc_Narzut3', MONEY),
    Column(u'tc_Narzut4', MONEY),
    Column(u'tc_Narzut5', MONEY),
    Column(u'tc_Narzut6', MONEY),
    Column(u'tc_Narzut7', MONEY),
    Column(u'tc_Narzut8', MONEY),
    Column(u'tc_Narzut9', MONEY),
    Column(u'tc_Narzut10', MONEY),
    Column(u'tc_Marza1', MONEY),
    Column(u'tc_Marza2', MONEY),
    Column(u'tc_Marza3', MONEY),
    Column(u'tc_Marza4', MONEY),
    Column(u'tc_Marza5', MONEY),
    Column(u'tc_Marza6', MONEY),
    Column(u'tc_Marza7', MONEY),
    Column(u'tc_Marza8', MONEY),
    Column(u'tc_Marza9', MONEY),
    Column(u'tc_Marza10', MONEY),
    Column(u'tc_IdWaluta1', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta2', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta3', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta4', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta5', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta6', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta7', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta8', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta9', String(3, u'Polish_CI_AS')),
    Column(u'tc_IdWaluta10', String(3, u'Polish_CI_AS')),
    Column(u'tc_CenaNetto0', MONEY),
    Column(u'tc_WalutaId', String(3, u'Polish_CI_AS')),
    Column(u'tc_WalutaKurs', MONEY),
    Column(u'tc_PodstawaKC', Integer),
    Column(u'tc_CenaNettoWaluta', MONEY),
    Column(u'tc_WalutaJedn', String(10, u'Polish_CI_AS')),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'tw_Wysokosc', MONEY),
    Column(u'tw_Szerokosc', MONEY),
    Column(u'tw_Glebokosc', MONEY),
    Column(u'tw_StanMaks', MONEY),
    Column(u'tw_ObrotMarza', BIT, nullable=False),
    Column(u'tw_OdwrotneObciazenie', BIT, nullable=False)
)


t_vwTowarLista = Table(
    u'vwTowarLista', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_IdVatZak', Integer),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_KontrolaTW', BIT, nullable=False),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_JednStanMin', String(10, u'Polish_CI_AS')),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_Usuniety', BIT, nullable=False),
    Column(u'tw_Objetosc', MONEY),
    Column(u'tw_Masa', MONEY),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_JednMiaryZak', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMZakInna', BIT, nullable=False),
    Column(u'tw_KodTowaru', String(8, u'Polish_CI_AS')),
    Column(u'tw_IdKrajuPochodzenia', Integer),
    Column(u'tw_IdUJM', Integer),
    Column(u'tw_JednMiarySprz', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMSprzInna', BIT, nullable=False),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tw_IdProducenta', Integer),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'tw_IsFundPromocji', BIT),
    Column(u'tw_IdFundPromocji', Integer),
    Column(u'tw_DomyslnaKategoria', Integer),
    Column(u'tw_Wysokosc', MONEY),
    Column(u'tw_Szerokosc', MONEY),
    Column(u'tw_Glebokosc', MONEY),
    Column(u'tw_StanMaks', MONEY),
    Column(u'tw_Akcyza', BIT, nullable=False),
    Column(u'tw_AkcyzaZaznacz', BIT, nullable=False),
    Column(u'tw_AkcyzaKwota', MONEY),
    Column(u'tw_ObrotMarza', BIT, nullable=False),
    Column(u'tw_OdwrotneObciazenie', BIT, nullable=False),
    Column(u'tw_ProgKwotowyOO', Integer, nullable=False),
    Column(u'tw_DodawalnyDoZW', BIT, nullable=False)
)


t_vwTowarListaWszystkie = Table(
    u'vwTowarListaWszystkie', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_IdVatZak', Integer),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_KontrolaTW', BIT, nullable=False),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_JednStanMin', String(10, u'Polish_CI_AS')),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_Usuniety', BIT, nullable=False),
    Column(u'tw_Objetosc', MONEY),
    Column(u'tw_Masa', MONEY),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_JednMiaryZak', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMZakInna', BIT, nullable=False),
    Column(u'tw_KodTowaru', String(8, u'Polish_CI_AS')),
    Column(u'tw_IdKrajuPochodzenia', Integer),
    Column(u'tw_IdUJM', Integer),
    Column(u'tw_JednMiarySprz', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMSprzInna', BIT, nullable=False),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tw_IdProducenta', Integer),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'tw_IsFundPromocji', BIT),
    Column(u'tw_IdFundPromocji', Integer),
    Column(u'tw_DomyslnaKategoria', Integer),
    Column(u'tw_Wysokosc', MONEY),
    Column(u'tw_Szerokosc', MONEY),
    Column(u'tw_Glebokosc', MONEY),
    Column(u'tw_StanMaks', MONEY),
    Column(u'tw_Akcyza', BIT, nullable=False),
    Column(u'tw_AkcyzaZaznacz', BIT, nullable=False),
    Column(u'tw_AkcyzaKwota', MONEY),
    Column(u'tw_ObrotMarza', BIT, nullable=False),
    Column(u'tw_OdwrotneObciazenie', BIT, nullable=False),
    Column(u'tw_ProgKwotowyOO', Integer, nullable=False),
    Column(u'tw_DodawalnyDoZW', BIT, nullable=False)
)


t_vwTwInfStanyMag = Table(
    u'vwTwInfStanyMag', metadata,
    Column(u'st_TowId', Integer, nullable=False),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'st_Stan', MONEY, nullable=False),
    Column(u'st_StanRez', MONEY, nullable=False),
    Column(u'ss_StanDost', MONEY),
    Column(u'st_MagId', Integer, nullable=False)
)


t_vwTwParametrNazwaCeny = Table(
    u'vwTwParametrNazwaCeny', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'NAZWA_CENY', String(56, u'Polish_CI_AS'), nullable=False)
)


t_vwUrzadSkarbowy = Table(
    u'vwUrzadSkarbowy', metadata,
    Column(u'sus_id', Integer, nullable=False),
    Column(u'sus_kod', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'sus_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'sus_OpisPelny', String(266, u'Polish_CI_AS'), nullable=False)
)


t_vwUrzadzenie = Table(
    u'vwUrzadzenie', metadata,
    Column(u'uur_Id', Integer, nullable=False),
    Column(u'uur_IdSterownik', Integer, nullable=False),
    Column(u'uur_Nazwa', String(101, u'Polish_CI_AS'), nullable=False),
    Column(u'uur_Operacje', Integer, nullable=False),
    Column(u'uur_TowarUF', Integer, nullable=False),
    Column(u'uur_Model', String(101, u'Polish_CI_AS'))
)


t_vwVATSpDoKorekty = Table(
    u'vwVATSpDoKorekty', metadata,
    Column(u'ev_Id', Integer, nullable=False),
    Column(u'ev_NrDokumentu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_Rodzaj', Integer, nullable=False),
    Column(u'ev_IdKh', Integer),
    Column(u'ev_NazwaKh', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_NazwaPelnaKh', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_UlicaKh', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_MiastoKh', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_KodPocztowyKh', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_NIPKh', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_DataWpisu', DateTime, nullable=False),
    Column(u'ev_DataSZ', DateTime, nullable=False),
    Column(u'ev_MiesiacOdliczVAT', DateTime),
    Column(u'ev_IdKategorii', Integer),
    Column(u'ev_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_Netto', MONEY, nullable=False),
    Column(u'ev_KwotaVAT', MONEY, nullable=False),
    Column(u'ev_Brutto', MONEY, nullable=False),
    Column(u'ev_IdTypuEwidVAT', Integer),
    Column(u'ev_FakturaRR', Integer, nullable=False),
    Column(u'ev_DataPlatnosciRR', DateTime),
    Column(u'ev_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_RodzajZakupu', Integer),
    Column(u'ev_SposobOdliczania', Integer),
    Column(u'ev_TypObiektu', Integer, nullable=False),
    Column(u'ev_IdObiektu', Integer),
    Column(u'ev_Ksiegowany', BIT, nullable=False),
    Column(u'ev_Importowany', BIT, nullable=False),
    Column(u'ev_KorektaSN', BIT, nullable=False),
    Column(u'ev_IdDokImport', Integer),
    Column(u'ev_TypDokImport', Integer),
    Column(u'ev_ImportPochodzenie', Integer, nullable=False),
    Column(u'ev_TransakcjaVAT', Integer, nullable=False),
    Column(u'ev_IdDokVAT', Integer),
    Column(u'ev_NieWliczanyDoPB', BIT, nullable=False),
    Column(u'ev_IdOkresuRoku', Integer, nullable=False),
    Column(u'ev_MalyPojazd', Integer, nullable=False),
    Column(u'ev_PlatnoscKredyt', BIT, nullable=False),
    Column(u'ev_IdTerminPlatnosci', Integer),
    Column(u'ev_TerminPlatnosci', DateTime),
    Column(u'ev_NrDokumentuSort', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_AutoPrzeliczaj', BIT, nullable=False),
    Column(u'ev_RozliczanaUsluga', BIT, nullable=False),
    Column(u'ev_DokVatMarza', BIT, nullable=False),
    Column(u'ev_DataZakDostawy', DateTime),
    Column(u'ev_WlaczKorygowanieVAT', BIT, nullable=False),
    Column(u'ev_KorektaVATTyp', Integer, nullable=False),
    Column(u'ev_KorektaVATDataPlatnosci', DateTime),
    Column(u'ev_KorektaVATTerminKorekty', DateTime),
    Column(u'ev_KorektaVATIdDokKorygowany', Integer),
    Column(u'ev_KorektaVATNrDokKorygowany', String(30, u'Polish_CI_AS')),
    Column(u'ev_KorektaVATPlatnoscCzesciowa', BIT, nullable=False),
    Column(u'ev_KorektaVATDataWystawieniaDokKorygowany', DateTime),
    Column(u'ev_KorektaVATTerminPlatnosciDokKorygowany', DateTime),
    Column(u'ev_VatMetodaKasowa', BIT, nullable=False),
    Column(u'ev_IdDokVATDod', Integer),
    Column(u'ev_IdRachunkuZaPrzejazd', Integer),
    Column(u'ev_CelZakupu', Integer, nullable=False),
    Column(u'tmp_Skorygowany', Integer, nullable=False),
    Column(u'tmp_PonownieZaliczony', Integer, nullable=False)
)


t_vwVATZakDoKorekty = Table(
    u'vwVATZakDoKorekty', metadata,
    Column(u'ev_Id', Integer, nullable=False),
    Column(u'ev_NrDokumentu', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_Rodzaj', Integer, nullable=False),
    Column(u'ev_IdKh', Integer),
    Column(u'ev_NazwaKh', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_NazwaPelnaKh', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_UlicaKh', String(60, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_MiastoKh', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_KodPocztowyKh', String(8, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_NIPKh', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_DataWpisu', DateTime, nullable=False),
    Column(u'ev_DataSZ', DateTime, nullable=False),
    Column(u'ev_MiesiacOdliczVAT', DateTime),
    Column(u'ev_IdKategorii', Integer),
    Column(u'ev_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_Netto', MONEY, nullable=False),
    Column(u'ev_KwotaVAT', MONEY, nullable=False),
    Column(u'ev_Brutto', MONEY, nullable=False),
    Column(u'ev_IdTypuEwidVAT', Integer),
    Column(u'ev_FakturaRR', Integer, nullable=False),
    Column(u'ev_DataPlatnosciRR', DateTime),
    Column(u'ev_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_RodzajZakupu', Integer),
    Column(u'ev_SposobOdliczania', Integer),
    Column(u'ev_TypObiektu', Integer, nullable=False),
    Column(u'ev_IdObiektu', Integer),
    Column(u'ev_Ksiegowany', BIT, nullable=False),
    Column(u'ev_Importowany', BIT, nullable=False),
    Column(u'ev_KorektaSN', BIT, nullable=False),
    Column(u'ev_IdDokImport', Integer),
    Column(u'ev_TypDokImport', Integer),
    Column(u'ev_ImportPochodzenie', Integer, nullable=False),
    Column(u'ev_TransakcjaVAT', Integer, nullable=False),
    Column(u'ev_IdDokVAT', Integer),
    Column(u'ev_NieWliczanyDoPB', BIT, nullable=False),
    Column(u'ev_IdOkresuRoku', Integer, nullable=False),
    Column(u'ev_MalyPojazd', Integer, nullable=False),
    Column(u'ev_PlatnoscKredyt', BIT, nullable=False),
    Column(u'ev_IdTerminPlatnosci', Integer),
    Column(u'ev_TerminPlatnosci', DateTime),
    Column(u'ev_NrDokumentuSort', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'ev_AutoPrzeliczaj', BIT, nullable=False),
    Column(u'ev_RozliczanaUsluga', BIT, nullable=False),
    Column(u'ev_DokVatMarza', BIT, nullable=False),
    Column(u'ev_DataZakDostawy', DateTime),
    Column(u'ev_WlaczKorygowanieVAT', BIT, nullable=False),
    Column(u'ev_KorektaVATTyp', Integer, nullable=False),
    Column(u'ev_KorektaVATDataPlatnosci', DateTime),
    Column(u'ev_KorektaVATTerminKorekty', DateTime),
    Column(u'ev_KorektaVATIdDokKorygowany', Integer),
    Column(u'ev_KorektaVATNrDokKorygowany', String(30, u'Polish_CI_AS')),
    Column(u'ev_KorektaVATPlatnoscCzesciowa', BIT, nullable=False),
    Column(u'ev_KorektaVATDataWystawieniaDokKorygowany', DateTime),
    Column(u'ev_KorektaVATTerminPlatnosciDokKorygowany', DateTime),
    Column(u'ev_VatMetodaKasowa', BIT, nullable=False),
    Column(u'ev_IdDokVATDod', Integer),
    Column(u'ev_IdRachunkuZaPrzejazd', Integer),
    Column(u'ev_CelZakupu', Integer, nullable=False),
    Column(u'tmp_Skorygowany', Integer, nullable=False),
    Column(u'tmp_PonownieZaliczony', Integer, nullable=False)
)


t_vwWiarygodnaSciezkaAudytu = Table(
    u'vwWiarygodnaSciezkaAudytu', metadata,
    Column(u'Id', Integer),
    Column(u'Nazwa', String(500, u'Polish_CI_AS')),
    Column(u'Numer', String(255, u'Polish_CI_AS')),
    Column(u'DataWyst', DateTime),
    Column(u'WartoscBrutto', MONEY),
    Column(u'WartoscNetto', MONEY),
    Column(u'Wystawil', String(51, u'Polish_CI_AS')),
    Column(u'Kontrahent', String(51, u'Polish_CI_AS')),
    Column(u'Kategoria', String(50, u'Polish_CI_AS')),
    Column(u'IdOryg', Integer)
)


t_vwWyciagiBankowe = Table(
    u'vwWyciagiBankowe', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'ZAMKNIETY', Integer, nullable=False),
    Column(u'ZATWIERDZONY', BIT, nullable=False),
    Column(u'PROGRAM', Integer),
    Column(u'STATUS_KSIEGOWY', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'DATA_ZATWIERDZENIA', DateTime),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'OKRES_OD', DateTime, nullable=False),
    Column(u'OKRES_DO', DateTime, nullable=False),
    Column(u'SALDO_POCZATKOWE', MONEY, nullable=False),
    Column(u'SALDO_KONCOWE', MONEY, nullable=False),
    Column(u'PERSALDO', MONEY),
    Column(u'WALUTA', String(3, u'Polish_CI_AS')),
    Column(u'NAZWA_RACHUNKU', String(50, u'Polish_CI_AS')),
    Column(u'NUMER_RACHUNKU', String(50, u'Polish_CI_AS')),
    Column(u'NAZWA_BANKU', String(255, u'Polish_CI_AS')),
    Column(u'ID_RACHUNKU', Integer),
    Column(u'ID_KATEGORII', Integer),
    Column(u'KATEGORIA', String(50, u'Polish_CI_AS')),
    Column(u'NR_WYCIAGU_HB', String(15, u'Polish_CI_AS')),
    Column(u'WYSTAWIL', String(51, u'Polish_CI_AS')),
    Column(u'ZATWIERDZIL', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'ss_data_zamkniecia', DateTime)
)


t_vwWyciagiBankoweLookup = Table(
    u'vwWyciagiBankoweLookup', metadata,
    Column(u'IDENT', Integer, nullable=False),
    Column(u'STATUS_KSIEGOWY', Integer, nullable=False),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'NUMER', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'OKRES_OD', DateTime, nullable=False),
    Column(u'OKRES_DO', DateTime, nullable=False),
    Column(u'SALDO_POCZATKOWE', MONEY, nullable=False),
    Column(u'SALDO_KONCOWE', MONEY, nullable=False),
    Column(u'PERSALDO', MONEY),
    Column(u'WALUTA', String(3, u'Polish_CI_AS')),
    Column(u'NAZWA_RACHUNKU', String(50, u'Polish_CI_AS')),
    Column(u'NUMER_RACHUNKU', String(50, u'Polish_CI_AS')),
    Column(u'NAZWA_BANKU', String(255, u'Polish_CI_AS')),
    Column(u'ID_RACHUNKU', Integer),
    Column(u'ID_KATEGORII', Integer),
    Column(u'KATEGORIA', String(50, u'Polish_CI_AS')),
    Column(u'NR_WYCIAGU_HB', String(15, u'Polish_CI_AS')),
    Column(u'ID_WYCIAGU_HB', Integer)
)


t_vwZbiorcza_Pozycja = Table(
    u'vwZbiorcza_Pozycja', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'dok_OdbiorcaAdreshId', Integer)
)


t_vwZbiorcza_PozycjaEx = Table(
    u'vwZbiorcza_PozycjaEx', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_IloscMagPdst', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscMag', MONEY)
)


t_vwZbiorcza_PozycjaHan = Table(
    u'vwZbiorcza_PozycjaHan', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'TypDlugi', Integer)
)


t_vwZbiorcza_Pozycja_Dod = Table(
    u'vwZbiorcza_Pozycja_Dod', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'dok_OdbiorcaAdreshId', Integer)
)


t_vwZdjecieTowaru = Table(
    u'vwZdjecieTowaru', metadata,
    Column(u'tw_Id', Integer),
    Column(u'zd_Zdjecie', LargeBinary)
)


t_vwZestDef_DokSprzedazy = Table(
    u'vwZestDef_DokSprzedazy', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer)
)


t_vwZestDef_Kontrahenci = Table(
    u'vwZestDef_Kontrahenci', metadata,
    Column(u'kh_Id', Integer, nullable=False),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Rodzaj', Integer),
    Column(u'kh_REGON', String(20, u'Polish_CI_AS')),
    Column(u'kh_IdOdbiorca', Integer),
    Column(u'kh_Kontakt', String(60, u'Polish_CI_AS')),
    Column(u'kh_PESEL', String(11, u'Polish_CI_AS')),
    Column(u'kh_NrDowodu', String(20, u'Polish_CI_AS')),
    Column(u'kh_DataWyd', DateTime),
    Column(u'kh_OrganWyd', String(255, u'Polish_CI_AS')),
    Column(u'kh_CentrumAut', BIT),
    Column(u'kh_InstKredytowa', BIT),
    Column(u'kh_PrefKontakt', String(50, u'Polish_CI_AS')),
    Column(u'kh_WWW', String(255, u'Polish_CI_AS')),
    Column(u'kh_EMail', String(255, u'Polish_CI_AS')),
    Column(u'kh_IdGrupa', Integer),
    Column(u'kh_IdFormaP', Integer),
    Column(u'kh_Cena', Integer),
    Column(u'kh_PlatOdroczone', BIT),
    Column(u'kh_OdbDet', BIT),
    Column(u'kh_IdRabat', Integer),
    Column(u'kh_MaxDokKred', Integer),
    Column(u'kh_MaxWartDokKred', MONEY),
    Column(u'kh_MaxWartKred', MONEY),
    Column(u'kh_MaxDniSp', Integer),
    Column(u'kh_NrAnalitykaD', String(5, u'Polish_CI_AS')),
    Column(u'kh_NrAnalitykaO', String(5, u'Polish_CI_AS')),
    Column(u'kh_Uwagi', String(255, u'Polish_CI_AS')),
    Column(u'kh_ZgodaDO', BIT),
    Column(u'kh_IdOsobaDO', Integer),
    Column(u'kh_ZgodaMark', BIT),
    Column(u'kh_ZgodaEMail', BIT),
    Column(u'kh_CzyKomunikat', BIT),
    Column(u'kh_Komunikat', String(255, u'Polish_CI_AS')),
    Column(u'kh_KomunikatZawsze', BIT),
    Column(u'kh_KomunikatOd', DateTime),
    Column(u'kh_Grafika', LargeBinary),
    Column(u'kh_Pole1', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole2', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole3', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole4', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole5', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole6', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole7', String(50, u'Polish_CI_AS')),
    Column(u'kh_Pole8', String(50, u'Polish_CI_AS')),
    Column(u'kh_Jednorazowy', BIT),
    Column(u'kh_Pracownik', String(60, u'Polish_CI_AS')),
    Column(u'kh_Zablokowany', BIT),
    Column(u'kh_AdresKoresp', BIT),
    Column(u'kh_UpowaznienieVAT', BIT),
    Column(u'kh_DataVAT', DateTime),
    Column(u'kh_OsobaVAT', Integer),
    Column(u'kh_ProcKarta', MONEY),
    Column(u'kh_ProcKredyt', MONEY),
    Column(u'kh_ProcGotowka', MONEY),
    Column(u'kh_ProcPozostalo', MONEY),
    Column(u'kh_IdKategoriaKH', Integer),
    Column(u'kh_IdEwVATSp', Integer),
    Column(u'kh_EwVATSpMcOdliczenia', Integer),
    Column(u'kh_IdEwVATSpKateg', Integer),
    Column(u'kh_IdEwVATZak', Integer),
    Column(u'kh_EwVATZakRodzaj', Integer),
    Column(u'kh_EwVATZakSposobOdliczenia', Integer),
    Column(u'kh_EwVATZakMcOdliczenia', Integer),
    Column(u'kh_IdEwVATZakKateg', Integer),
    Column(u'kh_IdRachKategPrzychod', Integer),
    Column(u'kh_IdRachKategRozchod', Integer),
    Column(u'kh_TransakcjaVATSp', Integer),
    Column(u'kh_TransakcjaVATZak', Integer),
    Column(u'kh_PodVATZarejestrowanyWUE', BIT),
    Column(u'kh_DataWaznosciVAT', DateTime),
    Column(u'kh_OpisOperacji', String(255, u'Polish_CI_AS')),
    Column(u'kh_PlatPrzelew', BIT),
    Column(u'adr_Id', Integer),
    Column(u'adr_IdObiektu', Integer),
    Column(u'adr_TypAdresu', Integer),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Telefon', String(35, u'Polish_CI_AS')),
    Column(u'adr_Faks', String(35, u'Polish_CI_AS')),
    Column(u'adr_Ulica', String(60, u'Polish_CI_AS')),
    Column(u'adr_NrDomu', String(10, u'Polish_CI_AS')),
    Column(u'adr_NrLokalu', String(10, u'Polish_CI_AS')),
    Column(u'adr_Adres', String(82, u'Polish_CI_AS')),
    Column(u'adr_Kod', String(8, u'Polish_CI_AS')),
    Column(u'adr_Miejscowosc', String(40, u'Polish_CI_AS')),
    Column(u'adr_IdWojewodztwo', Integer),
    Column(u'adr_IdPanstwo', Integer),
    Column(u'adr_NIP', String(20, u'Polish_CI_AS')),
    Column(u'adr_Poczta', String(40, u'Polish_CI_AS')),
    Column(u'adr_Gmina', String(40, u'Polish_CI_AS')),
    Column(u'adr_Powiat', String(40, u'Polish_CI_AS')),
    Column(u'adr_Skrytka', String(10, u'Polish_CI_AS')),
    Column(u'adr_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_IdGminy', Integer)
)


t_vwZestDef_PozycjeTowary = Table(
    u'vwZestDef_PozycjeTowary', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_IdVatZak', Integer),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_KontrolaTW', BIT, nullable=False),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_JednStanMin', String(10, u'Polish_CI_AS')),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_Usuniety', BIT, nullable=False),
    Column(u'tw_Objetosc', MONEY),
    Column(u'tw_Masa', MONEY),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_JednMiaryZak', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMZakInna', BIT, nullable=False),
    Column(u'tw_KodTowaru', String(8, u'Polish_CI_AS')),
    Column(u'tw_IdKrajuPochodzenia', Integer),
    Column(u'tw_IdUJM', Integer),
    Column(u'tw_JednMiarySprz', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JMSprzInna', BIT, nullable=False),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tw_IdProducenta', Integer),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Opis', String(255, u'Polish_CI_AS')),
    Column(u'ob_DokHanLp', Integer),
    Column(u'ob_DokMagLp', Integer),
    Column(u'ob_Ilosc', MONEY),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_CenaMag', MONEY, nullable=False),
    Column(u'ob_CenaWaluta', MONEY, nullable=False),
    Column(u'ob_CenaNetto', MONEY, nullable=False),
    Column(u'ob_CenaBrutto', MONEY, nullable=False),
    Column(u'ob_Rabat', MONEY, nullable=False),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_VatId', Integer),
    Column(u'ob_VatProc', MONEY, nullable=False),
    Column(u'ob_Termin', DateTime),
    Column(u'ob_MagId', Integer),
    Column(u'ob_NumerSeryjny', String(40, u'Polish_CI_AS'))
)


t_vwZlecenia = Table(
    u'vwZlecenia', metadata,
    Column(u'zlpz_Id', Integer, nullable=False),
    Column(u'zlpz_NumerZlecenia', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'zlpz_DataRejestracjiZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_TerminWykonania', DateTime),
    Column(u'zlpz_IdKontrahenta', Integer, nullable=False),
    Column(u'zlpz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zlpz_Opis', String(2000, u'Polish_CI_AS')),
    Column(u'zlpz_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'zlpz_StatusZlecenia', Integer, nullable=False),
    Column(u'zlpz_MPK', Integer)
)


t_vwZleceniaKomponent = Table(
    u'vwZleceniaKomponent', metadata,
    Column(u'zlpz_Id', Integer, nullable=False),
    Column(u'zlpz_NumerZlecenia', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'zlpz_DataRejestracjiZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataPlanowanegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoRozpoczeciaZlecenia', DateTime),
    Column(u'zlpz_DataRzeczywistegoZakonczeniaZlecenia', DateTime),
    Column(u'zlpz_TerminWykonania', DateTime),
    Column(u'zlpz_IdKontrahenta', Integer, nullable=False),
    Column(u'zlpz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zlpz_Opis', String(2000, u'Polish_CI_AS')),
    Column(u'zlpz_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'zlpz_StatusZlecenia', Integer, nullable=False),
    Column(u'zlpz_MPK', Integer)
)


t_vwZstPrzWgKhnt = Table(
    u'vwZstPrzWgKhnt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'TypDlugi', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_Znak', SmallInteger, nullable=False)
)


t_vwZstRaportFunduszePromocji = Table(
    u'vwZstRaportFunduszePromocji', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'adrh_NazwaPelna', String(255, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(63, u'Polish_CI_AS'), nullable=False),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'WartNaliczenia', MONEY),
    Column(u'dok_status', Integer, nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'TypDlugi', Integer)
)


t_vwZstSprzWgDok = Table(
    u'vwZstSprzWgDok', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_OdbiorcaAdreshId', Integer)
)


t_vwZstSprzWgKhnt = Table(
    u'vwZstSprzWgKhnt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'TypDlugi', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'ob_Id', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_Ilosc', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_Znak', Integer)
)


t_vwZstSubRejSprVatDokFw = Table(
    u'vwZstSubRejSprVatDokFw', metadata,
    Column(u'vt_Id', Integer, nullable=False),
    Column(u'vt_DokId', Integer, nullable=False),
    Column(u'vt_VatId', Integer, nullable=False),
    Column(u'vt_VatProc', MONEY, nullable=False),
    Column(u'vt_WartNetto', MONEY),
    Column(u'vt_WartVat', MONEY),
    Column(u'vt_WartBrutto', MONEY),
    Column(u'dok_Id', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_Podtyp', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DataWyst', DateTime),
    Column(u'dok_DataMag', DateTime),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Status', Integer),
    Column(u'dok_StatusFiskal', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_MetodaKasowa', Integer)
)


t_vwZstSubRejVatMarza = Table(
    u'vwZstSubRejVatMarza', metadata,
    Column(u'VatId', Integer),
    Column(u'DokId', Integer),
    Column(u'NettoMarza', MONEY),
    Column(u'VatMarza', MONEY),
    Column(u'BruttoMarza', MONEY)
)


t_vwZstSubRejZakVatDokFw = Table(
    u'vwZstSubRejZakVatDokFw', metadata,
    Column(u'vt_Id', Integer, nullable=False),
    Column(u'vt_DokId', Integer, nullable=False),
    Column(u'vt_VatId', Integer, nullable=False),
    Column(u'vt_VatProc', MONEY, nullable=False),
    Column(u'vt_WartNetto', MONEY, nullable=False),
    Column(u'vt_WartVat', MONEY, nullable=False),
    Column(u'vt_WartBrutto', MONEY, nullable=False),
    Column(u'dok_Id', Integer),
    Column(u'dok_Typ', Integer),
    Column(u'dok_Podtyp', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS')),
    Column(u'dok_DataWyst', DateTime),
    Column(u'dok_DataMag', DateTime),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS')),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS')),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY),
    Column(u'dok_RabatProc', MONEY),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartMagP', MONEY),
    Column(u'dok_WartMagR', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS')),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS')),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS')),
    Column(u'dok_Status', Integer),
    Column(u'dok_StatusKsieg', Integer),
    Column(u'dok_StatusFiskal', Integer),
    Column(u'dok_StatusBlok', BIT),
    Column(u'dok_JestTylkoDoOdczytu', BIT),
    Column(u'dok_JestRuchMag', BIT),
    Column(u'dok_JestZmianaDatyDokKas', BIT),
    Column(u'dok_JestHOP', BIT),
    Column(u'dok_JestVatNaEksport', BIT),
    Column(u'dok_JestVatAuto', BIT),
    Column(u'dok_Algorytm', Integer),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_MetodaKasowa', Integer),
    Column(u'DataObowiazkuPodatkowego', DateTime, nullable=False)
)


t_vwZstWydWgKhnt = Table(
    u'vwZstWydWgKhnt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'TypDlugi', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_Znak', SmallInteger, nullable=False)
)


t_vwZstZakWgKhnt = Table(
    u'vwZstZakWgKhnt', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'TypDlugi', Integer),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscMag', MONEY, nullable=False),
    Column(u'ob_WartMag', MONEY, nullable=False),
    Column(u'ob_WartNetto', MONEY, nullable=False),
    Column(u'ob_WartBrutto', MONEY, nullable=False),
    Column(u'ob_Znak', SmallInteger, nullable=False)
)


t_vwZwrot_Pozycja = Table(
    u'vwZwrot_Pozycja', metadata,
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_Znak', SmallInteger, nullable=False),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_IloscMag', MONEY),
    Column(u'ob_WartMag', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY)
)


t_vwZwrot_Vat = Table(
    u'vwZwrot_Vat', metadata,
    Column(u'vt_Id', Integer, nullable=False),
    Column(u'vt_DokId', Integer, nullable=False),
    Column(u'vt_VatId', Integer, nullable=False),
    Column(u'vt_WartNetto', MONEY),
    Column(u'vt_VatProc', MONEY, nullable=False),
    Column(u'vt_WartVat', MONEY),
    Column(u'vt_WartBrutto', MONEY)
)


t_vwZwrot__Dokument = Table(
    u'vwZwrot__Dokument', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KatId', Integer),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_WartUsNetto', MONEY),
    Column(u'dok_WartUsBrutto', MONEY),
    Column(u'dok_WartTwNetto', MONEY),
    Column(u'dok_WartTwBrutto', MONEY),
    Column(u'dok_WartOpZwr', MONEY),
    Column(u'dok_WartOpWyd', MONEY),
    Column(u'dok_WartMag', MONEY),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False)
)


t_vw_Alarm = Table(
    u'vw_Alarm', metadata,
    Column(u'zd_Id', Integer, nullable=False),
    Column(u'zd_Personel', Integer),
    Column(u'zd_BezCzasu', BIT, nullable=False),
    Column(u'zd_Rodzaj', Integer, nullable=False),
    Column(u'zd_Poczatek', DateTime),
    Column(u'zd_Temat', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Priorytet', Integer, nullable=False),
    Column(u'ptz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zd_Przypomniane', BIT, nullable=False),
    Column(u'zd_NastepnePrzypomnienie', DateTime),
    Column(u'zdvw_Status', Integer),
    Column(u'zd_Uczestnicy', String(255, u'Polish_CI_AS')),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'flg_Numer', Integer),
    Column(u'flw_Komentarz', String(1000, u'Polish_CI_AS')),
    Column(u'flw_IdFlagi', Integer),
    Column(u'flg_Text', String(50, u'Polish_CI_AS')),
    Column(u'flg_Id', Integer),
    Column(u'zdk_IdKlienta', Integer),
    Column(u'zdk_NastepnePrzypomnienie', DateTime),
    Column(u'zdk_Przypomniane', BIT),
    Column(u'zd_Cykliczne', Integer, nullable=False),
    Column(u'JestDokumentWzorcowy', Integer, nullable=False)
)


t_vw_AlarmyUzytkownika = Table(
    u'vw_AlarmyUzytkownika', metadata,
    Column(u'zd_Id', Integer, nullable=False),
    Column(u'zd_Personel', Integer),
    Column(u'zdk_IdKlienta', Integer),
    Column(u'zd_NastepnePrzypomnienie', DateTime),
    Column(u'zdk_NastepnePrzypomnienie', DateTime),
    Column(u'zd_Przypomniane', BIT, nullable=False),
    Column(u'zdk_Przypomniane', BIT)
)


t_vw_Email = Table(
    u'vw_Email', metadata,
    Column(u'em_Id', Integer, nullable=False),
    Column(u'em_Subject', Unicode(1000), nullable=False),
    Column(u'em_FromAddress', Unicode(255), nullable=False),
    Column(u'em_FromName', Unicode(255), nullable=False),
    Column(u'em_To', Unicode(1000), nullable=False),
    Column(u'em_Received', DateTime),
    Column(u'em_Sent', DateTime),
    Column(u'em_Account', Unicode(50), nullable=False),
    Column(u'em_AttachmentCount', Integer),
    Column(u'em_Attachements', Integer, nullable=False),
    Column(u'em_Status', Integer, nullable=False),
    Column(u'em_From', Unicode(255), nullable=False),
    Column(u'em_TransId', Integer),
    Column(u'em_PackageId', Integer),
    Column(u'em_Read', BIT, nullable=False),
    Column(u'em_AuctionId', Integer),
    Column(u'em_CustomerId', Integer),
    Column(u'em_Handled', BIT, nullable=False),
    Column(u'em_AccountId', Integer),
    Column(u'em_GroupId', Integer),
    Column(u'gwa_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'em_Flag', Integer, nullable=False),
    Column(u'em_Private', Integer, nullable=False),
    Column(u'em_PrivateFor', Integer),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'kh_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'em_SourceSize', Integer),
    Column(u'em_Transakcja', Integer),
    Column(u'em_Dzialanie', Integer),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zd_Temat', String(100, u'Polish_CI_AS')),
    Column(u'tr_Symbol', String(30, u'Polish_CI_AS')),
    Column(u'em_DeleteStat', Integer, nullable=False),
    Column(u'em_DeletedFrom', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'em_IsSpam', BIT, nullable=False),
    Column(u'kh_Id', Integer),
    Column(u'kh_Typ', Integer),
    Column(u'em_ReplyTo', Unicode(255)),
    Column(u'em_CcTo', Unicode(1000), nullable=False),
    Column(u'em_BccTo', Unicode(1000), nullable=False),
    Column(u'em_DispositionNotification', Integer),
    Column(u'em_Priority', Integer, nullable=False)
)


t_vw_EmailTempl = Table(
    u'vw_EmailTempl', metadata,
    Column(u'et_Id', Integer, nullable=False),
    Column(u'et_Name', Unicode(50), nullable=False),
    Column(u'et_HTML', BIT, nullable=False),
    Column(u'et_Subject', Unicode(1000), nullable=False)
)


t_vw_HistoriaTransakcji = Table(
    u'vw_HistoriaTransakcji', metadata,
    Column(u'SYNTHETICID', Integer),
    Column(u'IdNadrz', Integer),
    Column(u'IdPodrz', Integer, nullable=False),
    Column(u'TypOb', Integer, nullable=False),
    Column(u'Data', DateTime, nullable=False),
    Column(u'OpisOb', String(111, u'Polish_CI_AS'), nullable=False),
    Column(u'Operator', String(51, u'Polish_CI_AS')),
    Column(u'Opis', Unicode(1000)),
    Column(u'Usuniety', Integer, nullable=False)
)


t_vw_HistoriaZadania = Table(
    u'vw_HistoriaZadania', metadata,
    Column(u'SYNTHETICID', Integer),
    Column(u'IdNadrz', Integer),
    Column(u'IdPodrz', Integer, nullable=False),
    Column(u'TypOb', Integer, nullable=False),
    Column(u'Data', DateTime, nullable=False),
    Column(u'OpisOb', String(18, u'Polish_CI_AS'), nullable=False),
    Column(u'Operator', String(51, u'Polish_CI_AS')),
    Column(u'Opis', Unicode(1000), nullable=False),
    Column(u'Usuniety', Integer, nullable=False)
)


t_vw_InsSysprocesses = Table(
    u'vw_InsSysprocesses', metadata,
    Column(u'spid', SmallInteger, nullable=False),
    Column(u'kpid', SmallInteger, nullable=False),
    Column(u'blocked', SmallInteger, nullable=False),
    Column(u'waittype', BINARY(2), nullable=False),
    Column(u'waittime', BigInteger, nullable=False),
    Column(u'lastwaittype', Unicode(32), nullable=False),
    Column(u'waitresource', Unicode(256), nullable=False),
    Column(u'dbid', SmallInteger, nullable=False),
    Column(u'uid', SmallInteger),
    Column(u'cpu', Integer, nullable=False),
    Column(u'physical_io', BigInteger, nullable=False),
    Column(u'memusage', Integer, nullable=False),
    Column(u'login_time', DateTime, nullable=False),
    Column(u'last_batch', DateTime, nullable=False),
    Column(u'ecid', SmallInteger, nullable=False),
    Column(u'open_tran', SmallInteger, nullable=False),
    Column(u'status', Unicode(30), nullable=False),
    Column(u'sid', BINARY(86), nullable=False),
    Column(u'hostname', Unicode(128), nullable=False),
    Column(u'program_name', Unicode(128), nullable=False),
    Column(u'hostprocess', Unicode(10), nullable=False),
    Column(u'cmd', Unicode(16), nullable=False),
    Column(u'nt_domain', Unicode(128)),
    Column(u'nt_username', Unicode(128)),
    Column(u'net_address', Unicode(12), nullable=False),
    Column(u'net_library', Unicode(12), nullable=False),
    Column(u'loginame', Unicode(128), nullable=False),
    Column(u'context_info', BINARY(128), nullable=False),
    Column(u'sql_handle', BINARY(20), nullable=False),
    Column(u'stmt_start', Integer, nullable=False),
    Column(u'stmt_end', Integer, nullable=False)
)


t_vw_KlientCecha = Table(
    u'vw_KlientCecha', metadata,
    Column(u'adr_Id', Integer, nullable=False),
    Column(u'IdCechy', Integer)
)


t_vw_KlientHistoria = Table(
    u'vw_KlientHistoria', metadata,
    Column(u'SYNTHETICID', Integer),
    Column(u'DATA', DateTime, nullable=False),
    Column(u'OBIEKT', String(111, u'Polish_CI_AS'), nullable=False),
    Column(u'ZDARZENIE', Unicode(1000)),
    Column(u'LOT', Integer, nullable=False),
    Column(u'ID', Integer, nullable=False),
    Column(u'IDKLIENTA', Integer),
    Column(u'IDFIRMY', Integer),
    Column(u'IDPERSONELU', Integer)
)


t_vw_PowDokLookupGrid = Table(
    u'vw_PowDokLookupGrid', metadata,
    Column(u'statusreal', Integer, nullable=False),
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'OpiekunOdbiorca', Integer),
    Column(u'OpiekunPlatnik', Integer),
    Column(u'adrh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'SyntPodtyp', Integer, nullable=False)
)


t_vw_STLookup = Table(
    u'vw_STLookup', metadata,
    Column(u'st_Id', Integer, nullable=False),
    Column(u'st_Status', Integer, nullable=False),
    Column(u'st_Typ', Integer, nullable=False),
    Column(u'st_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'st_NrInw', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'sto_CzyAmort', BIT),
    Column(u'sto_CzyAmortBil', BIT)
)


t_vw_SesjaBlokada = Table(
    u'vw_SesjaBlokada', metadata,
    Column(u'ss_typ_obiektu', Integer),
    Column(u'ss_typ_obiektu_ex', Integer),
    Column(u'ss_data_zamkniecia', DateTime),
    Column(u'ss_data_blokady_rach', DateTime)
)


t_vw_TowaryCennikiSelekcja = Table(
    u'vw_TowaryCennikiSelekcja', metadata,
    Column(u'tw_Id', Integer, nullable=False),
    Column(u'tw_Zablokowany', BIT, nullable=False),
    Column(u'tw_Rodzaj', Integer, nullable=False),
    Column(u'tw_Symbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_ObrotMarza', BIT, nullable=False),
    Column(u'tw_AkcyzaKwota', MONEY),
    Column(u'tw_AkcyzaZaznacz', BIT, nullable=False),
    Column(u'tw_Akcyza', BIT, nullable=False),
    Column(u'tw_StanMaks', MONEY),
    Column(u'tw_Glebokosc', MONEY),
    Column(u'tw_Szerokosc', MONEY),
    Column(u'tw_Wysokosc', MONEY),
    Column(u'tw_DomyslnaKategoria', Integer),
    Column(u'tw_IdFundPromocji', Integer),
    Column(u'tw_IsFundPromocji', BIT),
    Column(u'tw_SprzedazMobilna', BIT, nullable=False),
    Column(u'tw_IdProducenta', Integer),
    Column(u'tw_SerwisAukcyjny', BIT, nullable=False),
    Column(u'tw_JMSprzInna', BIT, nullable=False),
    Column(u'tw_JednMiarySprz', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdUJM', Integer),
    Column(u'tw_IdKrajuPochodzenia', Integer),
    Column(u'tw_KodTowaru', String(8, u'Polish_CI_AS')),
    Column(u'tw_JMZakInna', BIT, nullable=False),
    Column(u'tw_JednMiaryZak', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Charakter', Text(collation=u'Polish_CI_AS')),
    Column(u'tw_Masa', MONEY),
    Column(u'tw_Objetosc', MONEY),
    Column(u'tw_Usuniety', BIT, nullable=False),
    Column(u'tw_Logo', BINARY(50)),
    Column(u'tw_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole8', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole7', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole6', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole5', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole4', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole3', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole2', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_Pole1', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_SklepInternet', BIT, nullable=False),
    Column(u'tw_WWW', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdGrupa', Integer),
    Column(u'tw_DniWaznosc', Integer),
    Column(u'tw_JednStanMin', String(10, u'Polish_CI_AS')),
    Column(u'tw_StanMin', MONEY),
    Column(u'tw_KontrolaTW', BIT, nullable=False),
    Column(u'tw_WagaEtykiet', BIT),
    Column(u'tw_CenaOtwarta', BIT, nullable=False),
    Column(u'tw_IdTypKodu', Integer),
    Column(u'tw_PodstKodKresk', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PLU', Integer),
    Column(u'tw_UrzNazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_CzasDostawy', Integer),
    Column(u'tw_DostSymbol', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_IdPodstDostawca', Integer),
    Column(u'tw_PrzezWartosc', BIT, nullable=False),
    Column(u'tw_IdOpakowanie', Integer),
    Column(u'tw_IdRabat', Integer),
    Column(u'tw_SWW', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_PKWiU', String(20, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JednMiary', String(10, u'Polish_CI_AS'), nullable=False),
    Column(u'tw_JakPrzySp', BIT, nullable=False),
    Column(u'tw_IdVatZak', Integer),
    Column(u'tw_IdVatSp', Integer),
    Column(u'tw_Opis', String(255, u'Polish_CI_AS'), nullable=False)
)


t_vw_TowaryTransakcji = Table(
    u'vw_TowaryTransakcji', metadata,
    Column(u'tw_Id', Integer),
    Column(u'ob_Status', Integer),
    Column(u'ob_DokHanLp', Integer),
    Column(u'ob_DokMagLp', Integer),
    Column(u'ob_TowRodzaj', Integer, nullable=False),
    Column(u'ob_TowSymbol', String(20, u'Polish_CI_AS')),
    Column(u'ob_TowSymbolDost', String(20, u'Polish_CI_AS')),
    Column(u'ob_TowNazwa', String(255, u'Polish_CI_AS')),
    Column(u'ob_TowPkwiu', String(20, u'Polish_CI_AS')),
    Column(u'ob_TowOpis', String(255, u'Polish_CI_AS')),
    Column(u'ob_Opis', String(255, u'Polish_CI_AS')),
    Column(u'ob_Termin', DateTime),
    Column(u'ob_Ilosc', MONEY, nullable=False),
    Column(u'ob_Jm', String(10, u'Polish_CI_AS')),
    Column(u'ob_IloscJm', String(41, u'Polish_CI_AS')),
    Column(u'ob_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'ob_CenaNetto', MONEY),
    Column(u'ob_CenaBrutto', MONEY),
    Column(u'ob_Rabat', MONEY, nullable=False),
    Column(u'ob_CenaNettoPoRabacie', MONEY),
    Column(u'ob_CenaBruttoPoRabacie', MONEY),
    Column(u'ob_VatProc', MONEY),
    Column(u'ob_WartNettoPrzedRabatem', MONEY),
    Column(u'ob_WartVatPrzedRabatem', MONEY),
    Column(u'ob_WartBruttoPrzedRabatem', MONEY),
    Column(u'ob_WartNetto', MONEY),
    Column(u'ob_WartVat', MONEY),
    Column(u'ob_WartBrutto', MONEY),
    Column(u'ob_Id', Integer, nullable=False),
    Column(u'ob_DoId', Integer),
    Column(u'ob_DokHanId', Integer),
    Column(u'ob_DokMagId', Integer),
    Column(u'ob_TowId', Integer),
    Column(u'ob_IloscMag', MONEY, nullable=False),
    Column(u'ob_CenaMag', MONEY, nullable=False),
    Column(u'ob_CenaWaluta', MONEY, nullable=False),
    Column(u'ob_WartMag', MONEY, nullable=False),
    Column(u'ob_GrupaId', Integer),
    Column(u'ob_znak', SmallInteger, nullable=False),
    Column(u'ob_Stan', MONEY),
    Column(u'ob_MagId', Integer),
    Column(u'ob_NumerSeryjny', String(40, u'Polish_CI_AS')),
    Column(u'ob_TowObjetosc', MONEY),
    Column(u'ob_TowMasa', MONEY),
    Column(u'ob_Objetosc', MONEY),
    Column(u'ob_Masa', MONEY),
    Column(u'ob_Kategoria', String(50, u'Polish_CI_AS')),
    Column(u'ob_VatId', Integer),
    Column(u'ob_KategoriaId', Integer),
    Column(u'ob_IdOpakowanie', Integer),
    Column(u'ob_IdDoZdj', Integer),
    Column(u'ob_TowFlgNumer', Integer)
)


t_vw_Transakcja = Table(
    u'vw_Transakcja', metadata,
    Column(u'tr_Id', Integer, nullable=False),
    Column(u'tr_Oferta', Integer),
    Column(u'tr_Stan', Integer, nullable=False),
    Column(u'tr_Status', Integer, nullable=False),
    Column(u'tr_StatusOpis', String(50, u'Polish_CI_AS')),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'trc_Id', Integer),
    Column(u'trc_Nazwa', Unicode(50)),
    Column(u'trd_Id', Integer),
    Column(u'trd_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'trd_ProcentSukcesu', Integer),
    Column(u'tr_DataOtwarcia', DateTime, nullable=False),
    Column(u'tr_PlanowanaDataZamkniecia', DateTime),
    Column(u'tr_DataZamkniecia', DateTime),
    Column(u'tre_Nazwa', Unicode(50)),
    Column(u'tr_DataModyfikacji', DateTime),
    Column(u'uz_Zmodyfikowal', String(51, u'Polish_CI_AS')),
    Column(u'uz_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'tr_MaObsluzyc', Integer, nullable=False),
    Column(u'uz_NazwaOdKl', String(51, u'Polish_CI_AS')),
    Column(u'tr_MaObsluzycOdKlienta', Integer),
    Column(u'uz_MailOdKl', String(100, u'Polish_CI_AS')),
    Column(u'uz_GaduOdKl', String(20, u'Polish_CI_AS')),
    Column(u'uz_SkypeOdKl', String(255, u'Polish_CI_AS')),
    Column(u'uz_TelefonOdKl', String(35, u'Polish_CI_AS')),
    Column(u'tr_Klient', Integer, nullable=False),
    Column(u'tr_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'tr_WartoscNetto', MONEY),
    Column(u'tr_WartoscVat', MONEY),
    Column(u'tr_WartoscBrutto', MONEY),
    Column(u'trg_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'trg_Id', Integer),
    Column(u'tr_WartoscNettoW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscVatW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscBruttoW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscNettoP', MONEY),
    Column(u'tr_WartoscVatP', MONEY),
    Column(u'tr_WartoscBruttoP', MONEY),
    Column(u'tr_Zamowienie', String(32, u'Polish_CI_AS'), nullable=False),
    Column(u'tr_Koncowy', String(22, u'Polish_CI_AS'), nullable=False),
    Column(u'tr_DokZamowienieSymbol', String(20, u'Polish_CI_AS')),
    Column(u'tr_DokKoncowySymbol', String(20, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'tr_DokZamowienieId', Integer),
    Column(u'tr_DokKoncowyId', Integer),
    Column(u'tr_DokZamowienie', Integer),
    Column(u'tr_DokKoncowy', Integer),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'tr_DniSpoznienia', Integer),
    Column(u'tr_WartoscRecznie', BIT),
    Column(u'dok_Nr', Integer),
    Column(u'trn_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'tr_Etap', Integer, nullable=False),
    Column(u'tr_Przygotowal', String(255, u'Polish_CI_AS')),
    Column(u'tr_UwagiDok', String(500, u'Polish_CI_AS')),
    Column(u'tr_WarunkiDostawy', String(500, u'Polish_CI_AS')),
    Column(u'tr_WarunkiPlatnosci', String(500, u'Polish_CI_AS')),
    Column(u'tr_DataRealizacji', String(500, u'Polish_CI_AS')),
    Column(u'tr_PozostaloDni', Integer),
    Column(u'tr_PokazujWKal', BIT),
    Column(u'tr_Kolor', String(11, u'Polish_CI_AS')),
    Column(u'tr_DataUtworzenia', DateTime, nullable=False),
    Column(u'GodzinaZamknieciaStr', String(5, u'Polish_CI_AS')),
    Column(u'tr_PlanowanaGodzinaZamkniecia', Integer),
    Column(u'adr_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'))
)


t_vw_TransakcjaGrid = Table(
    u'vw_TransakcjaGrid', metadata,
    Column(u'tr_Id', Integer, nullable=False),
    Column(u'tr_Oferta', Integer),
    Column(u'tr_Stan', Integer, nullable=False),
    Column(u'tr_Status', Integer, nullable=False),
    Column(u'tr_StatusOpis', String(50, u'Polish_CI_AS')),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'kh_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'trc_Id', Integer),
    Column(u'trc_Nazwa', Unicode(50)),
    Column(u'trd_Id', Integer),
    Column(u'trd_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'trd_ProcentSukcesu', Integer),
    Column(u'tr_DataOtwarcia', DateTime, nullable=False),
    Column(u'tr_PlanowanaDataZamkniecia', DateTime),
    Column(u'tr_DataZamkniecia', DateTime),
    Column(u'tre_Nazwa', Unicode(50)),
    Column(u'tr_DataModyfikacji', DateTime),
    Column(u'uz_Zmodyfikowal', String(51, u'Polish_CI_AS')),
    Column(u'uz_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'tr_MaObsluzyc', Integer, nullable=False),
    Column(u'uz_NazwaOdKl', String(51, u'Polish_CI_AS')),
    Column(u'tr_MaObsluzycOdKlienta', Integer),
    Column(u'uz_MailOdKl', String(100, u'Polish_CI_AS')),
    Column(u'uz_GaduOdKl', String(20, u'Polish_CI_AS')),
    Column(u'uz_SkypeOdKl', String(255, u'Polish_CI_AS')),
    Column(u'uz_TelefonOdKl', String(35, u'Polish_CI_AS')),
    Column(u'tr_Klient', Integer, nullable=False),
    Column(u'tr_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'tr_WartoscNetto', MONEY),
    Column(u'tr_WartoscVat', MONEY),
    Column(u'tr_WartoscBrutto', MONEY),
    Column(u'trg_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'trg_Id', Integer),
    Column(u'tr_WartoscNettoW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscVatW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscBruttoW', String(34, u'Polish_CI_AS')),
    Column(u'tr_WartoscNettoP', MONEY),
    Column(u'tr_WartoscVatP', MONEY),
    Column(u'tr_WartoscBruttoP', MONEY),
    Column(u'tr_Zamowienie', String(32, u'Polish_CI_AS'), nullable=False),
    Column(u'tr_Koncowy', String(22, u'Polish_CI_AS'), nullable=False),
    Column(u'tr_DokZamowienieSymbol', String(20, u'Polish_CI_AS')),
    Column(u'tr_DokKoncowySymbol', String(20, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS')),
    Column(u'tr_DokZamowienieId', Integer),
    Column(u'tr_DokKoncowyId', Integer),
    Column(u'tr_DokZamowienie', Integer),
    Column(u'tr_DokKoncowy', Integer),
    Column(u'dok_WartNetto', MONEY),
    Column(u'dok_WartVat', MONEY),
    Column(u'dok_WartBrutto', MONEY),
    Column(u'tr_DniSpoznienia', Integer),
    Column(u'tr_WartoscRecznie', BIT),
    Column(u'dok_Nr', Integer),
    Column(u'trn_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'tr_Etap', Integer, nullable=False),
    Column(u'tr_Przygotowal', String(255, u'Polish_CI_AS')),
    Column(u'tr_UwagiDok', String(500, u'Polish_CI_AS')),
    Column(u'tr_WarunkiDostawy', String(500, u'Polish_CI_AS')),
    Column(u'tr_WarunkiPlatnosci', String(500, u'Polish_CI_AS')),
    Column(u'tr_DataRealizacji', String(500, u'Polish_CI_AS')),
    Column(u'tr_PozostaloDni', Integer),
    Column(u'tr_PokazujWKal', BIT),
    Column(u'tr_Kolor', String(11, u'Polish_CI_AS')),
    Column(u'tr_DataUtworzenia', DateTime, nullable=False),
    Column(u'tr_PlanowanaGodzinaZamkniecia', Integer),
    Column(u'tr_PlanowanyTerminZamknieciaStr', String(30, u'Polish_CI_AS')),
    Column(u'adr_Symbol', String(20, u'Polish_CI_AS')),
    Column(u'adr_NazwaPelna', String(255, u'Polish_CI_AS'))
)


t_vw_UprawnieniaMagazynowe = Table(
    u'vw_UprawnieniaMagazynowe', metadata,
    Column(u'ID', Integer, nullable=False)
)


t_vw_WyszukiwanieKlienciPersonel = Table(
    u'vw_WyszukiwanieKlienciPersonel', metadata,
    Column(u'adr_Id', Integer, nullable=False),
    Column(u'khx_Entry', String(51, u'Polish_CI_AS'))
)


t_vw_Wzorzec = Table(
    u'vw_Wzorzec', metadata,
    Column(u'wzw_Id', Integer, nullable=False),
    Column(u'wzw_Typ', Integer, nullable=False),
    Column(u'wzw_Zrodlo', Integer, nullable=False),
    Column(u'wzw_Nazwa', String(80, u'Polish_CI_AS'), nullable=False),
    Column(u'wzw_TypPliku', Integer, nullable=False),
    Column(u'wzw_IloscKopii', Integer, nullable=False),
    Column(u'wzw_NaglowekRaportuId', Integer),
    Column(u'wzw_NaglowekStronyId', Integer),
    Column(u'wzw_StopkaStronyId', Integer),
    Column(u'wzw_StopkaRaportuId', Integer),
    Column(u'wzw_UkladStrony', BIT, nullable=False),
    Column(u'wzw_Zablokowany', BIT, nullable=False),
    Column(u'wzw_Jezyk', Integer, nullable=False),
    Column(u'wzw_Wersja', String(5, u'Polish_CI_AS'), nullable=False),
    Column(u'wzw_WysuwajStrone', BIT, nullable=False)
)


t_vw_Zadanie = Table(
    u'vw_Zadanie', metadata,
    Column(u'zd_Id', Integer, nullable=False),
    Column(u'zd_Rodzaj', Integer, nullable=False),
    Column(u'zd_CalyDzien', BIT, nullable=False),
    Column(u'vw_Poczatek', DateTime),
    Column(u'zd_Poczatek', DateTime, nullable=False),
    Column(u'zd_Koniec', DateTime),
    Column(u'zd_Lokalizacja', String(50, u'Polish_CI_AS')),
    Column(u'zd_Temat', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Priorytet', Integer, nullable=False),
    Column(u'zd_Kolor', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Interwal', Integer, nullable=False),
    Column(u'zd_CoIle', Integer, nullable=False),
    Column(u'zd_Robocze', BIT, nullable=False),
    Column(u'zd_DniTygodnia', Integer, nullable=False),
    Column(u'zd_DzienMiesiaca', Integer, nullable=False),
    Column(u'zd_DefinicjaZlozona', BIT),
    Column(u'zd_DzienPorzadek', Integer, nullable=False),
    Column(u'zd_DzienRodzaj', Integer, nullable=False),
    Column(u'zd_Miesiac', Integer, nullable=False),
    Column(u'zd_RodzajPowtorzen', Integer, nullable=False),
    Column(u'zd_IlePowtorzen', Integer, nullable=False),
    Column(u'zd_KoniecPowtorzen', DateTime),
    Column(u'zd_Cykliczne', Integer, nullable=False),
    Column(u'zd_Rezultat', Integer),
    Column(u'zd_PokazujWKalendarzu', BIT),
    Column(u'zdvw_Status', Integer),
    Column(u'zd_Kierunek', Integer),
    Column(u'zd_Personel', Integer),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'ptz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zd_Podtyp', Integer),
    Column(u'zd_BezCzasu', BIT, nullable=False),
    Column(u'zd_Przypomniane', BIT, nullable=False),
    Column(u'zd_NastepnePrzypomnienie', DateTime),
    Column(u'zd_Uczestnicy', String(255, u'Polish_CI_AS')),
    Column(u'zd_Prywatne', BIT, nullable=False),
    Column(u'zd_Pozostalo', Integer),
    Column(u'zd_Transakcja', Integer),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'tr_Symbol', String(30, u'Polish_CI_AS')),
    Column(u'zd_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Klasa', Integer, nullable=False),
    Column(u'zd_FormaDzialaniaWindykacyjnego', Integer, nullable=False),
    Column(u'zd_WystapienieDoPrzypomnienia', DateTime),
    Column(u'JestDokumentWzorcowy', Integer, nullable=False),
    Column(u'JestDokumentWystawiony', Integer, nullable=False),
    Column(u'zd_LiczbaUczestnikowWszystkich', Integer, nullable=False),
    Column(u'zd_LiczbaUczestnikowBezPersonelu', Integer, nullable=False)
)


t_vw_ZadanieWindykacyjne = Table(
    u'vw_ZadanieWindykacyjne', metadata,
    Column(u'zd_IdWind', Integer, nullable=False),
    Column(u'fdw_Nazwa', String(100, u'Polish_CI_AS')),
    Column(u'zd_NotaOdsetkowa', Integer),
    Column(u'zd_WezwanieDoZaplaty', Integer),
    Column(u'zd_TypDokumentu', Integer),
    Column(u'zd_TypDokumentuOpis', String(100, u'Polish_CI_AS'))
)


t_vw_ZadanieWindykacyjneEx = Table(
    u'vw_ZadanieWindykacyjneEx', metadata,
    Column(u'zd_Id', Integer, nullable=False),
    Column(u'zd_Rodzaj', Integer, nullable=False),
    Column(u'zd_CalyDzien', BIT, nullable=False),
    Column(u'vw_Poczatek', DateTime),
    Column(u'zd_Poczatek', DateTime, nullable=False),
    Column(u'zd_Koniec', DateTime),
    Column(u'zd_Lokalizacja', String(50, u'Polish_CI_AS')),
    Column(u'zd_Temat', String(100, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Priorytet', Integer, nullable=False),
    Column(u'zd_Kolor', String(11, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Interwal', Integer, nullable=False),
    Column(u'zd_CoIle', Integer, nullable=False),
    Column(u'zd_Robocze', BIT, nullable=False),
    Column(u'zd_DniTygodnia', Integer, nullable=False),
    Column(u'zd_DzienMiesiaca', Integer, nullable=False),
    Column(u'zd_DefinicjaZlozona', BIT),
    Column(u'zd_DzienPorzadek', Integer, nullable=False),
    Column(u'zd_DzienRodzaj', Integer, nullable=False),
    Column(u'zd_Miesiac', Integer, nullable=False),
    Column(u'zd_RodzajPowtorzen', Integer, nullable=False),
    Column(u'zd_IlePowtorzen', Integer, nullable=False),
    Column(u'zd_KoniecPowtorzen', DateTime),
    Column(u'zd_Cykliczne', Integer, nullable=False),
    Column(u'zd_Rezultat', Integer),
    Column(u'zd_PokazujWKalendarzu', BIT),
    Column(u'zdvw_Status', Integer),
    Column(u'zd_Kierunek', Integer),
    Column(u'zd_Personel', Integer),
    Column(u'adr_Nazwa', String(51, u'Polish_CI_AS')),
    Column(u'ptz_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'zd_Podtyp', Integer),
    Column(u'zd_BezCzasu', BIT, nullable=False),
    Column(u'zd_Przypomniane', BIT, nullable=False),
    Column(u'zd_NastepnePrzypomnienie', DateTime),
    Column(u'zd_Uczestnicy', String(255, u'Polish_CI_AS')),
    Column(u'zd_Prywatne', BIT, nullable=False),
    Column(u'zd_Pozostalo', Integer),
    Column(u'zd_Transakcja', Integer),
    Column(u'tr_Nazwa', String(50, u'Polish_CI_AS')),
    Column(u'tr_Symbol', String(30, u'Polish_CI_AS')),
    Column(u'zd_Uwagi', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zd_Klasa', Integer, nullable=False),
    Column(u'zd_FormaDzialaniaWindykacyjnego', Integer, nullable=False),
    Column(u'zd_IdWind', Integer),
    Column(u'fdw_Nazwa', String(100, u'Polish_CI_AS')),
    Column(u'zd_NotaOdsetkowa', Integer),
    Column(u'zd_TypDokumentu', Integer),
    Column(u'zd_WezwanieDoZaplaty', Integer),
    Column(u'zd_TypDokumentuOpis', String(100, u'Polish_CI_AS')),
    Column(u'zd_LiczbaUczestnikowWszystkich', Integer, nullable=False),
    Column(u'zd_LiczbaUczestnikowBezPersonelu', Integer, nullable=False)
)


class VwKonfiguracja(Base):
    __tablename__ = u'vw__Konfiguracja'

    vwcg_Section = Column(String(50, u'Polish_CI_AS'), primary_key=True, nullable=False)
    vwcg_User = Column(Integer, primary_key=True, nullable=False)
    vwcg_Service = Column(Integer, primary_key=True, nullable=False, server_default=text("((0))"))
    vwcg_Data = Column(LargeBinary)
    vwcg_FiltersData = Column(LargeBinary)


t_vw_dok_zwroty = Table(
    u'vw_dok_zwroty', metadata,
    Column(u'dok_Id', Integer, nullable=False),
    Column(u'dok_Typ', Integer, nullable=False),
    Column(u'dok_Podtyp', Integer, nullable=False),
    Column(u'dok_MagId', Integer),
    Column(u'dok_Nr', Integer),
    Column(u'dok_NrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_NrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_NrPelnyOryg', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokId', Integer),
    Column(u'dok_DoDokNrPelny', String(30, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DoDokDataWyst', DateTime),
    Column(u'dok_MscWyst', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_DataWyst', DateTime, nullable=False),
    Column(u'dok_DataMag', DateTime, nullable=False),
    Column(u'dok_DataOtrzym', DateTime),
    Column(u'dok_PlatnikId', Integer),
    Column(u'dok_PlatnikAdreshId', Integer),
    Column(u'dok_OdbiorcaId', Integer),
    Column(u'dok_OdbiorcaAdreshId', Integer),
    Column(u'dok_PlatId', Integer),
    Column(u'dok_PlatTermin', DateTime),
    Column(u'dok_Wystawil', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Odebral', String(40, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_PersonelId', Integer),
    Column(u'dok_CenyPoziom', Integer),
    Column(u'dok_CenyTyp', Integer),
    Column(u'dok_CenyKurs', MONEY),
    Column(u'dok_CenyNarzut', MONEY, nullable=False),
    Column(u'dok_RabatProc', MONEY, nullable=False),
    Column(u'dok_WartUsNetto', MONEY, nullable=False),
    Column(u'dok_WartUsBrutto', MONEY, nullable=False),
    Column(u'dok_WartTwNetto', MONEY, nullable=False),
    Column(u'dok_WartTwBrutto', MONEY, nullable=False),
    Column(u'dok_WartOpZwr', MONEY, nullable=False),
    Column(u'dok_WartOpWyd', MONEY, nullable=False),
    Column(u'dok_WartMag', MONEY, nullable=False),
    Column(u'dok_WartMagP', MONEY, nullable=False),
    Column(u'dok_WartMagR', MONEY, nullable=False),
    Column(u'dok_WartNetto', MONEY, nullable=False),
    Column(u'dok_WartVat', MONEY, nullable=False),
    Column(u'dok_WartBrutto', MONEY, nullable=False),
    Column(u'dok_KwWartosc', MONEY),
    Column(u'dok_KwGotowka', MONEY),
    Column(u'dok_KwKarta', MONEY),
    Column(u'dok_KwDoZaplaty', MONEY),
    Column(u'dok_KwKredyt', MONEY),
    Column(u'dok_KwReszta', MONEY),
    Column(u'dok_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'dok_WalutaKurs', MONEY, nullable=False),
    Column(u'dok_Uwagi', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_KatId', Integer),
    Column(u'dok_Tytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Podtytul', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_Status', Integer, nullable=False),
    Column(u'dok_StatusKsieg', Integer, nullable=False),
    Column(u'dok_StatusFiskal', Integer, nullable=False),
    Column(u'dok_StatusBlok', BIT, nullable=False),
    Column(u'dok_JestTylkoDoOdczytu', BIT, nullable=False),
    Column(u'dok_JestRuchMag', BIT, nullable=False),
    Column(u'dok_JestZmianaDatyDokKas', BIT, nullable=False),
    Column(u'dok_JestHOP', BIT, nullable=False),
    Column(u'dok_JestVatNaEksport', BIT, nullable=False),
    Column(u'dok_JestVatAuto', BIT, nullable=False),
    Column(u'dok_Algorytm', Integer, nullable=False),
    Column(u'dok_KartaId', Integer),
    Column(u'dok_KredytId', Integer),
    Column(u'dok_RodzajOperacjiVat', Integer, nullable=False),
    Column(u'dok_KodRodzajuTransakcji', Integer),
    Column(u'dok_StatusEx', Integer),
    Column(u'dok_ObiektGT', Integer),
    Column(u'dok_Rozliczony', BIT, nullable=False),
    Column(u'dok_RejId', Integer),
    Column(u'dok_TerminRealizacji', DateTime),
    Column(u'dok_WalutaLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_WalutaRodzajKursu', Integer),
    Column(u'dok_WalutaDataKursu', DateTime),
    Column(u'dok_WalutaIdBanku', Integer),
    Column(u'dok_CenyLiczbaJednostek', Integer, nullable=False),
    Column(u'dok_CenyRodzajKursu', Integer),
    Column(u'dok_CenyDataKursu', DateTime),
    Column(u'dok_CenyIdBanku', Integer),
    Column(u'dok_KwPrzelew', MONEY),
    Column(u'dok_KwGotowkaPrzedplata', MONEY),
    Column(u'dok_KwPrzelewPrzedplata', MONEY),
    Column(u'dok_DefiniowalnyId', Integer),
    Column(u'dok_TransakcjaId', Integer),
    Column(u'dok_TransakcjaSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_TransakcjaData', DateTime),
    Column(u'dok_PodsumaVatFSzk', Integer),
    Column(u'dok_ZlecenieId', Integer),
    Column(u'dok_NaliczajFundusze', BIT, nullable=False),
    Column(u'dok_PrzetworzonoZKwZD', BIT),
    Column(u'dok_VatMarza', BIT),
    Column(u'dok_DstNr', Integer),
    Column(u'dok_DstNrRoz', String(3, u'Polish_CI_AS')),
    Column(u'dok_DstNrPelny', String(30, u'Polish_CI_AS')),
    Column(u'dok_ObslugaDokDost', Integer),
    Column(u'dok_AkcyzaZwolnienieId', Integer),
    Column(u'dok_ProceduraMarzy', Integer, nullable=False),
    Column(u'dok_FakturaUproszczona', BIT, nullable=False),
    Column(u'dok_DataZakonczenia', DateTime),
    Column(u'dok_MetodaKasowa', BIT, nullable=False),
    Column(u'dok_TypNrIdentNabywcy', Integer, nullable=False),
    Column(u'dok_NrIdentNabywcy', String(20, u'Polish_CI_AS')),
    Column(u'dok_AdresDostawyId', Integer),
    Column(u'dok_AdresDostawyAdreshId', Integer),
    Column(u'dok_VenderoId', Integer),
    Column(u'dok_VenderoSymbol', String(30, u'Polish_CI_AS')),
    Column(u'dok_VenderoData', DateTime),
    Column(u'dok_SelloId', Integer),
    Column(u'dok_SelloSymbol', String(100, u'Polish_CI_AS')),
    Column(u'dok_SelloData', DateTime),
    Column(u'dok_TransakcjaJednolitaId', Integer),
    Column(u'dok_PodpisanoElektronicznie', BIT),
    Column(u'dok_UwagiExt', String(3500, u'Polish_CI_AS'), nullable=False),
    Column(u'dok_VenderoStatus', Integer),
    Column(u'dok_DoDokTyp', Integer),
    Column(u'dok_DoDokPodtyp', Integer),
    Column(u'm_dok_WartNetto', MONEY),
    Column(u'm_dok_WartMag', MONEY),
    Column(u'm_dok_WartTwNetto', MONEY),
    Column(u'm_dok_WartTwBrutto', MONEY),
    Column(u'm_dok_WartBrutto', MONEY)
)


t_vwp_Parametry = Table(
    u'vwp_Parametry', metadata,
    Column(u'pt_Id', Integer),
    Column(u'pt_Opis', String(255, u'Polish_CI_AS')),
    Column(u'pt_Indywidualizowalny', BIT),
    Column(u'pt_Nazwa', String(255, u'Polish_CI_AS')),
    Column(u'pt_Programy', Integer),
    Column(u'pt_ProgId', String(50, u'Polish_CI_AS')),
    Column(u'pt_ProgIdCtx', Integer),
    Column(u'pt_AppObjId', Integer),
    Column(u'pe_Id', Integer)
)


t_vwp_dks_Kasa = Table(
    u'vwp_dks_Kasa', metadata,
    Column(u'ks_Id', Integer, nullable=False),
    Column(u'ks_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ks_Nazwa', String(80, u'Polish_CI_AS'), nullable=False),
    Column(u'ks_Opis', String(255, u'Polish_CI_AS')),
    Column(u'ks_Analityka', String(3, u'Polish_CI_AS')),
    Column(u'ks_Glowna', BIT, nullable=False),
    Column(u'ks_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'ks_Wielowalutowa', BIT, nullable=False),
    Column(u'ks_RK_Personalizacja', BIT, nullable=False),
    Column(u'ks_RK_Kategoria', Integer),
    Column(u'ks_RK_Okres', Integer, nullable=False),
    Column(u'ks_RK_WieleZaOkres', BIT, nullable=False),
    Column(u'ks_RK_AutoDodawanie', Integer, nullable=False),
    Column(u'ks_RK_KategoriaKorekty', Integer),
    Column(u'ks_RK_FormatNumeru', Integer)
)


t_vwp_dks_KasaTransfer = Table(
    u'vwp_dks_KasaTransfer', metadata,
    Column(u'ks_Id', Integer, nullable=False),
    Column(u'ks_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'ks_Nazwa', String(80, u'Polish_CI_AS'), nullable=False),
    Column(u'ks_Opis', String(255, u'Polish_CI_AS')),
    Column(u'ks_Analityka', String(3, u'Polish_CI_AS')),
    Column(u'ks_Glowna', BIT, nullable=False),
    Column(u'ks_Waluta', String(3, u'Polish_CI_AS')),
    Column(u'ks_Wielowalutowa', BIT, nullable=False),
    Column(u'ks_RK_Personalizacja', BIT, nullable=False),
    Column(u'ks_RK_Kategoria', Integer),
    Column(u'ks_RK_Okres', Integer, nullable=False),
    Column(u'ks_RK_WieleZaOkres', BIT, nullable=False),
    Column(u'ks_RK_AutoDodawanie', Integer, nullable=False),
    Column(u'ks_RK_KategoriaKorekty', Integer),
    Column(u'ks_RK_FormatNumeru', Integer)
)


t_vwp_gt_Transformacja = Table(
    u'vwp_gt_Transformacja', metadata,
    Column(u'gtt_Id', Integer, nullable=False),
    Column(u'gtt_ObiektId', Integer, nullable=False),
    Column(u'gtt_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'gtt_RodzajId', Integer, nullable=False),
    Column(u'gtt_Transformacja', LargeBinary),
    Column(u'gtt_Schemat', String(255, u'Polish_CI_AS')),
    Column(u'gtt_DefinicjaId', Integer),
    Column(u'gtt_Domyslna', BIT, nullable=False)
)


t_vwp_par_Ewid = Table(
    u'vwp_par_Ewid', metadata,
    Column(u'pe_Id', Integer, nullable=False),
    Column(u'pe_IdTypu', Integer, nullable=False),
    Column(u'pe_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'pe_Domyslne', BIT, nullable=False),
    Column(u'pt_Id', Integer, nullable=False),
    Column(u'pt_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Indywidualizowalny', BIT, nullable=False),
    Column(u'pt_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_Programy', Integer, nullable=False),
    Column(u'pt_ProgId', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'pt_ProgIdCtx', Integer),
    Column(u'pt_AppObjId', Integer, nullable=False),
    Column(u'pt_Ukryte', BIT, nullable=False)
)


t_vwp_rb__RachBankowy = Table(
    u'vwp_rb__RachBankowy', metadata,
    Column(u'rb_Id', Integer, nullable=False),
    Column(u'rb_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_TypObiektu', Integer, nullable=False),
    Column(u'rb_Numer', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_Bank', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_IBAN', BIT, nullable=False),
    Column(u'rb_IdWaluty', String(3, u'Polish_CI_AS')),
    Column(u'rb_Podstawowy', BIT, nullable=False),
    Column(u'rb_Opis', String(255, u'Polish_CI_AS')),
    Column(u'rb_Analityka', String(3, u'Polish_CI_AS')),
    Column(u'rb_Status', String(1, u'Polish_CI_AS'), nullable=False),
    Column(u'rb_IdObiektu', Integer),
    Column(u'rb_ZFSS', BIT, nullable=False),
    Column(u'rb_US', BIT, nullable=False),
    Column(u'rb_PodstawowyWirtualny', BIT, nullable=False),
    Column(u'rb_Mnemonik', String(50, u'Polish_CI_AS')),
    Column(u'rb_Licznik', BigInteger, nullable=False),
    Column(u'rb_Wirtualny', BIT, nullable=False),
    Column(u'rb_TypIdentyfikacjiPlatnosci', Integer, nullable=False),
    Column(u'rb_Ebank', BIT, nullable=False),
    Column(u'rb_Dik', String(30, u'Polish_CI_AS')),
    Column(u'rb_DataHist', DateTime),
    Column(u'rb_Saldo', MONEY),
    Column(u'rb_DataSaldo', DateTime),
    Column(u'rb_IdUslugi', Integer),
    Column(u'rb_IdKategorii', Integer)
)


t_vwp_sl__Slownik = Table(
    u'vwp_sl__Slownik', metadata,
    Column(u'sl_Id', Integer, nullable=False),
    Column(u'sl_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'sl_Opis', String(500, u'Polish_CI_AS'), nullable=False),
    Column(u'sl_Programy', Integer, nullable=False)
)


t_vwp_sl_magazyn = Table(
    u'vwp_sl_magazyn', metadata,
    Column(u'mag_Id', Integer, nullable=False),
    Column(u'mag_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Status', Integer, nullable=False),
    Column(u'mag_Opis', String(255, u'Polish_CI_AS')),
    Column(u'mag_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'mag_Glowny', BIT, nullable=False),
    Column(u'mag_POS', BIT, nullable=False),
    Column(u'mag_POSIdent', UNIQUEIDENTIFIER),
    Column(u'mag_POSNazwa', String(255, u'Polish_CI_AS')),
    Column(u'mag_POSAdres', String(82, u'Polish_CI_AS'))
)


t_vwp_sl_magazynprzesuniecia = Table(
    u'vwp_sl_magazynprzesuniecia', metadata,
    Column(u'mag_Id', Integer, nullable=False),
    Column(u'mag_Symbol', String(3, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Nazwa', String(50, u'Polish_CI_AS'), nullable=False),
    Column(u'mag_Status', Integer, nullable=False),
    Column(u'mag_Opis', String(255, u'Polish_CI_AS')),
    Column(u'mag_Analityka', String(5, u'Polish_CI_AS')),
    Column(u'mag_Glowny', BIT, nullable=False),
    Column(u'mag_POS', BIT, nullable=False),
    Column(u'mag_POSIdent', UNIQUEIDENTIFIER),
    Column(u'mag_POSNazwa', String(255, u'Polish_CI_AS')),
    Column(u'mag_POSAdres', String(82, u'Polish_CI_AS'))
)


t_vwp_wy_Wzorzec = Table(
    u'vwp_wy_Wzorzec', metadata,
    Column(u'wzw_Id', Integer, nullable=False),
    Column(u'wzw_Typ', Integer, nullable=False),
    Column(u'wzw_Zrodlo', Integer, nullable=False),
    Column(u'wzw_Nazwa', String(80, u'Polish_CI_AS'), nullable=False),
    Column(u'wzw_TypPliku', Integer, nullable=False),
    Column(u'wzw_IloscKopii', Integer, nullable=False),
    Column(u'wzw_NaglowekRaportuId', Integer),
    Column(u'wzw_NaglowekStronyId', Integer),
    Column(u'wzw_StopkaStronyId', Integer),
    Column(u'wzw_StopkaRaportuId', Integer),
    Column(u'wzw_UkladStrony', BIT, nullable=False),
    Column(u'wzw_Zablokowany', BIT, nullable=False),
    Column(u'wzw_Jezyk', Integer, nullable=False),
    Column(u'wzw_Wersja', String(5, u'Polish_CI_AS'), nullable=False),
    Column(u'wzw_WysuwajStrone', BIT, nullable=False),
    Column(u'wzw_Widoczny', BIT, nullable=False)
)


t_vwp_zst__Ewid = Table(
    u'vwp_zst__Ewid', metadata,
    Column(u'zst_Id', Integer, nullable=False),
    Column(u'zst_Nazwa', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zst_Opis', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zst_Typ', Integer, nullable=False),
    Column(u'zst_ProgFlagi', Integer, nullable=False),
    Column(u'zst_User', BIT, nullable=False),
    Column(u'zst_Tresc', Text(collation=u'Polish_CI_AS'), nullable=False),
    Column(u'zst_Dll', String(512, u'Polish_CI_AS')),
    Column(u'zst_ProgId', String(255, u'Polish_CI_AS'), nullable=False),
    Column(u'zst_IdKategorii', Integer),
    Column(u'zst_DataUzycia', DateTime),
    Column(u'zst_Ikona', Integer),
    Column(u'zst_TrescDefiniowalne', LargeBinary)
)


class WindParametr(Base):
    __tablename__ = u'wind_Parametr'

    wpa_Id = Column(Integer, primary_key=True)
    wpa_RodzajDzialaniaWezwanie = Column(Integer, nullable=False, server_default=text("((4))"))
    wpa_RodzajDzialaniaNota = Column(Integer, nullable=False, server_default=text("((4))"))
    wpa_SzablonDzialanie = Column(ForeignKey(u'sl_SzablonDzialania.szdz_Id'))
    wpa_SzablonNota = Column(ForeignKey(u'sl_SzablonDzialania.szdz_Id'))

    sl_SzablonDzialania = relationship(u'SlSzablonDzialania', primaryjoin='WindParametr.wpa_SzablonDzialanie == SlSzablonDzialania.szdz_Id')
    sl_SzablonDzialania1 = relationship(u'SlSzablonDzialania', primaryjoin='WindParametr.wpa_SzablonNota == SlSzablonDzialania.szdz_Id')


class WyDrukarkaDomyslna(Base):
    __tablename__ = u'wy_DrukarkaDomyslna'

    wyd_Id = Column(Integer, primary_key=True)
    wyd_WzorzecId = Column(ForeignKey(u'wy_Wzorzec.wzw_Id'), nullable=False)
    wyd_NazwaKomputera = Column(String(255, u'Polish_CI_AS'), nullable=False)
    wyd_NazwaDrukarki = Column(String(255, u'Polish_CI_AS'), nullable=False)

    wy_Wzorzec = relationship(u'WyWzorzec')


class WyGrid(Base):
    __tablename__ = u'wy_Grid'

    wgr_Id = Column(Integer, primary_key=True)
    wgr_GridId = Column(String(50, u'Polish_CI_AS'), nullable=False)
    wgr_UserId = Column(Integer, nullable=False)
    wgr_Parametry = Column(LargeBinary, nullable=False)
    wgr_Service = Column(Integer, nullable=False, server_default=text("((0))"))


class WyGrupa(Base):
    __tablename__ = u'wy_Grupa'

    wgr_Id = Column(Integer, primary_key=True)
    wgr_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    wgr_Subiekt = Column(BIT, nullable=False)
    wgr_Rachmistrz = Column(Integer, nullable=False)
    wgr_MGratyfikant = Column(Integer, nullable=False)
    wgr_UF = Column(BIT, nullable=False)
    wgr_CRM = Column(BIT, nullable=False, server_default=text("((0))"))
    wgr_Navireo = Column(BIT, nullable=False, server_default=text("((0))"))


class WyKodSterujacy(Base):
    __tablename__ = u'wy_KodSterujacy'

    wpr_Id = Column(Integer, primary_key=True)
    wpr_Standard = Column(BIT, nullable=False)
    wpr_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ResetOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ResetOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ZwyklaOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ZwyklaOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_BoldOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_BoldOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ItalicOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_ItalicOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_UnderlineOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_UnderlineOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PrintInit = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PageStart = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PageEnd = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_NLQOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_NLQOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PerfLenOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PerfLenOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_MarginTopOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_MarginTopOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PageLenOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_PageLenOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int4LinesOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int4LinesOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int6LinesOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int6LinesOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int8LinesOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int8LinesOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int10LinesOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int10LinesOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int12LinesOn = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_Int12LinesOff = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI10On = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI10Off = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI12On = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI12Off = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI15On = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI15Off = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI17On = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI17Off = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI20On = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_CPI20Off = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wpr_UserCode = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))


class WyNaglowek(Base):
    __tablename__ = u'wy_Naglowek'

    wngl_Id = Column(Integer, primary_key=True)
    wngl_Nazwa = Column(String(50, u'Polish_CI_AS'), nullable=False)
    wngl_Tresc = Column(Text(collation=u'Polish_CI_AS'), nullable=False)
    wngl_Logo = Column(LargeBinary)
    wngl_TypNaglowka = Column(Integer, nullable=False)
    wngl_LogoX = Column(Integer, nullable=False)
    wngl_LogoY = Column(Integer, nullable=False)
    wngl_TrescX = Column(Integer, nullable=False)
    wngl_TrescY = Column(Integer, nullable=False)
    wngl_Wysokosc = Column(Integer, nullable=False)
    wngl_DrukujLogo = Column(BIT, nullable=False)
    wngl_LogoWysokosc = Column(Integer, nullable=False)
    wngl_LogoSzerokosc = Column(Integer, nullable=False)
    wngl_Standardowy = Column(BIT, nullable=False)
    wngl_TrescSzerokosc = Column(Integer, nullable=False, server_default=text("((5000))"))


class WyPlik(Base):
    __tablename__ = u'wy_Plik'

    wpl_Id = Column(Integer, primary_key=True)
    wpl_WzorzecId = Column(Integer, nullable=False)
    wpl_PlikRaportu = Column(LargeBinary)
    wpl_NrStrony = Column(Integer)
    wpl_NazwaPliku = Column(String(50, u'Polish_CI_AS'))
    wpl_SkrotMD5 = Column(String(32, u'Polish_CI_AS'))
    wpl_Wersja = Column(Integer, nullable=False, server_default=text("((0))"))


class WyPrzelewParam(Base):
    __tablename__ = u'wy_PrzelewParam'

    wpp_Id = Column(Integer, primary_key=True)
    wpp_Drukarka = Column(String(260, u'Polish_CI_AS'), nullable=False)
    wpp_Auto = Column(BIT, nullable=False)
    wpp_Czcionka = Column(String(30, u'Polish_CI_AS'), nullable=False)
    wpp_CzcionkaGrupa = Column(Integer, nullable=False)
    wpp_CzcionkaRozmiar = Column(SmallInteger, nullable=False)
    wpp_Ogranicznik = Column(String(2, u'Polish_CI_AS'), nullable=False)
    wpp_PokazujParametry = Column(BIT, nullable=False)
    wpp_StdForm = Column(Integer, nullable=False)
    wpp_StdFormOryg = Column(Integer, nullable=False)
    wpp_StdDrukujSymbol = Column(BIT, nullable=False)
    wpp_StdDopasuj = Column(BIT, nullable=False)
    wpp_StdPrzesuniecieX = Column(SmallInteger, nullable=False)
    wpp_StdPrzesuniecieY = Column(SmallInteger, nullable=False)
    wpp_StdSkalaX = Column(SmallInteger, nullable=False)
    wpp_StdSkalaY = Column(SmallInteger, nullable=False)
    wpp_StdDrukujNaOryg = Column(BIT, nullable=False)
    wpp_StdNieDrukujDaty = Column(BIT, nullable=False)
    wpp_StdDrukujTypOperacji = Column(BIT, nullable=False)
    wpp_ZusForm = Column(Integer, nullable=False)
    wpp_ZusFormOryg = Column(Integer, nullable=False)
    wpp_ZusDrukujSymbol = Column(BIT, nullable=False)
    wpp_ZusDopasuj = Column(BIT, nullable=False)
    wpp_ZusPrzesuniecieX = Column(SmallInteger, nullable=False)
    wpp_ZusPrzesuniecieY = Column(SmallInteger, nullable=False)
    wpp_ZusSkalaX = Column(SmallInteger, nullable=False)
    wpp_ZusSkalaY = Column(SmallInteger, nullable=False)
    wpp_ZusDrukujNaOryg = Column(BIT, nullable=False)
    wpp_ZusNieDrukujNumeruRachunku = Column(BIT, nullable=False)
    wpp_UsForm = Column(Integer, nullable=False)
    wpp_UsFormOryg = Column(Integer, nullable=False)
    wpp_UsDrukujSymbol = Column(BIT, nullable=False)
    wpp_UsDopasuj = Column(BIT, nullable=False)
    wpp_UsPrzesuniecieX = Column(SmallInteger, nullable=False)
    wpp_UsPrzesuniecieY = Column(SmallInteger, nullable=False)
    wpp_UsSkalaX = Column(SmallInteger, nullable=False)
    wpp_UsSkalaY = Column(SmallInteger, nullable=False)
    wpp_UsDrukujNaOryg = Column(BIT, nullable=False)
    wpp_UsDrukujTypOperacji = Column(BIT, nullable=False)
    wpp_UsNieDrukujDaty = Column(BIT, nullable=False)
    wpp_ZusDrukujTylkoCyfryOkRodzSkladek = Column(BIT, nullable=False, server_default=text("((0))"))


class WyStatusWydruku(Base):
    __tablename__ = u'wy_StatusWydruku'

    wys_Id = Column(Integer, primary_key=True)
    wys_IdObiektu = Column(Integer, nullable=False)
    wys_TypObiektu = Column(Integer, nullable=False)
    wys_DataWydruku = Column(DateTime, nullable=False)
    wys_Status = Column(Integer, nullable=False)


class WyTekstowyParam(Base):
    __tablename__ = u'wy_TekstowyParam'

    wtx_Id = Column(Integer, primary_key=True)
    wtx_NazwaKomputera = Column(String(255, u'Polish_CI_AS'), nullable=False)
    wtx_Port = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wtx_StronaKodowa = Column(Integer, nullable=False, server_default=text("((0))"))
    wtx_LiczbaLinii = Column(Integer, nullable=False, server_default=text("((80))"))
    wtx_KodSterujacyId = Column(Integer, nullable=False, server_default=text("((1))"))
    wtx_CPI = Column(Integer, nullable=False, server_default=text("((2))"))
    wtx_NLQ = Column(BIT, nullable=False, server_default=text("((0))"))
    wtx_DrukujLinie = Column(BIT, nullable=False, server_default=text("((1))"))
    wtx_ZezwalajTylkoTekstowe = Column(BIT, nullable=False, server_default=text("((0))"))


class WyTyp(Base):
    __tablename__ = u'wy_Typ'

    wtp_Id = Column(Integer, primary_key=True)
    wtp_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False)
    wtp_GrupaId = Column(Integer, nullable=False)


class WyWydrukParam(Base):
    __tablename__ = u'wy_WydrukParam'

    wp_Id = Column(Integer, primary_key=True)
    wp_EksportNazwaTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    wp_EksportNumerZnakiNiedozwoloneNa = Column(String(1, u'Polish_CI_AS'))
    wp_EksportDowolnaNazwa = Column(String(255, u'Polish_CI_AS'))
    wp_ParamEwidId = Column(ForeignKey(u'par__Ewid.pe_Id'))
    wp_EksportPlikNazwaTyp = Column(Integer, nullable=False, server_default=text("((0))"))
    wp_EksportPlikNumerZnakiNiedozwoloneNa = Column(String(1, u'Polish_CI_AS'))
    wp_EksportPlikDowolnaNazwa = Column(String(255, u'Polish_CI_AS'))

    par__Ewid = relationship(u'ParEwid')


class WyWzDomyslny(Base):
    __tablename__ = u'wy_WzDomyslny'

    wzd_Id = Column(Integer, primary_key=True)
    wzd_WzorzecId = Column(ForeignKey(u'wy_Wzorzec.wzw_Id'), nullable=False)
    wzd_NazwaKomputera = Column(String(255, u'Polish_CI_AS'))
    wzd_Typ = Column(Integer, nullable=False)

    wy_Wzorzec = relationship(u'WyWzorzec')


class WyWzPowiazany(Base):
    __tablename__ = u'wy_WzPowiazany'

    wpw_Id = Column(Integer, primary_key=True)
    wpw_IdWzorca = Column(Integer, nullable=False)
    wpw_DrukujKP = Column(BIT)
    wpw_DrukujKW = Column(BIT)
    wpw_DrukujPZ = Column(BIT)
    wpw_DrukujWZ = Column(BIT)
    wpw_LiczbaKopiiKP = Column(Integer)
    wpw_LiczbaKopiiKW = Column(Integer)
    wpw_LiczbaKopiiPZ = Column(Integer)
    wpw_LiczbaKopiiWZ = Column(Integer)
    wpw_IdWzorcaKP = Column(Integer)
    wpw_IdWzorcaKW = Column(Integer)
    wpw_IdWzorcaPZ = Column(Integer)
    wpw_IdWzorcaWZ = Column(Integer)
    wpw_DrukujPrzelew = Column(BIT)
    wpw_LiczbaKopiiPrzelewu = Column(Integer)
    wpw_DrukujZal = Column(BIT)
    wpw_LiczbaKopiiZal = Column(Integer)
    wpw_IdWzorcaZal = Column(Integer)


class WyWzorzec(Base):
    __tablename__ = u'wy_Wzorzec'

    wzw_Id = Column(Integer, primary_key=True)
    wzw_Typ = Column(ForeignKey(u'wy_Typ.wtp_Id'), nullable=False)
    wzw_Zrodlo = Column(Integer, nullable=False)
    wzw_Nazwa = Column(String(80, u'Polish_CI_AS'), nullable=False)
    wzw_TypPliku = Column(Integer, nullable=False)
    wzw_IloscKopii = Column(Integer, nullable=False)
    wzw_NaglowekRaportuId = Column(ForeignKey(u'wy_Naglowek.wngl_Id'))
    wzw_NaglowekStronyId = Column(ForeignKey(u'wy_Naglowek.wngl_Id'))
    wzw_StopkaStronyId = Column(ForeignKey(u'wy_Naglowek.wngl_Id'))
    wzw_StopkaRaportuId = Column(ForeignKey(u'wy_Naglowek.wngl_Id'))
    wzw_UkladStrony = Column(BIT, nullable=False)
    wzw_Zablokowany = Column(BIT, nullable=False, server_default=text("((0))"))
    wzw_Jezyk = Column(Integer, nullable=False, server_default=text("((21))"))
    wzw_Wersja = Column(String(5, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    wzw_WysuwajStrone = Column(BIT, nullable=False, server_default=text("((1))"))
    wzw_Widoczny = Column(BIT, nullable=False, server_default=text("((1))"))

    wy_Naglowek = relationship(u'WyNaglowek', primaryjoin='WyWzorzec.wzw_NaglowekRaportuId == WyNaglowek.wngl_Id')
    wy_Naglowek1 = relationship(u'WyNaglowek', primaryjoin='WyWzorzec.wzw_NaglowekStronyId == WyNaglowek.wngl_Id')
    wy_Naglowek2 = relationship(u'WyNaglowek', primaryjoin='WyWzorzec.wzw_StopkaRaportuId == WyNaglowek.wngl_Id')
    wy_Naglowek3 = relationship(u'WyNaglowek', primaryjoin='WyWzorzec.wzw_StopkaStronyId == WyNaglowek.wngl_Id')
    wy_Typ = relationship(u'WyTyp')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'wy_WzorzecProfil')


class WyWzorzecMagazyn(Base):
    __tablename__ = u'wy_WzorzecMagazyn'

    wzm_Typ = Column(Integer, primary_key=True, nullable=False)
    wzm_IdWzorca = Column(Integer, primary_key=True, nullable=False)
    wzm_IdMagazynu = Column(Integer, primary_key=True, nullable=False)


t_wy_WzorzecProfil = Table(
    u'wy_WzorzecProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'wy_Wzorzec.wzw_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class WyWzorzecUzytkownik(Base):
    __tablename__ = u'wy_WzorzecUzytkownik'

    wzu_Typ = Column(Integer, primary_key=True, nullable=False)
    wzu_IdWzorca = Column(Integer, primary_key=True, nullable=False)
    wzu_IdUzytkownika = Column(Integer, primary_key=True, nullable=False)


t_xem_Ewid = Table(
    u'xem_Ewid', metadata,
    Column(u'emx_IdSource', Integer, nullable=False, index=True),
    Column(u'emx_Level', Integer),
    Column(u'emx_IdFrom', Integer),
    Column(u'emx_Entry', String(50, u'Polish_CI_AS'), nullable=False, index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'emx_Rank', Integer),
    Index(u'IX_xem_Ewid_1', u'emx_IdSource', u'emx_Entry', u'emx_Rank')
)


t_xem_Szum = Table(
    u'xem_Szum', metadata,
    Column(u'szem_Id', Integer, nullable=False),
    Column(u'szem_Item', String(50, u'Polish_CI_AS'))
)


t_xin_Ewid = Table(
    u'xin_Ewid', metadata,
    Column(u'inx_IdSource', Integer, nullable=False),
    Column(u'inx_Level', Integer),
    Column(u'inx_IdFrom', Integer),
    Column(u'inx_Entry', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'inx_Rank', Integer)
)


t_xin_Szum = Table(
    u'xin_Szum', metadata,
    Column(u'szin_Id', Integer, nullable=False),
    Column(u'szin_Item', String(50, u'Polish_CI_AS'))
)


t_xkh_Ewid = Table(
    u'xkh_Ewid', metadata,
    Column(u'khx_IdSource', Integer, nullable=False, index=True),
    Column(u'khx_Level', Integer),
    Column(u'khx_IdFrom', Integer),
    Column(u'khx_Entry', String(50, u'Polish_CI_AS'), index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'khx_Rank', Integer),
    Index(u'IX_xkh_Ewid_1', u'khx_IdSource', u'khx_Entry', u'khx_Rank')
)


t_xkh_Szum = Table(
    u'xkh_Szum', metadata,
    Column(u'szkh_Id', Integer, nullable=False),
    Column(u'szkh_Item', String(50, u'Polish_CI_AS'), unique=True)
)


t_xpk_Ewid = Table(
    u'xpk_Ewid', metadata,
    Column(u'pkx_IdSource', Integer, nullable=False, index=True),
    Column(u'pkx_Level', Integer),
    Column(u'pkx_IdFrom', Integer),
    Column(u'pkx_Entry', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'pkx_Rank', Integer)
)


t_xpk_Szum = Table(
    u'xpk_Szum', metadata,
    Column(u'szpk_Id', Integer, nullable=False),
    Column(u'szpk_Item', String(50, u'Polish_CI_AS'), unique=True)
)


t_xpr_Ewid = Table(
    u'xpr_Ewid', metadata,
    Column(u'prx_IdSource', Integer, nullable=False),
    Column(u'prx_Level', Integer),
    Column(u'prx_IdFrom', Integer),
    Column(u'prx_Entry', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'prx_Rank', Integer)
)


t_xpr_Szum = Table(
    u'xpr_Szum', metadata,
    Column(u'szpr_Id', Integer, nullable=False),
    Column(u'szpr_Item', String(50, u'Polish_CI_AS'))
)


t_xtw_Ewid = Table(
    u'xtw_Ewid', metadata,
    Column(u'twx_IdSource', Integer, nullable=False, index=True),
    Column(u'twx_Level', Integer),
    Column(u'twx_IdFrom', Integer),
    Column(u'twx_Entry', String(50, u'Polish_CI_AS'), index=True, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'twx_Rank', Integer),
    Index(u'IX_xtw_Ewid_1', u'twx_IdSource', u'twx_Entry', u'twx_Rank')
)


t_xtw_Szum = Table(
    u'xtw_Szum', metadata,
    Column(u'sztw_Id', Integer, nullable=False),
    Column(u'sztw_Item', String(50, u'Polish_CI_AS'), unique=True)
)


t_xwl_Ewid = Table(
    u'xwl_Ewid', metadata,
    Column(u'wlx_IdSource', Integer, nullable=False),
    Column(u'wlx_Level', Integer),
    Column(u'wlx_IdFrom', Integer),
    Column(u'wlx_Entry', String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'wlx_Rank', Integer)
)


t_xwl_Szum = Table(
    u'xwl_Szum', metadata,
    Column(u'szwl_Id', Integer, nullable=False),
    Column(u'szwl_Item', String(50, u'Polish_CI_AS'))
)


class ZdAlarmyRezerwacja(Base):
    __tablename__ = u'zd_AlarmyRezerwacja'

    zdrd_Id = Column(Integer, primary_key=True)
    zdrd_IdDzialania = Column(ForeignKey(u'zd__Zadanie.zd_Id'), nullable=False)
    zdrd_Data = Column(DateTime, nullable=False)
    zdrd_Instancja = Column(Unicode(100), nullable=False)

    zd__Zadanie = relationship(u'ZdZadanie')


t_zd_FaksParametr = Table(
    u'zd_FaksParametr', metadata,
    Column(u'zdfp_Id', Integer, nullable=False),
    Column(u'zdfp_ParamEwidId', Integer),
    Column(u'zdfp_Rodzaj', Integer),
    Column(u'zdfp_Kierunek', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_Data', Integer, nullable=False),
    Column(u'zdfp_Personel', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_Przypomnienie', Integer),
    Column(u'zdfp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdfp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_Status', Integer, nullable=False, server_default=text("((9))")),
    Column(u'zdfp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdfp_RodzajW', Integer),
    Column(u'zdfp_KierunekW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_DataW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_PersonelW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdfp_PrzypomnienieW', Integer),
    Column(u'zdfp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdfp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdfp_StatusW', Integer, nullable=False, server_default=text("((9))")),
    Column(u'zdfp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdfp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


class ZdHistoria(Base):
    __tablename__ = u'zd_Historia'

    zdh_Id = Column(Integer, primary_key=True)
    zdh_IdZadania = Column(Integer, nullable=False)
    zdh_Operator = Column(Integer, nullable=False)
    zdh_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zdh_Data = Column(DateTime, nullable=False)


t_zd_ListParametr = Table(
    u'zd_ListParametr', metadata,
    Column(u'zdlp_Id', Integer, nullable=False),
    Column(u'zdlp_ParamEwidId', Integer),
    Column(u'zdlp_Rodzaj', Integer),
    Column(u'zdlp_Kierunek', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_Data', Integer, nullable=False),
    Column(u'zdlp_Personel', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_Przypomnienie', Integer),
    Column(u'zdlp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdlp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_Status', Integer, nullable=False, server_default=text("((9))")),
    Column(u'zdlp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdlp_RodzajW', Integer),
    Column(u'zdlp_KierunekW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_DataW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_PersonelW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdlp_PrzypomnienieW', Integer),
    Column(u'zdlp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdlp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdlp_StatusW', Integer, nullable=False, server_default=text("((9))")),
    Column(u'zdlp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdlp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


t_zd_NotatkaParametr = Table(
    u'zd_NotatkaParametr', metadata,
    Column(u'zdnp_Id', Integer, nullable=False),
    Column(u'zdnp_ParamEwidId', Integer),
    Column(u'zdnp_Rodzaj', Integer),
    Column(u'zdnp_Data', Integer, nullable=False),
    Column(u'zdnp_Personel', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdnp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdnp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdnp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdnp_RodzajW', Integer),
    Column(u'zdnp_DataW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdnp_PersonelW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdnp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdnp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdnp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdnp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


class ZdOpi(Base):
    __tablename__ = u'zd_Opis'

    zdo_Id = Column(Integer, primary_key=True)
    zdo_IdZadania = Column(ForeignKey(u'zd__Zadanie.zd_Id'), nullable=False)
    zdo_Opis = Column(UnicodeText(1073741823), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    zd__Zadanie = relationship(u'ZdZadanie')


t_zd_RozmowaIntParametr = Table(
    u'zd_RozmowaIntParametr', metadata,
    Column(u'zdrp_Id', Integer, nullable=False),
    Column(u'zdrp_ParamEwidId', Integer),
    Column(u'zdrp_Rodzaj', Integer),
    Column(u'zdrp_Kierunek', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_Poczatek', Integer, nullable=False),
    Column(u'zdrp_CzasTrwania', Integer, nullable=False),
    Column(u'zdrp_Opiekun', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_Przypomnienie', Integer),
    Column(u'zdrp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdrp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_Status', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdrp_RodzajW', Integer),
    Column(u'zdrp_KierunekW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_PoczatekW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_CzasTrwaniaW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_OpiekunW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_PrzypomnienieW', Integer),
    Column(u'zdrp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdrp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdrp_StatusW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdrp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdrp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


class ZdRozrachunek(Base):
    __tablename__ = u'zd_Rozrachunek'

    zdr_Id = Column(Integer, primary_key=True)
    zdr_IdZadania = Column(ForeignKey(u'zd__Zadanie.zd_Id'), nullable=False)
    zdr_IdRozrachunku = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)

    nz__Finanse = relationship(u'NzFinanse')
    zd__Zadanie = relationship(u'ZdZadanie')


t_zd_SpotkanieParametr = Table(
    u'zd_SpotkanieParametr', metadata,
    Column(u'zdsp_Id', Integer, nullable=False),
    Column(u'zdsp_ParamEwidId', Integer),
    Column(u'zdsp_Rodzaj', Integer),
    Column(u'zdsp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_CalyDzien', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_Poczatek', Integer, nullable=False),
    Column(u'zdsp_CzasTrwania', Integer, nullable=False),
    Column(u'zdsp_Opiekun', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdsp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdsp_Przypomnienie', Integer),
    Column(u'zdsp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdsp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_Status', Integer, nullable=False, server_default=text("((2))")),
    Column(u'zdsp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdsp_RodzajW', Integer),
    Column(u'zdsp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_CalyDzienW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_PoczatekW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_CzasTrwaniaW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_OpiekunW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdsp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdsp_PrzypomnienieW', Integer),
    Column(u'zdsp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdsp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdsp_StatusW', Integer, nullable=False, server_default=text("((2))")),
    Column(u'zdsp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdsp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


t_zd_TelefonParametr = Table(
    u'zd_TelefonParametr', metadata,
    Column(u'zdtp_Id', Integer, nullable=False),
    Column(u'zdtp_ParamEwidId', Integer),
    Column(u'zdtp_Rodzaj', Integer),
    Column(u'zdtp_Kierunek', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_Poczatek', Integer, nullable=False),
    Column(u'zdtp_CzasTrwania', Integer, nullable=False),
    Column(u'zdtp_Opiekun', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_Przypomnienie', Integer),
    Column(u'zdtp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdtp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_Status', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdtp_RodzajW', Integer),
    Column(u'zdtp_KierunekW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_PoczatekW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_CzasTrwaniaW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_OpiekunW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_PrzypomnienieW', Integer),
    Column(u'zdtp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdtp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdtp_StatusW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdtp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdtp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


class ZdUczestnik(Base):
    __tablename__ = u'zd_Uczestnik'

    zdk_Id = Column(Integer, primary_key=True)
    zdk_IdZadania = Column(ForeignKey(u'zd__Zadanie.zd_Id'), nullable=False)
    zdk_IdKlienta = Column(ForeignKey(u'adr__Ewid.adr_Id'), nullable=False)
    zdk_Rodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    zdk_Przypomniane = Column(BIT, nullable=False, server_default=text("((0))"))
    zdk_NastepnePrzypomnienie = Column(DateTime)
    zdk_WystapienieDoPrzypomnienia = Column(DateTime)

    adr__Ewid = relationship(u'AdrEwid')
    zd__Zadanie = relationship(u'ZdZadanie')


t_zd_ZadanieParametr = Table(
    u'zd_ZadanieParametr', metadata,
    Column(u'zdzp_Id', Integer, nullable=False),
    Column(u'zdzp_ParamEwidId', Integer),
    Column(u'zdzp_Rodzaj', Integer),
    Column(u'zdzp_BezCzasu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_CalyDzien', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_Poczatek', Integer, nullable=False),
    Column(u'zdzp_CzasTrwania', Integer, nullable=False),
    Column(u'zdzp_Opiekun', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdzp_Priorytet', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdzp_Przypomnienie', Integer),
    Column(u'zdzp_PokazujWKalendarzu', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_Kolor', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdzp_Prywatne', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_Status', Integer, nullable=False, server_default=text("((2))")),
    Column(u'zdzp_Uwagi', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdzp_RodzajW', Integer),
    Column(u'zdzp_BezCzasuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_CalyDzienW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_PoczatekW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_CzasTrwaniaW', Integer, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_OpiekunW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdzp_PriorytetW', Integer, nullable=False, server_default=text("((1))")),
    Column(u'zdzp_PrzypomnienieW', Integer),
    Column(u'zdzp_PokazujWKalendarzuW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_KolorW', String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdzp_PrywatneW', BIT, nullable=False, server_default=text("((0))")),
    Column(u'zdzp_StatusW', Integer, nullable=False, server_default=text("((2))")),
    Column(u'zdzp_UwagiW', String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



""")),
    Column(u'zdzp_FormaW', Integer, nullable=False, server_default=text("((0))"))
)


class ZdZadanie(Base):
    __tablename__ = u'zd__Zadanie'

    zd_Id = Column(Integer, primary_key=True)
    zd_IdZrodla = Column(Integer)
    zd_Rodzaj = Column(Integer, nullable=False)
    zd_Podtyp = Column(Integer)
    zd_Personel = Column(ForeignKey(u'adr__Ewid.adr_Id'))
    zd_CalyDzien = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_Poczatek = Column(DateTime, nullable=False)
    zd_Koniec = Column(DateTime)
    zd_PoczatekZCyklu = Column(DateTime)
    zd_Lokalizacja = Column(String(50, u'Polish_CI_AS'))
    zd_Temat = Column(String(100, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zd_Priorytet = Column(Integer, nullable=False, server_default=text("((2))"))
    zd_Kolor = Column(String(11, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zd_Interwal = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_CoIle = Column(Integer, nullable=False, server_default=text("((1))"))
    zd_Robocze = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_DniTygodnia = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_DzienMiesiaca = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_DefinicjaZlozona = Column(BIT, server_default=text("((0))"))
    zd_DzienPorzadek = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_DzienRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_Miesiac = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_RodzajPowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_IlePowtorzen = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_KoniecPowtorzen = Column(DateTime)
    zd_Status = Column(Integer)
    zd_Rezultat = Column(Integer)
    zd_PokazujWKalendarzu = Column(BIT, server_default=text("((0))"))
    zd_Kierunek = Column(Integer)
    zd_KiedyPrzypomnienie = Column(Integer)
    zd_OpisPowtorzen = Column(String(255, u'Polish_CI_AS'))
    zd_BezCzasu = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_NastepnePrzypomnienie = Column(DateTime)
    zd_Przypomniane = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_Uwagi = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zd_Uczestnicy = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zd_Prywatne = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_Transakcja = Column(Integer)
    zd_FormaDzialaniaWindykacyjnego = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_Klasa = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_NotaOdsetkowa = Column(ForeignKey(u'nz__Finanse.nzf_Id'))
    zd_WezwanieDoZaplaty = Column(ForeignKey(u'zw__ZdarzenieWindykacyjne.zwz_Id'))
    zd_Dluznik = Column(String(255, u'Polish_CI_AS'))
    zd_LokalizacjaMapy = Column(Unicode(256))
    zd_WystapienieDoPrzypomnienia = Column(DateTime)
    zd_DokumentId = Column(ForeignKey(u'dok__Dokument.dok_Id'))
    zd_DokumentUwagi = Column(String(500, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zd_DokumentPrzepisuj = Column(BIT, nullable=False, server_default=text("((0))"))
    zd_WystawionyDokId = Column(Integer)
    zd_ZlecenieId = Column(Integer)
    zd_LiczbaUczestnikowBezPersonelu = Column(Integer, nullable=False, server_default=text("((0))"))
    zd_LiczbaUczestnikowWszystkich = Column(Integer, nullable=False, server_default=text("((0))"))

    dok__Dokument = relationship(u'DokDokument')
    nz__Finanse = relationship(u'NzFinanse')
    adr__Ewid = relationship(u'AdrEwid')
    zw__ZdarzenieWindykacyjne = relationship(u'ZwZdarzenieWindykacyjne')


class ZlpParametryZlecen(Base):
    __tablename__ = u'zlp_ParametryZlecen'

    zlpp_Id = Column(Integer, primary_key=True)
    zlpp_IdDomyslnegoFormatuNumeracji = Column(ForeignKey(u'sl_FormatNumeracji.fn_Id'), nullable=False)

    sl_FormatNumeracji = relationship(u'SlFormatNumeracji')


class ZlpZlecenie(Base):
    __tablename__ = u'zlp__Zlecenie'

    zlpz_Id = Column(Integer, primary_key=True)
    zlpz_NumerZlecenia = Column(String(30, u'Polish_CI_AS'), nullable=False)
    zlpz_DataRejestracjiZlecenia = Column(DateTime)
    zlpz_DataPlanowanegoRozpoczeciaZlecenia = Column(DateTime)
    zlpz_DataPlanowanegoZakonczeniaZlecenia = Column(DateTime)
    zlpz_DataRzeczywistegoRozpoczeciaZlecenia = Column(DateTime)
    zlpz_DataRzeczywistegoZakonczeniaZlecenia = Column(DateTime)
    zlpz_TerminWykonania = Column(DateTime)
    zlpz_IdKontrahenta = Column(ForeignKey(u'kh__Kontrahent.kh_Id'), nullable=False)
    zlpz_Nazwa = Column(String(50, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zlpz_Opis = Column(String(2000, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zlpz_Analityka = Column(String(5, u'Polish_CI_AS'))
    zlpz_StatusZlecenia = Column(Integer, nullable=False)
    zlpz_MPK = Column(ForeignKey(u'st_MPK.stm_Id'))

    kh__Kontrahent = relationship(u'KhKontrahent')
    st_MPK = relationship(u'StMPK')


class ZpkParametr(Base):
    __tablename__ = u'zpk_Parametr'

    zpkp_Id = Column(Integer, primary_key=True)
    zpkp_BrakKontrahenta = Column(BIT, nullable=False, server_default=text("((0))"))
    zpkp_KontrolaNumeru = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzeszpiszKhId = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszKatId = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszData = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszDataGosp = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszArt17 = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszOpis = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszBO = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszBOWolny = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszVat = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszWydDochZwol = Column(BIT, nullable=False, server_default=text("((1))"))
    zpkp_PrzepiszWydDochZwolLataub = Column(BIT, nullable=False, server_default=text("((1))"))


class ZpkKsiega(Base):
    __tablename__ = u'zpk__Ksiega'

    zpk_Id = Column(Integer, primary_key=True)
    zpk_IdRoku = Column(Integer, nullable=False)
    zpk_DataZdarzenia = Column(DateTime, nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_Rodzaj = Column(Integer, nullable=False)
    zpk_Uniewazniony = Column(BIT, nullable=False, server_default=text("((0))"))
    zpk_TypObiektu = Column(Integer, nullable=False)
    zpk_IdObiektu = Column(Integer)
    zpk_Importowany = Column(BIT, nullable=False)
    zpk_DataZdarzeniaGospodarczego = Column(DateTime, nullable=False)
    zpk_NrDokumentu = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhId = Column(ForeignKey(u'kh__Kontrahent.kh_Id'))
    zpk_KhSymbol = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhNazwa = Column(String(50, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhNazwaPelna = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhUlica = Column(String(60, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhMiasto = Column(String(40, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhKodPocztowy = Column(String(8, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KhNIP = Column(String(20, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_PrzychodDzialNieodpl = Column(MONEY, nullable=False, server_default=text("((0))"))
    zpk_PrzychodSpTowIUsl = Column(MONEY, nullable=False, server_default=text("((0))"))
    zpk_PrzychodPozostale = Column(MONEY, nullable=False, server_default=text("((0))"))
    zpk_PrzychodRazem = Column(MONEY)
    zpk_KosztyUP = Column(MONEY, nullable=False, server_default=text("((0))"))
    zpk_KosztyPozostale = Column(MONEY, nullable=False, server_default=text("((0))"))
    zpk_Uwagi = Column(String(500, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zpk_KategoriaId = Column(ForeignKey(u'sl_Kategoria.kat_Id'))
    zpk_BilansOtwarcia = Column(BIT, nullable=False, server_default=text("((0))"))
    zpk_DochodWolny = Column(BIT, nullable=False, server_default=text("((0))"))
    zpk_PrzychodRodzaj = Column(Integer, nullable=False, server_default=text("((0))"))
    zpk_WydDochZwol = Column(BIT, nullable=False, server_default=text("((0))"))
    zpk_WydDochZwolLataUb = Column(BIT, nullable=False, server_default=text("((0))"))
    zpk_IdDokImport = Column(Integer)
    zpk_TypDokImport = Column(Integer)
    zpk_ImportPochodzenie = Column(Integer, nullable=False, server_default=text("((0))"))
    zpk_KorektaSN = Column(BIT, nullable=False, server_default=text("((0))"))

    sl_Kategoria = relationship(u'SlKategoria')
    kh__Kontrahent = relationship(u'KhKontrahent')


t_zst_EwidProfil = Table(
    u'zst_EwidProfil', metadata,
    Column(u'pf_IdObiektu', ForeignKey(u'zst__Ewid.zst_Id'), primary_key=True, nullable=False),
    Column(u'pf_IdUzytkownika', ForeignKey(u'pd_Uzytkownik.uz_Id'), primary_key=True, nullable=False)
)


class ZstTemp(Base):
    __tablename__ = u'zst_Temp'

    zsm_Id = Column(Integer, primary_key=True)
    zsm_Zawartosc = Column(String(8000, u'Polish_CI_AS'), nullable=False)


class ZstWlasneXML(Base):
    __tablename__ = u'zst_WlasneXML'

    zstx_Id = Column(Integer, primary_key=True)
    zstx_ZestId = Column(ForeignKey(u'zst__Ewid.zst_Id'), nullable=False)
    zstx_DefSciezka = Column(String(512, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zstx_Definicja = Column(LargeBinary, nullable=False)
    zstx_TranSciezka = Column(String(512, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zstx_Transformacja = Column(LargeBinary, nullable=False)
    zstx_ZapiszWynikXML = Column(BIT, nullable=False, server_default=text("((0))"))
    zstx_PlikWynikXML = Column(String(512, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zstx_ZapiszWynikHTM = Column(BIT, nullable=False, server_default=text("((0))"))
    zstx_PlikWynikHTM = Column(String(512, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))

    zst__Ewid = relationship(u'ZstEwid')


class ZstEwid(Base):
    __tablename__ = u'zst__Ewid'

    zst_Id = Column(Integer, primary_key=True)
    zst_Nazwa = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zst_Opis = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zst_Typ = Column(Integer, nullable=False, server_default=text("((0))"))
    zst_ProgFlagi = Column(Integer, nullable=False, server_default=text("((0))"))
    zst_User = Column(BIT, nullable=False, server_default=text("((0))"))
    zst_Tresc = Column(Text(collation=u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zst_Dll = Column(String(512, u'Polish_CI_AS'), server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zst_ProgId = Column(String(255, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zst_IdKategorii = Column(ForeignKey(u'sl_KategoriaZestawien.kz_Id'))
    zst_DataUzycia = Column(DateTime)
    zst_Ikona = Column(Integer)
    zst_TrescDefiniowalne = Column(LargeBinary)

    sl_KategoriaZestawien = relationship(u'SlKategoriaZestawien')
    pd_Uzytkownik = relationship(u'PdUzytkownik', secondary=u'zst_EwidProfil')


class ZwRozrachunek(Base):
    __tablename__ = u'zw_Rozrachunek'

    zwr_Id = Column(Integer, primary_key=True)
    zwr_idZW = Column(ForeignKey(u'zw__ZdarzenieWindykacyjne.zwz_Id'), nullable=False)
    zwr_idRoz = Column(ForeignKey(u'nz__Finanse.nzf_Id'), nullable=False)
    zwr_Odsetki = Column(MONEY, nullable=False)
    zwr_TypOdsetek = Column(Integer, nullable=False)
    zwr_StopaOdsetek = Column(MONEY, nullable=False)
    zwr_Status = Column(Integer, nullable=False)
    zwr_DataPowstania = Column(DateTime, nullable=False)
    zwr_NumerPelny = Column(String(144, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zwr_TerminPlatnosci = Column(DateTime, nullable=False)
    zwr_Spoznienie = Column(Integer, nullable=False)
    zwr_NalPierwotnaWaluta = Column(MONEY)
    zwr_NalWaluta = Column(MONEY, nullable=False)
    zwr_TxtWaluta = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zwr_NalPierwotna = Column(MONEY)
    zwr_Naleznosc = Column(MONEY, nullable=False)

    nz__Finanse = relationship(u'NzFinanse')
    zw__ZdarzenieWindykacyjne = relationship(u'ZwZdarzenieWindykacyjne')


class ZwZdarzenieWindykacyjne(Base):
    __tablename__ = u'zw__ZdarzenieWindykacyjne'

    zwz_Id = Column(Integer, primary_key=True)
    zwz_IdDluznika = Column(Integer, nullable=False)
    zwz_TypDluznika = Column(Integer, nullable=False)
    zwz_OdsetkiNaDzien = Column(DateTime, nullable=False)
    zwz_WartoscNaleznosci = Column(MONEY, nullable=False)
    zwz_WartoscOdsetek = Column(MONEY, nullable=False)
    zwz_OpisWezwania = Column(String(255, u'Polish_CI_AS'))
    zwz_TypWezwania = Column(ForeignKey(u'sl_FormaDzialaniaWindykacyjnego.fdw_Id'), nullable=False)
    zwz_DataWystawieniaWezwania = Column(DateTime, nullable=False)
    zwz_TerminPlatnosci = Column(DateTime, nullable=False)
    zwz_IdRachunekBankowy = Column(ForeignKey(u'rb__RachBankowy.rb_Id'), nullable=False)
    zwz_IdWystawil = Column(ForeignKey(u'pd_Uzytkownik.uz_Id'), nullable=False)
    zwz_Waluta = Column(String(3, u'Polish_CI_AS'), nullable=False, server_default=text("""\


--czas UsuwanieDefaultow end
--czas DodawanieDefaultow start

create default [DZeroString] as ''



"""))
    zwz_IdHistAdr = Column(Integer)

    rb__RachBankowy = relationship(u'RbRachBankowy')
    pd_Uzytkownik = relationship(u'PdUzytkownik')
    sl_FormaDzialaniaWindykacyjnego = relationship(u'SlFormaDzialaniaWindykacyjnego')
