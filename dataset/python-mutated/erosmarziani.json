[
    {
        "func_name": "PedirNumero",
        "original": "def PedirNumero():\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')",
        "mutated": [
            "def PedirNumero():\n    if False:\n        i = 10\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')",
            "def PedirNumero():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')",
            "def PedirNumero():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')",
            "def PedirNumero():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')",
            "def PedirNumero():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    while True:\n        ingresado = input('Ingrese un numero: ')\n        try:\n            numero = int(ingresado)\n            if numero < 10 and numero > 0:\n                return numero\n            else:\n                print('Ingrese un numero del 1 al 10')\n        except ValueError:\n            print('Ingrese un numero correcto')"
        ]
    },
    {
        "func_name": "TablaMultiplicar",
        "original": "def TablaMultiplicar(numero):\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')",
        "mutated": [
            "def TablaMultiplicar(numero):\n    if False:\n        i = 10\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')",
            "def TablaMultiplicar(numero):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')",
            "def TablaMultiplicar(numero):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')",
            "def TablaMultiplicar(numero):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')",
            "def TablaMultiplicar(numero):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print(f'TABLA DEL {numero} ')\n    for i in range(1, 11):\n        print(f'{numero} x {i} = {numero * i}')"
        ]
    }
]