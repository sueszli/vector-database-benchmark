[
    {
        "func_name": "ws2812",
        "original": "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()",
        "mutated": [
            "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    if False:\n        i = 10\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()",
            "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()",
            "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()",
            "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()",
            "@rp2.asm_pio(sideset_init=rp2.PIO.OUT_LOW, out_shiftdir=rp2.PIO.SHIFT_LEFT, autopull=True, pull_thresh=24)\ndef ws2812():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    T1 = 2\n    T2 = 5\n    T3 = 3\n    wrap_target()\n    label('bitloop')\n    out(x, 1).side(0)[T3 - 1]\n    jmp(not_x, 'do_zero').side(1)[T1 - 1]\n    jmp('bitloop').side(1)[T2 - 1]\n    label('do_zero')\n    nop().side(0)[T2 - 1]\n    wrap()"
        ]
    }
]