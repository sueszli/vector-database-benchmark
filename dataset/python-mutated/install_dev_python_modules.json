[
    {
        "func_name": "main",
        "original": "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    \"\"\"Especially on macOS, there may be missing wheels for new major Python versions, which means that\n    some dependencies may have to be built from source. You may find yourself needing to install\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\n    \"\"\"\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())",
        "mutated": [
            "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    if False:\n        i = 10\n    'Especially on macOS, there may be missing wheels for new major Python versions, which means that\\n    some dependencies may have to be built from source. You may find yourself needing to install\\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\\n    '\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())",
            "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Especially on macOS, there may be missing wheels for new major Python versions, which means that\\n    some dependencies may have to be built from source. You may find yourself needing to install\\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\\n    '\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())",
            "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Especially on macOS, there may be missing wheels for new major Python versions, which means that\\n    some dependencies may have to be built from source. You may find yourself needing to install\\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\\n    '\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())",
            "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Especially on macOS, there may be missing wheels for new major Python versions, which means that\\n    some dependencies may have to be built from source. You may find yourself needing to install\\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\\n    '\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())",
            "def main(quiet: bool, extra_packages: List[str], include_prebuilt_grpcio_wheel: Optional[bool]) -> None:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Especially on macOS, there may be missing wheels for new major Python versions, which means that\\n    some dependencies may have to be built from source. You may find yourself needing to install\\n    system packages such as freetype, gfortran, etc.; on macOS, Homebrew should suffice.\\n    '\n    install_targets: List[str] = [*extra_packages]\n    install_targets += ['-e python_modules/dagster[pyright,ruff,test]', '-e python_modules/dagster-pipes', '-e python_modules/dagster-graphql', '-e python_modules/dagster-test', '-e python_modules/dagster-webserver', '-e python_modules/dagit', '-e python_modules/automation', '-e python_modules/libraries/dagster-managed-elements', '-e python_modules/libraries/dagster-airbyte', '-e python_modules/libraries/dagster-airflow', '-e python_modules/libraries/dagster-aws[test]', '-e python_modules/libraries/dagster-celery', '-e python_modules/libraries/dagster-celery-docker', '-e python_modules/libraries/dagster-dask[yarn,pbs,kube]', '-e python_modules/libraries/dagster-databricks', '-e python_modules/libraries/dagster-datadog', '-e python_modules/libraries/dagster-datahub', '-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-docker', '-e python_modules/libraries/dagster-gcp', '-e python_modules/libraries/dagster-gcp-pandas', '-e python_modules/libraries/dagster-gcp-pyspark', '-e python_modules/libraries/dagster-embedded-elt', '-e python_modules/libraries/dagster-fivetran', '-e python_modules/libraries/dagster-k8s', '-e python_modules/libraries/dagster-celery-k8s', '-e python_modules/libraries/dagster-github', '-e python_modules/libraries/dagster-mlflow', '-e python_modules/libraries/dagster-mysql', '-e python_modules/libraries/dagster-pagerduty', '-e python_modules/libraries/dagster-pandas', '-e python_modules/libraries/dagster-papertrail', '-e python_modules/libraries/dagster-postgres', '-e python_modules/libraries/dagster-prometheus', '-e python_modules/libraries/dagster-pyspark', '-e python_modules/libraries/dagster-shell', '-e python_modules/libraries/dagster-slack', '-e python_modules/libraries/dagster-spark', '-e python_modules/libraries/dagster-ssh', '-e python_modules/libraries/dagster-twilio', '-e python_modules/libraries/dagstermill', '-e integration_tests/python_modules/dagster-k8s-test-infra', '-e python_modules/libraries/dagster-azure', '-e python_modules/libraries/dagster-msteams', '-e python_modules/libraries/dagster-duckdb', '-e python_modules/libraries/dagster-duckdb-pandas', '-e python_modules/libraries/dagster-duckdb-polars', '-e python_modules/libraries/dagster-duckdb-pyspark', '-e python_modules/libraries/dagster-wandb', '-e python_modules/libraries/dagster-deltalake', '-e python_modules/libraries/dagster-deltalake-pandas', '-e python_modules/libraries/dagster-deltalake-polars', '-e helm/dagster/schema[test]', '-e .buildkite/dagster-buildkite']\n    if sys.version_info > (3, 7):\n        install_targets += ['-e python_modules/libraries/dagster-dbt', '-e python_modules/libraries/dagster-pandera', '-e python_modules/libraries/dagster-snowflake', '-e python_modules/libraries/dagster-snowflake-pandas']\n    if sys.version_info > (3, 6) and sys.version_info < (3, 10):\n        install_targets += []\n    if include_prebuilt_grpcio_wheel:\n        install_targets += ['--find-links', 'https://github.com/dagster-io/build-grpcio/wiki/Wheels']\n    cmd = ['pip', 'install'] + install_targets\n    if quiet is not None:\n        cmd.append(f\"-{'q' * quiet}\")\n    p = subprocess.Popen(' '.join(cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)\n    print(' '.join(cmd))\n    while True:\n        output = p.stdout.readline()\n        if p.poll() is not None:\n            break\n        if output:\n            print(output.decode('utf-8').strip())"
        ]
    }
]