[
    {
        "func_name": "countRectangles",
        "original": "def countRectangles(self, rectangles, points):\n    \"\"\"\n        :type rectangles: List[List[int]]\n        :type points: List[List[int]]\n        :rtype: List[int]\n        \"\"\"\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]",
        "mutated": [
            "def countRectangles(self, rectangles, points):\n    if False:\n        i = 10\n    '\\n        :type rectangles: List[List[int]]\\n        :type points: List[List[int]]\\n        :rtype: List[int]\\n        '\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]",
            "def countRectangles(self, rectangles, points):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        :type rectangles: List[List[int]]\\n        :type points: List[List[int]]\\n        :rtype: List[int]\\n        '\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]",
            "def countRectangles(self, rectangles, points):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        :type rectangles: List[List[int]]\\n        :type points: List[List[int]]\\n        :rtype: List[int]\\n        '\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]",
            "def countRectangles(self, rectangles, points):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        :type rectangles: List[List[int]]\\n        :type points: List[List[int]]\\n        :rtype: List[int]\\n        '\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]",
            "def countRectangles(self, rectangles, points):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        :type rectangles: List[List[int]]\\n        :type points: List[List[int]]\\n        :rtype: List[int]\\n        '\n    max_y = max((y for (_, y) in rectangles))\n    buckets = [[] for _ in xrange(max_y + 1)]\n    for (x, y) in rectangles:\n        buckets[y].append(x)\n    for bucket in buckets:\n        bucket.sort()\n    return [sum((len(buckets[y]) - bisect.bisect_left(buckets[y], x) for y in xrange(y, max_y + 1))) for (x, y) in points]"
        ]
    }
]