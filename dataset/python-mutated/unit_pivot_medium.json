[
    {
        "func_name": "pivot",
        "original": "def pivot():\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'",
        "mutated": [
            "def pivot():\n    if False:\n        i = 10\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'",
            "def pivot():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'",
            "def pivot():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'",
            "def pivot():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'",
            "def pivot():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    df = h2o.create_frame(rows=1000000, cols=3, factors=10, categorical_fraction=1.0 / 3, time_fraction=1.0 / 3, real_fraction=1.0 / 3, real_range=100, missing_fraction=0.0, seed=123)\n    pdf = df.as_data_frame()\n    ppdf = pdf.pivot(values='C3', index='C1', columns='C2')\n    ppdf = ppdf.fillna(0.0)\n    ppdfh2o = h2o.H2OFrame(ppdf)\n    pivoted = df.pivot(index='C1', column='C2', value='C3')\n    pivoted.impute(values=[0] * 11)\n    assert abs((pivoted[:, 1:11] - ppdfh2o).sum(return_frame=False)) < 1e-11, 'Difference between Pandas pivot too high'\n    print('Testing size: ')\n    for s in [100, 200, 300, 400, 500, 1000, 2000, 4211, 100000]:\n        print(str(s))\n        df1 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['a'] * s, 'value': [1] * s})\n        df2 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['b'] * s, 'value': [2] * s})\n        df3 = h2o.H2OFrame({'index': list(range(1, s + 1)), 'column': ['c'] * s, 'value': [3] * s})\n        dfall = df1.rbind(df2)\n        dfall = dfall.rbind(df3)\n        res = dfall.pivot(index='index', column='column', value='value')\n        assert res['a'].sum()[0, 0] == 1 * s, \"Wrong sum of 'a' column\"\n        assert res['b'].sum()[0, 0] == 2 * s, \"Wrong sum of 'b' column\"\n        assert res['c'].sum()[0, 0] == 3 * s, \"Wrong sum of 'c' column\"\n    df = h2o.create_frame(rows=1000001, randomize=False, integer_fraction=0.0, categorical_fraction=0.0, time_fraction=0.0, cols=2, value=1.0, missing_fraction=0.0)\n    df2 = h2o.create_frame(rows=1000000, integer_fraction=0.0, categorical_fraction=1.0, time_fraction=0.0, cols=1, factors=2, missing_fraction=0.0)\n    df2b = df2.rbind(h2o.H2OFrame({'C1': 'b'}))\n    df2b.set_names(['C3'])\n    dft = df.cbind(df2b)\n    p = dft.pivot(index='C1', value='C2', column='C3')\n    assert len(p.columns) == 4, 'Wrong number of columns for last label test'\n    assert len(p) == 1, 'Wrong number of rows for last label test'"
        ]
    }
]