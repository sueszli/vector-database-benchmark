[
    {
        "func_name": "__init__",
        "original": "def __init__(self, cmd='raxmlHPC', **kwargs):\n    \"\"\"Initialize the class.\"\"\"\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000",
        "mutated": [
            "def __init__(self, cmd='raxmlHPC', **kwargs):\n    if False:\n        i = 10\n    'Initialize the class.'\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000",
            "def __init__(self, cmd='raxmlHPC', **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Initialize the class.'\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000",
            "def __init__(self, cmd='raxmlHPC', **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Initialize the class.'\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000",
            "def __init__(self, cmd='raxmlHPC', **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Initialize the class.'\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000",
            "def __init__(self, cmd='raxmlHPC', **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Initialize the class.'\n    self.parameters = [_Option(['-a', 'weight_filename'], 'Name of a column weight file to assign individual weights to each column of the alignment. Those weights must be integers separated by any type and number of whitespaces within a separate file.', filename=True, equate=False), _Option(['-b', 'bootstrap_seed'], 'Random seed for bootstrapping.', equate=False), _Option(['-c', 'num_categories'], 'Number of distinct rate categories for RAxML when evolution model is set to GTRCAT or GTRMIX.Individual per-site rates are categorized into this many rate categories to accelerate computations. Default: 25.', equate=False), _Switch(['-d', 'random_starting_tree'], 'Start ML optimization from random starting tree.'), _Option(['-e', 'epsilon'], 'Set model optimization precision in log likelihood units for final optimization of tree topology under MIX/MIXI or GAMMA/GAMMAI.Default: 0.1 for models not using proportion of invariant sites estimate; 0.001 for models using proportion of invariant sites estimate.', equate=False), _Option(['-E', 'exclude_filename'], \"An exclude file name, containing a specification of alignment positions you wish to exclude.  Format is similar to Nexus, the file shall contain entries like '100-200 300-400'; to exclude a single column write, e.g., '100-100'. If you use a mixed model, an appropriately adapted model file will be written.\", filename=True, equate=False), _Option(['-f', 'algorithm'], \"\\n                        Select algorithm:\\n\\n                        a: Rapid Bootstrap analysis and search for best-scoring ML\\n                        tree in one program run.\\n\\n                        b: Draw bipartition information on a tree provided with '-t'\\n                        based on multiple trees (e.g. form a bootstrap) in a file\\n                        specified by '-z'.\\n\\n                        c: Check if the alignment can be properly read by RAxML.\\n\\n                        d: New rapid hill-climbing (DEFAULT).\\n\\n                        e: Optimize model+branch lengths for given input tree under\\n                        GAMMA/GAMMAI only.\\n\\n                        g: Compute per site log Likelihoods for one ore more trees\\n                        passed via '-z' and write them to a file that can be read\\n                        by CONSEL.\\n\\n                        h: Compute log likelihood test (SH-test) between best tree\\n                        passed via '-t' and a bunch of other trees passed via '-z'.\\n\\n                        i: Perform a really thorough bootstrap, refinement of final\\n                        bootstrap tree under GAMMA and a more exhaustive algorithm.\\n\\n                        j: Generate a bunch of bootstrapped alignment files from an\\n                        original alignment file.\\n\\n                        m: Compare bipartitions between two bunches of trees passed\\n                        via '-t' and '-z' respectively. This will return the\\n                        Pearson correlation between all bipartitions found in the\\n                        two tree files. A file called\\n                        RAxML_bipartitionFrequencies.outputFileName will be\\n                        printed that contains the pair-wise bipartition\\n                        frequencies of the two sets.\\n\\n                        n: Compute the log likelihood score of all trees contained\\n                        in a tree file provided by '-z' under GAMMA or\\n                        GAMMA+P-Invar.\\n\\n                        o: Old and slower rapid hill-climbing.\\n\\n                        p: Perform pure stepwise MP addition of new sequences to an\\n                        incomplete starting tree.\\n\\n                        s: Split up a multi-gene partitioned alignment into the\\n                        respective subalignments.\\n\\n                        t: Do randomized tree searches on one fixed starting tree.\\n\\n                        w: Compute ELW test on a bunch of trees passed via '-z'.\\n\\n                        x: Compute pair-wise ML distances, ML model parameters will\\n                        be estimated on an MP starting tree or a user-defined\\n                        tree passed via '-t', only allowed for GAMMA-based models\\n                        of rate heterogeneity.\\n                        \", checker_function=lambda x: isinstance(x, str) and len(x) == 1, equate=False), _Option(['-g', 'grouping_constraint'], 'File name of a multifurcating constraint tree. this tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-i', 'rearrangements'], 'Initial rearrangement setting for the subsequent application of topological changes phase.', equate=False), _Switch(['-j', 'checkpoints'], 'Write checkpoints (intermediate tree topologies).'), _Switch(['-k', 'bootstrap_branch_lengths'], 'Print bootstrapped trees with branch lengths. The bootstraps will run a bit longer, because model parameters will be optimized at the end of each run. Use with CATMIX/PROTMIX or GAMMA/GAMMAI.'), _Option(['-l', 'cluster_threshold'], 'Threshold for sequence similarity clustering. RAxML will then print out an alignment to a file called sequenceFileName.reducedBy.threshold that only contains sequences <= the specified threshold that must be between 0.0 and 1.0. RAxML uses the QT-clustering algorithm to perform this task. In addition, a file called RAxML_reducedList.outputFileName will be written that contains clustering information.', equate=False), _Option(['-L', 'cluster_threshold_fast'], \"Same functionality as '-l', but uses a less exhaustive and thus faster clustering algorithm. This is intended for very large datasets with more than 20,000-30,000 sequences.\", equate=False), _Option(['-m', 'model'], \"Model of Nucleotide or Amino Acid Substitution:\\n\\n                        NUCLEOTIDES:\\n\\n                        GTRCAT         : GTR + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use GTRMIX instead\\n\\n                        GTRGAMMA       : GTR + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        GTRMIX         : Inference of the tree under GTRCAT\\n                        and thereafter evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRCAT_GAMMA   : Inference of the tree with site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under GTRGAMMA\\n\\n                        GTRGAMMAI      : Same as GTRGAMMA, but with estimate of proportion of invariable sites\\n\\n                        GTRMIXI        : Same as GTRMIX, but with estimate of proportion of invariable sites\\n\\n                        GTRCAT_GAMMAI  : Same as GTRCAT_GAMMA, but with estimate of proportion of invariable sites\\n\\n                        AMINO ACIDS:\\n\\n                        PROTCATmatrixName[F]    : specified AA matrix + Optimization of substitution rates + Optimization of site-specific\\n                        evolutionary rates which are categorized into numberOfCategories distinct\\n                        rate categories for greater computational efficiency\\n                        if you do a multiple analysis with  '-#' or '-N' but without bootstrapping the program\\n                        will use PROTMIX... instead\\n\\n                        PROTGAMMAmatrixName[F]  : specified AA matrix + Optimization of substitution rates + GAMMA model of rate\\n                        heterogeneity (alpha parameter will be estimated)\\n\\n                        PROTMIXmatrixName[F]    : Inference of the tree under specified AA matrix + CAT\\n                        and thereafter evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTCAT_GAMMAmatrixName[F] : Inference of the tree under specified AA matrix and site-specific evolutionary rates.\\n                        However, here rates are categorized using the 4 discrete GAMMA rates.\\n                        Evaluation of the final tree topology under specified AA matrix + GAMMA\\n\\n                        PROTGAMMAImatrixName[F] : Same as PROTGAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTMIXImatrixName[F]   : Same as PROTMIXmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        PROTCAT_GAMMAImatrixName[F] : Same as PROTCAT_GAMMAmatrixName[F], but with estimate of proportion of invariable sites\\n\\n                        Available AA substitution models: DAYHOFF, DCMUT, JTT, MTREV, WAG, RTREV, CPREV, VT, BLOSUM62, MTMAM, GTR\\n                        With the optional 'F' appendix you can specify if you want to use empirical base frequencies\\n                        Please not that for mixed models you can in addition specify the per-gene AA model in\\n                        the mixed model file (see manual for details)\\n                        \", equate=False), _Switch(['-M', 'partition_branch_lengths'], \"Switch on estimation of individual per-partition branch lengths. Only has effect when used in combination with 'partition_filename' ('-q'). Branch lengths for individual partitions will be printed to separate files.  A weighted average of the branch lengths is computed by using the respective partition lengths. \"), _Option(['-n', 'name'], 'Name used in the output files.', filename=True, equate=False), _Option(['-o', 'outgroup'], \"Name of a single outgroup or a comma-separated list of outgroups, eg '-o Rat' or '-o Rat,Mouse'. In case that multiple outgroups are not monophyletic the first name in the list will be selected as outgroup. Don't leave spaces between taxon names!\", checker_function=lambda x: len(x.split()) == 1, equate=False), _Option(['-q', 'partition_filename'], 'File name containing the assignment of models to alignment partitions for multiple models of substitution. For the syntax of this file please consult the RAxML manual.', filename=True, equate=False), _Option(['-p', 'parsimony_seed'], 'Random number seed for the parsimony inferences. This allows you to reproduce your results and will help developers debug the program. This option HAS NO EFFECT in the parallel MPI version.', equate=False), _Option(['-P', 'protein_model'], 'File name of a user-defined AA (Protein) substitution model. This file must contain 420 entries, the first 400 being the AA substitution rates (this must be a symmetric matrix) and the last 20 are the empirical base frequencies.', filename=True, equate=False), _Option(['-r', 'binary_constraint'], 'File name of a binary constraint tree. This tree does not need to be comprehensive, i.e. contain all taxa.', filename=True, equate=False), _Option(['-s', 'sequences'], 'Name of the alignment data file, in PHYLIP format.', filename=True, equate=False), _Option(['-t', 'starting_tree'], 'File name of a user starting tree, in Newick format.', filename=True, equate=False), _Option(['-T', 'threads'], 'Number of threads to run. PTHREADS VERSION ONLY! Make sure to set this at most the number of CPUs you have on your machine, otherwise, there will be a huge performance decrease!', equate=False), _Option(['-u', 'num_bootstrap_searches'], 'Number of multiple bootstrap searches per replicate. Use this to obtain better ML trees for each replicate. Default: 1 ML search per bootstrap replicate.', equate=False), _Switch(['-v', 'version'], 'Display version information.'), _Option(['-w', 'working_dir'], 'Name of the working directory where RAxML will write its output files. Default: current directory.', filename=True, equate=False), _Option(['-x', 'rapid_bootstrap_seed'], 'Random seed for rapid bootstrapping.', equate=False), _Switch(['-y', 'parsimony'], 'Only compute a parsimony starting tree, then exit.'), _Option(['-z', 'bipartition_filename'], \"Name of a file containing multiple trees, e.g. from a bootstrap run, that shall be used to draw bipartition values onto a tree provided with '-t'. It can also be used to compute per-site log likelihoods in combination with '-f g', and to read a bunch of trees for a couple of other options ('-f h', '-f m', '-f n').\", filename=True, equate=False), _Option(['-N', '-#', 'num_replicates'], \"Number of alternative runs on distinct starting trees. In combination with the '-b' option, this will invoke a multiple bootstrap analysis. DEFAULT: 1 single analysis.Note that '-N' has been added as an alternative since '-#' sometimes caused problems with certain MPI job submission systems, since '-#' is often used to start comments. \", equate=False)]\n    AbstractCommandline.__init__(self, cmd, **kwargs)\n    if not self.parsimony_seed:\n        self.parsimony_seed = 10000"
        ]
    }
]