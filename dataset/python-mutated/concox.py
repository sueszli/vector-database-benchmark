import binascii
from scapy.packet import Packet, bind_layers
from scapy.layers.inet import TCP, UDP
from scapy.fields import BitField, BitEnumField, X3BytesField, ShortField, XShortField, FieldLenField, PacketLenField, XByteField, XByteEnumField, ByteEnumField, StrFixedLenField, ConditionalField, FlagsField, ByteField, IntField, XIntField, StrLenField, ScalingField
PROTOCOL_NUMBERS = {1: 'LOGIN MESSAGE', 19: 'HEARTBEAT', 18: 'LOCATION', 22: 'ALARM', 128: 'ONLINE COMMAND', 21: 'ONLINE COMMAND REPLYED', 148: 'INFORMATION TRANSMISSION'}
SUBPROTOCOL_NUMBERS = {0: 'EXTERNAL POWER VOLTAGE', 4: 'TERMINAL STATUS SYNCHRONIZATION', 5: 'DOOR STATUS'}
VOLTAGE_LEVELS = {0: 'No Power (Shutdown)', 1: 'Extremely Low Battery', 2: 'Very Low Battery', 3: 'Low Battery', 4: 'Medium', 5: 'High', 6: 'Very High'}
GSM_SIGNAL_STRENGTH = {0: 'No Signal', 1: 'Extremely Weak Signal', 2: 'Very Weak Signal', 3: 'Good Signal', 4: 'Strong Signal'}
LANGUAGE = {1: 'Chinese', 2: 'English'}

class BCDStrFixedLenField(StrFixedLenField):

    def i2h(self, pkt, x):
        if False:
            i = 10
            return i + 15
        if isinstance(x, bytes):
            return binascii.b2a_hex(x)
        return binascii.a2b_hex(x)

class CRX1NewPacketContent(Packet):
    name = 'CRX1 New Packet Content'
    fields_desc = [XByteEnumField('protocol_number', 18, PROTOCOL_NUMBERS), ConditionalField(BCDStrFixedLenField('terminal_id', '00000000', length=8), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number == 1), ConditionalField(ByteField('year', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('month', 1), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('day', 1), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('hour', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('minute', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('second', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitField('gps_information_length', 0, 4), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitField('positioning_satellite_number', 0, 4), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ScalingField('latitude', 0, scaling=1.0 / 1800000, ndigits=6, fmt='!I'), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ScalingField('longitude', 0, scaling=1.0 / 1800000, ndigits=6, fmt='!I'), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('speed', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitField('course', 0, 10), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitEnumField('latitude_hemisphere', 0, 1, {0: 'South', 1: 'North'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitEnumField('longitude_hemisphere', 0, 1, {0: 'East', 1: 'West'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitEnumField('gps_been_positioning', 0, 1, {0: 'No', 1: 'Yes'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitEnumField('gps_status', 0, 1, {0: 'GPS real-time', 1: 'Differential positioning'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(BitField('course_status_reserved', 0, 2), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(ByteField('lbs_length', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (22,)), ConditionalField(XShortField('mcc', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(XByteField('mnc', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(XShortField('lac', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(X3BytesField('cell_id', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18, 22)), ConditionalField(IntField('mileage', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (18,) and (len(pkt.original) > 31)), ConditionalField(BitEnumField('defence', 0, 1, {0: 'Deactivated', 1: 'Activated'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(BitEnumField('acc', 0, 1, {0: 'Low', 1: 'High'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(BitEnumField('charge', 0, 1, {0: 'Not Charge', 1: 'Charging'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(BitEnumField('alarm', 0, 3, {0: 'Normal', 1: 'Vibration', 2: 'Power Cut', 3: 'Low Battery', 4: 'SOS'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(BitEnumField('gps_tracking', 0, 1, {0: 'Not Charge', 1: 'Charging'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(BitEnumField('oil_and_eletricity', 0, 1, {0: 'Connected', 1: 'Disconnected'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(ByteEnumField('voltage_level', 0, VOLTAGE_LEVELS), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(ByteEnumField('gsm_signal_strength', 0, GSM_SIGNAL_STRENGTH), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 22)), ConditionalField(FieldLenField('command_length', None, fmt='B', length_of='command_content'), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (128, 21)), ConditionalField(XIntField('server_flag_bit', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (128, 21)), ConditionalField(StrLenField('command_content', '', length_from=lambda pkt: pkt.command_length - 4), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (128, 21)), ConditionalField(ByteEnumField('alarm_extended', 0, {0: 'Normal', 1: 'SOS', 2: 'Power cut', 3: 'Vibration', 4: 'Enter fence', 5: 'Exit fence', 6: 'Over speed', 9: 'Displacement', 10: 'Enter GPS dead zone', 11: 'Exit GPS dead zone', 12: 'Power on', 13: 'GPS First fix notice', 14: 'Low battery', 15: 'Low battery protection', 16: 'SIM Change', 17: 'Power off', 18: 'Airplane mode', 19: 'Disassemble', 20: 'Door', 254: 'ACC On', 255: 'ACC Off'}), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 21, 22)), ConditionalField(ByteEnumField('language', 0, LANGUAGE), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (19, 21, 22)), ConditionalField(ByteEnumField('subprotocol_number', 0, SUBPROTOCOL_NUMBERS), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (148,)), ConditionalField(ShortField('external_battery', 0), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (148,) and (pkt.subprotocol_number == 0)), ConditionalField(FlagsField('external_io_detection', 0, 8, ['door_status', 'trigger_status', 'io_status']), lambda pkt: len(pkt.original) > 5 and pkt.protocol_number in (148,) and (pkt.subprotocol_number == 5)), XShortField('information_serial_number', None), XShortField('crc', None)]

class CRX1New(Packet):
    name = 'CRX1 New'
    fields_desc = [XShortField('start_bit', 30840), ConditionalField(ByteField('default_packet_length', None), lambda pkt: pkt.start_bit == 30840), ConditionalField(ShortField('extended_packet_length', None), lambda pkt: pkt.start_bit == 31097), ConditionalField(PacketLenField('default_packet_content', None, CRX1NewPacketContent, length_from=lambda pkt: pkt.default_packet_length), lambda pkt: pkt.start_bit == 30840), ConditionalField(PacketLenField('extended_packet_content', None, CRX1NewPacketContent, length_from=lambda pkt: pkt.extended_packet_length), lambda pkt: pkt.start_bit == 31097), XShortField('end_bit', 3338)]
bind_layers(TCP, CRX1New, sport=8821, dport=8821)
bind_layers(UDP, CRX1New, sport=8821, dport=8821)