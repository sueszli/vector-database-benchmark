[
    {
        "func_name": "tamper",
        "original": "def tamper(payload, **kwargs):\n    \"\"\"\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\n')\n\n    Requirement:\n        * MSSQL\n        * SQLite\n\n    Notes:\n        * Useful to bypass several web application firewalls\n        * Used during the ZeroNights SQL injection challenge,\n          https://proton.onsec.ru/contest/\n\n    >>> random.seed(0)\n    >>> tamper('1 AND 9227=9227')\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\n    \"\"\"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal",
        "mutated": [
            "def tamper(payload, **kwargs):\n    if False:\n        i = 10\n    \"\\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\\n')\\n\\n    Requirement:\\n        * MSSQL\\n        * SQLite\\n\\n    Notes:\\n        * Useful to bypass several web application firewalls\\n        * Used during the ZeroNights SQL injection challenge,\\n          https://proton.onsec.ru/contest/\\n\\n    >>> random.seed(0)\\n    >>> tamper('1 AND 9227=9227')\\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\\n    \"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal",
            "def tamper(payload, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"\\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\\n')\\n\\n    Requirement:\\n        * MSSQL\\n        * SQLite\\n\\n    Notes:\\n        * Useful to bypass several web application firewalls\\n        * Used during the ZeroNights SQL injection challenge,\\n          https://proton.onsec.ru/contest/\\n\\n    >>> random.seed(0)\\n    >>> tamper('1 AND 9227=9227')\\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\\n    \"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal",
            "def tamper(payload, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"\\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\\n')\\n\\n    Requirement:\\n        * MSSQL\\n        * SQLite\\n\\n    Notes:\\n        * Useful to bypass several web application firewalls\\n        * Used during the ZeroNights SQL injection challenge,\\n          https://proton.onsec.ru/contest/\\n\\n    >>> random.seed(0)\\n    >>> tamper('1 AND 9227=9227')\\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\\n    \"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal",
            "def tamper(payload, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"\\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\\n')\\n\\n    Requirement:\\n        * MSSQL\\n        * SQLite\\n\\n    Notes:\\n        * Useful to bypass several web application firewalls\\n        * Used during the ZeroNights SQL injection challenge,\\n          https://proton.onsec.ru/contest/\\n\\n    >>> random.seed(0)\\n    >>> tamper('1 AND 9227=9227')\\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\\n    \"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal",
            "def tamper(payload, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"\\n    Replaces space character (' ') with a dash comment ('--') followed by a random string and a new line ('\\n')\\n\\n    Requirement:\\n        * MSSQL\\n        * SQLite\\n\\n    Notes:\\n        * Useful to bypass several web application firewalls\\n        * Used during the ZeroNights SQL injection challenge,\\n          https://proton.onsec.ru/contest/\\n\\n    >>> random.seed(0)\\n    >>> tamper('1 AND 9227=9227')\\n    '1--upgPydUzKpMX%0AAND--RcDKhIr%0A9227=9227'\\n    \"\n    retVal = ''\n    if payload:\n        for i in xrange(len(payload)):\n            if payload[i].isspace():\n                randomStr = ''.join((random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12))))\n                retVal += '--%s%%0A' % randomStr\n            elif payload[i] == '#' or payload[i:i + 3] == '-- ':\n                retVal += payload[i:]\n                break\n            else:\n                retVal += payload[i]\n    return retVal"
        ]
    }
]