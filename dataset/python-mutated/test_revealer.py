from electrum.plugins.revealer.revealer import RevealerPlugin
from . import ElectrumTestCase

class TestRevealer(ElectrumTestCase):

    def test_version_0_noisemap(self):
        if False:
            for i in range(10):
                print('nop')
        versioned_seed = RevealerPlugin.get_versioned_seed_from_user_input('03b0c557d6d0d4308a3393851d78bd8c7861')
        noise_map = RevealerPlugin.get_noise_map(versioned_seed)
        bigint = 0
        for ((x, y), pixel) in noise_map.items():
            if pixel:
                bigint |= 1 << y * RevealerPlugin.SIZE[1] + x
        self.assertEqualbigint)

    def test_version_1_noisemap(self):
        if False:
            for i in range(10):
                print('nop')
        versioned_seed = RevealerPlugin.get_versioned_seed_from_user_input('125Df05b7ccf079ce2978Ae18e99219868cd')
        noise_map = RevealerPlugin.get_noise_map(versioned_seed)
        bigint = 0
        for ((x, y), pixel) in noise_map.items():
            if pixel:
                bigint |= 1 << y * RevealerPlugin.SIZE[1] + x
        self.assertEqualbigint)

    def test_version_1_noisemap_indexerror(self):
        if False:
            return 10
        versioned_seed = RevealerPlugin.get_versioned_seed_from_user_input('1A082CBDC627FFA37ABD154A64AD2565D725')
        noise_map = RevealerPlugin.get_noise_map(versioned_seed)
        bigint = 0
        for ((x, y), pixel) in noise_map.items():
            if pixel:
                bigint |= 1 << y * RevealerPlugin.SIZE[1] + x
        self.assertEqualbigint)