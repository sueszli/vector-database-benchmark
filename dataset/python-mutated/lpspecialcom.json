[
    {
        "func_name": "parse",
        "original": "def parse(self, response):\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item",
        "mutated": [
            "def parse(self, response):\n    if False:\n        i = 10\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item",
            "def parse(self, response):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item",
            "def parse(self, response):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item",
            "def parse(self, response):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item",
            "def parse(self, response):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    text = response.text\n    company_name = response.xpath('//div[@class=\"about-position\"]//a/text()')[0].extract()\n    size = re.search('\u516c\u53f8\u89c4\u6a21\uff1a(.*?)\u4eba', text).group(1)\n    city = re.search('\u516c\u53f8\u5730\u5740\uff1a(.*?)<', text).group(1)\n    industry = re.search('\u884c\u4e1a.*?>(.*?)<', text).group(1)\n    as_of_date = datetime.now()\n    item = LiepinspdItem()\n    data = pd.read_csv('G:\\\\workspace\\\\y2019m01\\\\/first_lagou\\\\company300.csv', encoding='gbk')\n    try:\n        for i in range(len(data)):\n            n = 0\n            for j in data.loc[i, '\u80a1\u7968\u7b80\u79f0']:\n                if j in company_name:\n                    n += 1\n            if n >= len(data.loc[i, '\u80a1\u7968\u7b80\u79f0']) - 1:\n                item['ticker'] = data.loc[i, '\u80a1\u7968\u4ee3\u7801']\n                print(n, item['ticker'], company_name)\n    except BaseException as e:\n        item['ticker'] = 'None'\n        print('ticker\u5339\u914d\u9519\u8bef')\n    item['as_of_date'] = as_of_date\n    item['company_name'] = company_name\n    item['size'] = size\n    item['city'] = city\n    item['industry'] = industry\n    yield item"
        ]
    }
]