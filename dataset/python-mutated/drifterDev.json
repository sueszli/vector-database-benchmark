[
    {
        "func_name": "triples",
        "original": "def triples(x: int) -> list[int]:\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res",
        "mutated": [
            "def triples(x: int) -> list[int]:\n    if False:\n        i = 10\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res",
            "def triples(x: int) -> list[int]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res",
            "def triples(x: int) -> list[int]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res",
            "def triples(x: int) -> list[int]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res",
            "def triples(x: int) -> list[int]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    res = []\n    for i in range(1, x + 1):\n        for j in range(i + 1, x + 1):\n            act = i ** 2 + j ** 2\n            if int(act ** 0.5) == act ** 0.5 and act ** 0.5 > j and (act ** 0.5 <= x):\n                res.append([i, j, int(act ** 0.5)])\n    return res"
        ]
    },
    {
        "func_name": "main",
        "original": "def main():\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print('Triples pitagoricos hasta 10')\n    print(*triples(10))\n    print('Triples pitagoricos hasta 15')\n    print(*triples(15))\n    print('Triples pitagoricos hasta 20')\n    print(*triples(20))\n    print('Triples pitagoricos hasta 100')\n    print(*triples(100))"
        ]
    }
]