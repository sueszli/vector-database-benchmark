[
    {
        "func_name": "get_resource_property_mapping",
        "original": "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    \"\"\"\n    Get a map containing the class for handling resource\n    property translations for a specific resource type\n\n    Returns\n    -------\n    Dict[str, ResourceProperties]\n        A mapping between the Terraform resource type and the\n        ResourceProperties handling class for that resource type\n    \"\"\"\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}",
        "mutated": [
            "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    if False:\n        i = 10\n    '\\n    Get a map containing the class for handling resource\\n    property translations for a specific resource type\\n\\n    Returns\\n    -------\\n    Dict[str, ResourceProperties]\\n        A mapping between the Terraform resource type and the\\n        ResourceProperties handling class for that resource type\\n    '\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}",
            "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    Get a map containing the class for handling resource\\n    property translations for a specific resource type\\n\\n    Returns\\n    -------\\n    Dict[str, ResourceProperties]\\n        A mapping between the Terraform resource type and the\\n        ResourceProperties handling class for that resource type\\n    '\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}",
            "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    Get a map containing the class for handling resource\\n    property translations for a specific resource type\\n\\n    Returns\\n    -------\\n    Dict[str, ResourceProperties]\\n        A mapping between the Terraform resource type and the\\n        ResourceProperties handling class for that resource type\\n    '\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}",
            "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    Get a map containing the class for handling resource\\n    property translations for a specific resource type\\n\\n    Returns\\n    -------\\n    Dict[str, ResourceProperties]\\n        A mapping between the Terraform resource type and the\\n        ResourceProperties handling class for that resource type\\n    '\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}",
            "def get_resource_property_mapping() -> Dict[str, ResourceProperties]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    Get a map containing the class for handling resource\\n    property translations for a specific resource type\\n\\n    Returns\\n    -------\\n    Dict[str, ResourceProperties]\\n        A mapping between the Terraform resource type and the\\n        ResourceProperties handling class for that resource type\\n    '\n    return {TF_AWS_LAMBDA_LAYER_VERSION: LambdaLayerVersionProperties(), TF_AWS_LAMBDA_FUNCTION: LambdaFunctionProperties(), TF_AWS_API_GATEWAY_RESOURCE: ApiGatewayResourceProperties(), TF_AWS_API_GATEWAY_REST_API: ApiGatewayRestApiProperties(), TF_AWS_API_GATEWAY_METHOD: ApiGatewayMethodProperties(), TF_AWS_API_GATEWAY_STAGE: ApiGatewayStageProperties(), TF_AWS_API_GATEWAY_INTEGRATION: InternalApiGatewayIntegrationProperties(), TF_AWS_API_GATEWAY_INTEGRATION_RESPONSE: InternalApiGatewayIntegrationResponseProperties(), TF_AWS_API_GATEWAY_AUTHORIZER: ApiGatewayAuthorizerProperties(), TF_AWS_API_GATEWAY_V2_ROUTE: ApiGatewayV2RouteProperties(), TF_AWS_API_GATEWAY_V2_INTEGRATION: ApiGatewayV2IntegrationProperties(), TF_AWS_API_GATEWAY_V2_API: ApiGatewayV2ApiProperties(), TF_AWS_API_GATEWAY_V2_AUTHORIZER: ApiGatewayV2AuthorizerProperties(), TF_AWS_API_GATEWAY_V2_STAGE: ApiGatewayV2StageProperties()}"
        ]
    }
]