[
    {
        "func_name": "tick",
        "original": "def tick():\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)",
        "mutated": [
            "def tick():\n    if False:\n        i = 10\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)",
            "def tick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)",
            "def tick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)",
            "def tick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)",
            "def tick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    time_string = time.strftime('%H:%M:%S')\n    date_string = time.strftime('%d:%m:%Y')\n    clock.config(text='Date: ' + date_string + '\\nTime: ' + time_string)\n    clock.after(100, tick)"
        ]
    },
    {
        "func_name": "IntoLabelColorTick",
        "original": "def IntoLabelColorTick():\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)",
        "mutated": [
            "def IntoLabelColorTick():\n    if False:\n        i = 10\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)",
            "def IntoLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)",
            "def IntoLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)",
            "def IntoLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)",
            "def IntoLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    fg = random.choice(colors)\n    SliderLabel.config(fg=fg)\n    SliderLabel.after(2, IntoLabelColorTick)"
        ]
    },
    {
        "func_name": "IntoLabelTick",
        "original": "def IntoLabelTick():\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)",
        "mutated": [
            "def IntoLabelTick():\n    if False:\n        i = 10\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)",
            "def IntoLabelTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)",
            "def IntoLabelTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)",
            "def IntoLabelTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)",
            "def IntoLabelTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global count, text\n    if count >= len(st):\n        (count, text) = (0, '')\n        SliderLabel.config(text=text)\n    else:\n        text += st[count]\n        SliderLabel.config(text=text)\n        count += 1\n    SliderLabel.after(200, IntoLabelTick)"
        ]
    },
    {
        "func_name": "submitdb",
        "original": "def submitdb():\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()",
        "mutated": [
            "def submitdb():\n    if False:\n        i = 10\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()",
            "def submitdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()",
            "def submitdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()",
            "def submitdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()",
            "def submitdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global con, mycursor\n    host = hostval.get()\n    user = userval.get()\n    password = passwordval.get()\n    try:\n        con = pymysql.connect(host=host, user=user, password=password)\n        mycursor = con.cursor()\n    except Exception as e:\n        messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n        return\n    try:\n        strr = 'create database studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int not null'\n        mycursor.execute(strr)\n        strr = 'alter table studentdata1 modify column id int primary key'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n    except:\n        strr = 'use studentmanagementsystem1'\n        mycursor.execute(strr)\n        messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n    dbroot.destroy()"
        ]
    },
    {
        "func_name": "Connectdb",
        "original": "def Connectdb():\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()",
        "mutated": [
            "def Connectdb():\n    if False:\n        i = 10\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()",
            "def Connectdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()",
            "def Connectdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()",
            "def Connectdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()",
            "def Connectdb():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n\n    def submitdb():\n        global con, mycursor\n        host = hostval.get()\n        user = userval.get()\n        password = passwordval.get()\n        try:\n            con = pymysql.connect(host=host, user=user, password=password)\n            mycursor = con.cursor()\n        except Exception as e:\n            messagebox.showerror('Error', f'Data is incorrect...Please try again: {e}')\n            return\n        try:\n            strr = 'create database studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            strr = 'create table studentdata1(id int, name varchar(20), mobile varchar(13), email varchar(30), address varchar(100), gender varchar(10), dob varchar(50), date varchar(50), time varchar(50))'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int not null'\n            mycursor.execute(strr)\n            strr = 'alter table studentdata1 modify column id int primary key'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Database created & now you are connected to database.....', parent=dbroot)\n        except:\n            strr = 'use studentmanagementsystem1'\n            mycursor.execute(strr)\n            messagebox.showinfo('Success', 'Now you are connected to database.....', parent=dbroot)\n        dbroot.destroy()\n    dbroot = Toplevel()\n    dbroot.grab_set()\n    dbroot.geometry('470x250+800+230')\n    dbroot.title('Connect to Database')\n    dbroot.iconbitmap('Student2.ico')\n    dbroot.resizable(False, False)\n    dbroot.config(bg='blue')\n    hostlabel = Label(dbroot, text='Enter Host:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    hostlabel.place(x=10, y=10)\n    userlabel = Label(dbroot, text='Enter User:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    userlabel.place(x=10, y=70)\n    passwordlabel = Label(dbroot, text='Enter Password:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    passwordlabel.place(x=10, y=130)\n    hostval = StringVar()\n    userval = StringVar()\n    passwordval = StringVar()\n    hostentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=hostval)\n    hostentry.place(x=250, y=10)\n    userentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=userval)\n    userentry.place(x=250, y=70)\n    passwordentry = Entry(dbroot, font='roman 15 bold', bd=5, textvariable=passwordval)\n    passwordentry.place(x=250, y=130)\n    submitbutton = Button(dbroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitdb)\n    submitbutton.place(x=150, y=190)\n    dbroot.mainloop()"
        ]
    },
    {
        "func_name": "FrontLabelColorTick",
        "original": "def FrontLabelColorTick():\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)",
        "mutated": [
            "def FrontLabelColorTick():\n    if False:\n        i = 10\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)",
            "def FrontLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)",
            "def FrontLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)",
            "def FrontLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)",
            "def FrontLabelColorTick():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    fg = random.choice(col)\n    frontlabel.config(fg=fg)\n    frontlabel.after(2, FrontLabelColorTick)"
        ]
    },
    {
        "func_name": "submitadd",
        "original": "def submitadd():\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
        "mutated": [
            "def submitadd():\n    if False:\n        i = 10\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def submitadd():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def submitadd():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def submitadd():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def submitadd():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    addedtime = time.strftime('%H:%M:%S')\n    try:\n        strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n        mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n        con.commit()\n        res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n        if res == True:\n            idval.set('')\n            nameval.set('')\n            mobileval.set('')\n            emailval.set('')\n            addressval.set('')\n            genderval.set('')\n            dobval.set('')\n    except:\n        messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)"
        ]
    },
    {
        "func_name": "addstudent",
        "original": "def addstudent():\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()",
        "mutated": [
            "def addstudent():\n    if False:\n        i = 10\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()",
            "def addstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()",
            "def addstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()",
            "def addstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()",
            "def addstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n\n    def submitadd():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        addedtime = time.strftime('%H:%M:%S')\n        try:\n            strr = 'insert into studentdata1 values(%s,%s,%s,%s,%s,%s,%s,%s,%s)'\n            mycursor.execute(strr, (id, name, mobile, email, address, gender, dob, addeddate, addedtime))\n            con.commit()\n            res = messagebox.askyesnocancel('Notification', 'ID {} Name {} Added Successfully.....  and want to clean the form'.format(id, name), parent=addroot)\n            if res == True:\n                idval.set('')\n                nameval.set('')\n                mobileval.set('')\n                emailval.set('')\n                addressval.set('')\n                genderval.set('')\n                dobval.set('')\n        except:\n            messagebox.showerror('Error', 'Id already Exixt...Try another Id', parent=addroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    addroot = Toplevel(master=DataEntryFrame)\n    addroot.grab_set()\n    addroot.geometry('470x470+220+200')\n    addroot.title('Add Students')\n    addroot.iconbitmap('Student2.ico')\n    addroot.resizable(False, False)\n    addroot.config(bg='light green')\n    idlabel = Label(addroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(addroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(addroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(addroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(addroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(addroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(addroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    identry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(addroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    submitbtn = Button(addroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitadd)\n    submitbtn.place(x=130, y=420)\n    addroot.mainloop()"
        ]
    },
    {
        "func_name": "submitsearch",
        "original": "def submitsearch():\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)",
        "mutated": [
            "def submitsearch():\n    if False:\n        i = 10\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)",
            "def submitsearch():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)",
            "def submitsearch():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)",
            "def submitsearch():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)",
            "def submitsearch():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    addeddate = time.strftime('%d/%m/%Y')\n    if id != '':\n        strr = 'select * from studentdata1 where id=%s'\n        mycursor.execute(strr, id)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif name != '':\n        strr = 'select * from studentdata1 where name=%s'\n        mycursor.execute(strr, name)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif mobile != '':\n        strr = 'select * from studentdata1 where mobile=%s'\n        mycursor.execute(strr, mobile)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif email != '':\n        strr = 'select * from studentdata1 where email=%s'\n        mycursor.execute(strr, email)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif address != '':\n        strr = 'select * from studentdata1 where address=%s'\n        mycursor.execute(strr, address)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif gender != '':\n        strr = 'select * from studentdata1 where gender=%s'\n        mycursor.execute(strr, gender)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif dob != '':\n        strr = 'select * from studentdata1 where dob=%s'\n        mycursor.execute(strr, dob)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    elif addeddate != '':\n        strr = 'select * from studentdata1 where addeddate=%s'\n        mycursor.execute(strr, addeddate)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)"
        ]
    },
    {
        "func_name": "searchstudent",
        "original": "def searchstudent():\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()",
        "mutated": [
            "def searchstudent():\n    if False:\n        i = 10\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()",
            "def searchstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()",
            "def searchstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()",
            "def searchstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()",
            "def searchstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n\n    def submitsearch():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        addeddate = time.strftime('%d/%m/%Y')\n        if id != '':\n            strr = 'select * from studentdata1 where id=%s'\n            mycursor.execute(strr, id)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif name != '':\n            strr = 'select * from studentdata1 where name=%s'\n            mycursor.execute(strr, name)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif mobile != '':\n            strr = 'select * from studentdata1 where mobile=%s'\n            mycursor.execute(strr, mobile)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif email != '':\n            strr = 'select * from studentdata1 where email=%s'\n            mycursor.execute(strr, email)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif address != '':\n            strr = 'select * from studentdata1 where address=%s'\n            mycursor.execute(strr, address)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif gender != '':\n            strr = 'select * from studentdata1 where gender=%s'\n            mycursor.execute(strr, gender)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif dob != '':\n            strr = 'select * from studentdata1 where dob=%s'\n            mycursor.execute(strr, dob)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n        elif addeddate != '':\n            strr = 'select * from studentdata1 where addeddate=%s'\n            mycursor.execute(strr, addeddate)\n            datas = mycursor.fetchall()\n            studenttable.delete(*studenttable.get_children())\n            for i in datas:\n                vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n                studenttable.insert('', END, values=vv)\n    searchroot = Toplevel(master=DataEntryFrame)\n    searchroot.grab_set()\n    searchroot.geometry('470x540+220+200')\n    searchroot.title('Search Data')\n    searchroot.iconbitmap('Student2.ico')\n    searchroot.resizable(False, False)\n    searchroot.config(bg='red')\n    idlabel = Label(searchroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(searchroot, text='Enter Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(searchroot, text='Enter Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(searchroot, text='Enter Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(searchroot, text='Enter Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(searchroot, text='Enter Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(searchroot, text='Enter D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(searchroot, text='Enter Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    identry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(searchroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    submitbtn = Button(searchroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=submitsearch)\n    submitbtn.place(x=130, y=480)\n    searchroot.mainloop()"
        ]
    },
    {
        "func_name": "deletestudent",
        "original": "def deletestudent():\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
        "mutated": [
            "def deletestudent():\n    if False:\n        i = 10\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def deletestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def deletestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def deletestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def deletestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values'][0]\n    strr = 'delete from studentdata1 where id = %s'\n    mycursor.execute(strr, pp)\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} deleted successfully...'.format(id))\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)"
        ]
    },
    {
        "func_name": "update",
        "original": "def update():\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
        "mutated": [
            "def update():\n    if False:\n        i = 10\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def update():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def update():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def update():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def update():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    id = idval.get()\n    name = nameval.get()\n    mobile = mobileval.get()\n    email = emailval.get()\n    address = addressval.get()\n    gender = genderval.get()\n    dob = dobval.get()\n    date = dateval.get()\n    time = timeval.get()\n    strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n    mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n    con.commit()\n    messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)"
        ]
    },
    {
        "func_name": "updatestudent",
        "original": "def updatestudent():\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()",
        "mutated": [
            "def updatestudent():\n    if False:\n        i = 10\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()",
            "def updatestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()",
            "def updatestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()",
            "def updatestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()",
            "def updatestudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n\n    def update():\n        id = idval.get()\n        name = nameval.get()\n        mobile = mobileval.get()\n        email = emailval.get()\n        address = addressval.get()\n        gender = genderval.get()\n        dob = dobval.get()\n        date = dateval.get()\n        time = timeval.get()\n        strr = 'update studentdata1 set name=%s, mobile=%s, email=%s, address=%s, gender=%s, dob=%s, date=%s,time=%s where id = %s'\n        mycursor.execute(strr, (name, mobile, email, address, gender, dob, date, time, id))\n        con.commit()\n        messagebox.showinfo('Notification', 'Id {} Modified Successfully.....'.format(id), parent=updateroot)\n        strr = 'select * from studentdata1'\n        mycursor.execute(strr)\n        datas = mycursor.fetchall()\n        studenttable.delete(*studenttable.get_children())\n        for i in datas:\n            vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n            studenttable.insert('', END, values=vv)\n    updateroot = Toplevel(master=DataEntryFrame)\n    updateroot.grab_set()\n    updateroot.geometry('470x585+220+160')\n    updateroot.title('Update Data')\n    updateroot.iconbitmap('Student2.ico')\n    updateroot.resizable(False, False)\n    updateroot.config(bg='orange3')\n    idlabel = Label(updateroot, text='Enter ID:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    idlabel.place(x=10, y=10)\n    namelabel = Label(updateroot, text='Update Name:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    namelabel.place(x=10, y=70)\n    mobilelabel = Label(updateroot, text='Update Mobile:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    mobilelabel.place(x=10, y=130)\n    emaillabel = Label(updateroot, text='Update Email:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    emaillabel.place(x=10, y=190)\n    addresslabel = Label(updateroot, text='Update Address:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    addresslabel.place(x=10, y=250)\n    genderlabel = Label(updateroot, text='Update Gender:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    genderlabel.place(x=10, y=310)\n    doblabel = Label(updateroot, text='Update D.O.B:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    doblabel.place(x=10, y=370)\n    datelabel = Label(updateroot, text='Update Date:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    datelabel.place(x=10, y=430)\n    timelabel = Label(updateroot, text='Update Time:', bg='gold2', font='times 20 bold', relief=GROOVE, borderwidth=3, width=13, anchor='w')\n    timelabel.place(x=10, y=490)\n    idval = StringVar()\n    nameval = StringVar()\n    mobileval = StringVar()\n    emailval = StringVar()\n    addressval = StringVar()\n    genderval = StringVar()\n    dobval = StringVar()\n    dateval = StringVar()\n    timeval = StringVar()\n    identry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=idval)\n    identry.place(x=250, y=10)\n    nameentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=nameval)\n    nameentry.place(x=250, y=70)\n    mobileentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=mobileval)\n    mobileentry.place(x=250, y=130)\n    emailentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=emailval)\n    emailentry.place(x=250, y=190)\n    addressentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=addressval)\n    addressentry.place(x=250, y=250)\n    genderentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=genderval)\n    genderentry.place(x=250, y=310)\n    dobentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dobval)\n    dobentry.place(x=250, y=370)\n    dateentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=dateval)\n    dateentry.place(x=250, y=430)\n    timeentry = Entry(updateroot, font='roman 15 bold', bd=5, textvariable=timeval)\n    timeentry.place(x=250, y=490)\n    updatebtn = Button(updateroot, text='Submit', font='roman 15 bold', width=20, bg='green', bd=5, activebackground='red', activeforeground='yellow', command=update)\n    updatebtn.place(x=130, y=540)\n    cc = studenttable.focus()\n    content = studenttable.item(cc)\n    pp = content['values']\n    if len(pp) != 0:\n        idval.set(pp[0])\n        nameval.set(pp[1])\n        mobileval.set(pp[2])\n        emailval.set(pp[3])\n        addressval.set(pp[4])\n        genderval.set(pp[5])\n        dobval.set(pp[6])\n        dateval.set(pp[7])\n        timeval.set(pp[8])\n    updateroot.mainloop()"
        ]
    },
    {
        "func_name": "showallstudent",
        "original": "def showallstudent():\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
        "mutated": [
            "def showallstudent():\n    if False:\n        i = 10\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def showallstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def showallstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def showallstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)",
            "def showallstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    strr = 'select * from studentdata1'\n    mycursor.execute(strr)\n    datas = mycursor.fetchall()\n    studenttable.delete(*studenttable.get_children())\n    for i in datas:\n        vv = [i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]]\n        studenttable.insert('', END, values=vv)"
        ]
    },
    {
        "func_name": "exportstudent",
        "original": "def exportstudent():\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))",
        "mutated": [
            "def exportstudent():\n    if False:\n        i = 10\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))",
            "def exportstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))",
            "def exportstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))",
            "def exportstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))",
            "def exportstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    ff = filedialog.asksaveasfilename()\n    gg = studenttable.get_children()\n    (id, name, mobile, email, address, gender, dob, addeddate, addedtime) = ([], [], [], [], [], [], [], [], [])\n    for i in gg:\n        content = studenttable.item(i)\n        pp = content['values']\n        (id.append(pp[0]), name.append(pp[1]), mobile.append(pp[2]), email.append(pp[3]), address.append(pp[4]), gender.append(pp[5]))\n        (dob.append(pp[6]), addeddate.append(pp[7]), addedtime.append(pp[8]))\n    dd = ['ID', 'Name', 'Mobile No.', 'Email', 'Address', 'Gender', 'D.O.B', 'Added Date', 'Added Time']\n    df = pandas.DataFrame(list(zip(id, name, mobile, email, address, gender, dob, addeddate, addedtime)), columns=dd)\n    paths = '{}.csv'.format(ff)\n    df.to_csv(paths, index=False)\n    messagebox.showinfo('Notification', 'Student Data is saved {}'.format(paths))"
        ]
    },
    {
        "func_name": "exitstudent",
        "original": "def exitstudent():\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()",
        "mutated": [
            "def exitstudent():\n    if False:\n        i = 10\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()",
            "def exitstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()",
            "def exitstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()",
            "def exitstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()",
            "def exitstudent():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    res = messagebox.askyesnocancel('Notification', 'Do you want to Exit ?')\n    if res == True:\n        root.destroy()"
        ]
    }
]