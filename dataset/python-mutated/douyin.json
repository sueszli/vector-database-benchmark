[
    {
        "func_name": "__init__",
        "original": "def __init__(self, width=500, height=300):\n    \"\"\"\n\t\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\n\t\t\"\"\"\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}",
        "mutated": [
            "def __init__(self, width=500, height=300):\n    if False:\n        i = 10\n    '\\n\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\\n\\t\\t'\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}",
            "def __init__(self, width=500, height=300):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\\n\\t\\t'\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}",
            "def __init__(self, width=500, height=300):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\\n\\t\\t'\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}",
            "def __init__(self, width=500, height=300):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\\n\\t\\t'\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}",
            "def __init__(self, width=500, height=300):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\\n\\t\\t'\n    self.headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'accept': 'application/json', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9'}\n    self.headers1 = {'User-Agent': 'Mozilla/5.0 (Linux; U; Android 5.1.1; zh-cn; MI 4S Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.146 Mobile Safari/537.36 XiaoMi/MiuiBrowser/9.1.3'}"
        ]
    },
    {
        "func_name": "get_video_urls",
        "original": "def get_video_urls(self, user_id, type_flag='f'):\n    \"\"\"\n\t\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\n\t\tParameters:\n\t\t\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\n\t\tReturns:\n\t\t\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\n\t\t\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\n\t\t\tnickname: \u7528\u6237\u6635\u79f0\n\t\t\"\"\"\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)",
        "mutated": [
            "def get_video_urls(self, user_id, type_flag='f'):\n    if False:\n        i = 10\n    '\\n\\t\\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\\n\\t\\tReturns:\\n\\t\\t\\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\\n\\t\\t\\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\\n\\t\\t\\tnickname: \u7528\u6237\u6635\u79f0\\n\\t\\t'\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)",
            "def get_video_urls(self, user_id, type_flag='f'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\\n\\t\\tReturns:\\n\\t\\t\\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\\n\\t\\t\\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\\n\\t\\t\\tnickname: \u7528\u6237\u6635\u79f0\\n\\t\\t'\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)",
            "def get_video_urls(self, user_id, type_flag='f'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\\n\\t\\tReturns:\\n\\t\\t\\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\\n\\t\\t\\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\\n\\t\\t\\tnickname: \u7528\u6237\u6635\u79f0\\n\\t\\t'\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)",
            "def get_video_urls(self, user_id, type_flag='f'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\\n\\t\\tReturns:\\n\\t\\t\\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\\n\\t\\t\\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\\n\\t\\t\\tnickname: \u7528\u6237\u6635\u79f0\\n\\t\\t'\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)",
            "def get_video_urls(self, user_id, type_flag='f'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u83b7\u5f97\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tuser_id\uff1a\u67e5\u8be2\u7684\u7528\u6237UID\\n\\t\\tReturns:\\n\\t\\t\\tvideo_names: \u89c6\u9891\u540d\u5b57\u5217\u8868\\n\\t\\t\\tvideo_urls: \u89c6\u9891\u94fe\u63a5\u5217\u8868\\n\\t\\t\\tnickname: \u7528\u6237\u6635\u79f0\\n\\t\\t'\n    video_names = []\n    video_urls = []\n    share_urls = []\n    max_cursor = 0\n    has_more = 1\n    sign_api = 'http://49.233.200.77:5001'\n    share_user_url = 'https://www.iesdouyin.com/share/user/%s' % user_id\n    share_user = requests.get(share_user_url, headers=self.headers)\n    while share_user.status_code != 200:\n        share_user = requests.get(share_user_url, headers=self.headers)\n    _tac_re = re.compile(\"tac='([\\\\s\\\\S]*?)'</script>\")\n    tac = _tac_re.search(share_user.text).group(1)\n    _dytk_re = re.compile(\"dytk\\\\s*:\\\\s*'(.+)'\")\n    dytk = _dytk_re.search(share_user.text).group(1)\n    _nickname_re = re.compile('<p class=\"nickname\">(.+?)<\\\\/p>')\n    nickname = _nickname_re.search(share_user.text).group(1)\n    data = {'tac': tac.split('|')[0], 'user_id': user_id}\n    req = requests.post(sign_api, data=data)\n    while req.status_code != 200:\n        req = requests.post(sign_api, data=data)\n    sign = req.json().get('signature')\n    user_url_prefix = 'https://www.iesdouyin.com/web/api/v2/aweme/like' if type_flag == 'f' else 'https://www.iesdouyin.com/web/api/v2/aweme/post'\n    print('\u89e3\u6790\u89c6\u9891\u94fe\u63a5\u4e2d')\n    while has_more != 0:\n        user_url = user_url_prefix + '/?user_id=%s&sec_uid=&count=21&max_cursor=%s&aid=1128&_signature=%s&dytk=%s' % (user_id, max_cursor, sign, dytk)\n        req = requests.get(user_url, headers=self.headers)\n        while req.status_code != 200:\n            req = requests.get(user_url, headers=self.headers)\n        html = json.loads(req.text)\n        for each in html['aweme_list']:\n            try:\n                url = 'https://aweme.snssdk.com/aweme/v1/play/?video_id=%s&line=0&ratio=720p&media_type=4&vr_type=0&improve_bitrate=0&is_play_url=1&is_support_h265=0&source=PackSourceEnum_PUBLISH'\n                vid = each['video']['vid']\n                video_url = url % vid\n            except:\n                continue\n            share_desc = each['desc']\n            if os.name == 'nt':\n                for c in '\\\\/:*?\"<>|':\n                    nickname = nickname.replace(c, '').strip().strip('\\\\.')\n                    share_desc = share_desc.replace(c, '').strip()\n            share_id = each['aweme_id']\n            if share_desc in ['\u6296\u97f3-\u539f\u521b\u97f3\u4e50\u77ed\u89c6\u9891\u793e\u533a', 'TikTok', '']:\n                video_names.append(share_id + '.mp4')\n            else:\n                video_names.append(share_id + '-' + share_desc + '.mp4')\n            share_url = 'https://www.iesdouyin.com/share/video/%s' % share_id\n            share_urls.append(share_url)\n            video_urls.append(video_url)\n        max_cursor = html['max_cursor']\n        has_more = html['has_more']\n    return (video_names, video_urls, share_urls, nickname)"
        ]
    },
    {
        "func_name": "get_download_url",
        "original": "def get_download_url(self, video_url, watermark_flag):\n    \"\"\"\n\t\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\n\t\tParameters:\n\t\t\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\n\t\tReturns:\n\t\t\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\n\t\t\"\"\"\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url",
        "mutated": [
            "def get_download_url(self, video_url, watermark_flag):\n    if False:\n        i = 10\n    '\\n\\t\\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tReturns:\\n\\t\\t\\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\\n\\t\\t'\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url",
            "def get_download_url(self, video_url, watermark_flag):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tReturns:\\n\\t\\t\\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\\n\\t\\t'\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url",
            "def get_download_url(self, video_url, watermark_flag):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tReturns:\\n\\t\\t\\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\\n\\t\\t'\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url",
            "def get_download_url(self, video_url, watermark_flag):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tReturns:\\n\\t\\t\\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\\n\\t\\t'\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url",
            "def get_download_url(self, video_url, watermark_flag):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u83b7\u5f97\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url\uff1a\u5e26\u6c34\u5370\u7684\u89c6\u9891\u64ad\u653e\u5730\u5740\\n\\t\\tReturns:\\n\\t\\t\\tdownload_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u4e0b\u8f7d\u5730\u5740\\n\\t\\t'\n    if watermark_flag == True:\n        download_url = video_url.replace('/play/', '/playwm/')\n    else:\n        download_url = video_url.replace('/playwm/', '/play/')\n    return download_url"
        ]
    },
    {
        "func_name": "video_downloader",
        "original": "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    \"\"\"\n\t\t\u89c6\u9891\u4e0b\u8f7d\n\t\tParameters:\n\t\t\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\n\t\t\tvideo_name: \u89c6\u9891\u540d\n\t\t\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\n\t\tReturns:\n\t\t\t\u65e0\n\t\t\"\"\"\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()",
        "mutated": [
            "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    if False:\n        i = 10\n    '\\n\\t\\t\u89c6\u9891\u4e0b\u8f7d\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\\n\\t\\t\\tvideo_name: \u89c6\u9891\u540d\\n\\t\\t\\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\\n\\t\\tReturns:\\n\\t\\t\\t\u65e0\\n\\t\\t'\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()",
            "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u89c6\u9891\u4e0b\u8f7d\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\\n\\t\\t\\tvideo_name: \u89c6\u9891\u540d\\n\\t\\t\\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\\n\\t\\tReturns:\\n\\t\\t\\t\u65e0\\n\\t\\t'\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()",
            "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u89c6\u9891\u4e0b\u8f7d\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\\n\\t\\t\\tvideo_name: \u89c6\u9891\u540d\\n\\t\\t\\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\\n\\t\\tReturns:\\n\\t\\t\\t\u65e0\\n\\t\\t'\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()",
            "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u89c6\u9891\u4e0b\u8f7d\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\\n\\t\\t\\tvideo_name: \u89c6\u9891\u540d\\n\\t\\t\\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\\n\\t\\tReturns:\\n\\t\\t\\t\u65e0\\n\\t\\t'\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()",
            "def video_downloader(self, video_url, video_name, watermark_flag=False):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u89c6\u9891\u4e0b\u8f7d\\n\\t\\tParameters:\\n\\t\\t\\tvideo_url: \u5e26\u6c34\u5370\u7684\u89c6\u9891\u5730\u5740\\n\\t\\t\\tvideo_name: \u89c6\u9891\u540d\\n\\t\\t\\twatermark_flag: \u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891\\n\\t\\tReturns:\\n\\t\\t\\t\u65e0\\n\\t\\t'\n    size = 0\n    video_url = self.get_download_url(video_url, watermark_flag=watermark_flag)\n    with closing(requests.get(video_url, headers=self.headers1, stream=True)) as response:\n        chunk_size = 1024\n        content_size = int(response.headers['content-length'])\n        if response.status_code == 200:\n            sys.stdout.write('  [\u6587\u4ef6\u5927\u5c0f]:%0.2f MB\\n' % (content_size / chunk_size / 1024))\n            with open(video_name, 'wb') as file:\n                for data in response.iter_content(chunk_size=chunk_size):\n                    file.write(data)\n                    size += len(data)\n                    file.flush()\n                    sys.stdout.write('  [\u4e0b\u8f7d\u8fdb\u5ea6]:%.2f%%' % float(size / content_size * 100) + '\\r')\n                    sys.stdout.flush()"
        ]
    },
    {
        "func_name": "run",
        "original": "def run(self):\n    \"\"\"\n\t\t\u8fd0\u884c\u51fd\u6570\n\t\tParameters:\n\t\t\tNone\n\t\tReturns:\n\t\t\tNone\n\t\t\"\"\"\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')",
        "mutated": [
            "def run(self):\n    if False:\n        i = 10\n    '\\n\\t\\t\u8fd0\u884c\u51fd\u6570\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')",
            "def run(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u8fd0\u884c\u51fd\u6570\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')",
            "def run(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u8fd0\u884c\u51fd\u6570\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')",
            "def run(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u8fd0\u884c\u51fd\u6570\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')",
            "def run(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u8fd0\u884c\u51fd\u6570\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    self.hello()\n    print('UID\u53d6\u5f97\u65b9\u5f0f\uff1a\\n\u5206\u4eab\u7528\u6237\u9875\u9762\uff0c\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u77ed\u94fe\u63a5\uff0c\u539f\u59cb\u94fe\u63a5\u4e2d/share/user/\u540e\u7684\u6570\u5b57\u5373\u662fUID')\n    user_id = input('\u8bf7\u8f93\u5165UID (\u4f8b\u598260388937600):')\n    user_id = user_id if user_id else '60388937600'\n    watermark_flag = input('\u662f\u5426\u4e0b\u8f7d\u5e26\u6c34\u5370\u7684\u89c6\u9891 (0-\u5426(\u9ed8\u8ba4), 1-\u662f):')\n    watermark_flag = watermark_flag if watermark_flag != '' else '0'\n    watermark_flag = bool(int(watermark_flag))\n    type_flag = input('f-\u6536\u85cf\u7684(\u9ed8\u8ba4), p-\u4e0a\u4f20\u7684:')\n    type_flag = type_flag if type_flag != '' else 'f'\n    save_dir = input('\u4fdd\u5b58\u8def\u5f84 (\u4f8b\u5982\"E:/Download/\", \u9ed8\u8ba4\"./Download/\"):')\n    save_dir = save_dir if save_dir else './Download/'\n    (video_names, video_urls, share_urls, nickname) = self.get_video_urls(user_id, type_flag)\n    nickname_dir = os.path.join(save_dir, nickname)\n    if not os.path.exists(save_dir):\n        os.makedirs(save_dir)\n    if nickname not in os.listdir(save_dir):\n        os.mkdir(nickname_dir)\n    if type_flag == 'f':\n        if 'favorite' not in os.listdir(nickname_dir):\n            os.mkdir(os.path.join(nickname_dir, 'favorite'))\n    print('\u89c6\u9891\u4e0b\u8f7d\u4e2d:\u5171\u6709%d\u4e2a\u4f5c\u54c1!\\n' % len(video_urls))\n    for num in range(len(video_urls)):\n        print('  \u89e3\u6790\u7b2c%d\u4e2a\u89c6\u9891\u94fe\u63a5 [%s] \u4e2d\uff0c\u8bf7\u7a0d\u540e!\\n' % (num + 1, share_urls[num]))\n        if '\\\\' in video_names[num]:\n            video_name = video_names[num].replace('\\\\', '')\n        elif '/' in video_names[num]:\n            video_name = video_names[num].replace('/', '')\n        else:\n            video_name = video_names[num]\n        video_path = os.path.join(nickname_dir, video_name) if type_flag != 'f' else os.path.join(nickname_dir, 'favorite', video_name)\n        if os.path.isfile(video_path):\n            print('\u89c6\u9891\u5df2\u5b58\u5728')\n        else:\n            self.video_downloader(video_urls[num], video_path, watermark_flag)\n        print('\\n')\n    print('\u4e0b\u8f7d\u5b8c\u6210!')"
        ]
    },
    {
        "func_name": "hello",
        "original": "def hello(self):\n    \"\"\"\n\t\t\u6253\u5370\u6b22\u8fce\u754c\u9762\n\t\tParameters:\n\t\t\tNone\n\t\tReturns:\n\t\t\tNone\n\t\t\"\"\"\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)",
        "mutated": [
            "def hello(self):\n    if False:\n        i = 10\n    '\\n\\t\\t\u6253\u5370\u6b22\u8fce\u754c\u9762\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)",
            "def hello(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\t\\t\u6253\u5370\u6b22\u8fce\u754c\u9762\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)",
            "def hello(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\t\\t\u6253\u5370\u6b22\u8fce\u754c\u9762\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)",
            "def hello(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\t\\t\u6253\u5370\u6b22\u8fce\u754c\u9762\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)",
            "def hello(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\t\\t\u6253\u5370\u6b22\u8fce\u754c\u9762\\n\\t\\tParameters:\\n\\t\\t\\tNone\\n\\t\\tReturns:\\n\\t\\t\\tNone\\n\\t\\t'\n    print('*' * 100)\n    print('\\t\\t\\t\\t\u6296\u97f3App\u89c6\u9891\u4e0b\u8f7d\u5c0f\u52a9\u624b')\n    print('\\t\\t\u4f5c\u8005:Jack Cui\u3001steven7851')\n    print('*' * 100)"
        ]
    }
]