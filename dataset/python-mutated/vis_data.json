[
    {
        "func_name": "show_linear_weight",
        "original": "def show_linear_weight(exp):\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()",
        "mutated": [
            "def show_linear_weight(exp):\n    if False:\n        i = 10\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()",
            "def show_linear_weight(exp):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()",
            "def show_linear_weight(exp):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()",
            "def show_linear_weight(exp):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()",
            "def show_linear_weight(exp):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    coef_df = {}\n    for r in exp.list_recorders('list'):\n        t = r.load_object('task')\n        if None in t['dataset']['kwargs']['segments']['test']:\n            continue\n        m = r.load_object('params.pkl')\n        coef_df[t['dataset']['kwargs']['segments']['test']] = pd.Series(m.coef_)\n    coef_df = pd.concat(coef_df)\n    coef_df.index.names = ['test_start', 'test_end', 'coef_idx']\n    coef_df = coef_df.droplevel('test_end').unstack('coef_idx').T\n    plt.figure(figsize=(40, 20))\n    sns.heatmap(coef_df)\n    plt.show()"
        ]
    }
]