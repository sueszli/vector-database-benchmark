[
    {
        "func_name": "replace_link_ids",
        "original": "def replace_link_ids(render: str) -> str:\n    \"\"\"Link IDs have a random ID and system path which is a problem for\n    reproducible tests.\n\n    \"\"\"\n    return re_link_ids.sub('id=0;foo\\x1b', render)",
        "mutated": [
            "def replace_link_ids(render: str) -> str:\n    if False:\n        i = 10\n    'Link IDs have a random ID and system path which is a problem for\\n    reproducible tests.\\n\\n    '\n    return re_link_ids.sub('id=0;foo\\x1b', render)",
            "def replace_link_ids(render: str) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Link IDs have a random ID and system path which is a problem for\\n    reproducible tests.\\n\\n    '\n    return re_link_ids.sub('id=0;foo\\x1b', render)",
            "def replace_link_ids(render: str) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Link IDs have a random ID and system path which is a problem for\\n    reproducible tests.\\n\\n    '\n    return re_link_ids.sub('id=0;foo\\x1b', render)",
            "def replace_link_ids(render: str) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Link IDs have a random ID and system path which is a problem for\\n    reproducible tests.\\n\\n    '\n    return re_link_ids.sub('id=0;foo\\x1b', render)",
            "def replace_link_ids(render: str) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Link IDs have a random ID and system path which is a problem for\\n    reproducible tests.\\n\\n    '\n    return re_link_ids.sub('id=0;foo\\x1b', render)"
        ]
    },
    {
        "func_name": "render",
        "original": "def render(renderable: RenderableType) -> str:\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output",
        "mutated": [
            "def render(renderable: RenderableType) -> str:\n    if False:\n        i = 10\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output",
            "def render(renderable: RenderableType) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output",
            "def render(renderable: RenderableType) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output",
            "def render(renderable: RenderableType) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output",
            "def render(renderable: RenderableType) -> str:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    console = Console(width=100, file=io.StringIO(), color_system='truecolor', legacy_windows=False)\n    console.print(renderable)\n    output = replace_link_ids(console.file.getvalue())\n    print(repr(output))\n    return output"
        ]
    },
    {
        "func_name": "test_markdown_render",
        "original": "def test_markdown_render():\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected",
        "mutated": [
            "def test_markdown_render():\n    if False:\n        i = 10\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected",
            "def test_markdown_render():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected",
            "def test_markdown_render():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected",
            "def test_markdown_render():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected",
            "def test_markdown_render():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown = Markdown(MARKDOWN)\n    rendered_markdown = render(markdown)\n    expected = '\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\\n\u2503                                             \\x1b[1mHeading\\x1b[0m                                              \u2503\\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b\\n\\n\\n                                            \\x1b[1;4mSub-heading\\x1b[0m                                             \\n\\n                                              \\x1b[1mHeading\\x1b[0m                                               \\n\\n                                             \\x1b[1;2mH4 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[4mH5 Heading\\x1b[0m                                             \\n\\n                                             \\x1b[3mH6 Heading\\x1b[0m                                             \\n\\nParagraphs are separated by a blank line.                                                           \\n\\nTwo spaces at the end of a line                                                                     \\nproduces a line break.                                                                              \\n\\nText attributes \\x1b[3mitalic\\x1b[0m, \\x1b[1mbold\\x1b[0m, \\x1b[1;36;40mmonospace\\x1b[0m.                                                            \\n\\nHorizontal rule:                                                                                    \\n\\n\\x1b[33m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\nBullet list:                                                                                        \\n\\n\\x1b[1;33m \u2022 \\x1b[0mapples                                                                                           \\n\\x1b[1;33m \u2022 \\x1b[0moranges                                                                                          \\n\\x1b[1;33m \u2022 \\x1b[0mpears                                                                                            \\n\\nNumbered list:                                                                                      \\n\\n\\x1b[1;33m 1 \\x1b[0mlather                                                                                           \\n\\x1b[1;33m 2 \\x1b[0mrinse                                                                                            \\n\\x1b[1;33m 3 \\x1b[0mrepeat                                                                                           \\n\\nAn \\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mexample\\x1b[0m\\x1b]8;;\\x1b\\\\.                                                                                         \\n\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mMarkdown uses email-style > characters for blockquoting.\\x1b[0m\\x1b[35m                                        \\x1b[0m\\n\\x1b[35m\u258c \\x1b[0m\\x1b[35mLorem ipsum\\x1b[0m\\x1b[35m                                                                                     \\x1b[0m\\n\\n\ud83c\udf06 \\x1b]8;id=0;foo\\x1b\\\\progress\\x1b]8;;\\x1b\\\\                                                                                         \\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34ma=1\\x1b[0m\\x1b[48;2;39;40;34m                                                                                               \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;255;70;137;48;2;39;40;34mimport\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mthis\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfoobar\\x1b[0m\\x1b[48;2;39;40;34m                                                                                            \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mimport this\\x1b[0m\\x1b[48;2;39;40;34m                                                                                       \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[48;2;39;40;34m                                                                                                    \\x1b[0m\\n\\n\\x1b[1;33m 1 \\x1b[0mList item                                                                                        \\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mCode block\\x1b[0m\\x1b[48;2;39;40;34m                                                                                     \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\\n\\x1b[1;33m   \\x1b[0m\\x1b[48;2;39;40;34m                                                                                                 \\x1b[0m\\n'\n    assert rendered_markdown == expected"
        ]
    },
    {
        "func_name": "test_inline_code",
        "original": "def test_inline_code():\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected",
        "mutated": [
            "def test_inline_code():\n    if False:\n        i = 10\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected",
            "def test_inline_code():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected",
            "def test_inline_code():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected",
            "def test_inline_code():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected",
            "def test_inline_code():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown = Markdown('inline `import this` code', inline_code_lexer='python', inline_code_theme='emacs')\n    result = render(markdown)\n    expected = 'inline \\x1b[1;38;2;170;34;255;48;2;248;248;248mimport\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;0;255;48;2;248;248;248mthis\\x1b[0m code                                                                             \\n'\n    print(result)\n    print(repr(result))\n    assert result == expected"
        ]
    },
    {
        "func_name": "test_markdown_table",
        "original": "def test_markdown_table():\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected",
        "mutated": [
            "def test_markdown_table():\n    if False:\n        i = 10\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected",
            "def test_markdown_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected",
            "def test_markdown_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected",
            "def test_markdown_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected",
            "def test_markdown_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown = Markdown('| Year |                      Title                       | Director          |  Box Office (USD) |\\n|------|:------------------------------------------------:|:------------------|------------------:|\\n| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\\n| 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\\n| 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\\n| 1984 |       Indiana Jones and the Temple of Doom       | Steven Spielberg  |    $333.1 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n'\n    assert result == expected"
        ]
    },
    {
        "func_name": "test_inline_styles_in_table",
        "original": "def test_inline_styles_in_table():\n    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3115\"\"\"\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected",
        "mutated": [
            "def test_inline_styles_in_table():\n    if False:\n        i = 10\n    'Regression test for https://github.com/Textualize/rich/issues/3115'\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected",
            "def test_inline_styles_in_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Regression test for https://github.com/Textualize/rich/issues/3115'\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected",
            "def test_inline_styles_in_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Regression test for https://github.com/Textualize/rich/issues/3115'\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected",
            "def test_inline_styles_in_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Regression test for https://github.com/Textualize/rich/issues/3115'\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected",
            "def test_inline_styles_in_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Regression test for https://github.com/Textualize/rich/issues/3115'\n    markdown = Markdown('| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\\n|------|:----------------------------------------------------------:|:------------------|------------------:|\\n| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\\n| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\\n')\n    result = render(markdown)\n    expected = '\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n'\n    assert result == expected"
        ]
    },
    {
        "func_name": "test_inline_styles_with_justification",
        "original": "def test_inline_styles_with_justification():\n    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3115\n\n    In particular, this tests the interaction between the change that was made to fix\n    #3115 and column text justification.\n    \"\"\"\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected",
        "mutated": [
            "def test_inline_styles_with_justification():\n    if False:\n        i = 10\n    'Regression test for https://github.com/Textualize/rich/issues/3115\\n\\n    In particular, this tests the interaction between the change that was made to fix\\n    #3115 and column text justification.\\n    '\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected",
            "def test_inline_styles_with_justification():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Regression test for https://github.com/Textualize/rich/issues/3115\\n\\n    In particular, this tests the interaction between the change that was made to fix\\n    #3115 and column text justification.\\n    '\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected",
            "def test_inline_styles_with_justification():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Regression test for https://github.com/Textualize/rich/issues/3115\\n\\n    In particular, this tests the interaction between the change that was made to fix\\n    #3115 and column text justification.\\n    '\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected",
            "def test_inline_styles_with_justification():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Regression test for https://github.com/Textualize/rich/issues/3115\\n\\n    In particular, this tests the interaction between the change that was made to fix\\n    #3115 and column text justification.\\n    '\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected",
            "def test_inline_styles_with_justification():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Regression test for https://github.com/Textualize/rich/issues/3115\\n\\n    In particular, this tests the interaction between the change that was made to fix\\n    #3115 and column text justification.\\n    '\n    markdown = Markdown('| left | center | right |\\n| :- | :-: | -: |\\n| This is a long row | because it contains | a fairly long sentence. |\\n| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |')\n    result = render(markdown)\n    expected = '\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n'\n    assert result == expected"
        ]
    },
    {
        "func_name": "test_partial_table",
        "original": "def test_partial_table():\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected",
        "mutated": [
            "def test_partial_table():\n    if False:\n        i = 10\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected",
            "def test_partial_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected",
            "def test_partial_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected",
            "def test_partial_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected",
            "def test_partial_table():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown = Markdown('| Simple | Table |\\n| ------ | ----- ')\n    result = render(markdown)\n    print(repr(result))\n    expected = '\\n                  \\n \\x1b[1m \\x1b[0m\\x1b[1mSimple\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mTable\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n                  \\n'\n    assert result == expected"
        ]
    }
]