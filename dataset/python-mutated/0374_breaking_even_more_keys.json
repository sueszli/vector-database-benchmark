[
    {
        "func_name": "auditlog_organization_migrations",
        "original": "def auditlog_organization_migrations():\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
        "mutated": [
            "def auditlog_organization_migrations():\n    if False:\n        i = 10\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def auditlog_organization_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def auditlog_organization_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def auditlog_organization_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def auditlog_organization_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    database_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.Organization', db_constraint=False, db_index=True, null=False))]\n    state_operations = [migrations.AlterField(model_name='auditlogentry', name='organization', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.Organization', db_index=True, on_delete='CASCADE')), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_588b1e_idx'), migrations.RemoveIndex(model_name='auditlogentry', name='sentry_audi_organiz_c8bd18_idx'), migrations.RenameField(model_name='auditlogentry', old_name='organization', new_name='organization_id'), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'datetime'], name='sentry_audi_organiz_c8bd18_idx')), migrations.AddIndex(model_name='auditlogentry', index=models.Index(fields=['organization_id', 'event', 'datetime'], name='sentry_audi_organiz_588b1e_idx'))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]"
        ]
    },
    {
        "func_name": "activityuser_migrations",
        "original": "def activityuser_migrations():\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
        "mutated": [
            "def activityuser_migrations():\n    if False:\n        i = 10\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def activityuser_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def activityuser_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def activityuser_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def activityuser_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    database_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True, null=True))]\n    state_operations = [migrations.AlterField(model_name='activity', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=True, on_delete='SET_NULL', null=True)), migrations.RenameField(model_name='activity', old_name='user', new_name='user_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]"
        ]
    },
    {
        "func_name": "recentsearch_user_migrations",
        "original": "def recentsearch_user_migrations():\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
        "mutated": [
            "def recentsearch_user_migrations():\n    if False:\n        i = 10\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def recentsearch_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def recentsearch_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def recentsearch_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def recentsearch_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    database_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=False, null=False))]\n    state_operations = [migrations.AlterField(model_name='recentsearch', name='user', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', db_index=False, on_delete='CASCADE')), migrations.RenameField(model_name='recentsearch', old_name='user', new_name='user_id'), migrations.AlterUniqueTogether('recentsearch', (('user_id', 'organization', 'type', 'query_hash'),))]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]"
        ]
    },
    {
        "func_name": "dashboard_user_migrations",
        "original": "def dashboard_user_migrations():\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
        "mutated": [
            "def dashboard_user_migrations():\n    if False:\n        i = 10\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def dashboard_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def dashboard_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def dashboard_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]",
            "def dashboard_user_migrations():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    database_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(to='sentry.User', db_constraint=False, db_index=True))]\n    state_operations = [migrations.AlterField(model_name='dashboard', name='created_by', field=sentry.db.models.fields.hybrid_cloud_foreign_key.HybridCloudForeignKey('sentry.User', on_delete='CASCADE')), migrations.RenameField(model_name='dashboard', old_name='created_by', new_name='created_by_id')]\n    return database_operations + [migrations.SeparateDatabaseAndState(state_operations=state_operations)]"
        ]
    }
]