[
    {
        "func_name": "pre_test_setup",
        "original": "def pre_test_setup(self):\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()",
        "mutated": [
            "def pre_test_setup(self):\n    if False:\n        i = 10\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()",
            "def pre_test_setup(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()",
            "def pre_test_setup(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()",
            "def pre_test_setup(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()",
            "def pre_test_setup(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if app.config.get('GITHUB_CREDENTIALS'):\n        del app.config['GITHUB_CREDENTIALS']\n    self.account_type = AccountType(name='GitHub')\n    self.accounts = []\n    db.session.add(self.account_type)\n    db.session.commit()\n    for x in ['one', 'two', 'three']:\n        account = Account(name='Org-{}'.format(x), account_type_id=self.account_type.id, identifier='Org-{}'.format(x), active=True)\n        account.custom_fields.append(AccountTypeCustomValues(name='access_token_file', value='security_monkey/tests/utilities/templates/github_creds'))\n        db.session.add(account)\n        self.accounts.append(account)\n    db.session.commit()"
        ]
    },
    {
        "func_name": "test_get_creds_file",
        "original": "def test_get_creds_file(self):\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])",
        "mutated": [
            "def test_get_creds_file(self):\n    if False:\n        i = 10\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])",
            "def test_get_creds_file(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])",
            "def test_get_creds_file(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])",
            "def test_get_creds_file(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])",
            "def test_get_creds_file(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three'])\n    for x in ['one', 'two', 'three']:\n        assert creds['Org-{}'.format(x)] == 'token-{}'.format(x)\n    db.session.add(Account(name='Org-BAD', account_type_id=self.account_type.id, identifier='Org-BAD', active=True))\n    db.session.commit()\n    with self.assertRaises(GitHubCredsError) as _:\n        get_github_creds(['Org-BAD'])"
        ]
    },
    {
        "func_name": "test_get_creds_env",
        "original": "def test_get_creds_env(self):\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4",
        "mutated": [
            "def test_get_creds_env(self):\n    if False:\n        i = 10\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4",
            "def test_get_creds_env(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4",
            "def test_get_creds_env(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4",
            "def test_get_creds_env(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4",
            "def test_get_creds_env(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    app.config['GITHUB_CREDENTIALS'] = {'AnotherOrg': 'AnotherCred'}\n    db.session.add(Account(name='AnotherOrg', account_type_id=self.account_type.id, identifier='AnotherOrg', active=True))\n    db.session.commit()\n    creds = get_github_creds(['AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert creds['AnotherOrg'] == 'AnotherCred'\n    creds = get_github_creds(['Org-one', 'Org-two', 'Org-three', 'AnotherOrg'])\n    assert isinstance(creds, dict)\n    assert len(list(creds.keys())) == 4"
        ]
    },
    {
        "func_name": "some_func",
        "original": "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])",
        "mutated": [
            "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    if False:\n        i = 10\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])",
            "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])",
            "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])",
            "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])",
            "@iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\ndef some_func(**kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    assert kwargs['exception_map'] is not None\n    assert kwargs['account_name'] in org_list\n    org_list.remove(kwargs['account_name'])\n    return ([kwargs['account_name']], kwargs['exception_map'])"
        ]
    },
    {
        "func_name": "test_iter_org_decorator",
        "original": "def test_iter_org_decorator(self):\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)",
        "mutated": [
            "def test_iter_org_decorator(self):\n    if False:\n        i = 10\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)",
            "def test_iter_org_decorator(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)",
            "def test_iter_org_decorator(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)",
            "def test_iter_org_decorator(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)",
            "def test_iter_org_decorator(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    org_list = ['Org-one', 'Org-two', 'Org-three']\n\n    @iter_org(orgs=['Org-one', 'Org-two', 'Org-three'])\n    def some_func(**kwargs):\n        assert kwargs['exception_map'] is not None\n        assert kwargs['account_name'] in org_list\n        org_list.remove(kwargs['account_name'])\n        return ([kwargs['account_name']], kwargs['exception_map'])\n    results = some_func()\n    assert len(results[0]) == 3\n    assert isinstance(results[1], dict)"
        ]
    },
    {
        "func_name": "test_strip_url_fields",
        "original": "def test_strip_url_fields(self):\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)",
        "mutated": [
            "def test_strip_url_fields(self):\n    if False:\n        i = 10\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)",
            "def test_strip_url_fields(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)",
            "def test_strip_url_fields(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)",
            "def test_strip_url_fields(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)",
            "def test_strip_url_fields(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    github_blob = json.loads('\\n        {\\n            \"id\": 21290287,\\n            \"name\": \"security_monkey\",\\n            \"full_name\": \"Netflix/security_monkey\",\\n            \"owner\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"private\": false,\\n            \"html_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"description\": \"Security Monkey\",\\n            \"fork\": false,\\n            \"url\": \"https://api.github.com/repos/Netflix/security_monkey\",\\n            \"forks_url\": \"https://api.github.com/repos/Netflix/security_monkey/forks\",\\n            \"keys_url\": \"https://api.github.com/repos/Netflix/security_monkey/keys{/key_id}\",\\n            \"collaborators_url\": \"https://api.github.com/repos/Netflix/security_monkey/collaborators{/collaborator}\",\\n            \"teams_url\": \"https://api.github.com/repos/Netflix/security_monkey/teams\",\\n            \"hooks_url\": \"https://api.github.com/repos/Netflix/security_monkey/hooks\",\\n            \"issue_events_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/events{/number}\",\\n            \"events_url\": \"https://api.github.com/repos/Netflix/security_monkey/events\",\\n            \"assignees_url\": \"https://api.github.com/repos/Netflix/security_monkey/assignees{/user}\",\\n            \"branches_url\": \"https://api.github.com/repos/Netflix/security_monkey/branches{/branch}\",\\n            \"tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/tags\",\\n            \"blobs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/blobs{/sha}\",\\n            \"git_tags_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/tags{/sha}\",\\n            \"git_refs_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/refs{/sha}\",\\n            \"trees_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/trees{/sha}\",\\n            \"statuses_url\": \"https://api.github.com/repos/Netflix/security_monkey/statuses/{sha}\",\\n            \"languages_url\": \"https://api.github.com/repos/Netflix/security_monkey/languages\",\\n            \"stargazers_url\": \"https://api.github.com/repos/Netflix/security_monkey/stargazers\",\\n            \"contributors_url\": \"https://api.github.com/repos/Netflix/security_monkey/contributors\",\\n            \"subscribers_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscribers\",\\n            \"subscription_url\": \"https://api.github.com/repos/Netflix/security_monkey/subscription\",\\n            \"commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/commits{/sha}\",\\n            \"git_commits_url\": \"https://api.github.com/repos/Netflix/security_monkey/git/commits{/sha}\",\\n            \"comments_url\": \"https://api.github.com/repos/Netflix/security_monkey/comments{/number}\",\\n            \"issue_comment_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues/comments{/number}\",\\n            \"contents_url\": \"https://api.github.com/repos/Netflix/security_monkey/contents/{+path}\",\\n            \"compare_url\": \"https://api.github.com/repos/Netflix/security_monkey/compare/{base}...{head}\",\\n            \"merges_url\": \"https://api.github.com/repos/Netflix/security_monkey/merges\",\\n            \"archive_url\": \"https://api.github.com/repos/Netflix/security_monkey/{archive_format}{/ref}\",\\n            \"downloads_url\": \"https://api.github.com/repos/Netflix/security_monkey/downloads\",\\n            \"issues_url\": \"https://api.github.com/repos/Netflix/security_monkey/issues{/number}\",\\n            \"pulls_url\": \"https://api.github.com/repos/Netflix/security_monkey/pulls{/number}\",\\n            \"milestones_url\": \"https://api.github.com/repos/Netflix/security_monkey/milestones{/number}\",\\n            \"notifications_url\": \"https://api.github.com/repos/Netflix/security_monkey/notifications{?since,all,participating}\",\\n            \"labels_url\": \"https://api.github.com/repos/Netflix/security_monkey/labels{/name}\",\\n            \"releases_url\": \"https://api.github.com/repos/Netflix/security_monkey/releases{/id}\",\\n            \"deployments_url\": \"https://api.github.com/repos/Netflix/security_monkey/deployments\",\\n            \"created_at\": \"2014-06-27T21:49:56Z\",\\n            \"updated_at\": \"2017-08-18T07:27:14Z\",\\n            \"pushed_at\": \"2017-08-19T08:27:57Z\",\\n            \"git_url\": \"git://github.com/Netflix/security_monkey.git\",\\n            \"ssh_url\": \"git@github.com:Netflix/security_monkey.git\",\\n            \"clone_url\": \"https://github.com/Netflix/security_monkey.git\",\\n            \"svn_url\": \"https://github.com/Netflix/security_monkey\",\\n            \"homepage\": null,\\n            \"size\": 12497,\\n            \"stargazers_count\": 1602,\\n            \"watchers_count\": 1602,\\n            \"language\": \"Python\",\\n            \"has_issues\": true,\\n            \"has_projects\": true,\\n            \"has_downloads\": true,\\n            \"has_wiki\": true,\\n            \"has_pages\": false,\\n            \"forks_count\": 320,\\n            \"mirror_url\": null,\\n            \"open_issues_count\": 54,\\n            \"forks\": 320,\\n            \"open_issues\": 54,\\n            \"watchers\": 1602,\\n            \"default_branch\": \"develop\",\\n            \"organization\": {\\n                \"login\": \"Netflix\",\\n                \"id\": 913567,\\n                \"avatar_url\": \"https://avatars3.githubusercontent.com/u/913567?v=4\",\\n                \"gravatar_id\": \"\",\\n                \"url\": \"https://api.github.com/users/Netflix\",\\n                \"html_url\": \"https://github.com/Netflix\",\\n                \"followers_url\": \"https://api.github.com/users/Netflix/followers\",\\n                \"following_url\": \"https://api.github.com/users/Netflix/following{/other_user}\",\\n                \"gists_url\": \"https://api.github.com/users/Netflix/gists{/gist_id}\",\\n                \"starred_url\": \"https://api.github.com/users/Netflix/starred{/owner}{/repo}\",\\n                \"subscriptions_url\": \"https://api.github.com/users/Netflix/subscriptions\",\\n                \"organizations_url\": \"https://api.github.com/users/Netflix/orgs\",\\n                \"repos_url\": \"https://api.github.com/users/Netflix/repos\",\\n                \"events_url\": \"https://api.github.com/users/Netflix/events{/privacy}\",\\n                \"received_events_url\": \"https://api.github.com/users/Netflix/received_events\",\\n                \"type\": \"Organization\",\\n                \"site_admin\": false\\n            },\\n            \"network_count\": 320,\\n            \"subscribers_count\": 403\\n        }\\n        ')\n    outer_fields_to_remove = []\n    total_outer_fields = len(list(github_blob.keys()))\n    org_fields_to_remove = []\n    total_org_fields = len(list(github_blob['organization'].keys()))\n    owner_fields_to_remove = []\n    total_owner_fields = len(list(github_blob['owner'].keys()))\n    for field in github_blob.keys():\n        if '_url' in field:\n            outer_fields_to_remove.append(field)\n    for field in github_blob['organization'].keys():\n        if '_url' in field:\n            org_fields_to_remove.append(field)\n    for field in github_blob['owner'].keys():\n        if '_url' in field:\n            owner_fields_to_remove.append(field)\n    new_blob = strip_url_fields(github_blob)\n    assert total_outer_fields - len(outer_fields_to_remove) == len(list(new_blob.keys()))\n    assert total_org_fields - len(org_fields_to_remove) == len(list(new_blob['organization'].keys()))\n    assert total_owner_fields - len(owner_fields_to_remove) == len(list(new_blob['owner'].keys()))\n    for outer in outer_fields_to_remove:\n        assert not new_blob.get(outer)\n    for org in org_fields_to_remove:\n        assert not new_blob['organization'].get(org)\n    for owner in owner_fields_to_remove:\n        assert not new_blob['owner'].get(owner)"
        ]
    }
]