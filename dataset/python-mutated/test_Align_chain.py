"""Tests for Align.chain module."""
import unittest
from io import StringIO
from Bio.Align import Alignment
from Bio.Seq import Seq, reverse_complement
from Bio.SeqRecord import SeqRecord
from Bio.SeqFeature import SimpleLocation, ExactPosition, CompoundLocation
from Bio import SeqIO
from Bio import Align
try:
    import numpy as np
except ImportError:
    from Bio import MissingPythonDependencyError
    raise MissingPythonDependencyError('Install numpy if you want to use Bio.Align.chain.') from None

class TestAlign_dna_rna(unittest.TestCase):

    def setUp(self):
        if False:
            print('Hello World!')
        data = {}
        records = SeqIO.parse('Blat/dna.fa', 'fasta')
        for record in records:
            (name, start_end) = record.id.split(':')
            assert name == 'chr3'
            (start, end) = start_end.split('-')
            start = int(start)
            end = int(end)
            sequence = str(record.seq)
            assert len(sequence) == end - start
            data[start] = sequence
        self.dna = data
        records = SeqIO.parse('Blat/rna.fa', 'fasta')
        self.rna = {record.id: record.seq for record in records}

    def test_reading(self):
        if False:
            i = 10
            return i + 15
        'Test parsing dna_rna.chain.'
        path = 'Blat/dna_rna.chain'
        alignments = Align.parse(path, 'chain')
        self.check_alignments(alignments)
        alignments.rewind()
        self.check_alignments(alignments)
        with Align.parse(path, 'chain') as alignments:
            self.check_alignments(alignments)
        with self.assertRaises(AttributeError):
            alignments._stream
        with Align.parse(path, 'chain') as alignments:
            pass
        with self.assertRaises(AttributeError):
            alignments._stream

    def check_alignments(self, alignments):
        if False:
            while True:
                i = 10
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 1711))
        self.assertEqual(len(alignment), 2)
        self.assertEqual(alignment.score, 176)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr3')
        self.assertEqual(alignment.query.id, 'NR_046654.1')
        self.assertEqual(len(alignment.target.seq), 198295559)
        self.assertEqual(len(alignment.query.seq), 181)
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[42530895, 42530958, 42532020, 42532095, 42532563, 42532606], [181, 118, 118, 43, 43, 0]])))
        dna = Seq(self.dna, length=len(alignment.target))
        alignment.target.seq = dna
        alignment.query.seq = self.rna[alignment.query.id]
        self.assertTrue(np.array_equal(alignment.substitutions, np.array([[36.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 42.0, 0.0, 0.0, 0.0, 0.0], [2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]])))
        self.assertEqual(alignment.substitutions.alphabet, 'ACGTacgt')
        self.assertEqual(str(alignment), 'chr3       42530895 CGGAAGTACTTCTGGGGGTACATACTCATCGGCTGGGGTATGGTACCAGGGAGGGCTTCC\n                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nNR_046654       181 CGGAAGTACTTCTGGGGGTACATACTCATCGGCTGGGGTATGGTACCAGGGAGGGCTTCC\n\nchr3       42530955 AGGCTGGGGACAGAGGGGGCAAGGCCTGGAGAACTCCCTAGGGGGAGGGTGCCAACCCAG\n                 60 |||---------------------------------------------------------\nNR_046654       121 AGG---------------------------------------------------------\n\nchr3       42531015 CTTGCAGTCCTACGTCTTGCTTAGCTGCAGGTCCTGCCTGCAAGGATATCAGCCAAGGGT\n                120 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531075 CAAGAAAGTCCTCAAAATGTCTGATCCCAGGACAAGTCCCTCAGGTTGCAGCTGCACCTA\n                180 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531135 GGGCTGACCTGTGGGACAGATTTTGTGAACATCTTTCCATTTCCCTTTAGTTCCCGAAAT\n                240 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531195 ACAcagggccactgctaatctataaagggcctctgtcacaattagaaagagaatgtccgt\n                300 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531255 ctaggtagacacagcccttcaggcatacagcttCACCCCCTCAGTGGAGCATCCCTCCGT\n                360 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531315 GGTGAACAACCTATGCAACCAAAGACAGCAGACTGACAACCCACCCTTTtctctctccct\n                420 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531375 ccctctccctgcttttctccaaaatctctccctcatgccctctacccctgcttcctgtgc\n                480 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531435 cctctctgctctttcactctccctGGGCCTGACAGGGGTACCCAGCACATTCACCATGGT\n                540 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531495 GTGGACCATCGCCAGGATCCATTTTGAGGATTATGGGTGAGCTGCTGCCCCACACACTCC\n                600 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531555 CCCGGCCGCCATCACTTGGGCAGGCCCCCTGGGTGGGATGATAATGCCATCTGGCCTTGG\n                660 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531615 TGAGTGGACAAAAACCACAGCTCTCGGGCCAGAGGGGAGGCTGGAGGAGGACCTGGGGAG\n                720 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531675 CAACAGACTCTGGGCCCGGGGTTGCTAAAGTGCTCAGGAGCAGAGCTGGGGACAACTGGG\n                780 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531735 GGAGGTGCTGCTGAGTCTCTCTCTGGCTGAGGACAATCCCTCTCATTCCTCCCCACGGTC\n                840 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531795 TGCTCAGGTGCTGGGACACCATCAACTCCTCACTGTGGTGGATCATAAAGGGCCCCATCC\n                900 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531855 TCACCTCCATCTTGGTAAGATaccctcccaccacctagagatggggaaacaggcccaaag\n                960 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531915 ggcaggcaacttagcccaaggtcacatgggaaattagtatctaggtcagaactgaaacgt\n               1020 ------------------------------------------------------------\nNR_046654       118 ------------------------------------------------------------\n\nchr3       42531975 agcttcctaatgcccaatgcaggatcatccccacccctgtcctaccagTTCTTCCTTGAG\n               1080 ---------------------------------------------...||||||||||||\nNR_046654       118 ---------------------------------------------CAGTTCTTCCTTGAG\n\nchr3       42532035 CGTAAGCGGATTGGGAGCACAGTCCTTAGGGATTTGAAGGAGGTAGAGTTCCCGGATGAC\n               1140 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\nNR_046654       103 CGTAAGCGGATTGGGAGCACAGTCCTTAGGGATTTGAAGGAGGTAGAGTTCCCGGATGAC\n\nchr3       42532095 CTGCCCAAAGGGGAAATGCCAGAGGAGAGGTAAGATAGAGAGAGGGGCAGCAGGACCCTG\n               1200 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532155 GGAAAGAAGACAGGCCAGCAGTCAAGGGGCCTGAACACCTCAGCCTTCCCGCTCTGACTG\n               1260 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532215 CCCGAACTCGGGTCCCCACCCACTAGGTAAACTTCATCCTGTTTATTTGCATCATCCGAA\n               1320 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532275 TCCTGCTTCAGAAACTGCGGCCCCCAGATATCAGGAAGAGTGACAGCAGTCCATACTCGT\n               1380 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532335 GAGTGTGGGCCTAGTGCCTCAGCCCCCAGTACCTCCATCCCCAGTCCTCAAATCATCCCA\n               1440 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532395 CATCTCCTTGAAGTCCTCCCACCCCAAACATCCAGAGTCACCAAAGAGCCACATTGTTCT\n               1500 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532455 TTCCCACCTCCACCATGGCCTGGCTcagcccaccaccatcccctgctccagccccaccct\n               1560 ------------------------------------------------------------\nNR_046654        43 ------------------------------------------------------------\n\nchr3       42532515 caCCAGGCTGCACTCAGAGCCCTGCATGCTTCTCCTGCCCACACTCACCTAGCATCCTTC\n               1620 ------------------------------------------------||||||||||||\nNR_046654        43 ------------------------------------------------CTAGCATCCTTC\n\nchr3       42532575 CCAGGTATGCATCTGCTGCCAAGCCAGGgag 42532606\n               1680 ||||||||||||||||||||||||||||...     1711\nNR_046654        31 CCAGGTATGCATCTGCTGCCAAGCCAGGGAG        0\n')
        self.assertEqual(format(alignment, 'chain'), 'chain 176 chr3 198295559 + 42530895 42532606 NR_046654.1 181 - 0 181 1\n63\t1062\t0\n75\t468\t0\n43\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 1714))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr3')
        self.assertEqual(alignment.query.id, 'NR_046654.1_modified')
        self.assertEqual(len(alignment.target.seq), 198295559)
        self.assertEqual(len(alignment.query.seq), 190)
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[42530895, 42530922, 42530922, 42530958, 42532020, 42532037, 42532039, 42532095, 42532563, 42532606], [185, 158, 155, 119, 119, 102, 102, 46, 46, 3]])))
        dna = Seq(self.dna, length=len(alignment.target))
        alignment.target.seq = dna
        alignment.query.seq = self.rna[alignment.query.id]
        self.assertTrue(np.array_equal(alignment.substitutions, np.array([[34.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 57.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 41.0, 0.0, 0.0, 0.0, 0.0], [2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]])))
        self.assertEqual(alignment.substitutions.alphabet, 'ACGTacgt')
        self.assertEqual(str(alignment), 'chr3       42530895 CGGAAGTACTTCTGGGGGTACATACTC---ATCGGCTGGGGTATGGTACCAGGGAGGGCT\n                  0 |||||||||||||||||||||||||||---||||||||||||||||||||||||||||||\nNR_046654       185 CGGAAGTACTTCTGGGGGTACATACTCCCCATCGGCTGGGGTATGGTACCAGGGAGGGCT\n\nchr3       42530952 TCCAGGCTGGGGACAGAGGGGGCAAGGCCTGGAGAACTCCCTAGGGGGAGGGTGCCAACC\n                 60 ||||||------------------------------------------------------\nNR_046654       125 TCCAGG------------------------------------------------------\n\nchr3       42531012 CAGCTTGCAGTCCTACGTCTTGCTTAGCTGCAGGTCCTGCCTGCAAGGATATCAGCCAAG\n                120 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531072 GGTCAAGAAAGTCCTCAAAATGTCTGATCCCAGGACAAGTCCCTCAGGTTGCAGCTGCAC\n                180 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531132 CTAGGGCTGACCTGTGGGACAGATTTTGTGAACATCTTTCCATTTCCCTTTAGTTCCCGA\n                240 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531192 AATACAcagggccactgctaatctataaagggcctctgtcacaattagaaagagaatgtc\n                300 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531252 cgtctaggtagacacagcccttcaggcatacagcttCACCCCCTCAGTGGAGCATCCCTC\n                360 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531312 CGTGGTGAACAACCTATGCAACCAAAGACAGCAGACTGACAACCCACCCTTTtctctctc\n                420 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531372 cctccctctccctgcttttctccaaaatctctccctcatgccctctacccctgcttcctg\n                480 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531432 tgccctctctgctctttcactctccctGGGCCTGACAGGGGTACCCAGCACATTCACCAT\n                540 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531492 GGTGTGGACCATCGCCAGGATCCATTTTGAGGATTATGGGTGAGCTGCTGCCCCACACAC\n                600 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531552 TCCCCCGGCCGCCATCACTTGGGCAGGCCCCCTGGGTGGGATGATAATGCCATCTGGCCT\n                660 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531612 TGGTGAGTGGACAAAAACCACAGCTCTCGGGCCAGAGGGGAGGCTGGAGGAGGACCTGGG\n                720 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531672 GAGCAACAGACTCTGGGCCCGGGGTTGCTAAAGTGCTCAGGAGCAGAGCTGGGGACAACT\n                780 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531732 GGGGGAGGTGCTGCTGAGTCTCTCTCTGGCTGAGGACAATCCCTCTCATTCCTCCCCACG\n                840 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531792 GTCTGCTCAGGTGCTGGGACACCATCAACTCCTCACTGTGGTGGATCATAAAGGGCCCCA\n                900 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531852 TCCTCACCTCCATCTTGGTAAGATaccctcccaccacctagagatggggaaacaggccca\n                960 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531912 aagggcaggcaacttagcccaaggtcacatgggaaattagtatctaggtcagaactgaaa\n               1020 ------------------------------------------------------------\nNR_046654       119 ------------------------------------------------------------\n\nchr3       42531972 cgtagcttcctaatgcccaatgcaggatcatccccacccctgtcctaccagTTCTTCCTT\n               1080 ------------------------------------------------...|||||||||\nNR_046654       119 ------------------------------------------------CAGTTCTTCCTT\n\nchr3       42532032 GAGCGTAAGCGGATTGGGAGCACAGTCCTTAGGGATTTGAAGGAGGTAGAGTTCCCGGAT\n               1140 |||||--|||||||||||.|||||||||||||||||||||||||||||||||||||||||\nNR_046654       107 GAGCG--AGCGGATTGGGTGCACAGTCCTTAGGGATTTGAAGGAGGTAGAGTTCCCGGAT\n\nchr3       42532092 GACCTGCCCAAAGGGGAAATGCCAGAGGAGAGGTAAGATAGAGAGAGGGGCAGCAGGACC\n               1200 |||---------------------------------------------------------\nNR_046654        49 GAC---------------------------------------------------------\n\nchr3       42532152 CTGGGAAAGAAGACAGGCCAGCAGTCAAGGGGCCTGAACACCTCAGCCTTCCCGCTCTGA\n               1260 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532212 CTGCCCGAACTCGGGTCCCCACCCACTAGGTAAACTTCATCCTGTTTATTTGCATCATCC\n               1320 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532272 GAATCCTGCTTCAGAAACTGCGGCCCCCAGATATCAGGAAGAGTGACAGCAGTCCATACT\n               1380 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532332 CGTGAGTGTGGGCCTAGTGCCTCAGCCCCCAGTACCTCCATCCCCAGTCCTCAAATCATC\n               1440 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532392 CCACATCTCCTTGAAGTCCTCCCACCCCAAACATCCAGAGTCACCAAAGAGCCACATTGT\n               1500 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532452 TCTTTCCCACCTCCACCATGGCCTGGCTcagcccaccaccatcccctgctccagccccac\n               1560 ------------------------------------------------------------\nNR_046654        46 ------------------------------------------------------------\n\nchr3       42532512 cctcaCCAGGCTGCACTCAGAGCCCTGCATGCTTCTCCTGCCCACACTCACCTAGCATCC\n               1620 ---------------------------------------------------|||||||||\nNR_046654        46 ---------------------------------------------------CTAGCATCC\n\nchr3       42532572 TTCCCAGGTATGCATCTGCTGCCAAGCCAGGgag 42532606\n               1680 |||||||||||||||||||||||||||||||...     1714\nNR_046654        37 TTCCCAGGTATGCATCTGCTGCCAAGCCAGGGAG        3\n')
        self.assertEqual(format(alignment, 'chain'), 'chain 170 chr3 198295559 + 42530895 42532606 NR_046654.1_modified 190 - 5 187 2\n27\t0\t3\n36\t1062\t0\n17\t2\t0\n56\t468\t0\n43\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 5407))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr3')
        self.assertEqual(alignment.query.id, 'NR_111921.1')
        self.assertEqual(len(alignment.target.seq), 198295559)
        self.assertEqual(len(alignment.query.seq), 216)
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[48663767, 48663813, 48665640, 48665722, 48669098, 48669174], [0, 46, 46, 128, 128, 204]])))
        dna = Seq(self.dna, length=len(alignment.target.seq))
        alignment.target.seq = dna
        alignment.query.seq = self.rna[alignment.query.id]
        self.assertTrue(np.array_equal(alignment.substitutions, np.array([[53.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 35.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 50.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 0.0], [9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0]])))
        self.assertEqual(alignment.substitutions.alphabet, 'ACGTacgt')
        self.assertEqual(str(alignment), 'chr3       48663767 CACGAGAGGAGCGGAGGCGAGGGGTGAACGCGGAGCACTCCAATCGGTCAGTCATTGTTT\n                  0 ||||||||||||||||||||||||||||||||||||||||||||||--------------\nNR_111921         0 CACGAGAGGAGCGGAGGCGAGGGGTGAACGCGGAGCACTCCAATCG--------------\n\nchr3       48663827 CTATTGGCACAATGGGAGGCCCCGCCCCTCACGGCGGACTCATCGCATGGGGGAGGGGGC\n                 60 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48663887 TCCGCGGGTTGCCGGCTAACCGTGAGAGAGTCCGGGAGGTACACTATACGGACCGGCCTC\n                120 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48663947 CAAAGGCGGAATCGATAACGAGCTGCAGCGCCGGGTGCAGAGGACGCGGGCATCCCGAAG\n                180 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664007 CCCAGGAAGAGGTCAGGGCCGGGACCCCAGAACGCTCCACAGGGTGCGGCTCCCGCGATG\n                240 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664067 GGGTGGATCCTGGTTCTAACAGGCGAGGAACTCCTGGCCAAGGCCTCTGGCCCGCCCCGA\n                300 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664127 ACGGTCCCTATGACATCACCATCAACCAATCAGTCGGCGCATCCTTTCGCCCCTTGACTG\n                360 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664187 CTCCGCTTCCGGGAGGCGGGGCTTCTGCGGGTTCCACCTCCCGAGCGCCCCTTGTGGCTA\n                420 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664247 CCAAGGTCAGGCAACAGGTGTCCAGTTGTTCCCTCTCCTGTCTACGAATCTGAGGACCTC\n                480 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664307 CCCAGGATCAGAGCTCTGGGCCTGATACACGGCCGGGGTTCCTACGGGTTTGTGAGTGGG\n                540 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664367 GGTGGAAGATCTGCAGAGGCACTTAGGGCTGAACTCCTTTGAATGGGAGCCAATCGGTGC\n                600 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664427 AGGGGCTGGAGGAGCGAGTCCCCCAAAGTAGttttatttatctatttagagacaaggtct\n                660 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664487 cactctttcggagtgcagtggtgatcacagctcaccgtagcctcgaactccccaggcgat\n                720 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664547 tctctcacctcagcctcccgagtagctgggactacgggtacatgtcatcacacttggcta\n                780 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664607 atttttgcattttttatagagacagggtctcaccatgtaggccagattagtcttgaactc\n                840 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664667 ctgggctcaagcaatccgcccatcttggcctcccaaagtgctgggattataggtgtgagc\n                900 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664727 caccgcgcccggcAACCCAGAAGTGGTTTTGACAGCAccagcgctttctgtgtccacaat\n                960 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664787 ctagtgagtagagggcacaaaacctgacaccacggaggcagacaggcaggggctctgccg\n               1020 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664847 gggaagggtgttggagtcccaaaggaggcgtctgagtcaccttcgcaacctgggacgcct\n               1080 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664907 tcttgcataagatgcctgagcagtgccttgaatgaccaaggggagatccgcatctgcaaa\n               1140 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48664967 ggaagggcagggagggatagggattgggggtgggcatcctaggtcttggagactgtgtgg\n               1200 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665027 gcaaatgtgcagagacataaagggactatggctgagggaaatcaagCCCTGCCCTCTCAC\n               1260 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665087 CAATAGGGCTGGCGCTGGTCCCAGCTAACACTCCTTTTGGAGAGCAAAGCTCCTCACTTC\n               1320 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665147 TGAGTAGTGAGATTGATTGCGGATCACTCTCCATGTTGCTGCCTGCTGTGTGTCATCCCA\n               1380 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665207 CTGTCATCCTCCCTTTGTGGCTGTTCTGTGGAGCCCCTCTCCCTCAATCTGCACTCACCT\n               1440 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665267 CTATGCCCCAGCCCCATTGGCAGCTCCTAATGCACTCCCGGTaaaaaaaaaaaaacaaaa\n               1500 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665327 aCCAGATGTTAGTGATAGTGGTGGTAGTTCTTCTCTCCACCTCCAAATCTTGCCCTTGCC\n               1560 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665387 TCCTAATAAGACCCCTATGTGGTTTAACCTCAttttttttttttttttttttttttgaga\n               1620 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665447 tggagtttcactctgtcacccaggctggagtgaagtggtgtgatGGGGCTTCACCATGTg\n               1680 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665507 atggggcttcaccatgttggccaggctggtatcaaactcctgacctctagtgatctgccc\n               1740 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665567 gcctcagcctcccaaagtgctgggattaccggcatgaggcaccgtgcccagccTATCCTC\n               1800 ------------------------------------------------------------\nNR_111921        46 ------------------------------------------------------------\n\nchr3       48665627 CTTCTCTTATCAGCTCCCAACTAGAGGTCCACCCAGGACCCAGAGACCTGGATTTGAGGC\n               1860 -------------|||||||||||||||||||||||||||||||||||||||||||||||\nNR_111921        46 -------------CTCCCAACTAGAGGTCCACCCAGGACCCAGAGACCTGGATTTGAGGC\n\nchr3       48665687 TGCTGGGCGGCAGATGGAGCGATCAGAAGACCAGGGTAAGGGTGTGGCAGATACTGCCAC\n               1920 |||||||||||||||||||||||||||||||||||-------------------------\nNR_111921        93 TGCTGGGCGGCAGATGGAGCGATCAGAAGACCAGG-------------------------\n\nchr3       48665747 TAACACTTCTCAGCCTTTCCTTCTCCTGCCTTTTCCACCCCACCCTGTGTTTGTCTACTC\n               1980 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48665807 CCAGCCAGGTGTACCTTTCCAGGGGAAGACCTGGCCAACCTGTCCAGCTCAATTAtccag\n               2040 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48665867 cagttctttgacctcactgagatctcgagtccattgttcatcacctcagctattgacctg\n               2100 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48665927 tgtcattagccttatagagttcagtgccacggaaactccctgccctgttctttttctttt\n               2160 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48665987 tctttttttttttttttttgagacagagccttgctctgtcgcccaggctggagtgcagtg\n               2220 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666047 gcgcgatctcggctcactgcaagctctgcctcccaggttcacaccattctcctgactcag\n               2280 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666107 cctcccgagtagctgggactacaggcgtccaccaccatgcccagctaatttttttttttg\n               2340 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666167 tatttttagtagagacggcgtttcaccgtgttagccaggctggtctcgatctcctgacct\n               2400 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666227 tgtgatgctcccgcctcggcctcccaaagtgctgggattacaggcatgagccattgtgcc\n               2460 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666287 cggcctgccctgttcttcttagacaaacttgctgggctaaaatctaaccccgttaaaata\n               2520 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666347 gactatttacgtattgtttgcctctagcgcagcagaacattgctggagaaaaacaaacaa\n               2580 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666407 ccgtgctaattggtctcattttatattcatgaccacaagcctcagtattatatcggaggg\n               2640 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666467 cctatccagtgcagtagggcaagaaaaataataagttatgaagattggaagggaaaaaaa\n               2700 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666527 actaattcacaagcagtaggattgtatatgtaaaaatttcaaaggaacctataggtaagt\n               2760 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666587 tgttagaatgagttcagcaaagttgttggacacaagatcaatatataaaaatcagttgca\n               2820 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666647 atttctatatgtcaccaacagttagaaaataaatttcttgcctgggcatgttggctcaag\n               2880 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666707 cctgtaatcccagcactttgggtggccaaggcgggcagatcacctgaggtcaggagtttg\n               2940 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666767 agaccagtttggccaacatggtgaaatcccgtctctactaaaaatacagaaattagccgg\n               3000 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666827 gcgtggtggtgggcacctgtagtcccagctactgaggaggctgaggcaggagaatcactt\n               3060 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666887 gaacctgggaggcagaggttgcagtgaacgagaaaaaaaaattttttttcttaaaaacaa\n               3120 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48666947 tgatgtttacaatagcatcaagtaatatcaaatgctgaggaataaacctaatgaaagatg\n               3180 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667007 tgcaaagactacatacacacatacaaaaaaactataaaacattattgagggaaataaaga\n               3240 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667067 cataggcctggcattggtggctcatgcctgaaatctcagcactttggagggccaaggtgg\n               3300 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667127 gtggatcatttgaggtcaggagttagagatcagtccggccaacatggtgaaacctcatct\n               3360 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667187 ctactaaaaatacaaaaaaattagcttggccaggtgcagtggctcacacctgtaatccca\n               3420 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667247 gcactttgggaggctgaggcgggcggatcatgaggtcaggagatcgagaccatcctggct\n               3480 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667307 aacacggtgaaaccctgtctctactaaaaatacaaaaaaaaattagccgggcctgatggc\n               3540 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667367 gggcgcccgtagtcccagctactcgggaggctgaggtagcagaatggcgtgaacctggga\n               3600 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667427 ggtgcagcttgcagtgagcctaaattgcgccactgcactccagcctgggtaacagagcga\n               3660 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667487 gactccgtttcaaaaaaaaaaaaaaaaattagctgggcatgctgttgtgcacctgcaatc\n               3720 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667547 ccagctactctggaggatgaggcagaagtgcctgaacctgggacacagaggttgcagtga\n               3780 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667607 gccaagatcatgccattgcactccagcctggacaacacagccagacgctatctgaaaaaa\n               3840 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667667 aaaaaaaaaaaaaaagtaaaaaaaatgagaaataaagacataaataaagtgaaaaattgt\n               3900 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667727 tccaatattggaaaagtcaatattataaaggtgccaattttcccaaattgatatatggat\n               3960 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667787 tcgatgcaacttcagttaaaaatcccactaaattttggctgggtgcggtggctcacacct\n               4020 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667847 gtaatcccagcactttgggaggctgaggcgggcggatcacaaggtcaggagatcgagacc\n               4080 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667907 atcttggctaacatggtgaaaccgtctctactaaaaatacaaaagttagccgggtgtggt\n               4140 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48667967 ggcgggcacctgtagtcccagctacttgggaggctgagacagaatggcgtgaacctgggg\n               4200 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668027 aggcggagcttgcagtgagccaagttgacgccactgcactccagcctgggcgacagagca\n               4260 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668087 agactctgtctcaaaaaaaaaaaaaaaaaaaTCCCACTAGATTTTGTGTGTGTGTAAACT\n               4320 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668147 GACAAACTAGATTTAGcagcctgagcaacacagcaaaaccccatctctacaaaaaataca\n               4380 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668207 aaaattttgcacatgcctgtatagtcccagctacttgggaggctgaagtgggaggatcat\n               4440 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668267 gtgagctctggggaggtcgaggctgtagtgagctatgatcacatgctgcactctagcctg\n               4500 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668327 ggcaacagagcaagagaccctgtatctaaaaaaagaatgaaaattaaaaaataaaaaGAa\n               4560 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668387 accaagattgtgtggtactggtacgaggataggaagactaaaggaacgaaatccagagac\n               4620 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668447 aggcctgaagatgtgtggaaacttgaattttgacaagggtgGTTCTTCAGAGCTAACATG\n               4680 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668507 AAGAAAGGGTTGTTTTCTTTTTTTTGTTTCCCcaggagcaactctattaactgaaagaat\n               4740 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668567 aggcttttcaataaatgatgctgggtcagttggatatccatatagaaaaaattaaatgag\n               4800 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668627 atctctatttcacactgcttgcataatcaattccatataaatttgacatctgaaaatata\n               4860 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668687 cagtttctagaaaacagtatTAAGACCttgttttgttttttgttgttgttgttttttgtt\n               4920 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668747 ttgttttttgttttttgagacagagtctcgctctgtcgccaggctggaatacagtggtgc\n               4980 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668807 aaccttggctcactgcaacctctgactccctagttcaagcaattctcctgcctcagcctc\n               5040 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668867 ccgagtagctgcgattacaggcacatgccaccacgcccagctaatttttgtatttttagt\n               5100 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668927 agagatgggggtttcaccatgttggccaggatggtctcgatctcctgaccctgtaatccg\n               5160 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48668987 cccacctcggcctcccaaagtgctgggattacaggcgtgagccactgcacctggccAAGA\n               5220 ------------------------------------------------------------\nNR_111921       128 ------------------------------------------------------------\n\nchr3       48669047 GAAGATCTTAAAGGTGACTTTAAGCAAACttttttttttttttttttacagagacgggag\n               5280 ---------------------------------------------------.........\nNR_111921       128 ---------------------------------------------------AGACGGGAG\n\nchr3       48669107 ctggagtgcagtggctgttcacaagcgtgaAAGCAAAGATTAAAAAATTTGTTTTTATAT\n               5340 ..............................||||||||||||||||||||||||||||||\nNR_111921       137 CTGGAGTGCAGTGGCTGTTCACAAGCGTGAAAGCAAAGATTAAAAAATTTGTTTTTATAT\n\nchr3       48669167 TAAAAAA 48669174\n               5400 |||||||     5407\nNR_111921       197 TAAAAAA      204\n')
        self.assertEqual(format(alignment, 'chain'), 'chain 182 chr3 198295559 + 48663767 48669174 NR_111921.1 216 + 0 204 3\n46\t1827\t0\n82\t3376\t0\n76\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 5409))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr3')
        self.assertEqual(alignment.query.id, 'NR_111921.1_modified')
        self.assertEqual(len(alignment.target.seq), 198295559)
        self.assertEqual(len(alignment.query.seq), 220)
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[48663767, 48663795, 48663796, 48663813, 48665640, 48665716, 48665716, 48665722, 48669098, 48669174], [3, 31, 31, 48, 48, 124, 126, 132, 132, 208]])))
        dna = Seq(self.dna, length=len(alignment.target))
        alignment.target.seq = dna
        alignment.query.seq = self.rna[alignment.query.id]
        self.assertTrue(np.array_equal(alignment.substitutions, np.array([[53.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 34.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.0, 48.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 27.0, 0.0, 0.0, 0.0, 0.0], [9.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 16.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0]])))
        self.assertEqual(alignment.substitutions.alphabet, 'ACGTacgt')
        self.assertEqual(str(alignment), 'chr3       48663767 CACGAGAGGAGCGGAGGCGAGGGGTGAACGCGGAGCACTCCAATCGGTCAGTCATTGTTT\n                  0 ||||||||||||||||||||||||||||-|||||||||||||||||--------------\nNR_111921         3 CACGAGAGGAGCGGAGGCGAGGGGTGAA-GCGGAGCACTCCAATCG--------------\n\nchr3       48663827 CTATTGGCACAATGGGAGGCCCCGCCCCTCACGGCGGACTCATCGCATGGGGGAGGGGGC\n                 60 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48663887 TCCGCGGGTTGCCGGCTAACCGTGAGAGAGTCCGGGAGGTACACTATACGGACCGGCCTC\n                120 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48663947 CAAAGGCGGAATCGATAACGAGCTGCAGCGCCGGGTGCAGAGGACGCGGGCATCCCGAAG\n                180 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664007 CCCAGGAAGAGGTCAGGGCCGGGACCCCAGAACGCTCCACAGGGTGCGGCTCCCGCGATG\n                240 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664067 GGGTGGATCCTGGTTCTAACAGGCGAGGAACTCCTGGCCAAGGCCTCTGGCCCGCCCCGA\n                300 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664127 ACGGTCCCTATGACATCACCATCAACCAATCAGTCGGCGCATCCTTTCGCCCCTTGACTG\n                360 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664187 CTCCGCTTCCGGGAGGCGGGGCTTCTGCGGGTTCCACCTCCCGAGCGCCCCTTGTGGCTA\n                420 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664247 CCAAGGTCAGGCAACAGGTGTCCAGTTGTTCCCTCTCCTGTCTACGAATCTGAGGACCTC\n                480 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664307 CCCAGGATCAGAGCTCTGGGCCTGATACACGGCCGGGGTTCCTACGGGTTTGTGAGTGGG\n                540 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664367 GGTGGAAGATCTGCAGAGGCACTTAGGGCTGAACTCCTTTGAATGGGAGCCAATCGGTGC\n                600 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664427 AGGGGCTGGAGGAGCGAGTCCCCCAAAGTAGttttatttatctatttagagacaaggtct\n                660 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664487 cactctttcggagtgcagtggtgatcacagctcaccgtagcctcgaactccccaggcgat\n                720 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664547 tctctcacctcagcctcccgagtagctgggactacgggtacatgtcatcacacttggcta\n                780 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664607 atttttgcattttttatagagacagggtctcaccatgtaggccagattagtcttgaactc\n                840 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664667 ctgggctcaagcaatccgcccatcttggcctcccaaagtgctgggattataggtgtgagc\n                900 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664727 caccgcgcccggcAACCCAGAAGTGGTTTTGACAGCAccagcgctttctgtgtccacaat\n                960 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664787 ctagtgagtagagggcacaaaacctgacaccacggaggcagacaggcaggggctctgccg\n               1020 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664847 gggaagggtgttggagtcccaaaggaggcgtctgagtcaccttcgcaacctgggacgcct\n               1080 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664907 tcttgcataagatgcctgagcagtgccttgaatgaccaaggggagatccgcatctgcaaa\n               1140 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48664967 ggaagggcagggagggatagggattgggggtgggcatcctaggtcttggagactgtgtgg\n               1200 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665027 gcaaatgtgcagagacataaagggactatggctgagggaaatcaagCCCTGCCCTCTCAC\n               1260 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665087 CAATAGGGCTGGCGCTGGTCCCAGCTAACACTCCTTTTGGAGAGCAAAGCTCCTCACTTC\n               1320 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665147 TGAGTAGTGAGATTGATTGCGGATCACTCTCCATGTTGCTGCCTGCTGTGTGTCATCCCA\n               1380 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665207 CTGTCATCCTCCCTTTGTGGCTGTTCTGTGGAGCCCCTCTCCCTCAATCTGCACTCACCT\n               1440 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665267 CTATGCCCCAGCCCCATTGGCAGCTCCTAATGCACTCCCGGTaaaaaaaaaaaaacaaaa\n               1500 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665327 aCCAGATGTTAGTGATAGTGGTGGTAGTTCTTCTCTCCACCTCCAAATCTTGCCCTTGCC\n               1560 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665387 TCCTAATAAGACCCCTATGTGGTTTAACCTCAttttttttttttttttttttttttgaga\n               1620 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665447 tggagtttcactctgtcacccaggctggagtgaagtggtgtgatGGGGCTTCACCATGTg\n               1680 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665507 atggggcttcaccatgttggccaggctggtatcaaactcctgacctctagtgatctgccc\n               1740 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665567 gcctcagcctcccaaagtgctgggattaccggcatgaggcaccgtgcccagccTATCCTC\n               1800 ------------------------------------------------------------\nNR_111921        48 ------------------------------------------------------------\n\nchr3       48665627 CTTCTCTTATCAGCTCCCAACTAGAGGTCCACCCAGGACCCAGAGACCTGGATTTGAGGC\n               1860 -------------|||||||||||||||||||||||||||||||||||||||||||||||\nNR_111921        48 -------------CTCCCAACTAGAGGTCCACCCAGGACCCAGAGACCTGGATTTGAGGC\n\nchr3       48665687 TGCTGGGCGGCAGATGGAGCGATCAGAAG--ACCAGGGTAAGGGTGTGGCAGATACTGCC\n               1920 |||||..||||||||||||||||||||||--||||||-----------------------\nNR_111921        95 TGCTGCCCGGCAGATGGAGCGATCAGAAGCCACCAGG-----------------------\n\nchr3       48665745 ACTAACACTTCTCAGCCTTTCCTTCTCCTGCCTTTTCCACCCCACCCTGTGTTTGTCTAC\n               1980 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48665805 TCCCAGCCAGGTGTACCTTTCCAGGGGAAGACCTGGCCAACCTGTCCAGCTCAATTAtcc\n               2040 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48665865 agcagttctttgacctcactgagatctcgagtccattgttcatcacctcagctattgacc\n               2100 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48665925 tgtgtcattagccttatagagttcagtgccacggaaactccctgccctgttctttttctt\n               2160 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48665985 tttctttttttttttttttttgagacagagccttgctctgtcgcccaggctggagtgcag\n               2220 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666045 tggcgcgatctcggctcactgcaagctctgcctcccaggttcacaccattctcctgactc\n               2280 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666105 agcctcccgagtagctgggactacaggcgtccaccaccatgcccagctaatttttttttt\n               2340 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666165 tgtatttttagtagagacggcgtttcaccgtgttagccaggctggtctcgatctcctgac\n               2400 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666225 cttgtgatgctcccgcctcggcctcccaaagtgctgggattacaggcatgagccattgtg\n               2460 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666285 cccggcctgccctgttcttcttagacaaacttgctgggctaaaatctaaccccgttaaaa\n               2520 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666345 tagactatttacgtattgtttgcctctagcgcagcagaacattgctggagaaaaacaaac\n               2580 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666405 aaccgtgctaattggtctcattttatattcatgaccacaagcctcagtattatatcggag\n               2640 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666465 ggcctatccagtgcagtagggcaagaaaaataataagttatgaagattggaagggaaaaa\n               2700 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666525 aaactaattcacaagcagtaggattgtatatgtaaaaatttcaaaggaacctataggtaa\n               2760 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666585 gttgttagaatgagttcagcaaagttgttggacacaagatcaatatataaaaatcagttg\n               2820 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666645 caatttctatatgtcaccaacagttagaaaataaatttcttgcctgggcatgttggctca\n               2880 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666705 agcctgtaatcccagcactttgggtggccaaggcgggcagatcacctgaggtcaggagtt\n               2940 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666765 tgagaccagtttggccaacatggtgaaatcccgtctctactaaaaatacagaaattagcc\n               3000 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666825 gggcgtggtggtgggcacctgtagtcccagctactgaggaggctgaggcaggagaatcac\n               3060 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666885 ttgaacctgggaggcagaggttgcagtgaacgagaaaaaaaaattttttttcttaaaaac\n               3120 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48666945 aatgatgtttacaatagcatcaagtaatatcaaatgctgaggaataaacctaatgaaaga\n               3180 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667005 tgtgcaaagactacatacacacatacaaaaaaactataaaacattattgagggaaataaa\n               3240 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667065 gacataggcctggcattggtggctcatgcctgaaatctcagcactttggagggccaaggt\n               3300 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667125 gggtggatcatttgaggtcaggagttagagatcagtccggccaacatggtgaaacctcat\n               3360 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667185 ctctactaaaaatacaaaaaaattagcttggccaggtgcagtggctcacacctgtaatcc\n               3420 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667245 cagcactttgggaggctgaggcgggcggatcatgaggtcaggagatcgagaccatcctgg\n               3480 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667305 ctaacacggtgaaaccctgtctctactaaaaatacaaaaaaaaattagccgggcctgatg\n               3540 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667365 gcgggcgcccgtagtcccagctactcgggaggctgaggtagcagaatggcgtgaacctgg\n               3600 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667425 gaggtgcagcttgcagtgagcctaaattgcgccactgcactccagcctgggtaacagagc\n               3660 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667485 gagactccgtttcaaaaaaaaaaaaaaaaattagctgggcatgctgttgtgcacctgcaa\n               3720 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667545 tcccagctactctggaggatgaggcagaagtgcctgaacctgggacacagaggttgcagt\n               3780 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667605 gagccaagatcatgccattgcactccagcctggacaacacagccagacgctatctgaaaa\n               3840 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667665 aaaaaaaaaaaaaaaaagtaaaaaaaatgagaaataaagacataaataaagtgaaaaatt\n               3900 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667725 gttccaatattggaaaagtcaatattataaaggtgccaattttcccaaattgatatatgg\n               3960 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667785 attcgatgcaacttcagttaaaaatcccactaaattttggctgggtgcggtggctcacac\n               4020 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667845 ctgtaatcccagcactttgggaggctgaggcgggcggatcacaaggtcaggagatcgaga\n               4080 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667905 ccatcttggctaacatggtgaaaccgtctctactaaaaatacaaaagttagccgggtgtg\n               4140 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48667965 gtggcgggcacctgtagtcccagctacttgggaggctgagacagaatggcgtgaacctgg\n               4200 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668025 ggaggcggagcttgcagtgagccaagttgacgccactgcactccagcctgggcgacagag\n               4260 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668085 caagactctgtctcaaaaaaaaaaaaaaaaaaaTCCCACTAGATTTTGTGTGTGTGTAAA\n               4320 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668145 CTGACAAACTAGATTTAGcagcctgagcaacacagcaaaaccccatctctacaaaaaata\n               4380 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668205 caaaaattttgcacatgcctgtatagtcccagctacttgggaggctgaagtgggaggatc\n               4440 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668265 atgtgagctctggggaggtcgaggctgtagtgagctatgatcacatgctgcactctagcc\n               4500 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668325 tgggcaacagagcaagagaccctgtatctaaaaaaagaatgaaaattaaaaaataaaaaG\n               4560 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668385 Aaaccaagattgtgtggtactggtacgaggataggaagactaaaggaacgaaatccagag\n               4620 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668445 acaggcctgaagatgtgtggaaacttgaattttgacaagggtgGTTCTTCAGAGCTAACA\n               4680 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668505 TGAAGAAAGGGTTGTTTTCTTTTTTTTGTTTCCCcaggagcaactctattaactgaaaga\n               4740 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668565 ataggcttttcaataaatgatgctgggtcagttggatatccatatagaaaaaattaaatg\n               4800 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668625 agatctctatttcacactgcttgcataatcaattccatataaatttgacatctgaaaata\n               4860 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668685 tacagtttctagaaaacagtatTAAGACCttgttttgttttttgttgttgttgttttttg\n               4920 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668745 ttttgttttttgttttttgagacagagtctcgctctgtcgccaggctggaatacagtggt\n               4980 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668805 gcaaccttggctcactgcaacctctgactccctagttcaagcaattctcctgcctcagcc\n               5040 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668865 tcccgagtagctgcgattacaggcacatgccaccacgcccagctaatttttgtattttta\n               5100 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668925 gtagagatgggggtttcaccatgttggccaggatggtctcgatctcctgaccctgtaatc\n               5160 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48668985 cgcccacctcggcctcccaaagtgctgggattacaggcgtgagccactgcacctggccAA\n               5220 ------------------------------------------------------------\nNR_111921       132 ------------------------------------------------------------\n\nchr3       48669045 GAGAAGATCTTAAAGGTGACTTTAAGCAAACttttttttttttttttttacagagacggg\n               5280 -----------------------------------------------------.......\nNR_111921       132 -----------------------------------------------------AGACGGG\n\nchr3       48669105 agctggagtgcagtggctgttcacaagcgtgaAAGCAAAGATTAAAAAATTTGTTTTTAT\n               5340 ................................||||||||||||||||||||||||||||\nNR_111921       139 AGCTGGAGTGCAGTGGCTGTTCACAAGCGTGAAAGCAAAGATTAAAAAATTTGTTTTTAT\n\nchr3       48669165 ATTAAAAAA 48669174\n               5400 |||||||||     5409\nNR_111921       199 ATTAAAAAA      208\n')
        self.assertEqual(format(alignment, 'chain'), 'chain 175 chr3 198295559 + 48663767 48669174 NR_111921.1_modified 220 + 3 208 4\n28\t1\t0\n17\t1827\t0\n76\t0\t2\n6\t3376\t0\n76\n\n')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing(self):
        if False:
            while True:
                i = 10
        'Test writing the alignments in dna_rna.chain.'
        path = 'Blat/dna_rna.chain'
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 4)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.check_alignments(alignments)

class TestAlign_dna(unittest.TestCase):
    queries = {record.id: str(record.seq) for record in SeqIO.parse('Blat/fasta_34.fa', 'fasta')}

    def test_reading_psl_34_001(self):
        if False:
            i = 10
            return i + 15
        'Test parsing psl_34_001.chain.'
        path = 'Blat/psl_34_001.chain'
        alignments = Align.parse(path, 'chain')
        self.check_reading_psl_34_001(alignments)

    def check_reading_psl_34_001(self, alignments):
        if False:
            for i in range(10):
                print('nop')
        'Check parsing psl_34_001.chain.'
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 16))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr4       61646095 ???????????????? 61646111\n                  0 ||||||||||||||||       16\nhg18_dna         11 ????????????????       27\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61646095, 61646111], [11, 27]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 16 chr4 191154276 + 61646095 61646111 hg18_dna 33 + 11 27 1\n16\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 33))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr1       10271783 ????????????????????????????????? 10271816\n                  0 |||||||||||||||||||||||||||||||||       33\nhg18_dna          0 ?????????????????????????????????       33\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[10271783, 10271816], [0, 33]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr1 249250621 + 10271783 10271816 hg18_dna 33 + 0 33 2\n33\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 17))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr2       53575980 ????????????????? 53575997\n                  0 |||||||||||||||||       17\nhg18_dna         25 ?????????????????        8\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[53575980, 53575997], [25, 8]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 17 chr2 243199373 + 53575980 53575997 hg18_dna 33 - 8 25 3\n17\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr9')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 141213431)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr9       85737865 ????????????????????????????????????????? 85737906\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          9 ?????????????????????????????????????????       50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[85737865, 85737906], [9, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 35 chr9 141213431 + 85737865 85737906 hg19_dna 50 + 9 50 4\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr8')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 146364022)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr8       95160479 ????????????????????????????????????????? 95160520\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          8 ?????????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[95160479, 95160520], [8, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr8 146364022 + 95160479 95160520 hg19_dna 50 + 8 49 5\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      42144400 ???????????????????????????????????? 42144436\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         11 ????????????????????????????????????       47\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[42144400, 42144436], [11, 47]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr22 51304566 + 42144400 42144436 hg19_dna 50 + 11 47 6\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 48))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      183925984 ??????----?????????????????????????????????????? 183926028\n                  0 ||||||----||||||||||||||||||||||||||||||||||||||        48\nhg19_dna          1 ????????????????????????????????????????????????        49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[183925984, 183925990, 183925990, 183926028], [1, 7, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr2 243199373 + 183925984 183926028 hg19_dna 50 + 1 49 7\n6\t0\t4\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 170))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      35483340 ????????????????????????????????????????????????????????????\n                  0 |||||||||||||||||||||||||-----------------------------------\nhg19_dna         10 ?????????????????????????-----------------------------------\n\nchr19      35483400 ????????????????????????????????????????????????????????????\n                 60 ------------------------------------------------------------\nhg19_dna         35 ------------------------------------------------------------\n\nchr19      35483460 ?????????????????????????????????????????????????? 35483510\n                120 ---------------------------------------|||||||||||      170\nhg19_dna         35 ---------------------------------------???????????       46\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[35483340, 35483365, 35483499, 35483510], [10, 35, 35, 46]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 31 chr19 59128983 + 35483340 35483510 hg19_dna 50 + 10 46 8\n25\t134\t0\n11\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      23891310 ??????????????????????????????????????? 23891349\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         10 ???????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[23891310, 23891349], [10, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr18 78077248 + 23891310 23891349 hg19_dna 50 + 10 49 9\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 28))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      43252217 ???????????????????????????? 43252245\n                  0 ||||||||||||||||||||||||||||       28\nhg19_dna         21 ????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[43252217, 43252245], [21, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 26 chr18 78077248 + 43252217 43252245 hg19_dna 50 + 21 49 10\n28\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 54))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr13')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 115169878)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr13      52759147 ?????????????---??????????????????????????????????????\n                  0 |||||||---------||||||||||||||||||||||||||||||||||||||\nhg19_dna          1 ???????------?????????????????????????????????????????\n\nchr13      52759198\n                 54\nhg19_dna         49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[52759147, 52759154, 52759160, 52759160, 52759198], [1, 8, 8, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr13 115169878 + 52759147 52759198 hg19_dna 50 + 1 49 11\n7\t6\t3\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 50))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1        1207056 ?????????????????????????????????????????????????? 1207106\n                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||      50\nhg19_dna          0 ??????????????????????????????????????????????????      50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[1207056, 1207106], [0, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 50 chr1 249250621 + 1207056 1207106 hg19_dna 50 + 0 50 12\n50\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       61700837 ?????????????????????????????????? 61700871\n                  0 ||||||||||||||||||||||||||||||||||       34\nhg19_dna          1 ??????????????????????????????????       35\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61700837, 61700871], [1, 35]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 28 chr1 249250621 + 61700837 61700871 hg19_dna 50 + 1 35 13\n34\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 44))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr4       37558157 ????????????????----------?????????????????? 37558191\n                  0 ||||||||||----------------||||||||||||||||||       44\nhg19_dna         49 ??????????------????????????????????????????       11\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[37558157, 37558167, 37558173, 37558173, 37558191], [49, 39, 39, 29, 11]])))
        self.assertEqual(format(alignment, 'psl'), '28\t0\t0\t0\t1\t10\t1\t6\t-\thg19_dna\t50\t11\t49\tchr4\t191154276\t37558157\t37558191\t2\t10,18,\t1,21,\t37558157,37558173,\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 37))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      48997405 ????????????????????????????????????? 48997442\n                  0 |||||||||||||||||||||||||||||||||||||       37\nhg19_dna         49 ?????????????????????????????????????       12\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[48997405, 48997442], [49, 12]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr22 51304566 + 48997405 48997442 hg19_dna 50 - 1 38 15\n37\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      120641740 ???????????????????????????????????? 120641776\n                  0 ||||||||||||||||||||||||||||||||||||        36\nhg19_dna         49 ????????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[120641740, 120641776], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr2 243199373 + 120641740 120641776 hg19_dna 50 - 1 37 16\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      54017130 ??????????????????????????????????????? 54017169\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         49 ???????????????????????????????????????       10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[54017130, 54017169], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr19 59128983 + 54017130 54017169 hg19_dna 50 - 1 40 17\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19        553742 ??????????????????????????????????????? 553781\n                  0 |||||||||||||||||||||||||||||||||||||||     39\nhg19_dna         49 ???????????????????????????????????????     10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[553742, 553781], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr19 59128983 + 553742 553781 hg19_dna 50 - 1 40 18\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10      99388555 ???????????????????????????????????? 99388591\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[99388555, 99388591], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr10 135534747 + 99388555 99388591 hg19_dna 50 - 1 37 19\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 25))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10     112178171 ????????????????????????? 112178196\n                  0 |||||||||||||||||||||||||        25\nhg19_dna         35 ?????????????????????????        10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[112178171, 112178196], [35, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 23 chr10 135534747 + 112178171 112178196 hg19_dna 50 - 15 40 20\n25\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       39368490 ???????????????????????????????????? 39368526\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[39368490, 39368526], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr1 249250621 + 39368490 39368526 hg19_dna 50 - 1 37 21\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1      220325687 ?????????????????????????????????? 220325721\n                  0 ||||||||||||||||||||||||||||||||||        34\nhg19_dna         47 ??????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[220325687, 220325721], [47, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 32 chr1 249250621 + 220325687 220325721 hg19_dna 50 - 3 37 22\n34\n\n')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing_chain_34_001(self):
        if False:
            i = 10
            return i + 15
        'Test writing the alignments in psl_34_001.chain.'
        path = 'Blat/psl_34_001.chain'
        with open(path) as stream:
            original_data = stream.read()
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 22)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.check_reading_psl_34_001(alignments)

    def test_reading_chain_34_002(self):
        if False:
            print('Hello World!')
        'Test parsing psl_34_002.chain.'
        path = 'Blat/psl_34_002.chain'
        alignments = Align.parse(path, 'chain')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing_psl_34_002(self):
        if False:
            i = 10
            return i + 15
        'Test writing the alignments in psl_34_002.chain.'
        path = 'Blat/psl_34_002.chain'
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 0)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.assertRaises(StopIteration, next, alignments)

    def test_reading_psl_34_003(self):
        if False:
            i = 10
            return i + 15
        'Test parsing psl_34_003.chain.'
        path = 'Blat/psl_34_003.chain'
        alignments = Align.parse(path, 'chain')
        self.check_reading_psl_34_003(alignments)

    def check_reading_psl_34_003(self, alignments):
        if False:
            print('Hello World!')
        'Check parsing psl_34_003.chain.'
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 16))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr4       61646095 ???????????????? 61646111\n                  0 ||||||||||||||||       16\nhg18_dna         11 ????????????????       27\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61646095, 61646111], [11, 27]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 16 chr4 191154276 + 61646095 61646111 hg18_dna 33 + 11 27 1\n16\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 33))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr1       10271783 ????????????????????????????????? 10271816\n                  0 |||||||||||||||||||||||||||||||||       33\nhg18_dna          0 ?????????????????????????????????       33\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[10271783, 10271816], [0, 33]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr1 249250621 + 10271783 10271816 hg18_dna 33 + 0 33 2\n33\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 17))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr2       53575980 ????????????????? 53575997\n                  0 |||||||||||||||||       17\nhg18_dna         25 ?????????????????        8\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[53575980, 53575997], [25, 8]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 17 chr2 243199373 + 53575980 53575997 hg18_dna 33 - 8 25 3\n17\n\n')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing_psl_34_003(self):
        if False:
            for i in range(10):
                print('nop')
        'Test writing the alignments in psl_34_003.chain.'
        path = 'Blat/psl_34_003.chain'
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 3)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.check_reading_psl_34_003(alignments)

    def test_reading_psl_34_004(self):
        if False:
            print('Hello World!')
        'Test parsing psl_34_004.chain.'
        path = 'Blat/psl_34_004.chain'
        alignments = Align.parse(path, 'chain')
        self.check_reading_psl_34_004(alignments)

    def check_reading_psl_34_004(self, alignments):
        if False:
            for i in range(10):
                print('nop')
        'Check parsing psl_34_004.chain.'
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr9')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 141213431)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr9       85737865 ????????????????????????????????????????? 85737906\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          9 ?????????????????????????????????????????       50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[85737865, 85737906], [9, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 35 chr9 141213431 + 85737865 85737906 hg19_dna 50 + 9 50 1\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr8')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 146364022)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr8       95160479 ????????????????????????????????????????? 95160520\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          8 ?????????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[95160479, 95160520], [8, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr8 146364022 + 95160479 95160520 hg19_dna 50 + 8 49 2\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      42144400 ???????????????????????????????????? 42144436\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         11 ????????????????????????????????????       47\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[42144400, 42144436], [11, 47]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr22 51304566 + 42144400 42144436 hg19_dna 50 + 11 47 3\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 48))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      183925984 ??????----?????????????????????????????????????? 183926028\n                  0 ||||||----||||||||||||||||||||||||||||||||||||||        48\nhg19_dna          1 ????????????????????????????????????????????????        49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[183925984, 183925990, 183925990, 183926028], [1, 7, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr2 243199373 + 183925984 183926028 hg19_dna 50 + 1 49 4\n6\t0\t4\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 170))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      35483340 ????????????????????????????????????????????????????????????\n                  0 |||||||||||||||||||||||||-----------------------------------\nhg19_dna         10 ?????????????????????????-----------------------------------\n\nchr19      35483400 ????????????????????????????????????????????????????????????\n                 60 ------------------------------------------------------------\nhg19_dna         35 ------------------------------------------------------------\n\nchr19      35483460 ?????????????????????????????????????????????????? 35483510\n                120 ---------------------------------------|||||||||||      170\nhg19_dna         35 ---------------------------------------???????????       46\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[35483340, 35483365, 35483499, 35483510], [10, 35, 35, 46]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 31 chr19 59128983 + 35483340 35483510 hg19_dna 50 + 10 46 5\n25\t134\t0\n11\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      23891310 ??????????????????????????????????????? 23891349\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         10 ???????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[23891310, 23891349], [10, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr18 78077248 + 23891310 23891349 hg19_dna 50 + 10 49 6\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 28))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      43252217 ???????????????????????????? 43252245\n                  0 ||||||||||||||||||||||||||||       28\nhg19_dna         21 ????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[43252217, 43252245], [21, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 26 chr18 78077248 + 43252217 43252245 hg19_dna 50 + 21 49 7\n28\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 54))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr13')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 115169878)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr13      52759147 ?????????????---??????????????????????????????????????\n                  0 |||||||---------||||||||||||||||||||||||||||||||||||||\nhg19_dna          1 ???????------?????????????????????????????????????????\n\nchr13      52759198\n                 54\nhg19_dna         49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[52759147, 52759154, 52759160, 52759160, 52759198], [1, 8, 8, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr13 115169878 + 52759147 52759198 hg19_dna 50 + 1 49 8\n7\t6\t3\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 50))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1        1207056 ?????????????????????????????????????????????????? 1207106\n                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||      50\nhg19_dna          0 ??????????????????????????????????????????????????      50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[1207056, 1207106], [0, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 50 chr1 249250621 + 1207056 1207106 hg19_dna 50 + 0 50 9\n50\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       61700837 ?????????????????????????????????? 61700871\n                  0 ||||||||||||||||||||||||||||||||||       34\nhg19_dna          1 ??????????????????????????????????       35\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61700837, 61700871], [1, 35]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 28 chr1 249250621 + 61700837 61700871 hg19_dna 50 + 1 35 10\n34\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 44))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr4       37558157 ????????????????----------?????????????????? 37558191\n                  0 ||||||||||----------------||||||||||||||||||       44\nhg19_dna         49 ??????????------????????????????????????????       11\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[37558157, 37558167, 37558173, 37558173, 37558191], [49, 39, 39, 29, 11]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 26 chr4 191154276 + 37558157 37558191 hg19_dna 50 - 1 39 11\n10\t6\t10\n18\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 37))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      48997405 ????????????????????????????????????? 48997442\n                  0 |||||||||||||||||||||||||||||||||||||       37\nhg19_dna         49 ?????????????????????????????????????       12\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[48997405, 48997442], [49, 12]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr22 51304566 + 48997405 48997442 hg19_dna 50 - 1 38 12\n37\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      120641740 ???????????????????????????????????? 120641776\n                  0 ||||||||||||||||||||||||||||||||||||        36\nhg19_dna         49 ????????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[120641740, 120641776], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr2 243199373 + 120641740 120641776 hg19_dna 50 - 1 37 13\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      54017130 ??????????????????????????????????????? 54017169\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         49 ???????????????????????????????????????       10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[54017130, 54017169], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr19 59128983 + 54017130 54017169 hg19_dna 50 - 1 40 14\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19        553742 ??????????????????????????????????????? 553781\n                  0 |||||||||||||||||||||||||||||||||||||||     39\nhg19_dna         49 ???????????????????????????????????????     10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[553742, 553781], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr19 59128983 + 553742 553781 hg19_dna 50 - 1 40 15\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10      99388555 ???????????????????????????????????? 99388591\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[99388555, 99388591], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr10 135534747 + 99388555 99388591 hg19_dna 50 - 1 37 16\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 25))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10     112178171 ????????????????????????? 112178196\n                  0 |||||||||||||||||||||||||        25\nhg19_dna         35 ?????????????????????????        10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[112178171, 112178196], [35, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 23 chr10 135534747 + 112178171 112178196 hg19_dna 50 - 15 40 17\n25\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       39368490 ???????????????????????????????????? 39368526\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[39368490, 39368526], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr1 249250621 + 39368490 39368526 hg19_dna 50 - 1 37 18\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1      220325687 ?????????????????????????????????? 220325721\n                  0 ||||||||||||||||||||||||||||||||||        34\nhg19_dna         47 ??????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[220325687, 220325721], [47, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 32 chr1 249250621 + 220325687 220325721 hg19_dna 50 - 3 37 19\n34\n\n')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing_psl_34_004(self):
        if False:
            i = 10
            return i + 15
        'Test writing the alignments in psl_34_004.chain.'
        path = 'Blat/psl_34_004.chain'
        with open(path) as stream:
            original_data = stream.read()
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 19)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.check_reading_psl_34_004(alignments)

    def test_reading_psl_34_005(self):
        if False:
            while True:
                i = 10
        'Test parsing psl_34_005.chain.'
        path = 'Blat/psl_34_005.chain'
        alignments = Align.parse(path, 'chain')
        self.check_reading_psl_34_005(alignments)

    def check_reading_psl_34_005(self, alignments):
        if False:
            print('Hello World!')
        'Check parsing psl_34_005.chain.'
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 16))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr4       61646095 ???????????????? 61646111\n                  0 ||||||||||||||||       16\nhg18_dna         11 ????????????????       27\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61646095, 61646111], [11, 27]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 16 chr4 191154276 + 61646095 61646111 hg18_dna 33 + 11 27 1\n16\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 33))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr1       10271783 ????????????????????????????????? 10271816\n                  0 |||||||||||||||||||||||||||||||||       33\nhg18_dna          0 ?????????????????????????????????       33\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[10271783, 10271816], [0, 33]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr1 249250621 + 10271783 10271816 hg18_dna 33 + 0 33 2\n33\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 17))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg18_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 33)
        self.assertEqual(str(alignment), 'chr2       53575980 ????????????????? 53575997\n                  0 |||||||||||||||||       17\nhg18_dna         25 ?????????????????        8\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[53575980, 53575997], [25, 8]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 17 chr2 243199373 + 53575980 53575997 hg18_dna 33 - 8 25 3\n17\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr9')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 141213431)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr9       85737865 ????????????????????????????????????????? 85737906\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          9 ?????????????????????????????????????????       50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[85737865, 85737906], [9, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 35 chr9 141213431 + 85737865 85737906 hg19_dna 50 + 9 50 4\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 41))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr8')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 146364022)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr8       95160479 ????????????????????????????????????????? 95160520\n                  0 |||||||||||||||||||||||||||||||||||||||||       41\nhg19_dna          8 ?????????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[95160479, 95160520], [8, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr8 146364022 + 95160479 95160520 hg19_dna 50 + 8 49 5\n41\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      42144400 ???????????????????????????????????? 42144436\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         11 ????????????????????????????????????       47\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[42144400, 42144436], [11, 47]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr22 51304566 + 42144400 42144436 hg19_dna 50 + 11 47 6\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 48))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      183925984 ??????----?????????????????????????????????????? 183926028\n                  0 ||||||----||||||||||||||||||||||||||||||||||||||        48\nhg19_dna          1 ????????????????????????????????????????????????        49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[183925984, 183925990, 183925990, 183926028], [1, 7, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr2 243199373 + 183925984 183926028 hg19_dna 50 + 1 49 7\n6\t0\t4\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 170))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      35483340 ????????????????????????????????????????????????????????????\n                  0 |||||||||||||||||||||||||-----------------------------------\nhg19_dna         10 ?????????????????????????-----------------------------------\n\nchr19      35483400 ????????????????????????????????????????????????????????????\n                 60 ------------------------------------------------------------\nhg19_dna         35 ------------------------------------------------------------\n\nchr19      35483460 ?????????????????????????????????????????????????? 35483510\n                120 ---------------------------------------|||||||||||      170\nhg19_dna         35 ---------------------------------------???????????       46\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[35483340, 35483365, 35483499, 35483510], [10, 35, 35, 46]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 31 chr19 59128983 + 35483340 35483510 hg19_dna 50 + 10 46 8\n25\t134\t0\n11\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      23891310 ??????????????????????????????????????? 23891349\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         10 ???????????????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[23891310, 23891349], [10, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr18 78077248 + 23891310 23891349 hg19_dna 50 + 10 49 9\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 28))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr18')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 78077248)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr18      43252217 ???????????????????????????? 43252245\n                  0 ||||||||||||||||||||||||||||       28\nhg19_dna         21 ????????????????????????????       49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[43252217, 43252245], [21, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 26 chr18 78077248 + 43252217 43252245 hg19_dna 50 + 21 49 10\n28\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 54))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr13')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 115169878)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr13      52759147 ?????????????---??????????????????????????????????????\n                  0 |||||||---------||||||||||||||||||||||||||||||||||||||\nhg19_dna          1 ???????------?????????????????????????????????????????\n\nchr13      52759198\n                 54\nhg19_dna         49\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[52759147, 52759154, 52759160, 52759160, 52759198], [1, 8, 8, 11, 49]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 41 chr13 115169878 + 52759147 52759198 hg19_dna 50 + 1 49 11\n7\t6\t3\n38\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 50))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1        1207056 ?????????????????????????????????????????????????? 1207106\n                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||      50\nhg19_dna          0 ??????????????????????????????????????????????????      50\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[1207056, 1207106], [0, 50]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 50 chr1 249250621 + 1207056 1207106 hg19_dna 50 + 0 50 12\n50\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       61700837 ?????????????????????????????????? 61700871\n                  0 ||||||||||||||||||||||||||||||||||       34\nhg19_dna          1 ??????????????????????????????????       35\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[61700837, 61700871], [1, 35]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 28 chr1 249250621 + 61700837 61700871 hg19_dna 50 + 1 35 13\n34\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 44))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr4')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 191154276)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr4       37558157 ????????????????----------?????????????????? 37558191\n                  0 ||||||||||----------------||||||||||||||||||       44\nhg19_dna         49 ??????????------????????????????????????????       11\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[37558157, 37558167, 37558173, 37558173, 37558191], [49, 39, 39, 29, 11]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 26 chr4 191154276 + 37558157 37558191 hg19_dna 50 - 1 39 14\n10\t6\t10\n18\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 37))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr22')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 51304566)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr22      48997405 ????????????????????????????????????? 48997442\n                  0 |||||||||||||||||||||||||||||||||||||       37\nhg19_dna         49 ?????????????????????????????????????       12\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[48997405, 48997442], [49, 12]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr22 51304566 + 48997405 48997442 hg19_dna 50 - 1 38 15\n37\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr2')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 243199373)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr2      120641740 ???????????????????????????????????? 120641776\n                  0 ||||||||||||||||||||||||||||||||||||        36\nhg19_dna         49 ????????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[120641740, 120641776], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr2 243199373 + 120641740 120641776 hg19_dna 50 - 1 37 16\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19      54017130 ??????????????????????????????????????? 54017169\n                  0 |||||||||||||||||||||||||||||||||||||||       39\nhg19_dna         49 ???????????????????????????????????????       10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[54017130, 54017169], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 39 chr19 59128983 + 54017130 54017169 hg19_dna 50 - 1 40 17\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 39))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr19')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 59128983)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr19        553742 ??????????????????????????????????????? 553781\n                  0 |||||||||||||||||||||||||||||||||||||||     39\nhg19_dna         49 ???????????????????????????????????????     10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[553742, 553781], [49, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 33 chr19 59128983 + 553742 553781 hg19_dna 50 - 1 40 18\n39\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10      99388555 ???????????????????????????????????? 99388591\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[99388555, 99388591], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 30 chr10 135534747 + 99388555 99388591 hg19_dna 50 - 1 37 19\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 25))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr10')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 135534747)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr10     112178171 ????????????????????????? 112178196\n                  0 |||||||||||||||||||||||||        25\nhg19_dna         35 ?????????????????????????        10\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[112178171, 112178196], [35, 10]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 23 chr10 135534747 + 112178171 112178196 hg19_dna 50 - 15 40 20\n25\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 36))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1       39368490 ???????????????????????????????????? 39368526\n                  0 ||||||||||||||||||||||||||||||||||||       36\nhg19_dna         49 ????????????????????????????????????       13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[39368490, 39368526], [49, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 34 chr1 249250621 + 39368490 39368526 hg19_dna 50 - 1 37 21\n36\n\n')
        alignment = next(alignments)
        self.assertEqual(alignment.shape, (2, 34))
        self.assertEqual(len(alignment), 2)
        self.assertIs(alignment.sequences[0], alignment.target)
        self.assertIs(alignment.sequences[1], alignment.query)
        self.assertEqual(alignment.target.id, 'chr1')
        self.assertEqual(alignment.query.id, 'hg19_dna')
        self.assertEqual(len(alignment.target.seq), 249250621)
        self.assertEqual(len(alignment.query.seq), 50)
        self.assertEqual(str(alignment), 'chr1      220325687 ?????????????????????????????????? 220325721\n                  0 ||||||||||||||||||||||||||||||||||        34\nhg19_dna         47 ??????????????????????????????????        13\n')
        self.assertTrue(np.array_equal(alignment.coordinates, np.array([[220325687, 220325721], [47, 13]])))
        self.assertEqual(format(alignment, 'chain'), 'chain 32 chr1 249250621 + 220325687 220325721 hg19_dna 50 - 3 37 22\n34\n\n')
        self.assertRaises(StopIteration, next, alignments)

    def test_writing_psl_34_005(self):
        if False:
            print('Hello World!')
        'Test writing the alignments in psl_34_005.chain.'
        path = 'Blat/psl_34_005.chain'
        alignments = Align.parse(path, 'chain')
        stream = StringIO()
        n = Align.write(alignments, stream, 'chain')
        self.assertEqual(n, 22)
        stream.seek(0)
        alignments = Align.parse(stream, 'chain')
        self.check_reading_psl_34_005(alignments)
if __name__ == '__main__':
    runner = unittest.TextTestRunner(verbosity=2)
    unittest.main(testRunner=runner)