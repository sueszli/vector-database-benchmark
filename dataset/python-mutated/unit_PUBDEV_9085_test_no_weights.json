[
    {
        "func_name": "test_weights_warning",
        "original": "def test_weights_warning():\n    \"\"\"\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\n    a warning about this.\n    \"\"\"\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)",
        "mutated": [
            "def test_weights_warning():\n    if False:\n        i = 10\n    '\\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\\n    a warning about this.\\n    '\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)",
            "def test_weights_warning():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\\n    a warning about this.\\n    '\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)",
            "def test_weights_warning():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\\n    a warning about this.\\n    '\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)",
            "def test_weights_warning():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\\n    a warning about this.\\n    '\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)",
            "def test_weights_warning():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    In this test, I will introduce a validation frame with no weight but training frame with weights.  There should be\\n    a warning about this.\\n    '\n    training_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    test_data = h2o.import_file(pyunit_utils.locate('smalldata/logreg/benign.csv'))\n    Y = 3\n    X = [0, 1, 2, 4, 5, 6, 7, 8, 9, 10]\n    weight = pyunit_utils.random_dataset_real_only(nrow=training_data.nrows, ncol=1, misFrac=0).abs()\n    weight.set_name(0, 'weight_columns')\n    training_data = training_data.cbind(weight)\n    model = H2OGeneralizedLinearEstimator(family='binomial', alpha=0, lambda_=1e-05, weights_column='weight_columns')\n    model.train(x=X, y=Y, training_frame=training_data, validation_frame=test_data)\n    pyunit_utils.checkLogWeightWarning('weight_columns', wantWarnMessage=True)"
        ]
    }
]