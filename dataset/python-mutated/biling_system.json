[
    {
        "func_name": "__init__",
        "original": "def __init__(self, root):\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()",
        "mutated": [
            "def __init__(self, root):\n    if False:\n        i = 10\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()",
            "def __init__(self, root):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()",
            "def __init__(self, root):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()",
            "def __init__(self, root):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()",
            "def __init__(self, root):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    self.root = root\n    self.root.geometry('1350x700+0+0')\n    self.root.title('Billing Software')\n    bg_color = '#badc57'\n    title = Label(self.root, text='Billing Software', font=('times new roman', 30, 'bold'), pady=2, bd=12, bg='#badc57', fg='Black', relief=GROOVE)\n    title.pack(fill=X)\n    self.sanitizer = IntVar()\n    self.mask = IntVar()\n    self.hand_gloves = IntVar()\n    self.dettol = IntVar()\n    self.newsprin = IntVar()\n    self.thermal_gun = IntVar()\n    self.rice = IntVar()\n    self.food_oil = IntVar()\n    self.wheat = IntVar()\n    self.daal = IntVar()\n    self.flour = IntVar()\n    self.maggi = IntVar()\n    self.sprite = IntVar()\n    self.limka = IntVar()\n    self.mazza = IntVar()\n    self.coke = IntVar()\n    self.fanta = IntVar()\n    self.mountain_duo = IntVar()\n    self.medical_price = StringVar()\n    self.grocery_price = StringVar()\n    self.cold_drinks_price = StringVar()\n    self.c_name = StringVar()\n    self.c_phone = StringVar()\n    self.bill_no = StringVar()\n    x = random.randint(1000, 9999)\n    self.bill_no.set(str(x))\n    self.search_bill = StringVar()\n    self.medical_tax = StringVar()\n    self.grocery_tax = StringVar()\n    self.cold_drinks_tax = StringVar()\n    F1 = LabelFrame(self.root, text='Customer Details', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F1.place(x=0, y=80, relwidth=1)\n    cname_lbl = Label(F1, text='Customer Name:', bg=bg_color, font=('times new roman', 15, 'bold'))\n    cname_lbl.grid(row=0, column=0, padx=20, pady=5)\n    cname_txt = Entry(F1, width=15, textvariable=self.c_name, font='arial 15', bd=7, relief=GROOVE)\n    cname_txt.grid(row=0, column=1, pady=5, padx=10)\n    cphn_lbl = Label(F1, text='Customer Phone:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    cphn_lbl.grid(row=0, column=2, padx=20, pady=5)\n    cphn_txt = Entry(F1, width=15, textvariable=self.c_phone, font='arial 15', bd=7, relief=GROOVE)\n    cphn_txt.grid(row=0, column=3, pady=5, padx=10)\n    c_bill_lbl = Label(F1, text='Bill Number:', bg='#badc57', font=('times new roman', 15, 'bold'))\n    c_bill_lbl.grid(row=0, column=4, padx=20, pady=5)\n    c_bill_txt = Entry(F1, width=15, textvariable=self.search_bill, font='arial 15', bd=7, relief=GROOVE)\n    c_bill_txt.grid(row=0, column=5, pady=5, padx=10)\n    bil_btn = Button(F1, text='Search', command=self.find_bill, width=10, bd=7, font=('arial', 12, 'bold'), relief=GROOVE)\n    bil_btn.grid(row=0, column=6, pady=5, padx=10)\n    F2 = LabelFrame(self.root, text='Medical Purpose', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F2.place(x=5, y=180, width=325, height=380)\n    sanitizer_lbl = Label(F2, text='Sanitizer', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sanitizer_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sanitizer_txt = Entry(F2, width=10, textvariable=self.sanitizer, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sanitizer_txt.grid(row=0, column=1, padx=10, pady=10)\n    mask_lbl = Label(F2, text='Mask', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mask_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    mask_txt = Entry(F2, width=10, textvariable=self.mask, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mask_txt.grid(row=1, column=1, padx=10, pady=10)\n    hand_gloves_lbl = Label(F2, text='Hand Gloves', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    hand_gloves_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    hand_gloves_txt = Entry(F2, width=10, textvariable=self.hand_gloves, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    hand_gloves_txt.grid(row=2, column=1, padx=10, pady=10)\n    dettol_lbl = Label(F2, text='Dettol', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    dettol_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    dettol_txt = Entry(F2, width=10, textvariable=self.dettol, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    dettol_txt.grid(row=3, column=1, padx=10, pady=10)\n    newsprin_lbl = Label(F2, text='Newsprin', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    newsprin_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    newsprin_txt = Entry(F2, width=10, textvariable=self.newsprin, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    newsprin_txt.grid(row=4, column=1, padx=10, pady=10)\n    thermal_gun_lbl = Label(F2, text='Thermal Gun', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    thermal_gun_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    thermal_gun_txt = Entry(F2, width=10, textvariable=self.thermal_gun, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    thermal_gun_txt.grid(row=5, column=1, padx=10, pady=10)\n    F3 = LabelFrame(self.root, text='Grocery Items', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F3.place(x=340, y=180, width=325, height=380)\n    rice_lbl = Label(F3, text='Rice', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    rice_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    rice_txt = Entry(F3, width=10, textvariable=self.rice, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    rice_txt.grid(row=0, column=1, padx=10, pady=10)\n    food_oil_lbl = Label(F3, text='Food Oil', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    food_oil_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    food_oil_txt = Entry(F3, width=10, textvariable=self.food_oil, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    food_oil_txt.grid(row=1, column=1, padx=10, pady=10)\n    wheat_lbl = Label(F3, text='Wheat', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    wheat_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F3, width=10, textvariable=self.wheat, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    daal_lbl = Label(F3, text='Daal', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    daal_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    daal_txt = Entry(F3, width=10, textvariable=self.daal, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    daal_txt.grid(row=3, column=1, padx=10, pady=10)\n    flour_lbl = Label(F3, text='Flour', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    flour_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    flour_txt = Entry(F3, width=10, textvariable=self.flour, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    flour_txt.grid(row=4, column=1, padx=10, pady=10)\n    maggi_lbl = Label(F3, text='Maggi', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    maggi_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    maggi_txt = Entry(F3, width=10, textvariable=self.maggi, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    maggi_txt.grid(row=5, column=1, padx=10, pady=10)\n    F4 = LabelFrame(self.root, text='Cold Drinks', font=('times new roman', 15, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F4.place(x=670, y=180, width=325, height=380)\n    sprite_lbl = Label(F4, text='Sprite', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    sprite_lbl.grid(row=0, column=0, padx=10, pady=10, sticky='W')\n    sprite_txt = Entry(F4, width=10, textvariable=self.sprite, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    sprite_txt.grid(row=0, column=1, padx=10, pady=10)\n    limka_lbl = Label(F4, text='Limka', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    limka_lbl.grid(row=1, column=0, padx=10, pady=10, sticky='W')\n    limka_txt = Entry(F4, width=10, textvariable=self.limka, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    limka_txt.grid(row=1, column=1, padx=10, pady=10)\n    mazza_lbl = Label(F4, text='Mazza', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mazza_lbl.grid(row=2, column=0, padx=10, pady=10, sticky='W')\n    wheat_txt = Entry(F4, width=10, textvariable=self.mazza, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    wheat_txt.grid(row=2, column=1, padx=10, pady=10)\n    coke_lbl = Label(F4, text='Coke', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    coke_lbl.grid(row=3, column=0, padx=10, pady=10, sticky='W')\n    coke_txt = Entry(F4, width=10, textvariable=self.coke, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    coke_txt.grid(row=3, column=1, padx=10, pady=10)\n    fanta_lbl = Label(F4, text='Fanta', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    fanta_lbl.grid(row=4, column=0, padx=10, pady=10, sticky='W')\n    fanta_txt = Entry(F4, width=10, textvariable=self.fanta, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    fanta_txt.grid(row=4, column=1, padx=10, pady=10)\n    mountain_duo_lbl = Label(F4, text='Mountain Duo', font=('times new roman', 16, 'bold'), bg='#badc57', fg='black')\n    mountain_duo_lbl.grid(row=5, column=0, padx=10, pady=10, sticky='W')\n    mountain_duo_txt = Entry(F4, width=10, textvariable=self.mountain_duo, font=('times new roman', 16, 'bold'), bd=5, relief=GROOVE)\n    mountain_duo_txt.grid(row=5, column=1, padx=10, pady=10)\n    F5 = Frame(self.root, bd=10, relief=GROOVE)\n    F5.place(x=1010, y=180, width=350, height=380)\n    bill_title = Label(F5, text='Bill Area', font='arial 15 bold', bd=7, relief=GROOVE)\n    bill_title.pack(fill=X)\n    scroll_y = Scrollbar(F5, orient=VERTICAL)\n    self.txtarea = Text(F5, yscrollcommand=scroll_y.set)\n    scroll_y.pack(side=RIGHT, fill=Y)\n    scroll_y.config(command=self.txtarea.yview)\n    self.txtarea.pack(fill=BOTH, expand=1)\n    F6 = LabelFrame(self.root, text='Bill Area', font=('times new roman', 14, 'bold'), bd=10, fg='Black', bg='#badc57')\n    F6.place(x=0, y=560, relwidth=1, height=140)\n    m1_lbl = Label(F6, text='Total Medical Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m1_lbl.grid(row=0, column=0, padx=20, pady=1, sticky='W')\n    m1_txt = Entry(F6, width=18, textvariable=self.medical_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m1_txt.grid(row=0, column=1, padx=18, pady=1)\n    m2_lbl = Label(F6, text='Total Grocery Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m2_lbl.grid(row=1, column=0, padx=20, pady=1, sticky='W')\n    m2_txt = Entry(F6, width=18, textvariable=self.grocery_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m2_txt.grid(row=1, column=1, padx=18, pady=1)\n    m3_lbl = Label(F6, text='Total Cold Drinks Price', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m3_lbl.grid(row=2, column=0, padx=20, pady=1, sticky='W')\n    m3_txt = Entry(F6, width=18, textvariable=self.cold_drinks_price, font='arial 10 bold', bd=7, relief=GROOVE)\n    m3_txt.grid(row=2, column=1, padx=18, pady=1)\n    m4_lbl = Label(F6, text='Medical Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m4_lbl.grid(row=0, column=2, padx=20, pady=1, sticky='W')\n    m4_txt = Entry(F6, width=18, textvariable=self.medical_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m4_txt.grid(row=0, column=3, padx=18, pady=1)\n    m5_lbl = Label(F6, text='Grocery Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m5_lbl.grid(row=1, column=2, padx=20, pady=1, sticky='W')\n    m5_txt = Entry(F6, width=18, textvariable=self.grocery_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m5_txt.grid(row=1, column=3, padx=18, pady=1)\n    m6_lbl = Label(F6, text='Cold Drinks Tax', font=('times new roman', 14, 'bold'), bg='#badc57', fg='black')\n    m6_lbl.grid(row=2, column=2, padx=20, pady=1, sticky='W')\n    m6_txt = Entry(F6, width=18, textvariable=self.cold_drinks_tax, font='arial 10 bold', bd=7, relief=GROOVE)\n    m6_txt.grid(row=2, column=3, padx=18, pady=1)\n    btn_f = Frame(F6, bd=7, relief=GROOVE)\n    btn_f.place(x=760, width=580, height=105)\n    total_btn = Button(btn_f, command=self.total, text='Total', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    total_btn.grid(row=0, column=0, padx=5, pady=5)\n    generateBill_btn = Button(btn_f, command=self.bill_area, text='Generate Bill', bd=2, bg='#535C68', fg='white', pady=12, width=12, font='arial 13 bold')\n    generateBill_btn.grid(row=0, column=1, padx=5, pady=5)\n    clear_btn = Button(btn_f, command=self.clear_data, text='Clear', bg='#535C68', bd=2, fg='white', pady=15, width=12, font='arial 13 bold')\n    clear_btn.grid(row=0, column=2, padx=5, pady=5)\n    exit_btn = Button(btn_f, command=self.exit_app, text='Exit', bd=2, bg='#535C68', fg='white', pady=15, width=12, font='arial 13 bold')\n    exit_btn.grid(row=0, column=3, padx=5, pady=5)\n    self.welcome_bill()"
        ]
    },
    {
        "func_name": "total",
        "original": "def total(self):\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)",
        "mutated": [
            "def total(self):\n    if False:\n        i = 10\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)",
            "def total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)",
            "def total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)",
            "def total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)",
            "def total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    self.m_h_g_p = self.hand_gloves.get() * 12\n    self.m_s_p = self.sanitizer.get() * 2\n    self.m_m_p = self.mask.get() * 5\n    self.m_d_p = self.dettol.get() * 30\n    self.m_n_p = self.newsprin.get() * 5\n    self.m_t_g_p = self.thermal_gun.get() * 15\n    self.total_medical_price = float(self.m_m_p + self.m_h_g_p + self.m_d_p + self.m_n_p + self.m_t_g_p + self.m_s_p)\n    self.medical_price.set('Rs. ' + str(self.total_medical_price))\n    self.c_tax = round(self.total_medical_price * 0.05, 2)\n    self.medical_tax.set('Rs. ' + str(self.c_tax))\n    self.g_r_p = self.rice.get() * 10\n    self.g_f_o_p = self.food_oil.get() * 10\n    self.g_w_p = self.wheat.get() * 10\n    self.g_d_p = self.daal.get() * 6\n    self.g_f_p = self.flour.get() * 8\n    self.g_m_p = self.maggi.get() * 5\n    self.total_grocery_price = float(self.g_r_p + self.g_f_o_p + self.g_w_p + self.g_d_p + self.g_f_p + self.g_m_p)\n    self.grocery_price.set('Rs. ' + str(self.total_grocery_price))\n    self.g_tax = round(self.total_grocery_price * 5, 2)\n    self.grocery_tax.set('Rs. ' + str(self.g_tax))\n    self.c_d_s_p = self.sprite.get() * 10\n    self.c_d_l_p = self.limka.get() * 10\n    self.c_d_m_p = self.mazza.get() * 10\n    self.c_d_c_p = self.coke.get() * 10\n    self.c_d_f_p = self.fanta.get() * 10\n    self.c_m_d = self.mountain_duo.get() * 10\n    self.total_cold_drinks_price = float(self.c_d_s_p + self.c_d_l_p + self.c_d_m_p + self.c_d_c_p + self.c_d_f_p + self.c_m_d)\n    self.cold_drinks_price.set('Rs. ' + str(self.total_cold_drinks_price))\n    self.c_d_tax = round(self.total_cold_drinks_price * 0.1, 2)\n    self.cold_drinks_tax.set('Rs. ' + str(self.c_d_tax))\n    self.total_bill = float(self.total_medical_price + self.total_grocery_price + self.total_cold_drinks_price + self.c_tax + self.g_tax + self.c_d_tax)"
        ]
    },
    {
        "func_name": "welcome_bill",
        "original": "def welcome_bill(self):\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')",
        "mutated": [
            "def welcome_bill(self):\n    if False:\n        i = 10\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')",
            "def welcome_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')",
            "def welcome_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')",
            "def welcome_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')",
            "def welcome_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    self.txtarea.delete('1.0', END)\n    self.txtarea.insert(END, '\\tWelcome Webcode Retail')\n    self.txtarea.insert(END, f'\\n Bill Number:{self.bill_no.get()}')\n    self.txtarea.insert(END, f'\\nCustomer Name:{self.c_name.get()}')\n    self.txtarea.insert(END, f'\\nPhone Number{self.c_phone.get()}')\n    self.txtarea.insert(END, f'\\n================================')\n    self.txtarea.insert(END, f'\\nProducts\\t\\tQTY\\t\\tPrice')"
        ]
    },
    {
        "func_name": "bill_area",
        "original": "def bill_area(self):\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()",
        "mutated": [
            "def bill_area(self):\n    if False:\n        i = 10\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()",
            "def bill_area(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()",
            "def bill_area(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()",
            "def bill_area(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()",
            "def bill_area(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if self.c_name.get() == ' ' or self.c_phone.get() == ' ':\n        messagebox.showerror('Error', 'Customer Details Are Must')\n    elif self.medical_price.get() == 'Rs. 0.0' and self.grocery_price.get() == 'Rs. 0.0' and (self.cold_drinks_price.get() == 'Rs. 0.0'):\n        messagebox.showerror('Error', 'No Product Purchased')\n    else:\n        self.welcome_bill()\n    if self.sanitizer.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.sanitizer.get()}\\t\\t{self.m_s_p}')\n    if self.mask.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.mask.get()}\\t\\t{self.m_m_p}')\n    if self.hand_gloves.get() != 0:\n        self.txtarea.insert(END, f'\\n Hand Gloves\\t\\t{self.hand_gloves.get()}\\t\\t{self.m_h_g_p}')\n    if self.dettol.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.dettol.get()}\\t\\t{self.m_d_p}')\n    if self.newsprin.get() != 0:\n        self.txtarea.insert(END, f'\\n Newsprin\\t\\t{self.newsprin.get()}\\t\\t{self.m_n_p}')\n    if self.thermal_gun.get() != 0:\n        self.txtarea.insert(END, f'\\n Thermal Gun\\t\\t{self.sanitizer.get()}\\t\\t{self.m_t_g_p}')\n    if self.rice.get() != 0:\n        self.txtarea.insert(END, f'\\n Rice\\t\\t{self.rice.get()}\\t\\t{self.g_r_p}')\n    if self.food_oil.get() != 0:\n        self.txtarea.insert(END, f'\\n Food Oil\\t\\t{self.food_oil.get()}\\t\\t{self.g_f_o_p}')\n    if self.wheat.get() != 0:\n        self.txtarea.insert(END, f'\\n Wheat\\t\\t{self.wheat.get()}\\t\\t{self.g_w_p}')\n    if self.daal.get() != 0:\n        self.txtarea.insert(END, f'\\n Daal\\t\\t{self.daal.get()}\\t\\t{self.g_d_p}')\n    if self.flour.get() != 0:\n        self.txtarea.insert(END, f'\\n Flour\\t\\t{self.flour.get()}\\t\\t{self.g_f_p}')\n    if self.maggi.get() != 0:\n        self.txtarea.insert(END, f'\\n Maggi\\t\\t{self.maggi.get()}\\t\\t{self.g_m_p}')\n    if self.sprite.get() != 0:\n        self.txtarea.insert(END, f'\\n Sprite\\t\\t{self.sprite.get()}\\t\\t{self.c_d_s_p}')\n    if self.limka.get() != 0:\n        self.txtarea.insert(END, f'\\n Sanitizer\\t\\t{self.limka.get()}\\t\\t{self.c_d_l_p}')\n    if self.mazza.get() != 0:\n        self.txtarea.insert(END, f'\\n Mazza\\t\\t{self.mazza.get()}\\t\\t{self.c_d_m_p}')\n    if self.coke.get() != 0:\n        self.txtarea.insert(END, f'\\n Dettol\\t\\t{self.coke.get()}\\t\\t{self.c_d_c_p}')\n    if self.fanta.get() != 0:\n        self.txtarea.insert(END, f'\\n Fanta\\t\\t{self.newsprin.get()}\\t\\t{self.c_d_f_p}')\n    if self.mountain_duo.get() != 0:\n        self.txtarea.insert(END, f'\\n Mountain Duo\\t\\t{self.sanitizer.get()}\\t\\t{self.c_m_d}')\n        self.txtarea.insert(END, f'\\n--------------------------------')\n    if self.medical_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Medical Tax\\t\\t\\t{self.medical_tax.get()}')\n    if self.grocery_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Grocery Tax\\t\\t\\t{self.grocery_tax.get()}')\n    if self.cold_drinks_tax.get() != '0.0':\n        self.txtarea.insert(END, f'\\n Cold Drinks Tax\\t\\t\\t{self.cold_drinks_tax.get()}')\n    self.txtarea.insert(END, f'\\n Total Bil:\\t\\t\\t Rs.{self.total_bill}')\n    self.txtarea.insert(END, f'\\n--------------------------------')\n    self.save_bill()"
        ]
    },
    {
        "func_name": "save_bill",
        "original": "def save_bill(self):\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return",
        "mutated": [
            "def save_bill(self):\n    if False:\n        i = 10\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return",
            "def save_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return",
            "def save_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return",
            "def save_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return",
            "def save_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op = messagebox.askyesno('Save Bill', 'Do you want to save the bill?')\n    if op > 0:\n        self.bill_data = self.txtarea.get('1.0', END)\n        f1 = open('bills/' + str(self.bill_no.get()) + '.txt', 'w')\n        f1.write(self.bill_data)\n        f1.close()\n        messagebox.showinfo('Saved', f'Bill no:{self.bill_no.get()} Saved Successfully')\n    else:\n        return"
        ]
    },
    {
        "func_name": "find_bill",
        "original": "def find_bill(self):\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')",
        "mutated": [
            "def find_bill(self):\n    if False:\n        i = 10\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')",
            "def find_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')",
            "def find_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')",
            "def find_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')",
            "def find_bill(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    present = 'no'\n    for i in os.listdir('bills/'):\n        if i.split('.')[0] == self.search_bill.get():\n            f1 = open(f'bills/{i}', 'r')\n            self.txtarea.delete('1.0', END)\n            for d in f1:\n                self.txtarea.insert(END, d)\n                f1.close()\n            present = 'yes'\n    if present == 'no':\n        messagebox.showerror('Error', 'Invalid Bill No')"
        ]
    },
    {
        "func_name": "clear_data",
        "original": "def clear_data(self):\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()",
        "mutated": [
            "def clear_data(self):\n    if False:\n        i = 10\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()",
            "def clear_data(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()",
            "def clear_data(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()",
            "def clear_data(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()",
            "def clear_data(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op = messagebox.askyesno('Clear', 'Do you really want to Clear?')\n    if op > 0:\n        self.sanitizer.set(0)\n        self.mask.set(0)\n        self.hand_gloves.set(0)\n        self.dettol.set(0)\n        self.newsprin.set(0)\n        self.thermal_gun.set(0)\n        self.rice.set(0)\n        self.food_oil.set(0)\n        self.wheat.set(0)\n        self.daal.set(0)\n        self.flour.set(0)\n        self.maggi.set(0)\n        self.sprite.set(0)\n        self.limka.set(0)\n        self.mazza.set(0)\n        self.coke.set(0)\n        self.fanta.set(0)\n        self.mountain_duo.set(0)\n        self.medical_price.set('')\n        self.grocery_price.set('')\n        self.cold_drinks_price.set('')\n        self.medical_tax.set('')\n        self.grocery_tax.set('')\n        self.cold_drinks_tax.set('')\n        self.c_name.set('')\n        self.c_phone.set('')\n        self.bill_no.set('')\n        x = random.randint(1000, 9999)\n        self.bill_no.set(str(x))\n        self.search_bill.set('')\n        self.welcome_bill()"
        ]
    },
    {
        "func_name": "exit_app",
        "original": "def exit_app(self):\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()",
        "mutated": [
            "def exit_app(self):\n    if False:\n        i = 10\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()",
            "def exit_app(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()",
            "def exit_app(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()",
            "def exit_app(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()",
            "def exit_app(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op = messagebox.askyesno('Exit', 'Do you really want to exit?')\n    if op > 0:\n        self.root.destroy()"
        ]
    }
]