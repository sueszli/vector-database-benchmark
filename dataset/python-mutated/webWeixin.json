[
    {
        "func_name": "getUUID",
        "original": "def getUUID():\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False",
        "mutated": [
            "def getUUID():\n    if False:\n        i = 10\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False",
            "def getUUID():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False",
            "def getUUID():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False",
            "def getUUID():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False",
            "def getUUID():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global uuid, session\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {'appid': 'wx782c26e4c19acffb', 'fun': 'new', 'lang': 'zh_CN', '_': int(time.time())}\n    response = session.get(url, params=params)\n    data = response.content.decode('utf-8')\n    regx = 'window.QRLogin.code = (\\\\d+); window.QRLogin.uuid = \"(\\\\S+?)\"'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    uuid = pm.group(2)\n    if code == '200':\n        return True\n    return False"
        ]
    },
    {
        "func_name": "showQRImage",
        "original": "def showQRImage():\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')",
        "mutated": [
            "def showQRImage():\n    if False:\n        i = 10\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')",
            "def showQRImage():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')",
            "def showQRImage():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')",
            "def showQRImage():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')",
            "def showQRImage():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global tip\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {'t': 'webwx', '_': int(time.time())}\n    response = session.get(url, params=params)\n    tip = 1\n    with open(QRImgPath, 'wb') as f:\n        f.write(response.content)\n        f.close()\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImgPath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImgPath])\n    else:\n        os.startfile(QRImgPath)\n    print('\u8bf7\u4f7f\u7528\u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u4ee5\u767b\u5f55')"
        ]
    },
    {
        "func_name": "waitForLogin",
        "original": "def waitForLogin():\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code",
        "mutated": [
            "def waitForLogin():\n    if False:\n        i = 10\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code",
            "def waitForLogin():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code",
            "def waitForLogin():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code",
            "def waitForLogin():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code",
            "def waitForLogin():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global tip, base_uri, redirect_uri\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (tip, uuid, int(time.time()))\n    response = session.get(url)\n    data = response.content.decode('utf-8')\n    regx = 'window.code=(\\\\d+);'\n    pm = re.search(regx, data)\n    code = pm.group(1)\n    if code == '201':\n        print('\u6210\u529f\u626b\u63cf,\u8bf7\u5728\u624b\u673a\u4e0a\u70b9\u51fb\u786e\u8ba4\u4ee5\u767b\u5f55')\n        tip = 0\n    elif code == '200':\n        print('\u6b63\u5728\u767b\u5f55...')\n        regx = 'window.redirect_uri=\"(\\\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n        if sys.platform.find('darwin') >= 0:\n            os.system('osascript -e \\'quit app \"Preview\"\\'')\n    elif code == '408':\n        pass\n    return code"
        ]
    },
    {
        "func_name": "login",
        "original": "def login():\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True",
        "mutated": [
            "def login():\n    if False:\n        i = 10\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True",
            "def login():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True",
            "def login():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True",
            "def login():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True",
            "def login():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n    response = session.get(redirect_uri)\n    data = response.content.decode('utf-8')\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n    BaseRequest = {'Uin': int(wxuin), 'Sid': wxsid, 'Skey': skey, 'DeviceID': deviceId}\n    return True"
        ]
    },
    {
        "func_name": "webwxinit",
        "original": "def webwxinit():\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True",
        "mutated": [
            "def webwxinit():\n    if False:\n        i = 10\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True",
            "def webwxinit():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True",
            "def webwxinit():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True",
            "def webwxinit():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True",
            "def webwxinit():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    url = base_uri + '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    params = {'BaseRequest': BaseRequest}\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.post(url, data=json.dumps(params), headers=h)\n    data = response.content.decode('utf-8')\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKeyList = []\n    for item in dic['SyncKey']['List']:\n        SyncKeyList.append('%s_%s' % (item['Key'], item['Val']))\n    SyncKey = '|'.join(SyncKeyList)\n    Ret = dic['BaseResponse']['Ret']\n    if Ret != 0:\n        return False\n    return True"
        ]
    },
    {
        "func_name": "webwxgetcontact",
        "original": "def webwxgetcontact():\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList",
        "mutated": [
            "def webwxgetcontact():\n    if False:\n        i = 10\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList",
            "def webwxgetcontact():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList",
            "def webwxgetcontact():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList",
            "def webwxgetcontact():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList",
            "def webwxgetcontact():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    url = base_uri + '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (pass_ticket, skey, int(time.time()))\n    h = headers\n    h['ContentType'] = 'application/json; charset=UTF-8'\n    response = session.get(url, headers=h)\n    data = response.content.decode('utf-8')\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    SpecialUsers = ['newsapp', 'fmessage', 'filehelper', 'weibo', 'qqmail', 'tmessage', 'qmessage', 'qqsync', 'floatbottle', 'lbsapp', 'shakeapp', 'medianote', 'qqfriend', 'readerapp', 'blogapp', 'facebookapp', 'masssendapp', 'meishiapp', 'feedsapp', 'voip', 'blogappweixin', 'weixin', 'brandsessionholder', 'weixinreminder', 'wxid_novlwrv3lqwv11', 'gh_22b87fa7cb3c', 'officialaccounts', 'notification_messages', 'wxitil', 'userexperience_alarm']\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:\n            MemberList.remove(Member)\n    return MemberList"
        ]
    },
    {
        "func_name": "main",
        "original": "def main():\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if not getUUID():\n        print('\u83b7\u53d6uuid\u5931\u8d25')\n        return\n    showQRImage()\n    time.sleep(1)\n    while waitForLogin() != '200':\n        pass\n    os.remove(QRImgPath)\n    if not login():\n        print('\u767b\u5f55\u5931\u8d25')\n        return\n    if not webwxinit():\n        print('\u521d\u59cb\u5316\u5931\u8d25')\n        return\n    MemberList = webwxgetcontact()\n    print('\u901a\u8baf\u5f55\u5171%s\u4f4d\u597d\u53cb' % len(MemberList))\n    for x in MemberList:\n        sex = '\u672a\u77e5' if x['Sex'] == 0 else '\u7537' if x['Sex'] == 1 else '\u5973'\n        print('\u6635\u79f0:%s, \u6027\u522b:%s, \u5907\u6ce8:%s, \u7b7e\u540d:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))"
        ]
    }
]