[
    {
        "func_name": "test_invalid_style",
        "original": "def test_invalid_style(self):\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')",
        "mutated": [
            "def test_invalid_style(self):\n    if False:\n        i = 10\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')",
            "def test_invalid_style(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')",
            "def test_invalid_style(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')",
            "def test_invalid_style(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')",
            "def test_invalid_style(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown_string = '\\n        # one slide\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.STYLE_ERROR, pres.Presentation, markdown_string, style='foo')"
        ]
    },
    {
        "func_name": "test_open_code_block",
        "original": "def test_open_code_block(self):\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')",
        "mutated": [
            "def test_open_code_block(self):\n    if False:\n        i = 10\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_open_code_block(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_open_code_block(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_open_code_block(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_open_code_block(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown_string = '\\n        # one slide\\n\\n        ```python\\n        x = 2 + 2\\n        print x\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.CODE_ENV_ERROR, pres.Presentation, markdown_string, style='moods')"
        ]
    },
    {
        "func_name": "test_invalid_code_language",
        "original": "def test_invalid_code_language(self):\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')",
        "mutated": [
            "def test_invalid_code_language(self):\n    if False:\n        i = 10\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_invalid_code_language(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_invalid_code_language(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_invalid_code_language(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')",
            "def test_invalid_code_language(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown_string = '\\n        ```foo\\n        x = 2 + 2\\n        print x\\n        ```\\n        '\n    self.assertRaisesRegex(PlotlyError, chart_studio.presentation_objs.presentation_objs.LANG_ERROR, pres.Presentation, markdown_string, style='moods')"
        ]
    },
    {
        "func_name": "test_expected_pres",
        "original": "def test_expected_pres(self):\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])",
        "mutated": [
            "def test_expected_pres(self):\n    if False:\n        i = 10\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])",
            "def test_expected_pres(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])",
            "def test_expected_pres(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])",
            "def test_expected_pres(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])",
            "def test_expected_pres(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    markdown_string = '# title\\n---\\ntransition: zoom, fade, fade\\n# Colors\\nColors are everywhere around us.\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nImage(https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png)\\n```python\\nx=1\\n```\\n---\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\nPlotly(https://plotly.com/~AdamKulidjian/3564/)\\n---\\n'\n    my_pres = pres.Presentation(markdown_string, style='moods', imgStretch=True)\n    exp_pres = {'presentation': {'paragraphStyles': {'Body': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none', 'wordBreak': 'break-word'}, 'Body Small': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 10, 'fontStyle': 'normal', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Caption': {'color': '#3d3d3d', 'fontFamily': 'Open Sans', 'fontSize': 11, 'fontStyle': 'italic', 'fontWeight': 400, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 1': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 2': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 36, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}, 'Heading 3': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 30, 'fontStyle': 'normal', 'fontWeight': 900, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'textAlign': 'center', 'textDecoration': 'none'}}, 'slidePreviews': [None for _ in range(496)], 'slides': [{'children': [{'children': ['title'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'CfaAzcSZE', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 350.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}], 'id': 'ibvfOQeNy', 'props': {'style': {'backgroundColor': '#F7F7F7'}, 'transition': ['slide']}}, {'children': [{'children': ['Colors'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'YcGQJ21AY', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Heading 1', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 55, 'fontStyle': 'normal', 'fontWeight': 900, 'height': 140.0, 'left': 0.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'center', 'textDecoration': 'none', 'top': 0.0, 'width': 1000.0}}, 'resizeVertical': False, 'type': 'Text'}, {'children': ['Colors are everywhere around us.'], 'defaultHeight': 36, 'defaultWidth': 52, 'id': 'G0tcGP89U', 'props': {'isQuote': False, 'listType': None, 'paragraphStyle': 'Body', 'size': 4, 'style': {'color': '#000016', 'fontFamily': 'Roboto', 'fontSize': 16, 'fontStyle': 'normal', 'fontWeight': 100, 'height': 14.0, 'left': 25.0, 'lineHeight': 'normal', 'minWidth': 20, 'opacity': 1, 'position': 'absolute', 'textAlign': 'left', 'textDecoration': 'none', 'top': 663.0810810810812, 'width': 950.0000000000001, 'wordBreak': 'break-word'}}, 'resizeVertical': False, 'type': 'Text'}, {'children': [], 'id': 'c4scRvuIe', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 280.0, 'left': 0.0, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}}, 'type': 'Plotly'}, {'children': [], 'id': 'yScDKejKG', 'props': {'height': 512, 'imageName': None, 'src': 'https://raw.githubusercontent.com/jackparmer/gradient-backgrounds/master/moods1.png', 'style': {'height': 280.0, 'left': 334.66666666666663, 'opacity': 1, 'position': 'absolute', 'top': 70.0, 'width': 330.66666666666663}, 'width': 512}, 'type': 'Image'}, {'children': [], 'defaultText': 'Code', 'id': 'fuUrIyVrv', 'props': {'language': 'python', 'source': 'x=1\\n', 'style': {'fontFamily': \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", 'fontSize': 13, 'height': 280.0, 'left': 669.3333333333333, 'margin': 0, 'position': 'absolute', 'textAlign': 'left', 'top': 70.0, 'width': 330.66666666666663}, 'theme': 'tomorrowNight'}, 'type': 'CodePane'}], 'id': '7eG6TvKqU', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['zoom', 'fade']}}, {'children': [{'children': [], 'id': '83EtFjFKM', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 0.0, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'V9vJYk8bF', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 100.57142857142856, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'DzCfXMyhv', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 201.1428571428571, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'YFf7M2BON', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 301.71428571428567, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'CARvApdzw', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 402.2857142857142, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': '194ZxaSko', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 502.85714285714283, 'width': 600.0}}, 'type': 'Plotly'}, {'children': [], 'id': 'SOwRH1rLV', 'props': {'frameBorder': 0, 'scrolling': 'no', 'src': 'https://plotly.com/~AdamKulidjian/3564/.embed?link=false', 'style': {'height': 96.57142857142857, 'left': 400.0, 'position': 'absolute', 'top': 603.4285714285713, 'width': 600.0}}, 'type': 'Plotly'}], 'id': 'S6VmZlI5Q', 'props': {'style': {'backgroundColor': '#FFFFFF'}, 'transition': ['slide']}}], 'version': '0.1.3'}}\n    for k in ['version', 'paragraphStyles', 'slidePreviews']:\n        self.assertEqual(my_pres['presentation'][k], exp_pres['presentation'][k])\n    self.assertEqual(len(my_pres['presentation']['slides']), len(exp_pres['presentation']['slides']))\n    for slide_idx in range(len(my_pres['presentation']['slides'])):\n        childs = my_pres['presentation']['slides'][slide_idx]['children']\n        self.assertEqual(my_pres['presentation']['slides'][slide_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['props'])\n        for child_idx in range(len(childs)):\n            if my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['type'] in ['Image', 'Plotly']:\n                self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])\n            self.assertEqual(my_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'], exp_pres['presentation']['slides'][slide_idx]['children'][child_idx]['props'])"
        ]
    }
]