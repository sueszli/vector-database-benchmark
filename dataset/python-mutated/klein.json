[
    {
        "func_name": "klein",
        "original": "def klein(u, v):\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)",
        "mutated": [
            "def klein(u, v):\n    if False:\n        i = 10\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)",
            "def klein(u, v):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)",
            "def klein(u, v):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)",
            "def klein(u, v):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)",
            "def klein(u, v):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    from math import pi, cos, sin\n    if u < pi:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(u) * cos(v)\n        z = -8 * sin(u) - 2 * (1 - cos(u) / 2) * sin(u) * cos(v)\n    else:\n        x = 3 * cos(u) * (1 + sin(u)) + 2 * (1 - cos(u) / 2) * cos(v + pi)\n        z = -8 * sin(u)\n    y = -2 * (1 - cos(u) / 2) * sin(v)\n    return (x / 5, y / 5, z / 5)"
        ]
    }
]