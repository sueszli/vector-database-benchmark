[
    {
        "func_name": "sample_query_text",
        "original": "def sample_query_text():\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")",
        "mutated": [
            "def sample_query_text():\n    if False:\n        i = 10\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")",
            "def sample_query_text():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")",
            "def sample_query_text():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")",
            "def sample_query_text():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")",
            "def sample_query_text():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    import os\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.language.questionanswering import QuestionAnsweringClient\n    from azure.ai.language.questionanswering import models as qna\n    endpoint = os.environ['AZURE_QUESTIONANSWERING_ENDPOINT']\n    key = os.environ['AZURE_QUESTIONANSWERING_KEY']\n    client = QuestionAnsweringClient(endpoint, AzureKeyCredential(key))\n    with client:\n        question = 'How long it takes to charge surface?'\n        input = qna.AnswersFromTextOptions(question=question, text_documents=['Power and charging. It takes two to four hours to charge the Surface Pro 4 battery fully from an empty state. ' + \"It can take longer if you're using your Surface for power-intensive activities like gaming or video streaming while you're charging it.\", 'You can use the USB port on your Surface Pro 4 power supply to charge other devices, like a phone, while your Surface charges. ' + 'The USB port on the power supply is only for charging, not for data transfer. If you want to use a USB device, plug it into the USB port on your Surface.'])\n        output = client.get_answers_from_text(input)\n        if output.answers:\n            best_answer = [a for a in output.answers if a.confidence and a.confidence > 0.9][0]\n            print('Q: {}'.format(question))\n            print('A: {}'.format(best_answer.answer))\n        else:\n            print(f\"No answers returned from question '{question}'\")"
        ]
    }
]