[
    {
        "func_name": "calcular_punto_encuentro",
        "original": "def calcular_punto_encuentro():\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')",
        "mutated": [
            "def calcular_punto_encuentro():\n    if False:\n        i = 10\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')",
            "def calcular_punto_encuentro():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')",
            "def calcular_punto_encuentro():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')",
            "def calcular_punto_encuentro():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')",
            "def calcular_punto_encuentro():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    objeto1 = {'x': float(input('Ingrese la coordenada x del primer objeto: ')), 'y': float(input('Ingrese la coordenada y del primer objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del primer objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del primer objeto: '))}\n    objeto2 = {'x': float(input('Ingrese la coordenada x del segundo objeto: ')), 'y': float(input('Ingrese la coordenada y del segundo objeto: ')), 'velocidadX': float(input('Ingrese la velocidad en la direcci\u00f3n x del segundo objeto: ')), 'velocidadY': float(input('Ingrese la velocidad en la direcci\u00f3n y del segundo objeto: '))}\n    dx = objeto2['x'] - objeto1['x']\n    dy = objeto2['y'] - objeto1['y']\n    dvx = objeto2['velocidadX'] - objeto1['velocidadX']\n    dvy = objeto2['velocidadY'] - objeto1['velocidadY']\n    t = (dx * dvx + dy * dvy) / (dvx * dvx + dvy * dvy)\n    if t >= 0:\n        punto_encuentro_x = objeto1['x'] + objeto1['velocidadX'] * t\n        punto_encuentro_y = objeto1['y'] + objeto1['velocidadY'] * t\n        print(f'Los objetos se encuentran en ({punto_encuentro_x}, {punto_encuentro_y}) en t = {t} unidades de tiempo. \\n')\n        print('Abriendo dibujo del punto de encuentro entre dos objetos en movimiento')\n        time.sleep(2)\n        plt.axhline(0, color='black', linewidth=0.5)\n        plt.axvline(0, color='black', linewidth=0.5)\n        plt.scatter(punto_encuentro_x, punto_encuentro_y, color='red', label='Punto de encuentro')\n        plt.legend()\n        plt.xlabel('Eje X')\n        plt.ylabel('Eje Y')\n        plt.title('Punto de Encuentro de Objetos en Movimiento')\n        plt.grid(True)\n        plt.show()\n    else:\n        print('Los objetos no se encuentran en ning\u00fan punto.')"
        ]
    }
]