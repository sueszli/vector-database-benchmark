[
    {
        "func_name": "__init__",
        "original": "def __init__(self, persepolis_setting):\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
        "mutated": [
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.pressKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.pressKeyLabel)\n    self.capturedKeyLabel = QLabel(self)\n    window_verticalLayout.addWidget(self.capturedKeyLabel)\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.pressKeyLabel.setText(QCoreApplication.translate('setting_ui_tr', 'Press new keys'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))"
        ]
    },
    {
        "func_name": "__init__",
        "original": "def __init__(self, persepolis_setting):\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
        "mutated": [
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))",
            "def __init__(self, persepolis_setting):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    super().__init__()\n    icon = QIcon()\n    self.persepolis_setting = persepolis_setting\n    locale = str(self.persepolis_setting.value('settings/locale'))\n    QLocale.setDefault(QLocale(locale))\n    self.translator = QTranslator()\n    if self.translator.load(':/translations/locales/ui_' + locale, 'ts'):\n        QCoreApplication.installTranslator(self.translator)\n    self.setWindowIcon(QIcon.fromTheme('persepolis', QIcon(':/persepolis.svg')))\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    ui_direction = self.persepolis_setting.value('ui_direction')\n    if ui_direction == 'rtl':\n        self.setLayoutDirection(Qt.RightToLeft)\n    elif ui_direction in 'ltr':\n        self.setLayoutDirection(Qt.LeftToRight)\n    global icons\n    icons = ':/' + str(self.persepolis_setting.value('settings/icons')) + '/'\n    window_verticalLayout = QVBoxLayout(self)\n    self.setting_tabWidget = QTabWidget(self)\n    self.download_options_tab = QWidget()\n    download_options_tab_verticalLayout = QVBoxLayout(self.download_options_tab)\n    download_options_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    tries_horizontalLayout = QHBoxLayout()\n    self.tries_label = QLabel(self.download_options_tab)\n    tries_horizontalLayout.addWidget(self.tries_label)\n    self.tries_spinBox = QSpinBox(self.download_options_tab)\n    self.tries_spinBox.setMinimum(1)\n    tries_horizontalLayout.addWidget(self.tries_spinBox)\n    download_options_tab_verticalLayout.addLayout(tries_horizontalLayout)\n    wait_horizontalLayout = QHBoxLayout()\n    self.wait_label = QLabel(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_label)\n    self.wait_spinBox = QSpinBox(self.download_options_tab)\n    wait_horizontalLayout.addWidget(self.wait_spinBox)\n    download_options_tab_verticalLayout.addLayout(wait_horizontalLayout)\n    time_out_horizontalLayout = QHBoxLayout()\n    self.time_out_label = QLabel(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_label)\n    self.time_out_spinBox = QSpinBox(self.download_options_tab)\n    time_out_horizontalLayout.addWidget(self.time_out_spinBox)\n    download_options_tab_verticalLayout.addLayout(time_out_horizontalLayout)\n    connections_horizontalLayout = QHBoxLayout()\n    self.connections_label = QLabel(self.download_options_tab)\n    connections_horizontalLayout.addWidget(self.connections_label)\n    self.connections_spinBox = QSpinBox(self.download_options_tab)\n    self.connections_spinBox.setMinimum(1)\n    self.connections_spinBox.setMaximum(16)\n    connections_horizontalLayout.addWidget(self.connections_spinBox)\n    download_options_tab_verticalLayout.addLayout(connections_horizontalLayout)\n    self.rpc_port_label = QLabel(self.download_options_tab)\n    self.rpc_horizontalLayout = QHBoxLayout()\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_label)\n    self.rpc_port_spinbox = QSpinBox(self.download_options_tab)\n    self.rpc_port_spinbox.setMinimum(1024)\n    self.rpc_port_spinbox.setMaximum(65535)\n    self.rpc_horizontalLayout.addWidget(self.rpc_port_spinbox)\n    download_options_tab_verticalLayout.addLayout(self.rpc_horizontalLayout)\n    wait_queue_horizontalLayout = QHBoxLayout()\n    self.wait_queue_label = QLabel(self.download_options_tab)\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_label)\n    self.wait_queue_time = MyQDateTimeEdit(self.download_options_tab)\n    self.wait_queue_time.setDisplayFormat('H:mm')\n    wait_queue_horizontalLayout.addWidget(self.wait_queue_time)\n    download_options_tab_verticalLayout.addLayout(wait_queue_horizontalLayout)\n    self.dont_check_certificate_checkBox = QCheckBox(self.download_options_tab)\n    download_options_tab_verticalLayout.addWidget(self.dont_check_certificate_checkBox)\n    aria2_path_verticalLayout = QVBoxLayout()\n    self.aria2_path_checkBox = QCheckBox(self.download_options_tab)\n    aria2_path_verticalLayout.addWidget(self.aria2_path_checkBox)\n    aria2_path_horizontalLayout = QHBoxLayout()\n    self.aria2_path_lineEdit = QLineEdit(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_lineEdit)\n    self.aria2_path_pushButton = QPushButton(self.download_options_tab)\n    aria2_path_horizontalLayout.addWidget(self.aria2_path_pushButton)\n    aria2_path_verticalLayout.addLayout(aria2_path_horizontalLayout)\n    download_options_tab_verticalLayout.addLayout(aria2_path_verticalLayout)\n    download_options_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.download_options_tab, '')\n    self.save_as_tab = QWidget()\n    save_as_tab_verticalLayout = QVBoxLayout(self.save_as_tab)\n    save_as_tab_verticalLayout.setContentsMargins(20, 30, 0, 0)\n    self.download_folder_horizontalLayout = QHBoxLayout()\n    self.download_folder_label = QLabel(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_label)\n    self.download_folder_lineEdit = QLineEdit(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_lineEdit)\n    self.download_folder_pushButton = QPushButton(self.save_as_tab)\n    self.download_folder_horizontalLayout.addWidget(self.download_folder_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.download_folder_horizontalLayout)\n    self.temp_horizontalLayout = QHBoxLayout()\n    self.temp_download_label = QLabel(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_label)\n    self.temp_download_lineEdit = QLineEdit(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_lineEdit)\n    self.temp_download_pushButton = QPushButton(self.save_as_tab)\n    self.temp_horizontalLayout.addWidget(self.temp_download_pushButton)\n    save_as_tab_verticalLayout.addLayout(self.temp_horizontalLayout)\n    self.subfolder_checkBox = QCheckBox(self.save_as_tab)\n    save_as_tab_verticalLayout.addWidget(self.subfolder_checkBox)\n    save_as_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.save_as_tab, '')\n    self.notifications_tab = QWidget()\n    notification_tab_verticalLayout = QVBoxLayout(self.notifications_tab)\n    notification_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.enable_notifications_checkBox = QCheckBox(self.notifications_tab)\n    notification_tab_verticalLayout.addWidget(self.enable_notifications_checkBox)\n    self.sound_frame = QFrame(self.notifications_tab)\n    self.sound_frame.setFrameShape(QFrame.StyledPanel)\n    self.sound_frame.setFrameShadow(QFrame.Raised)\n    verticalLayout = QVBoxLayout(self.sound_frame)\n    self.volume_label = QLabel(self.sound_frame)\n    verticalLayout.addWidget(self.volume_label)\n    self.volume_dial = QDial(self.sound_frame)\n    self.volume_dial.setProperty('value', 100)\n    verticalLayout.addWidget(self.volume_dial)\n    notification_tab_verticalLayout.addWidget(self.sound_frame)\n    message_notification_horizontalLayout = QHBoxLayout()\n    self.notification_label = QLabel(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_label)\n    self.notification_comboBox = QComboBox(self.notifications_tab)\n    message_notification_horizontalLayout.addWidget(self.notification_comboBox)\n    notification_tab_verticalLayout.addLayout(message_notification_horizontalLayout)\n    notification_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.notifications_tab, '')\n    self.style_tab = QWidget()\n    style_tab_verticalLayout = QVBoxLayout(self.style_tab)\n    style_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    style_horizontalLayout = QHBoxLayout()\n    self.style_label = QLabel(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_label)\n    self.style_comboBox = QComboBox(self.style_tab)\n    style_horizontalLayout.addWidget(self.style_comboBox)\n    style_tab_verticalLayout.addLayout(style_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_label)\n    self.lang_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.lang_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    language_horizontalLayout = QHBoxLayout()\n    self.lang_label.setText(QCoreApplication.translate('setting_ui_tr', 'Language: '))\n    self.color_label = QLabel(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_label)\n    self.color_comboBox = QComboBox(self.style_tab)\n    language_horizontalLayout.addWidget(self.color_comboBox)\n    style_tab_verticalLayout.addLayout(language_horizontalLayout)\n    icons_horizontalLayout = QHBoxLayout()\n    self.icon_label = QLabel(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_label)\n    self.icon_comboBox = QComboBox(self.style_tab)\n    icons_horizontalLayout.addWidget(self.icon_comboBox)\n    style_tab_verticalLayout.addLayout(icons_horizontalLayout)\n    self.icons_size_horizontalLayout = QHBoxLayout()\n    self.icons_size_label = QLabel(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_label)\n    self.icons_size_comboBox = QComboBox(self.style_tab)\n    self.icons_size_horizontalLayout.addWidget(self.icons_size_comboBox)\n    style_tab_verticalLayout.addLayout(self.icons_size_horizontalLayout)\n    font_horizontalLayout = QHBoxLayout()\n    self.font_checkBox = QCheckBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_checkBox)\n    self.fontComboBox = QFontComboBox(self.style_tab)\n    font_horizontalLayout.addWidget(self.fontComboBox)\n    self.font_size_label = QLabel(self.style_tab)\n    font_horizontalLayout.addWidget(self.font_size_label)\n    self.font_size_spinBox = QSpinBox(self.style_tab)\n    self.font_size_spinBox.setMinimum(1)\n    font_horizontalLayout.addWidget(self.font_size_spinBox)\n    style_tab_verticalLayout.addLayout(font_horizontalLayout)\n    self.setting_tabWidget.addTab(self.style_tab, '')\n    window_verticalLayout.addWidget(self.setting_tabWidget)\n    self.start_persepolis_if_browser_executed_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.start_persepolis_if_browser_executed_checkBox)\n    self.hide_window_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.hide_window_checkBox)\n    self.enable_system_tray_checkBox = QCheckBox(self.style_tab)\n    style_tab_verticalLayout.addWidget(self.enable_system_tray_checkBox)\n    self.after_download_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.after_download_checkBox)\n    self.show_menubar_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_menubar_checkbox)\n    self.show_sidepanel_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_sidepanel_checkbox)\n    self.show_progress_window_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.show_progress_window_checkbox)\n    self.startup_checkbox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.startup_checkbox)\n    self.keep_awake_checkBox = QCheckBox()\n    style_tab_verticalLayout.addWidget(self.keep_awake_checkBox)\n    style_tab_verticalLayout.addStretch(1)\n    self.columns_tab = QWidget()\n    columns_tab_verticalLayout = QVBoxLayout(self.columns_tab)\n    columns_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.show_column_label = QLabel()\n    self.column0_checkBox = QCheckBox()\n    self.column1_checkBox = QCheckBox()\n    self.column2_checkBox = QCheckBox()\n    self.column3_checkBox = QCheckBox()\n    self.column4_checkBox = QCheckBox()\n    self.column5_checkBox = QCheckBox()\n    self.column6_checkBox = QCheckBox()\n    self.column7_checkBox = QCheckBox()\n    self.column10_checkBox = QCheckBox()\n    self.column11_checkBox = QCheckBox()\n    self.column12_checkBox = QCheckBox()\n    columns_tab_verticalLayout.addWidget(self.show_column_label)\n    columns_tab_verticalLayout.addWidget(self.column0_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column1_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column2_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column3_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column4_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column5_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column6_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column7_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column10_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column11_checkBox)\n    columns_tab_verticalLayout.addWidget(self.column12_checkBox)\n    columns_tab_verticalLayout.addStretch(1)\n    self.setting_tabWidget.addTab(self.columns_tab, '')\n    self.video_finder_tab = QWidget()\n    video_finder_layout = QVBoxLayout(self.video_finder_tab)\n    video_finder_layout.setContentsMargins(21, 21, 0, 0)\n    video_finder_tab_verticalLayout = QVBoxLayout()\n    max_links_horizontalLayout = QHBoxLayout()\n    self.max_links_label = QLabel(self.video_finder_tab)\n    max_links_horizontalLayout.addWidget(self.max_links_label)\n    self.max_links_spinBox = QSpinBox(self.video_finder_tab)\n    self.max_links_spinBox.setMinimum(1)\n    self.max_links_spinBox.setMaximum(16)\n    max_links_horizontalLayout.addWidget(self.max_links_spinBox)\n    video_finder_tab_verticalLayout.addLayout(max_links_horizontalLayout)\n    self.video_finder_dl_path_horizontalLayout = QHBoxLayout()\n    self.video_finder_frame = QFrame(self.video_finder_tab)\n    self.video_finder_frame.setLayout(video_finder_tab_verticalLayout)\n    video_finder_tab_verticalLayout.addStretch(1)\n    video_finder_layout.addWidget(self.video_finder_frame)\n    self.setting_tabWidget.addTab(self.video_finder_tab, '')\n    self.shortcut_tab = QWidget()\n    shortcut_tab_verticalLayout = QVBoxLayout(self.shortcut_tab)\n    shortcut_tab_verticalLayout.setContentsMargins(21, 21, 0, 0)\n    self.shortcut_table = QTableWidget(self)\n    self.shortcut_table.setColumnCount(2)\n    self.shortcut_table.setSelectionBehavior(QAbstractItemView.SelectRows)\n    self.shortcut_table.setSelectionMode(QAbstractItemView.SingleSelection)\n    self.shortcut_table.setEditTriggers(QAbstractItemView.NoEditTriggers)\n    self.shortcut_table.verticalHeader().hide()\n    shortcut_table_header = [QCoreApplication.translate('setting_ui_tr', 'Action'), QCoreApplication.translate('setting_ui_tr', 'Shortcut')]\n    self.shortcut_table.setHorizontalHeaderLabels(shortcut_table_header)\n    shortcut_tab_verticalLayout.addWidget(self.shortcut_table)\n    self.setting_tabWidget.addTab(self.shortcut_tab, QCoreApplication.translate('setting_ui_tr', 'Shortcuts'))\n    actions_list = [QCoreApplication.translate('setting_ui_tr', 'Quit'), QCoreApplication.translate('setting_ui_tr', 'Minimize to System Tray'), QCoreApplication.translate('setting_ui_tr', 'Remove Download Items'), QCoreApplication.translate('setting_ui_tr', 'Delete Download Items'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Up'), QCoreApplication.translate('setting_ui_tr', 'Move Selected Items Down'), QCoreApplication.translate('setting_ui_tr', 'Add New Download Link'), QCoreApplication.translate('setting_ui_tr', 'Add New Video Link'), QCoreApplication.translate('setting_ui_tr', 'Import Links from Text File')]\n    j = 0\n    for action in actions_list:\n        item = QTableWidgetItem(str(action))\n        item.setTextAlignment(4 | 128)\n        self.shortcut_table.insertRow(j)\n        self.shortcut_table.setItem(j, 0, item)\n        j = j + 1\n    self.shortcut_table.resizeColumnsToContents()\n    buttons_horizontalLayout = QHBoxLayout()\n    buttons_horizontalLayout.addStretch(1)\n    self.defaults_pushButton = QPushButton(self)\n    buttons_horizontalLayout.addWidget(self.defaults_pushButton)\n    self.cancel_pushButton = QPushButton(self)\n    self.cancel_pushButton.setIcon(QIcon(icons + 'remove'))\n    buttons_horizontalLayout.addWidget(self.cancel_pushButton)\n    self.ok_pushButton = QPushButton(self)\n    self.ok_pushButton.setIcon(QIcon(icons + 'ok'))\n    buttons_horizontalLayout.addWidget(self.ok_pushButton)\n    window_verticalLayout.addLayout(buttons_horizontalLayout)\n    self.setting_tabWidget.setCurrentIndex(3)\n    self.setWindowTitle(QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.tries_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.tries_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of tries: '))\n    self.tries_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set number of tries if download failed.</p></body></html>'))\n    self.wait_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.wait_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between retries (seconds): '))\n    self.wait_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set the seconds to wait between retries. Download manager will  retry  downloads  when  the  HTTP  server  returns  a  503 response.</p></body></html>'))\n    self.time_out_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.time_out_label.setText(QCoreApplication.translate('setting_ui_tr', 'Timeout (seconds): '))\n    self.time_out_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Set timeout in seconds. </p></body></html>'))\n    self.connections_label.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.connections_label.setText(QCoreApplication.translate('setting_ui_tr', 'Number of connections: '))\n    self.connections_spinBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Using multiple connections can help speed up your download.</p></body></html>'))\n    self.rpc_port_label.setText(QCoreApplication.translate('setting_ui_tr', 'RPC port number: '))\n    self.rpc_port_spinbox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p> Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 - 65535 Default: 6801 </p></body></html>'))\n    self.wait_queue_label.setText(QCoreApplication.translate('setting_ui_tr', 'Wait period between each download in queue:'))\n    self.dont_check_certificate_checkBox.setText(QCoreApplication.translate('setting_ui_tr', \"Don't use certificate to verify the peers\"))\n    self.dont_check_certificate_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option avoids SSL/TLS handshake failure. But use it at your own risk!</p></body></html>'))\n    self.aria2_path_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Change Aria2 default path'))\n    self.aria2_path_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    aria2_path_tooltip = QCoreApplication.translate('setting_ui_tr', \"<html><head/><body><p>Attention: Wrong path may cause problems! Do it carefully or don't change default setting!</p></body></html>\")\n    self.aria2_path_checkBox.setToolTip(aria2_path_tooltip)\n    self.aria2_path_lineEdit.setToolTip(aria2_path_tooltip)\n    self.aria2_path_pushButton.setToolTip(aria2_path_tooltip)\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.download_options_tab), QCoreApplication.translate('setting_ui_tr', 'Download Options'))\n    self.download_folder_label.setText(QCoreApplication.translate('setting_ui_tr', 'Download folder: '))\n    self.download_folder_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.temp_download_label.setText(QCoreApplication.translate('setting_ui_tr', 'Temporary download folder: '))\n    self.temp_download_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Change'))\n    self.subfolder_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Create subfolders for Music,Videos, ... in default download folder'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.save_as_tab), QCoreApplication.translate('setting_ui_tr', 'Save As'))\n    self.enable_notifications_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable Notification Sounds'))\n    self.volume_label.setText(QCoreApplication.translate('setting_ui_tr', 'Volume: '))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.notifications_tab), QCoreApplication.translate('setting_ui_tr', 'Notifications'))\n    self.style_label.setText(QCoreApplication.translate('setting_ui_tr', 'Style: '))\n    self.color_label.setText(QCoreApplication.translate('setting_ui_tr', 'Color scheme: '))\n    self.icon_label.setText(QCoreApplication.translate('setting_ui_tr', 'Icons: '))\n    self.icons_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Toolbar icons size: '))\n    self.notification_label.setText(QCoreApplication.translate('setting_ui_tr', 'Notification type: '))\n    self.font_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Font: '))\n    self.font_size_label.setText(QCoreApplication.translate('setting_ui_tr', 'Size: '))\n    self.hide_window_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Hide main window if close button clicked.'))\n    self.hide_window_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This feature may not work in your operating system.</p></body></html>'))\n    self.start_persepolis_if_browser_executed_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'If browser is opened, start Persepolis in system tray'))\n    self.enable_system_tray_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Enable system tray icon'))\n    self.after_download_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download complete dialog when download is finished'))\n    self.show_menubar_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show menubar'))\n    self.show_sidepanel_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show side panel'))\n    self.show_progress_window_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Show download progress window'))\n    self.startup_checkbox.setText(QCoreApplication.translate('setting_ui_tr', 'Run Persepolis at startup'))\n    self.keep_awake_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Keep system awake!'))\n    self.keep_awake_checkBox.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>This option will prevent the system from going to sleep.            It is necessary if your power manager is suspending the system automatically. </p></body></html>'))\n    self.wait_queue_time.setToolTip(QCoreApplication.translate('setting_ui_tr', '<html><head/><body><p>Format HH:MM</p></body></html>'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.style_tab), QCoreApplication.translate('setting_ui_tr', 'Preferences'))\n    self.show_column_label.setText(QCoreApplication.translate('setting_ui_tr', 'Show these columns:'))\n    self.column0_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'File Name'))\n    self.column1_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Status'))\n    self.column2_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Size'))\n    self.column3_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Downloaded'))\n    self.column4_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Percentage'))\n    self.column5_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Connections'))\n    self.column6_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Transfer Rate'))\n    self.column7_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Estimated Time Left'))\n    self.column10_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'First Try Date'))\n    self.column11_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Last Try Date'))\n    self.column12_checkBox.setText(QCoreApplication.translate('setting_ui_tr', 'Category'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.columns_tab), QCoreApplication.translate('setting_ui_tr', 'Columns Customization'))\n    self.setting_tabWidget.setTabText(self.setting_tabWidget.indexOf(self.video_finder_tab), QCoreApplication.translate('setting_ui_tr', 'Video Finder Options'))\n    self.max_links_label.setText(QCoreApplication.translate('setting_ui_tr', 'Maximum number of links to capture:<br/><small>(If browser sends multiple video links at a time)</small>'))\n    self.defaults_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Defaults'))\n    self.cancel_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'Cancel'))\n    self.ok_pushButton.setText(QCoreApplication.translate('setting_ui_tr', 'OK'))"
        ]
    }
]