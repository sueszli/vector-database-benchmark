[
    {
        "func_name": "ReporterPDF",
        "original": "def ReporterPDF():\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')",
        "mutated": [
            "def ReporterPDF():\n    if False:\n        i = 10\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')",
            "def ReporterPDF():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')",
            "def ReporterPDF():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')",
            "def ReporterPDF():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')",
            "def ReporterPDF():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    datagen = ImageDataGenerator(rescale=1.0 / 255, data_format='channels_first')\n    generator = datagen.flow_from_directory(train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='categorical', shuffle=False)\n    classes = generator.class_indices.items()\n    classNames = ['' for x in range(100)]\n    i = 0\n    for i in range(0, 100):\n        classNames[classes[i][1]] = classes[i][0]\n    print('\\nReporterPDF working ...')\n    pdf = FPDF('P', 'mm', 'A4')\n    pdf.add_page()\n    pdf.set_font('Arial', 'B', 9)\n    pdf.cell(50, 10, 'Estadisticos', 1, 0, 'C')\n    pdf.ln(16)\n    threshold = 0.5\n    while threshold <= 1.01:\n        thTP = sum(weapon_pre_probs[:, 0] >= threshold)\n        thFP = sum(noWeapon_pre_probs[:, 0] >= threshold)\n        thAcc = round(float(thTP) / (thTP + thFP), 3)\n        thRec = round(float(thTP) / total_weapons, 3)\n        thF1m = round(thAcc * thRec / (thAcc + thRec) * 2, 3)\n        pdf.cell(60, 8, 'Threshold: ' + repr(threshold) + '  -  TP: ' + repr(thTP) + ' - FP: ' + repr(thFP))\n        pdf.cell(100, 8, '--- Acc = ' + repr(thAcc) + ' - Rec = ' + repr(thRec) + ' -- F1 = ' + repr(thF1m))\n        pdf.ln(8)\n        threshold += 0.05\n        threshold = round(threshold, 2)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] != 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes mal clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] == 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'KNIFES bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for i in range(0, len(onlyfilesP)):\n        if weapon_pre[i] == 0:\n            roundedProbs = ['%.5f' % elem for elem in weapon_pre_probs[i, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/Pistolas/' + onlyfilesP[i], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.add_page()\n    pdf.cell(50, 10, 'NoKnifes bien clasificadas', 1, 0, 'C')\n    pdf.ln(11)\n    for j in range(0, len(onlyfilesN)):\n        if noWeapon_pre[j] != 0:\n            roundedProbs = ['%.5f' % elem for elem in noWeapon_pre_probs[j, :]]\n            rankProbs = sorted(roundedProbs, reverse=True)\n            for r in rankProbs[0:3]:\n                if r != 0:\n                    pdf.cell(55, 8, str(classNames[roundedProbs.index(r)] + ': ' + repr(r)), 1, 0, 'C')\n            pdf.ln(9)\n            pdf.image('Test/NoArma/' + onlyfilesN[j], w=44, h=33)\n            pdf.ln(0.5)\n    pdf.output('report.pdf', 'F')\n    print('Report: succesful generation\\n')"
        ]
    }
]