[
    {
        "func_name": "jinja2_autoescape_false",
        "original": "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')",
        "mutated": [
            "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if False:\n        i = 10\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')",
            "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')",
            "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')",
            "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')",
            "@test.checks('Call')\n@test.test_id('B701')\ndef jinja2_autoescape_false(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'jinja2' in qualname_list and func == 'Environment':\n            for node in ast.walk(context.node):\n                if isinstance(node, ast.keyword):\n                    if getattr(node, 'arg', None) == 'autoescape' and (getattr(node.value, 'id', None) == 'False' or getattr(node.value, 'value', None) is False):\n                        return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n                    if getattr(node, 'arg', None) == 'autoescape':\n                        value = getattr(node, 'value', None)\n                        if getattr(value, 'id', None) == 'True' or getattr(value, 'value', None) is True:\n                            return\n                        elif isinstance(value, ast.Call) and (getattr(value.func, 'attr', None) == 'select_autoescape' or getattr(value.func, 'id', None) == 'select_autoescape'):\n                            return\n                        else:\n                            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.MEDIUM, cwe=issue.Cwe.CODE_INJECTION, text='Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')\n            return bandit.Issue(severity=bandit.HIGH, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.')"
        ]
    }
]