[
    {
        "func_name": "upgrade",
        "original": "def upgrade():\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))",
        "mutated": [
            "def upgrade():\n    if False:\n        i = 10\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op.create_table('clusters', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('cluster_name', sa.String(length=250), nullable=True), sa.Column('coordinator_host', sa.String(length=255), nullable=True), sa.Column('coordinator_port', sa.Integer(), nullable=True), sa.Column('coordinator_endpoint', sa.String(length=255), nullable=True), sa.Column('broker_host', sa.String(length=255), nullable=True), sa.Column('broker_port', sa.Integer(), nullable=True), sa.Column('broker_endpoint', sa.String(length=255), nullable=True), sa.Column('metadata_last_refreshed', sa.DateTime(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('cluster_name'))\n    op.create_table('dashboards', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_title', sa.String(length=500), nullable=True), sa.Column('position_json', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dbs', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('database_name', sa.String(length=250), nullable=True), sa.Column('sqlalchemy_uri', sa.String(length=1024), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('database_name'))\n    op.create_table('datasources', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('is_featured', sa.Boolean(), nullable=True), sa.Column('is_hidden', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('user_id', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('cluster_name', sa.String(length=250), sa.ForeignKey('clusters.cluster_name'), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('datasource_name'))\n    op.create_table('tables', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_name', sa.String(length=250), nullable=True), sa.Column('main_dttm_col', sa.String(length=250), nullable=True), sa.Column('default_endpoint', sa.Text(), nullable=True), sa.Column('database_id', sa.Integer(), sa.ForeignKey('dbs.id'), nullable=False), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('table_name'))\n    op.create_table('columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('datasource_name', sa.String(length=255), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('metrics', sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('datasource_name', sa.String(length=255), sa.ForeignKey('datasources.datasource_name'), nullable=True), sa.Column('json', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.ForeignKeyConstraint(['datasource_name'], ['datasources.datasource_name']), sa.PrimaryKeyConstraint('id'))\n    op.create_table('slices', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('slice_name', sa.String(length=250), nullable=True), sa.Column('druid_datasource_id', sa.Integer(), sa.ForeignKey('datasources.id'), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('datasource_type', sa.String(length=200), nullable=True), sa.Column('datasource_name', sa.String(length=2000), nullable=True), sa.Column('viz_type', sa.String(length=250), nullable=True), sa.Column('params', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('sql_metrics', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('metric_name', sa.String(length=512), nullable=True), sa.Column('verbose_name', sa.String(length=1024), nullable=True), sa.Column('metric_type', sa.String(length=32), nullable=True), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('expression', sa.Text(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('table_columns', sa.Column('created_on', sa.DateTime(), nullable=False), sa.Column('changed_on', sa.DateTime(), nullable=False), sa.Column('id', sa.Integer(), nullable=False), sa.Column('table_id', sa.Integer(), sa.ForeignKey('tables.id'), nullable=True), sa.Column('column_name', sa.String(length=255), nullable=True), sa.Column('is_dttm', sa.Boolean(), nullable=True), sa.Column('is_active', sa.Boolean(), nullable=True), sa.Column('type', sa.String(length=32), nullable=True), sa.Column('groupby', sa.Boolean(), nullable=True), sa.Column('count_distinct', sa.Boolean(), nullable=True), sa.Column('sum', sa.Boolean(), nullable=True), sa.Column('max', sa.Boolean(), nullable=True), sa.Column('min', sa.Boolean(), nullable=True), sa.Column('filterable', sa.Boolean(), nullable=True), sa.Column('description', sa.Text(), nullable=True), sa.Column('created_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.Column('changed_by_fk', sa.Integer(), sa.ForeignKey('ab_user.id'), nullable=True), sa.PrimaryKeyConstraint('id'))\n    op.create_table('dashboard_slices', sa.Column('id', sa.Integer(), nullable=False), sa.Column('dashboard_id', sa.Integer(), sa.ForeignKey('dashboards.id'), nullable=True), sa.Column('slice_id', sa.Integer(), sa.ForeignKey('slices.id'), nullable=True), sa.PrimaryKeyConstraint('id'))"
        ]
    },
    {
        "func_name": "downgrade",
        "original": "def downgrade():\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')",
        "mutated": [
            "def downgrade():\n    if False:\n        i = 10\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op.drop_table('dashboard_slices')\n    op.drop_table('table_columns')\n    op.drop_table('sql_metrics')\n    op.drop_table('slices')\n    op.drop_table('metrics')\n    op.drop_table('columns')\n    op.drop_table('tables')\n    op.drop_table('datasources')\n    op.drop_table('dbs')\n    op.drop_table('dashboards')\n    op.drop_table('clusters')"
        ]
    }
]