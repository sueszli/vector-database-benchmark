[
    {
        "func_name": "test_custom_cell_magics",
        "original": "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)",
        "mutated": [
            "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    if False:\n        i = 10\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)",
            "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)",
            "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)",
            "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)",
            "def test_custom_cell_magics(tmpdir, nb=new_notebook(cells=[new_code_cell('%%sql -o tables -q\\n SHOW TABLES'), new_code_cell('%%configure -f\\n{\"executorMemory\": \"3072M\", \"executorCores\": 4, \"numExecutors\":10}'), new_code_cell('%%local\\na=1')])):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    cfg_file = tmpdir.join('jupytext.toml')\n    nb_file = tmpdir.join('notebook.ipynb')\n    py_file = tmpdir.join('notebook.py')\n    cfg_file.write('custom_cell_magics = \"configure,local\"')\n    assert 'configure' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    assert 'logs' not in _JUPYTER_LANGUAGES_LOWER_AND_UPPER\n    nbformat.write(nb, str(nb_file))\n    jupytext_cli([str(nb_file), '--to', 'py'])\n    py = py_file.read()\n    for line in py.splitlines():\n        if line:\n            assert line.startswith('# '), line\n    jupytext_cli([str(py_file), '--to', 'notebook'])\n    nb2 = nbformat.read(str(nb_file), as_version=4)\n    compare_notebooks(nb2, nb)"
        ]
    }
]