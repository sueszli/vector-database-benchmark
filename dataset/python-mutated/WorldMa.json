[
    {
        "func_name": "__init__",
        "original": "def __init__(self, *args, **kwargs):\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()",
        "mutated": [
            "def __init__(self, *args, **kwargs):\n    if False:\n        i = 10\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()",
            "def __init__(self, *args, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()",
            "def __init__(self, *args, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()",
            "def __init__(self, *args, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()",
            "def __init__(self, *args, **kwargs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    super(GraphicsView, self).__init__(*args, **kwargs)\n    self.resize(800, 600)\n    self.setBackgroundBrush(self.backgroundColor)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#CacheModeFlag-enum\\n        CacheNone                    \u4e0d\u4f7f\u7528\u7f13\u5b58\\n        CacheBackground              \u7f13\u5b58\u80cc\u666f\\n        '\n    self.setCacheMode(self.CacheBackground)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#DragMode-enum\\n        NoDrag                       \u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f; \u9f20\u6807\u4e8b\u4ef6\u88ab\u5ffd\u7565\u3002\\n        ScrollHandDrag               \u5149\u6807\u53d8\u6210\u6307\u9488\uff0c\u62d6\u52a8\u9f20\u6807\u5c06\u6eda\u52a8\u6eda\u52a8\u6761\u3002 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u548c\u975e\u4ea4\u4e92\u5f0f\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u3002\\n        RubberBandDrag               \u62d6\u52a8\u9f20\u6807\u5c06\u8bbe\u7f6e\u6a61\u76ae\u7b4b\u51e0\u4f55\u5f62\u72b6\uff0c\u5e76\u9009\u62e9\u6a61\u76ae\u7b4b\u6240\u8986\u76d6\u7684\u6240\u6709\u9879\u76ee\u3002 \u5bf9\u4e8e\u975e\u4ea4\u4e92\u5f0f\u89c6\u56fe\uff0c\u6b64\u6a21\u5f0f\u88ab\u7981\u7528\u3002\\n        '\n    self.setDragMode(self.ScrollHandDrag)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#OptimizationFlag-enum\\n        DontClipPainter              \u5df2\u8fc7\u65f6\\n        DontSavePainterState         \u6e32\u67d3\u65f6\uff0cQGraphicsView\u5728\u6e32\u67d3\u80cc\u666f\u6216\u524d\u666f\u65f6\u4ee5\u53ca\u6e32\u67d3\u6bcf\u4e2a\u9879\u76ee\u65f6\u4fdd\u62a4painter\u72b6\u6001\uff08\u8bf7\u53c2\u9605QPainter.save()\uff09\u3002 \u8fd9\u5141\u8bb8\u4f60\u79bb\u5f00painter\u5904\u4e8e\u6539\u53d8\u72b6\u6001\uff08\u5373\u4f60\u53ef\u4ee5\u8c03\u7528QPainter.setPen()\u6216QPainter.setBrush()\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7ed8\u5236\u4e4b\u540e\u6062\u590d\u72b6\u6001\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u9879\u76ee\u4e00\u81f4\u5730\u6062\u590d\u72b6\u6001\uff0c\u5219\u5e94\u542f\u7528\u6b64\u6807\u5fd7\u4ee5\u9632\u6b62QGraphicsView\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\\n        DontAdjustForAntialiasing    \u7981\u7528QGraphicsView\u7684\u6297\u952f\u9f7f\u81ea\u52a8\u8c03\u6574\u66dd\u5149\u533a\u57df\u3002 \u5728QGraphicsItem.boundingRect()\u7684\u8fb9\u754c\u4e0a\u6e32\u67d3\u53cd\u952f\u9f7f\u7ebf\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e32\u67d3\u90e8\u5206\u7ebf\u5916\u3002 \u4e3a\u4e86\u9632\u6b62\u6e32\u67d3\u5931\u771f\uff0cQGraphicsView\u5728\u6240\u6709\u65b9\u5411\u4e0a\u5c06\u6240\u6709\u66dd\u5149\u533a\u57df\u6269\u5c552\u4e2a\u50cf\u7d20\u3002 \u5982\u679c\u542f\u7528\u6b64\u6807\u5fd7\uff0cQGraphicsView\u5c06\u4e0d\u518d\u6267\u884c\u8fd9\u4e9b\u8c03\u6574\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u662f\uff0c\u4f7f\u7528\u6297\u952f\u9f7f\u529f\u80fd\u8fdb\u884c\u7ed8\u5236\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u5728\u79fb\u52a8\u65f6\u5728\u753b\u9762\u4e0a\u7559\u4e0b\u7ed8\u753b\u75d5\u8ff9\u3002\\n        IndirectPainting             \u4eceQt 4.6\u5f00\u59cb\uff0c\u6062\u590d\u8c03\u7528QGraphicsView.drawItems()\u548cQGraphicsScene.drawItems()\u7684\u65e7\u7ed8\u753b\u7b97\u6cd5\u3002 \u4ec5\u7528\u4e8e\u4e0e\u65e7\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u3002\\n        '\n    self.setOptimizationFlag(self.DontSavePainterState)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qpainter.html#RenderHint-enum\\n        Antialiasing                 \u6297\u952f\u9f7f\\n        TextAntialiasing             \u6587\u672c\u6297\u952f\u9f7f\\n        SmoothPixmapTransform        \u5e73\u6ed1\u50cf\u7d20\u53d8\u6362\u7b97\u6cd5\\n        HighQualityAntialiasing      \u8bf7\u6539\u7528Antialiasing\\n        NonCosmeticDefaultPen        \u5df2\u8fc7\u65f6\\n        Qt4CompatiblePainting        \u4eceQt4\u79fb\u690d\u5230Qt5\u53ef\u80fd\u6709\u7528\\n        '\n    self.setRenderHints(QPainter.Antialiasing | QPainter.TextAntialiasing | QPainter.SmoothPixmapTransform)\n    if QGLFormat.hasOpenGL():\n        self.setRenderHint(QPainter.HighQualityAntialiasing)\n    '\\n        #\u5f53\u89c6\u56fe\u88ab\u8c03\u6574\u5927\u5c0f\u65f6\uff0c\u89c6\u56fe\u5982\u4f55\u5b9a\u4f4d\u573a\u666f\u3002\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u6765\u51b3\u5b9a\u5f53\u89c6\u53e3\u63a7\u4ef6\u7684\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\u3002 \u7f3a\u7701\u884c\u4e3aNoAnchor\u5728\u8c03\u6574\u5927\u5c0f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u6539\u53d8\u573a\u666f\u7684\u4f4d\u7f6e; \u89c6\u56fe\u7684\u5de6\u4e0a\u89d2\u5c06\u663e\u793a\u4e3a\u5728\u8c03\u6574\u5927\u5c0f\u65f6\u88ab\u951a\u5b9a\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002 \\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setResizeAnchor(self.AnchorUnderMouse)\n    '\\n        Rubber\u9009\u62e9\u6a21\u5f0f\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qt.html#ItemSelectionMode-enum\\n        ContainsItemShape            \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemShape          \u9ed8\u8ba4\uff0c\u8f93\u51fa\u5217\u8868\u5305\u542b\u5176\u5f62\u72b6\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        ContainsItemBoundingRect     \u8f93\u51fa\u5217\u8868\u4ec5\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u3002 \u4e0d\u5305\u62ec\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002\\n        IntersectsItemBoundingRect   \u8f93\u51fa\u5217\u8868\u5305\u542b\u8fb9\u754c\u77e9\u5f62\u5b8c\u5168\u5305\u542b\u5728\u9009\u62e9\u533a\u57df\u5185\u7684\u9879\u76ee\u4ee5\u53ca\u4e0e\u533a\u57df\u8f6e\u5ed3\u76f8\u4ea4\u7684\u9879\u76ee\u3002 \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u3002\\n        '\n    self.setRubberBandSelectionMode(Qt.IntersectsItemShape)\n    '\\n        #\u5728\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9a\u4f4d\u89c6\u56fe\u3002QGraphicsView\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\u51b3\u5b9a\u5f53\u53d8\u6362\u77e9\u9635\u6539\u53d8\u65f6\u5982\u4f55\u5728\u89c6\u53e3\u4e2d\u5b9a\u4f4d\u573a\u666f\uff0c\u5e76\u4e14\u89c6\u56fe\u7684\u5750\u6807\u7cfb\u88ab\u53d8\u6362\u3002 \u9ed8\u8ba4\u884c\u4e3aAnchorViewCenter\u786e\u4fdd\u5728\u89c6\u56fe\u4e2d\u5fc3\u7684\u573a\u666f\u70b9\u5728\u53d8\u6362\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff08\u4f8b\u5982\uff0c\u5728\u65cb\u8f6c\u65f6\uff0c\u573a\u666f\u5c06\u56f4\u7ed5\u89c6\u56fe\u7684\u4e2d\u5fc3\u65cb\u8f6c\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u573a\u666f\u7684\u4e00\u90e8\u5206\u53ef\u89c1\uff08\u5373\u6709\u6eda\u52a8\u6761\u65f6\uff09\uff0c\u6b64\u5c5e\u6027\u7684\u6548\u679c\u624d\u660e\u663e\u3002 \u5426\u5219\uff0c\u5982\u679c\u6574\u4e2a\u573a\u666f\u9002\u5408\u89c6\u56fe\uff0cQGraphicsScene\u4f7f\u7528\u89c6\u56fe\u5bf9\u9f50\u5c06\u89c6\u666f\u4e2d\u7684\u573a\u666f\u5b9a\u4f4d\u3002\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportAnchor-enum\\n        NoAnchor                     \u89c6\u56fe\u4fdd\u6301\u573a\u666f\u7684\u4f4d\u7f6e\u4e0d\u53d8\\n        AnchorViewCenter             \u89c6\u56fe\u4e2d\u5fc3\u88ab\u7528\u4f5c\u951a\u70b9\u3002\\n        AnchorUnderMouse             \u9f20\u6807\u5f53\u524d\u4f4d\u7f6e\u88ab\u7528\u4f5c\u951a\u70b9\\n        '\n    self.setTransformationAnchor(self.AnchorUnderMouse)\n    '\\n        #\u53c2\u8003 http://doc.qt.io/qt-5/qgraphicsview.html#ViewportUpdateMode-enum\\n        FullViewportUpdate           \u5f53\u573a\u666f\u7684\u4efb\u4f55\u53ef\u89c1\u90e8\u5206\u6539\u53d8\u6216\u91cd\u65b0\u663e\u793a\u65f6\uff0cQGraphicsView\u5c06\u66f4\u65b0\u6574\u4e2a\u89c6\u53e3\u3002 \u5f53QGraphicsView\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u8ba1\u7b97\u7ed8\u5236\u7684\u5185\u5bb9\uff08\u6bd4\u5982\u91cd\u590d\u66f4\u65b0\u5f88\u591a\u5c0f\u9879\u76ee\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u6700\u5feb\u7684\u3002 \u8fd9\u662f\u4e0d\u652f\u6301\u90e8\u5206\u66f4\u65b0\uff08\u5982QGLWidget\uff09\u7684\u89c6\u53e3\u4ee5\u53ca\u9700\u8981\u7981\u7528\u6eda\u52a8\u4f18\u5316\u7684\u89c6\u53e3\u7684\u9996\u9009\u66f4\u65b0\u6a21\u5f0f\u3002\\n        MinimalViewportUpdate        QGraphicsView\u5c06\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u6700\u5c0f\u89c6\u53e3\u533a\u57df\uff0c\u901a\u8fc7\u907f\u514d\u91cd\u7ed8\u672a\u6539\u53d8\u7684\u533a\u57df\u6765\u6700\u5c0f\u5316\u7ed8\u56fe\u65f6\u95f4\u3002 \u8fd9\u662fQGraphicsView\u7684\u9ed8\u8ba4\u6a21\u5f0f\u3002 \u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u822c\u7684\u6700\u4f73\u6027\u80fd\uff0c\u4f46\u5982\u679c\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5c0f\u7684\u53ef\u89c1\u53d8\u5316\uff0cQGraphicsView\u6700\u7ec8\u53ef\u80fd\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u6765\u5bfb\u627e\u6700\u5c0f\u5316\u7684\u65b9\u6cd5\u3002\\n        SmartViewportUpdate          QGraphicsView\u5c06\u5c1d\u8bd5\u901a\u8fc7\u5206\u6790\u9700\u8981\u91cd\u7ed8\u7684\u533a\u57df\u6765\u627e\u5230\u6700\u4f73\u7684\u66f4\u65b0\u6a21\u5f0f\u3002\\n        BoundingRectViewportUpdate   \u89c6\u53e3\u4e2d\u6240\u6709\u66f4\u6539\u7684\u8fb9\u754c\u77e9\u5f62\u5c06\u88ab\u91cd\u7ed8\u3002 \u8fd9\u79cd\u6a21\u5f0f\u7684\u4f18\u70b9\u662f\uff0cQGraphicsView\u53ea\u641c\u7d22\u4e00\u4e2a\u533a\u57df\u7684\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u82b1\u5728\u786e\u5b9a\u9700\u8981\u91cd\u7ed8\u7684\u65f6\u95f4\u3002 \u7f3a\u70b9\u662f\u8fd8\u6ca1\u6709\u6539\u53d8\u7684\u5730\u65b9\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u3002\\n        NoViewportUpdate             \u5f53\u573a\u666f\u6539\u53d8\u65f6\uff0cQGraphicsView\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\u5b83\u7684\u89c6\u53e3\u3002 \u9884\u8ba1\u7528\u6237\u5c06\u63a7\u5236\u6240\u6709\u66f4\u65b0\u3002 \u6b64\u6a21\u5f0f\u7981\u7528QGraphicsView\u4e2d\u7684\u6240\u6709\uff08\u53ef\u80fd\u8f83\u6162\uff09\u9879\u76ee\u53ef\u89c1\u6027\u6d4b\u8bd5\uff0c\u9002\u7528\u4e8e\u8981\u6c42\u56fa\u5b9a\u5e27\u901f\u7387\u6216\u89c6\u53e3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5728\u5916\u90e8\u8fdb\u884c\u66f4\u65b0\u7684\u573a\u666f\u3002\\n        '\n    self.setViewportUpdateMode(self.SmartViewportUpdate)\n    self._scene = QGraphicsScene(-180, -90, 360, 180, self)\n    self.setScene(self._scene)\n    self.initMap()"
        ]
    },
    {
        "func_name": "wheelEvent",
        "original": "def wheelEvent(self, event):\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)",
        "mutated": [
            "def wheelEvent(self, event):\n    if False:\n        i = 10\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)",
            "def wheelEvent(self, event):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)",
            "def wheelEvent(self, event):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)",
            "def wheelEvent(self, event):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)",
            "def wheelEvent(self, event):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if event.modifiers() & Qt.ControlModifier:\n        self.scaleView(math.pow(2.0, -event.angleDelta().y() / 240.0))\n        return event.accept()\n    super(GraphicsView, self).wheelEvent(event)"
        ]
    },
    {
        "func_name": "scaleView",
        "original": "def scaleView(self, scaleFactor):\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)",
        "mutated": [
            "def scaleView(self, scaleFactor):\n    if False:\n        i = 10\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)",
            "def scaleView(self, scaleFactor):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)",
            "def scaleView(self, scaleFactor):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)",
            "def scaleView(self, scaleFactor):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)",
            "def scaleView(self, scaleFactor):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    factor = self.transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width()\n    if factor < 0.07 or factor > 100:\n        return\n    self.scale(scaleFactor, scaleFactor)"
        ]
    },
    {
        "func_name": "initMap",
        "original": "def initMap(self):\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)",
        "mutated": [
            "def initMap(self):\n    if False:\n        i = 10\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)",
            "def initMap(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)",
            "def initMap(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)",
            "def initMap(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)",
            "def initMap(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    features = json.load(open('Data/world.json', encoding='utf8')).get('features')\n    for feature in features:\n        geometry = feature.get('geometry')\n        if not geometry:\n            continue\n        _type = geometry.get('type')\n        coordinates = geometry.get('coordinates')\n        for coordinate in coordinates:\n            if _type == 'Polygon':\n                polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in coordinate])\n                item = QGraphicsPolygonItem(polygon)\n                item.setPen(QPen(self.borderColor, 0))\n                item.setBrush(QBrush(self.backgroundColor))\n                item.setPos(0, 0)\n                self._scene.addItem(item)\n            elif _type == 'MultiPolygon':\n                for _coordinate in coordinate:\n                    polygon = QPolygonF([QPointF(latitude, -longitude) for (latitude, longitude) in _coordinate])\n                    item = QGraphicsPolygonItem(polygon)\n                    item.setPen(QPen(self.borderColor, 0))\n                    item.setBrush(QBrush(self.backgroundColor))\n                    item.setPos(0, 0)\n                    self._scene.addItem(item)"
        ]
    }
]