[
    {
        "func_name": "use_of_mako_templates",
        "original": "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")",
        "mutated": [
            "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if False:\n        i = 10\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")",
            "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")",
            "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")",
            "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")",
            "@test.checks('Call')\n@test.test_id('B702')\ndef use_of_mako_templates(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if isinstance(context.call_function_name_qual, str):\n        qualname_list = context.call_function_name_qual.split('.')\n        func = qualname_list[-1]\n        if 'mako' in qualname_list and func == 'Template':\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.BASIC_XSS, text=\"Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.\")"
        ]
    }
]