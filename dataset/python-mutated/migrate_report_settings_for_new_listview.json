[
    {
        "func_name": "execute",
        "original": "def execute():\n    \"\"\"\n\tMigrate JSON field of Report according to changes in New ListView\n\tRename key columns to fields\n\tRename key add_total_row to add_totals_row\n\tConvert sort_by and sort_order to order_by\n\t\"\"\"\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))",
        "mutated": [
            "def execute():\n    if False:\n        i = 10\n    '\\n\\tMigrate JSON field of Report according to changes in New ListView\\n\\tRename key columns to fields\\n\\tRename key add_total_row to add_totals_row\\n\\tConvert sort_by and sort_order to order_by\\n\\t'\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))",
            "def execute():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n\\tMigrate JSON field of Report according to changes in New ListView\\n\\tRename key columns to fields\\n\\tRename key add_total_row to add_totals_row\\n\\tConvert sort_by and sort_order to order_by\\n\\t'\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))",
            "def execute():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n\\tMigrate JSON field of Report according to changes in New ListView\\n\\tRename key columns to fields\\n\\tRename key add_total_row to add_totals_row\\n\\tConvert sort_by and sort_order to order_by\\n\\t'\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))",
            "def execute():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n\\tMigrate JSON field of Report according to changes in New ListView\\n\\tRename key columns to fields\\n\\tRename key add_total_row to add_totals_row\\n\\tConvert sort_by and sort_order to order_by\\n\\t'\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))",
            "def execute():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n\\tMigrate JSON field of Report according to changes in New ListView\\n\\tRename key columns to fields\\n\\tRename key add_total_row to add_totals_row\\n\\tConvert sort_by and sort_order to order_by\\n\\t'\n    reports = frappe.get_all('Report', {'report_type': 'Report Builder'})\n    for report_name in reports:\n        settings = frappe.db.get_value('Report', report_name, 'json')\n        if not settings:\n            continue\n        settings = frappe._dict(json.loads(settings))\n        settings.fields = settings.columns or []\n        settings.pop('columns', None)\n        settings.order_by = (settings.sort_by or 'modified') + ' ' + (settings.order_by or 'desc')\n        settings.add_totals_row = settings.add_total_row\n        settings.pop('add_total_row', None)\n        frappe.db.set_value('Report', report_name, 'json', json.dumps(settings))"
        ]
    }
]