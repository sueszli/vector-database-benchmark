[
    {
        "func_name": "table_example",
        "original": "def table_example():\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()",
        "mutated": [
            "def table_example():\n    if False:\n        i = 10\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()",
            "def table_example():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()",
            "def table_example():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()",
            "def table_example():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()",
            "def table_example():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    filename = sg.PopupGetFile('Get required file', no_window=True, file_types=(('CSV Files', '*.csv'),))\n    data = []\n    header_list = []\n    with open(filename, 'r') as infile:\n        reader = csv.reader(infile)\n        for i in range(1):\n            header = next(reader)\n            data = list(reader)\n    header = header + ['%', 'Pts']\n    for i in range(len(data)):\n        percent = int(data[i][5]) / int(data[i][6]) * 100\n        data[i] = data[i] + [percent]\n        pts = int(data[i][2]) * 4 + int(data[i][4]) * 2\n        data[i] = data[i] + [pts]\n    data.sort(key=operator.itemgetter(7), reverse=True)\n    data.sort(key=operator.itemgetter(8), reverse=True)\n    for i in range(len(data)):\n        data[i][7] = str('{:.2f}'.format(data[i][7]))\n    col_layout = [[sg.Table(values=data, headings=header, col_widths=(16, 3, 3, 3, 3, 6, 6, 7, 4), auto_size_columns=False, max_col_width=30, justification='right', size=(None, len(data)))]]\n    layout = [[sg.Column(col_layout, size=(480, 360), scrollable=True)]]\n    window = sg.Window('Ladder', location=(350, 310), grab_anywhere=False).Layout(layout)\n    (b, v) = window.Read()"
        ]
    }
]