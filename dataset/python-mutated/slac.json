[
    {
        "func_name": "run",
        "original": "def run(config):\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)",
        "mutated": [
            "def run(config):\n    if False:\n        i = 10\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)",
            "def run(config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)",
            "def run(config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)",
            "def run(config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)",
            "def run(config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print('slac non-rigid optimization.')\n    o3d.utility.set_verbosity_level(o3d.utility.VerbosityLevel.Debug)\n    path_dataset = config['path_dataset']\n    ply_file_names = get_file_list(join(config['path_dataset'], config['folder_fragment']), '.ply')\n    if len(ply_file_names) == 0:\n        raise RuntimeError('No fragment found in {}, please make sure the reconstruction_system has finished running on the dataset.'.format(join(config['path_dataset'], config['folder_fragment'])))\n    pose_graph_fragment = o3d.io.read_pose_graph(join(path_dataset, config['template_refined_posegraph_optimized']))\n    slac_params = o3d.t.pipelines.slac.slac_optimizer_params(max_iterations=config['max_iterations'], voxel_size=config['voxel_size'], distance_threshold=config['distance_threshold'], fitness_threshold=config['fitness_threshold'], regularizer_weight=config['regularizer_weight'], device=o3d.core.Device(str(config['device'])), slac_folder=join(path_dataset, config['folder_slac']))\n    debug_option = o3d.t.pipelines.slac.slac_debug_option(False, 0)\n    pose_graph_updated = o3d.pipelines.registration.PoseGraph()\n    if config['method'] == 'rigid':\n        pose_graph_updated = o3d.t.pipelines.slac.run_rigid_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n    elif config['method'] == 'slac':\n        (pose_graph_updated, ctrl_grid) = o3d.t.pipelines.slac.run_slac_optimizer_for_fragments(ply_file_names, pose_graph_fragment, slac_params, debug_option)\n        hashmap = ctrl_grid.get_hashmap()\n        active_buf_indices = hashmap.active_buf_indices().to(o3d.core.Dtype.Int64)\n        key_tensor = hashmap.key_tensor()[active_buf_indices]\n        key_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_keys.npy'))\n        value_tensor = hashmap.value_tensor()[active_buf_indices]\n        value_tensor.save(join(slac_params.get_subfolder_name(), 'ctr_grid_values.npy'))\n    else:\n        raise RuntimeError('Requested optimization method {}, is not implemented. Implemented methods includes slac and rigid.'.format(config['method']))\n    o3d.io.write_pose_graph(join(slac_params.get_subfolder_name(), config['template_optimized_posegraph_slac']), pose_graph_updated)\n    fragment_folder = join(path_dataset, config['folder_fragment'])\n    params = []\n    for i in range(len(pose_graph_updated.nodes)):\n        fragment_pose_graph = o3d.io.read_pose_graph(join(fragment_folder, 'fragment_optimized_%03d.json' % i))\n        for node in fragment_pose_graph.nodes:\n            pose = np.dot(pose_graph_updated.nodes[i].pose, node.pose)\n            param = o3d.camera.PinholeCameraParameters()\n            param.extrinsic = np.linalg.inv(pose)\n            params.append(param)\n    trajectory = o3d.camera.PinholeCameraTrajectory()\n    trajectory.parameters = params\n    o3d.io.write_pinhole_camera_trajectory(slac_params.get_subfolder_name() + '/optimized_trajectory_' + str(config['method']) + '.log', trajectory)"
        ]
    }
]