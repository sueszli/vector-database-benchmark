[
    {
        "func_name": "save",
        "original": "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    \"\"\"Save the object.\n\n        :param category: The category to save to. If the authenticated user does not\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\n\n        Example usage:\n\n        .. code-block:: python\n\n            submission = reddit.submission(\"5or86n\")\n            submission.save(category=\"view later\")\n\n            comment = reddit.comment(\"dxolpyc\")\n            comment.save()\n\n        .. seealso::\n\n            :meth:`.unsave`\n\n        \"\"\"\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})",
        "mutated": [
            "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    if False:\n        i = 10\n    'Save the object.\\n\\n        :param category: The category to save to. If the authenticated user does not\\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.save(category=\"view later\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.save()\\n\\n        .. seealso::\\n\\n            :meth:`.unsave`\\n\\n        '\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})",
            "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Save the object.\\n\\n        :param category: The category to save to. If the authenticated user does not\\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.save(category=\"view later\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.save()\\n\\n        .. seealso::\\n\\n            :meth:`.unsave`\\n\\n        '\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})",
            "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Save the object.\\n\\n        :param category: The category to save to. If the authenticated user does not\\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.save(category=\"view later\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.save()\\n\\n        .. seealso::\\n\\n            :meth:`.unsave`\\n\\n        '\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})",
            "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Save the object.\\n\\n        :param category: The category to save to. If the authenticated user does not\\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.save(category=\"view later\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.save()\\n\\n        .. seealso::\\n\\n            :meth:`.unsave`\\n\\n        '\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})",
            "@_deprecate_args('category')\ndef save(self, *, category: str | None=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Save the object.\\n\\n        :param category: The category to save to. If the authenticated user does not\\n            have Reddit Premium this value is ignored by Reddit (default: ``None``).\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.save(category=\"view later\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.save()\\n\\n        .. seealso::\\n\\n            :meth:`.unsave`\\n\\n        '\n    self._reddit.post(API_PATH['save'], data={'category': category, 'id': self.fullname})"
        ]
    },
    {
        "func_name": "unsave",
        "original": "def unsave(self):\n    \"\"\"Unsave the object.\n\n        Example usage:\n\n        .. code-block:: python\n\n            submission = reddit.submission(\"5or86n\")\n            submission.unsave()\n\n            comment = reddit.comment(\"dxolpyc\")\n            comment.unsave()\n\n        .. seealso::\n\n            :meth:`.save`\n\n        \"\"\"\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})",
        "mutated": [
            "def unsave(self):\n    if False:\n        i = 10\n    'Unsave the object.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.unsave()\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.unsave()\\n\\n        .. seealso::\\n\\n            :meth:`.save`\\n\\n        '\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})",
            "def unsave(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Unsave the object.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.unsave()\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.unsave()\\n\\n        .. seealso::\\n\\n            :meth:`.save`\\n\\n        '\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})",
            "def unsave(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Unsave the object.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.unsave()\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.unsave()\\n\\n        .. seealso::\\n\\n            :meth:`.save`\\n\\n        '\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})",
            "def unsave(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Unsave the object.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.unsave()\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.unsave()\\n\\n        .. seealso::\\n\\n            :meth:`.save`\\n\\n        '\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})",
            "def unsave(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Unsave the object.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.unsave()\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.unsave()\\n\\n        .. seealso::\\n\\n            :meth:`.save`\\n\\n        '\n    self._reddit.post(API_PATH['unsave'], data={'id': self.fullname})"
        ]
    }
]