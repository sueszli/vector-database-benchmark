[
    {
        "func_name": "blink_1hz",
        "original": "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')",
        "mutated": [
            "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    if False:\n        i = 10\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')",
            "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')",
            "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')",
            "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')",
            "@rp2.asm_pio(set_init=rp2.PIO.OUT_LOW)\ndef blink_1hz():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    irq(rel(0))\n    set(pins, 1)\n    set(x, 31)[5]\n    label('delay_high')\n    nop()[29]\n    jmp(x_dec, 'delay_high')\n    nop()\n    set(pins, 0)\n    set(x, 31)[5]\n    label('delay_low')\n    nop()[29]\n    jmp(x_dec, 'delay_low')"
        ]
    }
]