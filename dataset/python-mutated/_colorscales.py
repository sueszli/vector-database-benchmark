import _plotly_utils.basevalidators

class ColorscalesValidator(_plotly_utils.basevalidators.CompoundArrayValidator):

    def __init__(self, plotly_name='colorscales', parent_name='sankey.link', **kwargs):
        if False:
            while True:
                i = 10
        super(ColorscalesValidator, self).__init__(plotly_name=plotly_name, parent_name=parent_name, data_class_str=kwargs.pop('data_class_str', 'Colorscale'), data_docs=kwargs.pop('data_docs', "\n            cmax\n                Sets the upper bound of the color domain.\n            cmin\n                Sets the lower bound of the color domain.\n            colorscale\n                Sets the colorscale. The colorscale must be an\n                array containing arrays mapping a normalized\n                value to an rgb, rgba, hex, hsl, hsv, or named\n                color string. At minimum, a mapping for the\n                lowest (0) and highest (1) values are required.\n                For example, `[[0, 'rgb(0,0,255)'], [1,\n                'rgb(255,0,0)']]`. To control the bounds of the\n                colorscale in color space, use `cmin` and\n                `cmax`. Alternatively, `colorscale` may be a\n                palette name string of the following list: Blac\n                kbody,Bluered,Blues,Cividis,Earth,Electric,Gree\n                ns,Greys,Hot,Jet,Picnic,Portland,Rainbow,RdBu,R\n                eds,Viridis,YlGnBu,YlOrRd.\n            label\n                The label of the links to color based on their\n                concentration within a flow.\n            name\n                When used in a template, named items are\n                created in the output figure in addition to any\n                items the figure already has in this array. You\n                can modify these items in the output figure by\n                making your own item with `templateitemname`\n                matching this `name` alongside your\n                modifications (including `visible: false` or\n                `enabled: false` to hide it). Has no effect\n                outside of a template.\n            templateitemname\n                Used to refer to a named item in this array in\n                the template. Named items from the template\n                will be created even without a matching item in\n                the input figure, but you can modify one by\n                making an item with `templateitemname` matching\n                its `name`, alongside your modifications\n                (including `visible: false` or `enabled: false`\n                to hide it). If there is no template or no\n                matching item, this item will be hidden unless\n                you explicitly show it with `visible: true`.\n"), **kwargs)