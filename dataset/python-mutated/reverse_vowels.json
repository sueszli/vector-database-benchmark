[
    {
        "func_name": "reverse_vowels",
        "original": "def reverse_vowels(sentence):\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)",
        "mutated": [
            "def reverse_vowels(sentence):\n    if False:\n        i = 10\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)",
            "def reverse_vowels(sentence):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)",
            "def reverse_vowels(sentence):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)",
            "def reverse_vowels(sentence):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)",
            "def reverse_vowels(sentence):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    arr = [c for c in sentence]\n    vowels = {'a': True, 'A': True, 'e': True, 'E': True, 'i': True, 'I': True, 'o': True, 'O': True, 'u': True, 'U': True}\n    left = 0\n    right = len(arr) - 1\n    while True:\n        while left < right:\n            if arr[left] in vowels:\n                break\n            left += 1\n        while left < right:\n            if arr[right] in vowels:\n                break\n            right -= 1\n        if left >= right:\n            break\n        (arr[left], arr[right]) = (arr[right], arr[left])\n        left += 1\n        right -= 1\n    return ''.join(arr)"
        ]
    }
]