[
    {
        "func_name": "yaml_load",
        "original": "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)",
        "mutated": [
            "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    if False:\n        i = 10\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)",
            "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)",
            "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)",
            "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)",
            "@test.test_id('B506')\n@test.checks('Call')\ndef yaml_load(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    imported = context.is_module_imported_exact('yaml')\n    qualname = context.call_function_name_qual\n    if not imported and isinstance(qualname, str):\n        return\n    qualname_list = qualname.split('.')\n    func = qualname_list[-1]\n    if all(['yaml' in qualname_list, func == 'load', not context.check_call_arg_value('Loader', 'SafeLoader'), not context.check_call_arg_value('Loader', 'CSafeLoader'), not context.get_call_arg_at_position(1) == 'SafeLoader', not context.get_call_arg_at_position(1) == 'CSafeLoader']):\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.IMPROPER_INPUT_VALIDATION, text='Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().', lineno=context.node.lineno)"
        ]
    }
]