[
    {
        "func_name": "handle_free",
        "original": "def handle_free(self, pyfile):\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)",
        "mutated": [
            "def handle_free(self, pyfile):\n    if False:\n        i = 10\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)",
            "def handle_free(self, pyfile):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)",
            "def handle_free(self, pyfile):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)",
            "def handle_free(self, pyfile):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)",
            "def handle_free(self, pyfile):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    s = [x for x in re.findall('<script[\\\\s\\\\S]*?>([\\\\s\\\\S]*?)</script>', self.data, re.I) if 'function DeObfuscate_String_and_Create_Form_With_Mhoa_URL' in x]\n    if len(s) != 1:\n        self.fail(self._('deobfuscate function not found'))\n    init = 'window = {\\n                    innerWidth: 1280,\\n                    innerHeight: 567,\\n                  };\\n                  var document = {\\n                    documentElement: {clientWidth: 1280, clientHeight: 567},\\n                    body: {clientWidth: 1280, clientHeight: 567}\\n                  };'\n    deobfuscate_script = init + s[0]\n    deobfuscate_script = re.sub('if\\\\s*\\\\(width_trinh_duyet[\\\\s\\\\S]*', 'return JSON.stringify({idurl:url_da_encrypt, idfilename:FileName, idfilesize:FileSize})};', deobfuscate_script)\n    m = re.search('if \\\\(seconds == 0\\\\)[\\\\s\\\\S]+?(DeObfuscate_String_and_Create_Form_With_Mhoa_URL\\\\(.+?\\\\);)', self.data)\n    if m is None:\n        self.fail(self._('deobfuscate function call not found'))\n    deobfuscate_script += m.group(1)\n    json_data = eval_js(deobfuscate_script)\n    if not json_data.startswith('{'):\n        self.fail(self._('Unexpected response, expected JSON data'))\n    params = json.loads(json_data)\n    self.data = self.load('https://download.megaup.net/', get=params)\n    m = re.search(self.LINK_PATTERN, self.data)\n    if m is not None:\n        self.link = m.group(1)"
        ]
    }
]