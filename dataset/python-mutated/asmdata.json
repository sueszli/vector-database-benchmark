[
    {
        "func_name": "ret_num",
        "original": "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)",
        "mutated": [
            "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    if False:\n        i = 10\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)",
            "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)",
            "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)",
            "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)",
            "@micropython.asm_thumb\ndef ret_num(r0) -> uint:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    lsl(r0, r0, 2)\n    mov(r1, pc)\n    add(r0, r0, r1)\n    ldr(r0, [r0, 4])\n    b(HERE)\n    data(4, 305419896, 536870912, 1073741824, 2147483647 + 1, (1 << 32) - 2)\n    label(HERE)"
        ]
    }
]