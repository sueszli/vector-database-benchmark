[
    {
        "func_name": "tf_example_from_annotations_data_frame",
        "original": "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    \"\"\"Populates a TF Example message with image annotations from a data frame.\n\n  Args:\n    annotations_data_frame: Data frame containing the annotations for a single\n      image.\n    label_map: String to integer label map.\n    encoded_image: The encoded image string\n\n  Returns:\n    The populated TF Example, if the label of at least one object is present in\n    label_map. Otherwise, returns None.\n  \"\"\"\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))",
        "mutated": [
            "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    if False:\n        i = 10\n    'Populates a TF Example message with image annotations from a data frame.\\n\\n  Args:\\n    annotations_data_frame: Data frame containing the annotations for a single\\n      image.\\n    label_map: String to integer label map.\\n    encoded_image: The encoded image string\\n\\n  Returns:\\n    The populated TF Example, if the label of at least one object is present in\\n    label_map. Otherwise, returns None.\\n  '\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))",
            "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Populates a TF Example message with image annotations from a data frame.\\n\\n  Args:\\n    annotations_data_frame: Data frame containing the annotations for a single\\n      image.\\n    label_map: String to integer label map.\\n    encoded_image: The encoded image string\\n\\n  Returns:\\n    The populated TF Example, if the label of at least one object is present in\\n    label_map. Otherwise, returns None.\\n  '\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))",
            "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Populates a TF Example message with image annotations from a data frame.\\n\\n  Args:\\n    annotations_data_frame: Data frame containing the annotations for a single\\n      image.\\n    label_map: String to integer label map.\\n    encoded_image: The encoded image string\\n\\n  Returns:\\n    The populated TF Example, if the label of at least one object is present in\\n    label_map. Otherwise, returns None.\\n  '\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))",
            "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Populates a TF Example message with image annotations from a data frame.\\n\\n  Args:\\n    annotations_data_frame: Data frame containing the annotations for a single\\n      image.\\n    label_map: String to integer label map.\\n    encoded_image: The encoded image string\\n\\n  Returns:\\n    The populated TF Example, if the label of at least one object is present in\\n    label_map. Otherwise, returns None.\\n  '\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))",
            "def tf_example_from_annotations_data_frame(annotations_data_frame, label_map, encoded_image):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Populates a TF Example message with image annotations from a data frame.\\n\\n  Args:\\n    annotations_data_frame: Data frame containing the annotations for a single\\n      image.\\n    label_map: String to integer label map.\\n    encoded_image: The encoded image string\\n\\n  Returns:\\n    The populated TF Example, if the label of at least one object is present in\\n    label_map. Otherwise, returns None.\\n  '\n    filtered_data_frame = annotations_data_frame[annotations_data_frame.LabelName.isin(label_map)]\n    filtered_data_frame_boxes = filtered_data_frame[~filtered_data_frame.YMin.isnull()]\n    filtered_data_frame_labels = filtered_data_frame[filtered_data_frame.YMin.isnull()]\n    image_id = annotations_data_frame.ImageID.iloc[0]\n    feature_map = {standard_fields.TfExampleFields.object_bbox_ymin: dataset_util.float_list_feature(filtered_data_frame_boxes.YMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmin: dataset_util.float_list_feature(filtered_data_frame_boxes.XMin.as_matrix()), standard_fields.TfExampleFields.object_bbox_ymax: dataset_util.float_list_feature(filtered_data_frame_boxes.YMax.as_matrix()), standard_fields.TfExampleFields.object_bbox_xmax: dataset_util.float_list_feature(filtered_data_frame_boxes.XMax.as_matrix()), standard_fields.TfExampleFields.object_class_text: dataset_util.bytes_list_feature(filtered_data_frame_boxes.LabelName.as_matrix()), standard_fields.TfExampleFields.object_class_label: dataset_util.int64_list_feature(filtered_data_frame_boxes.LabelName.map(lambda x: label_map[x]).as_matrix()), standard_fields.TfExampleFields.filename: dataset_util.bytes_feature('{}.jpg'.format(image_id)), standard_fields.TfExampleFields.source_id: dataset_util.bytes_feature(image_id), standard_fields.TfExampleFields.image_encoded: dataset_util.bytes_feature(encoded_image)}\n    if 'IsGroupOf' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_group_of] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsGroupOf.as_matrix().astype(int))\n    if 'IsOccluded' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_occluded] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsOccluded.as_matrix().astype(int))\n    if 'IsTruncated' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_truncated] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsTruncated.as_matrix().astype(int))\n    if 'IsDepiction' in filtered_data_frame.columns:\n        feature_map[standard_fields.TfExampleFields.object_depiction] = dataset_util.int64_list_feature(filtered_data_frame_boxes.IsDepiction.as_matrix().astype(int))\n    if 'ConfidenceImageLabel' in filtered_data_frame_labels.columns:\n        feature_map[standard_fields.TfExampleFields.image_class_label] = dataset_util.int64_list_feature(filtered_data_frame_labels.LabelName.map(lambda x: label_map[x]).as_matrix())\n        feature_map[standard_fields.TfExampleFields.image_class_text] = (dataset_util.bytes_list_feature(filtered_data_frame_labels.LabelName.as_matrix()),)\n    return tf.train.Example(features=tf.train.Features(feature=feature_map))"
        ]
    }
]