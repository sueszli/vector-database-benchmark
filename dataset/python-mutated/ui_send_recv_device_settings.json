[
    {
        "func_name": "setupUi",
        "original": "def setupUi(self, FormDeviceSettings):\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)",
        "mutated": [
            "def setupUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)",
            "def setupUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)",
            "def setupUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)",
            "def setupUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)",
            "def setupUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    FormDeviceSettings.setObjectName('FormDeviceSettings')\n    FormDeviceSettings.resize(859, 741)\n    self.verticalLayout = QtWidgets.QVBoxLayout(FormDeviceSettings)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.groupBoxDeviceSettings = QtWidgets.QGroupBox(FormDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.groupBoxDeviceSettings.setFont(font)\n    self.groupBoxDeviceSettings.setStyleSheet('QGroupBox\\n{\\nborder: none;\\n}\\n\\nQGroupBox::title {\\n    subcontrol-origin: margin;\\n}\\nQGroupBox::indicator:unchecked {\\n image: url(:/icons/icons/collapse.svg)\\n}\\nQGroupBox::indicator:checked {\\n image: url(:/icons/icons/uncollapse.svg)\\n}')\n    self.groupBoxDeviceSettings.setFlat(True)\n    self.groupBoxDeviceSettings.setCheckable(True)\n    self.groupBoxDeviceSettings.setObjectName('groupBoxDeviceSettings')\n    self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBoxDeviceSettings)\n    self.gridLayout_6.setContentsMargins(-1, 15, -1, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.frame_2 = QtWidgets.QFrame(self.groupBoxDeviceSettings)\n    font = QtGui.QFont()\n    font.setBold(False)\n    font.setWeight(50)\n    self.frame_2.setFont(font)\n    self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.frame_2.setLineWidth(0)\n    self.frame_2.setObjectName('frame_2')\n    self.gridLayout = QtWidgets.QGridLayout(self.frame_2)\n    self.gridLayout.setObjectName('gridLayout')\n    self.labelAntenna = QtWidgets.QLabel(self.frame_2)\n    self.labelAntenna.setObjectName('labelAntenna')\n    self.gridLayout.addWidget(self.labelAntenna, 4, 0, 1, 1)\n    self.labelBasebandGain = QtWidgets.QLabel(self.frame_2)\n    self.labelBasebandGain.setObjectName('labelBasebandGain')\n    self.gridLayout.addWidget(self.labelBasebandGain, 12, 0, 1, 1)\n    self.lineEditSubdevice = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditSubdevice.setObjectName('lineEditSubdevice')\n    self.gridLayout.addWidget(self.lineEditSubdevice, 2, 1, 1, 1)\n    self.spinBoxBandwidth = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxBandwidth.setDecimals(10)\n    self.spinBoxBandwidth.setMinimum(0.001)\n    self.spinBoxBandwidth.setMaximum(1000000000000.0)\n    self.spinBoxBandwidth.setObjectName('spinBoxBandwidth')\n    self.gridLayout.addWidget(self.spinBoxBandwidth, 9, 1, 1, 1)\n    self.labelSubdevice = QtWidgets.QLabel(self.frame_2)\n    self.labelSubdevice.setObjectName('labelSubdevice')\n    self.gridLayout.addWidget(self.labelSubdevice, 2, 0, 1, 1)\n    self.spinBoxFreq = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxFreq.setDecimals(10)\n    self.spinBoxFreq.setMinimum(0.001)\n    self.spinBoxFreq.setMaximum(1000000000000.0)\n    self.spinBoxFreq.setProperty('value', 433920000.0)\n    self.spinBoxFreq.setObjectName('spinBoxFreq')\n    self.gridLayout.addWidget(self.spinBoxFreq, 7, 1, 1, 1)\n    self.lineEditIP = QtWidgets.QLineEdit(self.frame_2)\n    self.lineEditIP.setObjectName('lineEditIP')\n    self.gridLayout.addWidget(self.lineEditIP, 5, 1, 1, 1)\n    self.btnRefreshDeviceIdentifier = QtWidgets.QToolButton(self.frame_2)\n    icon = QtGui.QIcon.fromTheme('view-refresh')\n    self.btnRefreshDeviceIdentifier.setIcon(icon)\n    self.btnRefreshDeviceIdentifier.setObjectName('btnRefreshDeviceIdentifier')\n    self.gridLayout.addWidget(self.btnRefreshDeviceIdentifier, 1, 2, 1, 1)\n    self.labelDirectSampling = QtWidgets.QLabel(self.frame_2)\n    self.labelDirectSampling.setObjectName('labelDirectSampling')\n    self.gridLayout.addWidget(self.labelDirectSampling, 15, 0, 1, 1)\n    self.labelBandwidth = QtWidgets.QLabel(self.frame_2)\n    self.labelBandwidth.setObjectName('labelBandwidth')\n    self.gridLayout.addWidget(self.labelBandwidth, 9, 0, 1, 1)\n    self.gridLayout_5 = QtWidgets.QGridLayout()\n    self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.sliderGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderGain.setMaximum(100)\n    self.sliderGain.setSingleStep(1)\n    self.sliderGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderGain.setObjectName('sliderGain')\n    self.gridLayout_5.addWidget(self.sliderGain, 0, 0, 1, 1)\n    self.spinBoxGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxGain.setSizePolicy(sizePolicy)\n    self.spinBoxGain.setMinimum(0)\n    self.spinBoxGain.setMaximum(99)\n    self.spinBoxGain.setProperty('value', 40)\n    self.spinBoxGain.setObjectName('spinBoxGain')\n    self.gridLayout_5.addWidget(self.spinBoxGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_5, 10, 1, 1, 1)\n    self.labelSampleRate = QtWidgets.QLabel(self.frame_2)\n    self.labelSampleRate.setObjectName('labelSampleRate')\n    self.gridLayout.addWidget(self.labelSampleRate, 8, 0, 1, 1)\n    self.gridLayout_7 = QtWidgets.QGridLayout()\n    self.gridLayout_7.setObjectName('gridLayout_7')\n    self.sliderIFGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderIFGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderIFGain.setObjectName('sliderIFGain')\n    self.gridLayout_7.addWidget(self.sliderIFGain, 0, 0, 1, 1)\n    self.spinBoxIFGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxIFGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxIFGain.setSizePolicy(sizePolicy)\n    self.spinBoxIFGain.setObjectName('spinBoxIFGain')\n    self.gridLayout_7.addWidget(self.spinBoxIFGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_7, 11, 1, 1, 1)\n    self.labelFreqCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelFreqCorrection.setObjectName('labelFreqCorrection')\n    self.gridLayout.addWidget(self.labelFreqCorrection, 13, 0, 1, 1)\n    self.comboBoxDeviceIdentifier = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDeviceIdentifier.setEditable(True)\n    self.comboBoxDeviceIdentifier.setInsertPolicy(QtWidgets.QComboBox.NoInsert)\n    self.comboBoxDeviceIdentifier.setObjectName('comboBoxDeviceIdentifier')\n    self.gridLayout.addWidget(self.comboBoxDeviceIdentifier, 1, 1, 1, 1)\n    self.cbDevice = QtWidgets.QComboBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbDevice.sizePolicy().hasHeightForWidth())\n    self.cbDevice.setSizePolicy(sizePolicy)\n    self.cbDevice.setObjectName('cbDevice')\n    self.cbDevice.addItem('')\n    self.cbDevice.addItem('')\n    self.gridLayout.addWidget(self.cbDevice, 0, 1, 1, 1)\n    self.spinBoxNRepeat = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxNRepeat.setMaximum(999999999)\n    self.spinBoxNRepeat.setObjectName('spinBoxNRepeat')\n    self.gridLayout.addWidget(self.spinBoxNRepeat, 16, 1, 1, 1)\n    self.gridLayout_8 = QtWidgets.QGridLayout()\n    self.gridLayout_8.setObjectName('gridLayout_8')\n    self.sliderBasebandGain = QtWidgets.QSlider(self.frame_2)\n    self.sliderBasebandGain.setSliderPosition(0)\n    self.sliderBasebandGain.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderBasebandGain.setInvertedAppearance(False)\n    self.sliderBasebandGain.setInvertedControls(False)\n    self.sliderBasebandGain.setTickPosition(QtWidgets.QSlider.NoTicks)\n    self.sliderBasebandGain.setTickInterval(0)\n    self.sliderBasebandGain.setObjectName('sliderBasebandGain')\n    self.gridLayout_8.addWidget(self.sliderBasebandGain, 0, 0, 1, 1)\n    self.spinBoxBasebandGain = QtWidgets.QSpinBox(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.spinBoxBasebandGain.sizePolicy().hasHeightForWidth())\n    self.spinBoxBasebandGain.setSizePolicy(sizePolicy)\n    self.spinBoxBasebandGain.setObjectName('spinBoxBasebandGain')\n    self.gridLayout_8.addWidget(self.spinBoxBasebandGain, 0, 1, 1, 1)\n    self.gridLayout.addLayout(self.gridLayout_8, 12, 1, 1, 1)\n    self.labelPort = QtWidgets.QLabel(self.frame_2)\n    self.labelPort.setObjectName('labelPort')\n    self.gridLayout.addWidget(self.labelPort, 6, 0, 1, 1)\n    self.spinBoxSampleRate = KillerDoubleSpinBox(self.frame_2)\n    self.spinBoxSampleRate.setDecimals(10)\n    self.spinBoxSampleRate.setMinimum(0.001)\n    self.spinBoxSampleRate.setMaximum(1000000000000.0)\n    self.spinBoxSampleRate.setObjectName('spinBoxSampleRate')\n    self.gridLayout.addWidget(self.spinBoxSampleRate, 8, 1, 1, 1)\n    self.labelGain = QtWidgets.QLabel(self.frame_2)\n    self.labelGain.setObjectName('labelGain')\n    self.gridLayout.addWidget(self.labelGain, 10, 0, 1, 1)\n    self.checkBoxDCCorrection = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxDCCorrection.setChecked(True)\n    self.checkBoxDCCorrection.setObjectName('checkBoxDCCorrection')\n    self.gridLayout.addWidget(self.checkBoxDCCorrection, 17, 1, 1, 1)\n    self.labelDeviceIdentifier = QtWidgets.QLabel(self.frame_2)\n    self.labelDeviceIdentifier.setObjectName('labelDeviceIdentifier')\n    self.gridLayout.addWidget(self.labelDeviceIdentifier, 1, 0, 1, 1)\n    self.comboBoxAntenna = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxAntenna.setObjectName('comboBoxAntenna')\n    self.gridLayout.addWidget(self.comboBoxAntenna, 4, 1, 1, 1)\n    self.labelFreq = QtWidgets.QLabel(self.frame_2)\n    self.labelFreq.setObjectName('labelFreq')\n    self.gridLayout.addWidget(self.labelFreq, 7, 0, 1, 1)\n    self.spinBoxPort = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxPort.setMinimum(1)\n    self.spinBoxPort.setMaximum(65535)\n    self.spinBoxPort.setProperty('value', 1234)\n    self.spinBoxPort.setObjectName('spinBoxPort')\n    self.gridLayout.addWidget(self.spinBoxPort, 6, 1, 1, 1)\n    self.labelIP = QtWidgets.QLabel(self.frame_2)\n    self.labelIP.setObjectName('labelIP')\n    self.gridLayout.addWidget(self.labelIP, 5, 0, 1, 1)\n    self.spinBoxFreqCorrection = QtWidgets.QSpinBox(self.frame_2)\n    self.spinBoxFreqCorrection.setMinimum(-1000)\n    self.spinBoxFreqCorrection.setMaximum(1000)\n    self.spinBoxFreqCorrection.setProperty('value', 1)\n    self.spinBoxFreqCorrection.setObjectName('spinBoxFreqCorrection')\n    self.gridLayout.addWidget(self.spinBoxFreqCorrection, 13, 1, 1, 1)\n    self.labelNRepeat = QtWidgets.QLabel(self.frame_2)\n    self.labelNRepeat.setObjectName('labelNRepeat')\n    self.gridLayout.addWidget(self.labelNRepeat, 16, 0, 1, 1)\n    self.comboBoxDirectSampling = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxDirectSampling.setObjectName('comboBoxDirectSampling')\n    self.gridLayout.addWidget(self.comboBoxDirectSampling, 15, 1, 1, 1)\n    self.labelDCCorrection = QtWidgets.QLabel(self.frame_2)\n    self.labelDCCorrection.setObjectName('labelDCCorrection')\n    self.gridLayout.addWidget(self.labelDCCorrection, 17, 0, 1, 1)\n    self.comboBoxChannel = QtWidgets.QComboBox(self.frame_2)\n    self.comboBoxChannel.setObjectName('comboBoxChannel')\n    self.gridLayout.addWidget(self.comboBoxChannel, 3, 1, 1, 1)\n    self.labelIFGain = QtWidgets.QLabel(self.frame_2)\n    self.labelIFGain.setObjectName('labelIFGain')\n    self.gridLayout.addWidget(self.labelIFGain, 11, 0, 1, 1)\n    self.labelChannel = QtWidgets.QLabel(self.frame_2)\n    self.labelChannel.setObjectName('labelChannel')\n    self.gridLayout.addWidget(self.labelChannel, 3, 0, 1, 1)\n    self.btnLockBWSR = QtWidgets.QToolButton(self.frame_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnLockBWSR.sizePolicy().hasHeightForWidth())\n    self.btnLockBWSR.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon()\n    icon.addPixmap(QtGui.QPixmap(':/icons/icons/lock.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)\n    self.btnLockBWSR.setIcon(icon)\n    self.btnLockBWSR.setIconSize(QtCore.QSize(16, 16))\n    self.btnLockBWSR.setCheckable(True)\n    self.btnLockBWSR.setChecked(True)\n    self.btnLockBWSR.setObjectName('btnLockBWSR')\n    self.gridLayout.addWidget(self.btnLockBWSR, 8, 2, 2, 1)\n    self.label_3 = QtWidgets.QLabel(self.frame_2)\n    self.label_3.setObjectName('label_3')\n    self.gridLayout.addWidget(self.label_3, 0, 0, 1, 1)\n    self.labelBiasTee = QtWidgets.QLabel(self.frame_2)\n    self.labelBiasTee.setObjectName('labelBiasTee')\n    self.gridLayout.addWidget(self.labelBiasTee, 14, 0, 1, 1)\n    self.checkBoxBiasTee = QtWidgets.QCheckBox(self.frame_2)\n    self.checkBoxBiasTee.setObjectName('checkBoxBiasTee')\n    self.gridLayout.addWidget(self.checkBoxBiasTee, 14, 1, 1, 1)\n    self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)\n    self.verticalLayout.addWidget(self.groupBoxDeviceSettings)\n    self.retranslateUi(FormDeviceSettings)\n    self.groupBoxDeviceSettings.toggled['bool'].connect(self.frame_2.setVisible)\n    FormDeviceSettings.setTabOrder(self.groupBoxDeviceSettings, self.cbDevice)\n    FormDeviceSettings.setTabOrder(self.cbDevice, self.comboBoxDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.comboBoxDeviceIdentifier, self.btnRefreshDeviceIdentifier)\n    FormDeviceSettings.setTabOrder(self.btnRefreshDeviceIdentifier, self.lineEditSubdevice)\n    FormDeviceSettings.setTabOrder(self.lineEditSubdevice, self.comboBoxChannel)\n    FormDeviceSettings.setTabOrder(self.comboBoxChannel, self.comboBoxAntenna)\n    FormDeviceSettings.setTabOrder(self.comboBoxAntenna, self.lineEditIP)\n    FormDeviceSettings.setTabOrder(self.lineEditIP, self.spinBoxPort)\n    FormDeviceSettings.setTabOrder(self.spinBoxPort, self.spinBoxFreq)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreq, self.spinBoxSampleRate)\n    FormDeviceSettings.setTabOrder(self.spinBoxSampleRate, self.btnLockBWSR)\n    FormDeviceSettings.setTabOrder(self.btnLockBWSR, self.spinBoxBandwidth)\n    FormDeviceSettings.setTabOrder(self.spinBoxBandwidth, self.sliderGain)\n    FormDeviceSettings.setTabOrder(self.sliderGain, self.spinBoxGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxGain, self.sliderIFGain)\n    FormDeviceSettings.setTabOrder(self.sliderIFGain, self.spinBoxIFGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxIFGain, self.sliderBasebandGain)\n    FormDeviceSettings.setTabOrder(self.sliderBasebandGain, self.spinBoxBasebandGain)\n    FormDeviceSettings.setTabOrder(self.spinBoxBasebandGain, self.spinBoxFreqCorrection)\n    FormDeviceSettings.setTabOrder(self.spinBoxFreqCorrection, self.comboBoxDirectSampling)\n    FormDeviceSettings.setTabOrder(self.comboBoxDirectSampling, self.spinBoxNRepeat)\n    FormDeviceSettings.setTabOrder(self.spinBoxNRepeat, self.checkBoxDCCorrection)"
        ]
    },
    {
        "func_name": "retranslateUi",
        "original": "def retranslateUi(self, FormDeviceSettings):\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))",
        "mutated": [
            "def retranslateUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))",
            "def retranslateUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))",
            "def retranslateUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))",
            "def retranslateUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))",
            "def retranslateUi(self, FormDeviceSettings):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _translate = QtCore.QCoreApplication.translate\n    FormDeviceSettings.setWindowTitle(_translate('FormDeviceSettings', 'Form'))\n    self.groupBoxDeviceSettings.setTitle(_translate('FormDeviceSettings', 'Device settings'))\n    self.labelAntenna.setText(_translate('FormDeviceSettings', 'Antenna:'))\n    self.labelBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelBasebandGain.setText(_translate('FormDeviceSettings', 'Baseband gain:'))\n    self.lineEditSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Configure the subdevice of your USRP. For example, <span style=\" font-weight:600;\">B:0 </span>to select a WBX on slot B. You can learn more at <a href=\"http://files.ettus.com/manual/page_configuration.html#config_subdev\"><span style=\" text-decoration: underline; color:#2980b9;\">http://files.ettus.com/manual/page_configuration.html#config_subdev.</span></a></p></body></html>'))\n    self.labelSubdevice.setText(_translate('FormDeviceSettings', '<html><head/><body><p>Subdevice:</p></body></html>'))\n    self.lineEditIP.setText(_translate('FormDeviceSettings', '127.0.0.1'))\n    self.btnRefreshDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Automatically detect connected SDRs of the above configured type. There is <span style=\" font-weight:600;\">no need</span> to press this button if you have only one SDR of a certain type attached. </p></body></html>'))\n    self.btnRefreshDeviceIdentifier.setText(_translate('FormDeviceSettings', '...'))\n    self.labelDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDirectSampling.setText(_translate('FormDeviceSettings', 'Direct sampling:'))\n    self.labelBandwidth.setText(_translate('FormDeviceSettings', 'Bandwidth (Hz):'))\n    self.sliderGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.spinBoxGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelSampleRate.setText(_translate('FormDeviceSettings', 'Sample rate (Sps):'))\n    self.sliderIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.spinBoxIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelFreqCorrection.setText(_translate('FormDeviceSettings', 'Frequency correction:'))\n    self.comboBoxDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.cbDevice.setItemText(0, _translate('FormDeviceSettings', 'USRP'))\n    self.cbDevice.setItemText(1, _translate('FormDeviceSettings', 'HackRF'))\n    self.spinBoxNRepeat.setSpecialValueText(_translate('FormDeviceSettings', 'Infinite'))\n    self.sliderBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.spinBoxBasebandGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The baseband gain is applied to the baseband signal in your software defined radio. The baseband signal is at low frequency and gathered from the RF signal by <span style=\" font-weight:600;\">complex downsampling</span>.</p></body></html>'))\n    self.labelPort.setText(_translate('FormDeviceSettings', 'Port number:'))\n    self.labelGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The gain (more exactly RF gain) is the gain applied to the RF signal. This amplifies the high frequent signal arriving at the antenna of your Software Defined Radio.</p></body></html>'))\n    self.labelGain.setText(_translate('FormDeviceSettings', 'Gain:'))\n    self.checkBoxDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.checkBoxDCCorrection.setText(_translate('FormDeviceSettings', 'Apply DC correction'))\n    self.labelDeviceIdentifier.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>You can enter a device identifier here if you have multiple SDRs of the same type attached to separate them. There is no need to configure this value otherwise. URH will <span style=\" font-weight:600;\">automatically</span> select an attached SDR of the configured type if you leave this value empty.</p></body></html>'))\n    self.labelDeviceIdentifier.setText(_translate('FormDeviceSettings', 'Device Identifier:'))\n    self.labelFreq.setText(_translate('FormDeviceSettings', 'Frequency (Hz):'))\n    self.labelIP.setText(_translate('FormDeviceSettings', 'IP address:'))\n    self.spinBoxFreqCorrection.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the frequency correction in <span style=\" font-weight:600;\">ppm</span>. If you do not know what to enter here, just leave it to one.</p></body></html>'))\n    self.labelNRepeat.setText(_translate('FormDeviceSettings', 'Repeat:'))\n    self.comboBoxDirectSampling.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Set the direct sampling mode. If you do not know what to choose here, just set it to disabled. The<span style=\" font-weight:600;\"> native backend</span> is recommended, when using this setting.</p></body></html>'))\n    self.labelDCCorrection.setToolTip(_translate('FormDeviceSettings', 'Apply DC correction during recording, that is, ensure the captured signal has a mean value of zero.'))\n    self.labelDCCorrection.setText(_translate('FormDeviceSettings', 'DC correction:'))\n    self.labelIFGain.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>The IF Gain is applied to the Intermediate Frequency signal in your Software Defined Radio. An IF signal has a lower frequency than the high frequent RF signal, so signal processing can be applied more efficiently.</p></body></html>'))\n    self.labelIFGain.setText(_translate('FormDeviceSettings', 'IF Gain:'))\n    self.labelChannel.setText(_translate('FormDeviceSettings', 'Channel:'))\n    self.btnLockBWSR.setText(_translate('FormDeviceSettings', '...'))\n    self.label_3.setText(_translate('FormDeviceSettings', 'Device:'))\n    self.labelBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.labelBiasTee.setText(_translate('FormDeviceSettings', 'Bias Tee:'))\n    self.checkBoxBiasTee.setToolTip(_translate('FormDeviceSettings', '<html><head/><body><p>Enable the bias tee of your SDR, if you have an external LNA connected. Leave this disabled if you have no external LNA attached.</p></body></html>'))\n    self.checkBoxBiasTee.setText(_translate('FormDeviceSettings', 'Enable Bias Tee'))"
        ]
    }
]