[
    {
        "func_name": "_seg_0",
        "original": "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]",
        "mutated": [
            "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]",
            "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]",
            "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]",
            "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]",
            "def _seg_0() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(0, '3'), (1, '3'), (2, '3'), (3, '3'), (4, '3'), (5, '3'), (6, '3'), (7, '3'), (8, '3'), (9, '3'), (10, '3'), (11, '3'), (12, '3'), (13, '3'), (14, '3'), (15, '3'), (16, '3'), (17, '3'), (18, '3'), (19, '3'), (20, '3'), (21, '3'), (22, '3'), (23, '3'), (24, '3'), (25, '3'), (26, '3'), (27, '3'), (28, '3'), (29, '3'), (30, '3'), (31, '3'), (32, '3'), (33, '3'), (34, '3'), (35, '3'), (36, '3'), (37, '3'), (38, '3'), (39, '3'), (40, '3'), (41, '3'), (42, '3'), (43, '3'), (44, '3'), (45, 'V'), (46, 'V'), (47, '3'), (48, 'V'), (49, 'V'), (50, 'V'), (51, 'V'), (52, 'V'), (53, 'V'), (54, 'V'), (55, 'V'), (56, 'V'), (57, 'V'), (58, '3'), (59, '3'), (60, '3'), (61, '3'), (62, '3'), (63, '3'), (64, '3'), (65, 'M', 'a'), (66, 'M', 'b'), (67, 'M', 'c'), (68, 'M', 'd'), (69, 'M', 'e'), (70, 'M', 'f'), (71, 'M', 'g'), (72, 'M', 'h'), (73, 'M', 'i'), (74, 'M', 'j'), (75, 'M', 'k'), (76, 'M', 'l'), (77, 'M', 'm'), (78, 'M', 'n'), (79, 'M', 'o'), (80, 'M', 'p'), (81, 'M', 'q'), (82, 'M', 'r'), (83, 'M', 's'), (84, 'M', 't'), (85, 'M', 'u'), (86, 'M', 'v'), (87, 'M', 'w'), (88, 'M', 'x'), (89, 'M', 'y'), (90, 'M', 'z'), (91, '3'), (92, '3'), (93, '3'), (94, '3'), (95, '3'), (96, '3'), (97, 'V'), (98, 'V'), (99, 'V')]"
        ]
    },
    {
        "func_name": "_seg_1",
        "original": "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]",
        "mutated": [
            "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]",
            "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]",
            "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]",
            "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]",
            "def _seg_1() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(100, 'V'), (101, 'V'), (102, 'V'), (103, 'V'), (104, 'V'), (105, 'V'), (106, 'V'), (107, 'V'), (108, 'V'), (109, 'V'), (110, 'V'), (111, 'V'), (112, 'V'), (113, 'V'), (114, 'V'), (115, 'V'), (116, 'V'), (117, 'V'), (118, 'V'), (119, 'V'), (120, 'V'), (121, 'V'), (122, 'V'), (123, '3'), (124, '3'), (125, '3'), (126, '3'), (127, '3'), (128, 'X'), (129, 'X'), (130, 'X'), (131, 'X'), (132, 'X'), (133, 'X'), (134, 'X'), (135, 'X'), (136, 'X'), (137, 'X'), (138, 'X'), (139, 'X'), (140, 'X'), (141, 'X'), (142, 'X'), (143, 'X'), (144, 'X'), (145, 'X'), (146, 'X'), (147, 'X'), (148, 'X'), (149, 'X'), (150, 'X'), (151, 'X'), (152, 'X'), (153, 'X'), (154, 'X'), (155, 'X'), (156, 'X'), (157, 'X'), (158, 'X'), (159, 'X'), (160, '3', ' '), (161, 'V'), (162, 'V'), (163, 'V'), (164, 'V'), (165, 'V'), (166, 'V'), (167, 'V'), (168, '3', ' \u0308'), (169, 'V'), (170, 'M', 'a'), (171, 'V'), (172, 'V'), (173, 'I'), (174, 'V'), (175, '3', ' \u0304'), (176, 'V'), (177, 'V'), (178, 'M', '2'), (179, 'M', '3'), (180, '3', ' \u0301'), (181, 'M', '\u03bc'), (182, 'V'), (183, 'V'), (184, '3', ' \u0327'), (185, 'M', '1'), (186, 'M', 'o'), (187, 'V'), (188, 'M', '1\u20444'), (189, 'M', '1\u20442'), (190, 'M', '3\u20444'), (191, 'V'), (192, 'M', '\u00e0'), (193, 'M', '\u00e1'), (194, 'M', '\u00e2'), (195, 'M', '\u00e3'), (196, 'M', '\u00e4'), (197, 'M', '\u00e5'), (198, 'M', '\u00e6'), (199, 'M', '\u00e7')]"
        ]
    },
    {
        "func_name": "_seg_2",
        "original": "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]",
        "mutated": [
            "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]",
            "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]",
            "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]",
            "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]",
            "def _seg_2() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(200, 'M', '\u00e8'), (201, 'M', '\u00e9'), (202, 'M', '\u00ea'), (203, 'M', '\u00eb'), (204, 'M', '\u00ec'), (205, 'M', '\u00ed'), (206, 'M', '\u00ee'), (207, 'M', '\u00ef'), (208, 'M', '\u00f0'), (209, 'M', '\u00f1'), (210, 'M', '\u00f2'), (211, 'M', '\u00f3'), (212, 'M', '\u00f4'), (213, 'M', '\u00f5'), (214, 'M', '\u00f6'), (215, 'V'), (216, 'M', '\u00f8'), (217, 'M', '\u00f9'), (218, 'M', '\u00fa'), (219, 'M', '\u00fb'), (220, 'M', '\u00fc'), (221, 'M', '\u00fd'), (222, 'M', '\u00fe'), (223, 'D', 'ss'), (224, 'V'), (225, 'V'), (226, 'V'), (227, 'V'), (228, 'V'), (229, 'V'), (230, 'V'), (231, 'V'), (232, 'V'), (233, 'V'), (234, 'V'), (235, 'V'), (236, 'V'), (237, 'V'), (238, 'V'), (239, 'V'), (240, 'V'), (241, 'V'), (242, 'V'), (243, 'V'), (244, 'V'), (245, 'V'), (246, 'V'), (247, 'V'), (248, 'V'), (249, 'V'), (250, 'V'), (251, 'V'), (252, 'V'), (253, 'V'), (254, 'V'), (255, 'V'), (256, 'M', '\u0101'), (257, 'V'), (258, 'M', '\u0103'), (259, 'V'), (260, 'M', '\u0105'), (261, 'V'), (262, 'M', '\u0107'), (263, 'V'), (264, 'M', '\u0109'), (265, 'V'), (266, 'M', '\u010b'), (267, 'V'), (268, 'M', '\u010d'), (269, 'V'), (270, 'M', '\u010f'), (271, 'V'), (272, 'M', '\u0111'), (273, 'V'), (274, 'M', '\u0113'), (275, 'V'), (276, 'M', '\u0115'), (277, 'V'), (278, 'M', '\u0117'), (279, 'V'), (280, 'M', '\u0119'), (281, 'V'), (282, 'M', '\u011b'), (283, 'V'), (284, 'M', '\u011d'), (285, 'V'), (286, 'M', '\u011f'), (287, 'V'), (288, 'M', '\u0121'), (289, 'V'), (290, 'M', '\u0123'), (291, 'V'), (292, 'M', '\u0125'), (293, 'V'), (294, 'M', '\u0127'), (295, 'V'), (296, 'M', '\u0129'), (297, 'V'), (298, 'M', '\u012b'), (299, 'V')]"
        ]
    },
    {
        "func_name": "_seg_3",
        "original": "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]",
        "mutated": [
            "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]",
            "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]",
            "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]",
            "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]",
            "def _seg_3() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(300, 'M', '\u012d'), (301, 'V'), (302, 'M', '\u012f'), (303, 'V'), (304, 'M', 'i\u0307'), (305, 'V'), (306, 'M', 'ij'), (308, 'M', '\u0135'), (309, 'V'), (310, 'M', '\u0137'), (311, 'V'), (313, 'M', '\u013a'), (314, 'V'), (315, 'M', '\u013c'), (316, 'V'), (317, 'M', '\u013e'), (318, 'V'), (319, 'M', 'l\u00b7'), (321, 'M', '\u0142'), (322, 'V'), (323, 'M', '\u0144'), (324, 'V'), (325, 'M', '\u0146'), (326, 'V'), (327, 'M', '\u0148'), (328, 'V'), (329, 'M', '\u02bcn'), (330, 'M', '\u014b'), (331, 'V'), (332, 'M', '\u014d'), (333, 'V'), (334, 'M', '\u014f'), (335, 'V'), (336, 'M', '\u0151'), (337, 'V'), (338, 'M', '\u0153'), (339, 'V'), (340, 'M', '\u0155'), (341, 'V'), (342, 'M', '\u0157'), (343, 'V'), (344, 'M', '\u0159'), (345, 'V'), (346, 'M', '\u015b'), (347, 'V'), (348, 'M', '\u015d'), (349, 'V'), (350, 'M', '\u015f'), (351, 'V'), (352, 'M', '\u0161'), (353, 'V'), (354, 'M', '\u0163'), (355, 'V'), (356, 'M', '\u0165'), (357, 'V'), (358, 'M', '\u0167'), (359, 'V'), (360, 'M', '\u0169'), (361, 'V'), (362, 'M', '\u016b'), (363, 'V'), (364, 'M', '\u016d'), (365, 'V'), (366, 'M', '\u016f'), (367, 'V'), (368, 'M', '\u0171'), (369, 'V'), (370, 'M', '\u0173'), (371, 'V'), (372, 'M', '\u0175'), (373, 'V'), (374, 'M', '\u0177'), (375, 'V'), (376, 'M', '\u00ff'), (377, 'M', '\u017a'), (378, 'V'), (379, 'M', '\u017c'), (380, 'V'), (381, 'M', '\u017e'), (382, 'V'), (383, 'M', 's'), (384, 'V'), (385, 'M', '\u0253'), (386, 'M', '\u0183'), (387, 'V'), (388, 'M', '\u0185'), (389, 'V'), (390, 'M', '\u0254'), (391, 'M', '\u0188'), (392, 'V'), (393, 'M', '\u0256'), (394, 'M', '\u0257'), (395, 'M', '\u018c'), (396, 'V'), (398, 'M', '\u01dd'), (399, 'M', '\u0259'), (400, 'M', '\u025b'), (401, 'M', '\u0192'), (402, 'V'), (403, 'M', '\u0260')]"
        ]
    },
    {
        "func_name": "_seg_4",
        "original": "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]",
        "mutated": [
            "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]",
            "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]",
            "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]",
            "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]",
            "def _seg_4() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(404, 'M', '\u0263'), (405, 'V'), (406, 'M', '\u0269'), (407, 'M', '\u0268'), (408, 'M', '\u0199'), (409, 'V'), (412, 'M', '\u026f'), (413, 'M', '\u0272'), (414, 'V'), (415, 'M', '\u0275'), (416, 'M', '\u01a1'), (417, 'V'), (418, 'M', '\u01a3'), (419, 'V'), (420, 'M', '\u01a5'), (421, 'V'), (422, 'M', '\u0280'), (423, 'M', '\u01a8'), (424, 'V'), (425, 'M', '\u0283'), (426, 'V'), (428, 'M', '\u01ad'), (429, 'V'), (430, 'M', '\u0288'), (431, 'M', '\u01b0'), (432, 'V'), (433, 'M', '\u028a'), (434, 'M', '\u028b'), (435, 'M', '\u01b4'), (436, 'V'), (437, 'M', '\u01b6'), (438, 'V'), (439, 'M', '\u0292'), (440, 'M', '\u01b9'), (441, 'V'), (444, 'M', '\u01bd'), (445, 'V'), (452, 'M', 'd\u017e'), (455, 'M', 'lj'), (458, 'M', 'nj'), (461, 'M', '\u01ce'), (462, 'V'), (463, 'M', '\u01d0'), (464, 'V'), (465, 'M', '\u01d2'), (466, 'V'), (467, 'M', '\u01d4'), (468, 'V'), (469, 'M', '\u01d6'), (470, 'V'), (471, 'M', '\u01d8'), (472, 'V'), (473, 'M', '\u01da'), (474, 'V'), (475, 'M', '\u01dc'), (476, 'V'), (478, 'M', '\u01df'), (479, 'V'), (480, 'M', '\u01e1'), (481, 'V'), (482, 'M', '\u01e3'), (483, 'V'), (484, 'M', '\u01e5'), (485, 'V'), (486, 'M', '\u01e7'), (487, 'V'), (488, 'M', '\u01e9'), (489, 'V'), (490, 'M', '\u01eb'), (491, 'V'), (492, 'M', '\u01ed'), (493, 'V'), (494, 'M', '\u01ef'), (495, 'V'), (497, 'M', 'dz'), (500, 'M', '\u01f5'), (501, 'V'), (502, 'M', '\u0195'), (503, 'M', '\u01bf'), (504, 'M', '\u01f9'), (505, 'V'), (506, 'M', '\u01fb'), (507, 'V'), (508, 'M', '\u01fd'), (509, 'V'), (510, 'M', '\u01ff'), (511, 'V'), (512, 'M', '\u0201'), (513, 'V'), (514, 'M', '\u0203'), (515, 'V'), (516, 'M', '\u0205'), (517, 'V'), (518, 'M', '\u0207'), (519, 'V'), (520, 'M', '\u0209'), (521, 'V'), (522, 'M', '\u020b'), (523, 'V'), (524, 'M', '\u020d')]"
        ]
    },
    {
        "func_name": "_seg_5",
        "original": "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]",
        "mutated": [
            "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]",
            "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]",
            "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]",
            "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]",
            "def _seg_5() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(525, 'V'), (526, 'M', '\u020f'), (527, 'V'), (528, 'M', '\u0211'), (529, 'V'), (530, 'M', '\u0213'), (531, 'V'), (532, 'M', '\u0215'), (533, 'V'), (534, 'M', '\u0217'), (535, 'V'), (536, 'M', '\u0219'), (537, 'V'), (538, 'M', '\u021b'), (539, 'V'), (540, 'M', '\u021d'), (541, 'V'), (542, 'M', '\u021f'), (543, 'V'), (544, 'M', '\u019e'), (545, 'V'), (546, 'M', '\u0223'), (547, 'V'), (548, 'M', '\u0225'), (549, 'V'), (550, 'M', '\u0227'), (551, 'V'), (552, 'M', '\u0229'), (553, 'V'), (554, 'M', '\u022b'), (555, 'V'), (556, 'M', '\u022d'), (557, 'V'), (558, 'M', '\u022f'), (559, 'V'), (560, 'M', '\u0231'), (561, 'V'), (562, 'M', '\u0233'), (563, 'V'), (570, 'M', '\u2c65'), (571, 'M', '\u023c'), (572, 'V'), (573, 'M', '\u019a'), (574, 'M', '\u2c66'), (575, 'V'), (577, 'M', '\u0242'), (578, 'V'), (579, 'M', '\u0180'), (580, 'M', '\u0289'), (581, 'M', '\u028c'), (582, 'M', '\u0247'), (583, 'V'), (584, 'M', '\u0249'), (585, 'V'), (586, 'M', '\u024b'), (587, 'V'), (588, 'M', '\u024d'), (589, 'V'), (590, 'M', '\u024f'), (591, 'V'), (688, 'M', 'h'), (689, 'M', '\u0266'), (690, 'M', 'j'), (691, 'M', 'r'), (692, 'M', '\u0279'), (693, 'M', '\u027b'), (694, 'M', '\u0281'), (695, 'M', 'w'), (696, 'M', 'y'), (697, 'V'), (728, '3', ' \u0306'), (729, '3', ' \u0307'), (730, '3', ' \u030a'), (731, '3', ' \u0328'), (732, '3', ' \u0303'), (733, '3', ' \u030b'), (734, 'V'), (736, 'M', '\u0263'), (737, 'M', 'l'), (738, 'M', 's'), (739, 'M', 'x'), (740, 'M', '\u0295'), (741, 'V'), (832, 'M', '\u0300'), (833, 'M', '\u0301'), (834, 'V'), (835, 'M', '\u0313'), (836, 'M', '\u0308\u0301'), (837, 'M', '\u03b9'), (838, 'V'), (847, 'I'), (848, 'V'), (880, 'M', '\u0371'), (881, 'V'), (882, 'M', '\u0373'), (883, 'V'), (884, 'M', '\u02b9'), (885, 'V'), (886, 'M', '\u0377'), (887, 'V')]"
        ]
    },
    {
        "func_name": "_seg_6",
        "original": "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]",
        "mutated": [
            "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]",
            "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]",
            "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]",
            "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]",
            "def _seg_6() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(888, 'X'), (890, '3', ' \u03b9'), (891, 'V'), (894, '3', ';'), (895, 'M', '\u03f3'), (896, 'X'), (900, '3', ' \u0301'), (901, '3', ' \u0308\u0301'), (902, 'M', '\u03ac'), (903, 'M', '\u00b7'), (904, 'M', '\u03ad'), (905, 'M', '\u03ae'), (906, 'M', '\u03af'), (907, 'X'), (908, 'M', '\u03cc'), (909, 'X'), (910, 'M', '\u03cd'), (911, 'M', '\u03ce'), (912, 'V'), (913, 'M', '\u03b1'), (914, 'M', '\u03b2'), (915, 'M', '\u03b3'), (916, 'M', '\u03b4'), (917, 'M', '\u03b5'), (918, 'M', '\u03b6'), (919, 'M', '\u03b7'), (920, 'M', '\u03b8'), (921, 'M', '\u03b9'), (922, 'M', '\u03ba'), (923, 'M', '\u03bb'), (924, 'M', '\u03bc'), (925, 'M', '\u03bd'), (926, 'M', '\u03be'), (927, 'M', '\u03bf'), (928, 'M', '\u03c0'), (929, 'M', '\u03c1'), (930, 'X'), (931, 'M', '\u03c3'), (932, 'M', '\u03c4'), (933, 'M', '\u03c5'), (934, 'M', '\u03c6'), (935, 'M', '\u03c7'), (936, 'M', '\u03c8'), (937, 'M', '\u03c9'), (938, 'M', '\u03ca'), (939, 'M', '\u03cb'), (940, 'V'), (962, 'D', '\u03c3'), (963, 'V'), (975, 'M', '\u03d7'), (976, 'M', '\u03b2'), (977, 'M', '\u03b8'), (978, 'M', '\u03c5'), (979, 'M', '\u03cd'), (980, 'M', '\u03cb'), (981, 'M', '\u03c6'), (982, 'M', '\u03c0'), (983, 'V'), (984, 'M', '\u03d9'), (985, 'V'), (986, 'M', '\u03db'), (987, 'V'), (988, 'M', '\u03dd'), (989, 'V'), (990, 'M', '\u03df'), (991, 'V'), (992, 'M', '\u03e1'), (993, 'V'), (994, 'M', '\u03e3'), (995, 'V'), (996, 'M', '\u03e5'), (997, 'V'), (998, 'M', '\u03e7'), (999, 'V'), (1000, 'M', '\u03e9'), (1001, 'V'), (1002, 'M', '\u03eb'), (1003, 'V'), (1004, 'M', '\u03ed'), (1005, 'V'), (1006, 'M', '\u03ef'), (1007, 'V'), (1008, 'M', '\u03ba'), (1009, 'M', '\u03c1'), (1010, 'M', '\u03c3'), (1011, 'V'), (1012, 'M', '\u03b8'), (1013, 'M', '\u03b5'), (1014, 'V'), (1015, 'M', '\u03f8'), (1016, 'V'), (1017, 'M', '\u03c3'), (1018, 'M', '\u03fb'), (1019, 'V'), (1021, 'M', '\u037b'), (1022, 'M', '\u037c'), (1023, 'M', '\u037d'), (1024, 'M', '\u0450'), (1025, 'M', '\u0451'), (1026, 'M', '\u0452')]"
        ]
    },
    {
        "func_name": "_seg_7",
        "original": "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]",
        "mutated": [
            "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]",
            "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]",
            "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]",
            "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]",
            "def _seg_7() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(1027, 'M', '\u0453'), (1028, 'M', '\u0454'), (1029, 'M', '\u0455'), (1030, 'M', '\u0456'), (1031, 'M', '\u0457'), (1032, 'M', '\u0458'), (1033, 'M', '\u0459'), (1034, 'M', '\u045a'), (1035, 'M', '\u045b'), (1036, 'M', '\u045c'), (1037, 'M', '\u045d'), (1038, 'M', '\u045e'), (1039, 'M', '\u045f'), (1040, 'M', '\u0430'), (1041, 'M', '\u0431'), (1042, 'M', '\u0432'), (1043, 'M', '\u0433'), (1044, 'M', '\u0434'), (1045, 'M', '\u0435'), (1046, 'M', '\u0436'), (1047, 'M', '\u0437'), (1048, 'M', '\u0438'), (1049, 'M', '\u0439'), (1050, 'M', '\u043a'), (1051, 'M', '\u043b'), (1052, 'M', '\u043c'), (1053, 'M', '\u043d'), (1054, 'M', '\u043e'), (1055, 'M', '\u043f'), (1056, 'M', '\u0440'), (1057, 'M', '\u0441'), (1058, 'M', '\u0442'), (1059, 'M', '\u0443'), (1060, 'M', '\u0444'), (1061, 'M', '\u0445'), (1062, 'M', '\u0446'), (1063, 'M', '\u0447'), (1064, 'M', '\u0448'), (1065, 'M', '\u0449'), (1066, 'M', '\u044a'), (1067, 'M', '\u044b'), (1068, 'M', '\u044c'), (1069, 'M', '\u044d'), (1070, 'M', '\u044e'), (1071, 'M', '\u044f'), (1072, 'V'), (1120, 'M', '\u0461'), (1121, 'V'), (1122, 'M', '\u0463'), (1123, 'V'), (1124, 'M', '\u0465'), (1125, 'V'), (1126, 'M', '\u0467'), (1127, 'V'), (1128, 'M', '\u0469'), (1129, 'V'), (1130, 'M', '\u046b'), (1131, 'V'), (1132, 'M', '\u046d'), (1133, 'V'), (1134, 'M', '\u046f'), (1135, 'V'), (1136, 'M', '\u0471'), (1137, 'V'), (1138, 'M', '\u0473'), (1139, 'V'), (1140, 'M', '\u0475'), (1141, 'V'), (1142, 'M', '\u0477'), (1143, 'V'), (1144, 'M', '\u0479'), (1145, 'V'), (1146, 'M', '\u047b'), (1147, 'V'), (1148, 'M', '\u047d'), (1149, 'V'), (1150, 'M', '\u047f'), (1151, 'V'), (1152, 'M', '\u0481'), (1153, 'V'), (1162, 'M', '\u048b'), (1163, 'V'), (1164, 'M', '\u048d'), (1165, 'V'), (1166, 'M', '\u048f'), (1167, 'V'), (1168, 'M', '\u0491'), (1169, 'V'), (1170, 'M', '\u0493'), (1171, 'V'), (1172, 'M', '\u0495'), (1173, 'V'), (1174, 'M', '\u0497'), (1175, 'V'), (1176, 'M', '\u0499'), (1177, 'V'), (1178, 'M', '\u049b'), (1179, 'V'), (1180, 'M', '\u049d'), (1181, 'V')]"
        ]
    },
    {
        "func_name": "_seg_8",
        "original": "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]",
        "mutated": [
            "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]",
            "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]",
            "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]",
            "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]",
            "def _seg_8() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(1182, 'M', '\u049f'), (1183, 'V'), (1184, 'M', '\u04a1'), (1185, 'V'), (1186, 'M', '\u04a3'), (1187, 'V'), (1188, 'M', '\u04a5'), (1189, 'V'), (1190, 'M', '\u04a7'), (1191, 'V'), (1192, 'M', '\u04a9'), (1193, 'V'), (1194, 'M', '\u04ab'), (1195, 'V'), (1196, 'M', '\u04ad'), (1197, 'V'), (1198, 'M', '\u04af'), (1199, 'V'), (1200, 'M', '\u04b1'), (1201, 'V'), (1202, 'M', '\u04b3'), (1203, 'V'), (1204, 'M', '\u04b5'), (1205, 'V'), (1206, 'M', '\u04b7'), (1207, 'V'), (1208, 'M', '\u04b9'), (1209, 'V'), (1210, 'M', '\u04bb'), (1211, 'V'), (1212, 'M', '\u04bd'), (1213, 'V'), (1214, 'M', '\u04bf'), (1215, 'V'), (1216, 'X'), (1217, 'M', '\u04c2'), (1218, 'V'), (1219, 'M', '\u04c4'), (1220, 'V'), (1221, 'M', '\u04c6'), (1222, 'V'), (1223, 'M', '\u04c8'), (1224, 'V'), (1225, 'M', '\u04ca'), (1226, 'V'), (1227, 'M', '\u04cc'), (1228, 'V'), (1229, 'M', '\u04ce'), (1230, 'V'), (1232, 'M', '\u04d1'), (1233, 'V'), (1234, 'M', '\u04d3'), (1235, 'V'), (1236, 'M', '\u04d5'), (1237, 'V'), (1238, 'M', '\u04d7'), (1239, 'V'), (1240, 'M', '\u04d9'), (1241, 'V'), (1242, 'M', '\u04db'), (1243, 'V'), (1244, 'M', '\u04dd'), (1245, 'V'), (1246, 'M', '\u04df'), (1247, 'V'), (1248, 'M', '\u04e1'), (1249, 'V'), (1250, 'M', '\u04e3'), (1251, 'V'), (1252, 'M', '\u04e5'), (1253, 'V'), (1254, 'M', '\u04e7'), (1255, 'V'), (1256, 'M', '\u04e9'), (1257, 'V'), (1258, 'M', '\u04eb'), (1259, 'V'), (1260, 'M', '\u04ed'), (1261, 'V'), (1262, 'M', '\u04ef'), (1263, 'V'), (1264, 'M', '\u04f1'), (1265, 'V'), (1266, 'M', '\u04f3'), (1267, 'V'), (1268, 'M', '\u04f5'), (1269, 'V'), (1270, 'M', '\u04f7'), (1271, 'V'), (1272, 'M', '\u04f9'), (1273, 'V'), (1274, 'M', '\u04fb'), (1275, 'V'), (1276, 'M', '\u04fd'), (1277, 'V'), (1278, 'M', '\u04ff'), (1279, 'V'), (1280, 'M', '\u0501'), (1281, 'V'), (1282, 'M', '\u0503')]"
        ]
    },
    {
        "func_name": "_seg_9",
        "original": "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]",
        "mutated": [
            "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]",
            "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]",
            "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]",
            "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]",
            "def _seg_9() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(1283, 'V'), (1284, 'M', '\u0505'), (1285, 'V'), (1286, 'M', '\u0507'), (1287, 'V'), (1288, 'M', '\u0509'), (1289, 'V'), (1290, 'M', '\u050b'), (1291, 'V'), (1292, 'M', '\u050d'), (1293, 'V'), (1294, 'M', '\u050f'), (1295, 'V'), (1296, 'M', '\u0511'), (1297, 'V'), (1298, 'M', '\u0513'), (1299, 'V'), (1300, 'M', '\u0515'), (1301, 'V'), (1302, 'M', '\u0517'), (1303, 'V'), (1304, 'M', '\u0519'), (1305, 'V'), (1306, 'M', '\u051b'), (1307, 'V'), (1308, 'M', '\u051d'), (1309, 'V'), (1310, 'M', '\u051f'), (1311, 'V'), (1312, 'M', '\u0521'), (1313, 'V'), (1314, 'M', '\u0523'), (1315, 'V'), (1316, 'M', '\u0525'), (1317, 'V'), (1318, 'M', '\u0527'), (1319, 'V'), (1320, 'M', '\u0529'), (1321, 'V'), (1322, 'M', '\u052b'), (1323, 'V'), (1324, 'M', '\u052d'), (1325, 'V'), (1326, 'M', '\u052f'), (1327, 'V'), (1328, 'X'), (1329, 'M', '\u0561'), (1330, 'M', '\u0562'), (1331, 'M', '\u0563'), (1332, 'M', '\u0564'), (1333, 'M', '\u0565'), (1334, 'M', '\u0566'), (1335, 'M', '\u0567'), (1336, 'M', '\u0568'), (1337, 'M', '\u0569'), (1338, 'M', '\u056a'), (1339, 'M', '\u056b'), (1340, 'M', '\u056c'), (1341, 'M', '\u056d'), (1342, 'M', '\u056e'), (1343, 'M', '\u056f'), (1344, 'M', '\u0570'), (1345, 'M', '\u0571'), (1346, 'M', '\u0572'), (1347, 'M', '\u0573'), (1348, 'M', '\u0574'), (1349, 'M', '\u0575'), (1350, 'M', '\u0576'), (1351, 'M', '\u0577'), (1352, 'M', '\u0578'), (1353, 'M', '\u0579'), (1354, 'M', '\u057a'), (1355, 'M', '\u057b'), (1356, 'M', '\u057c'), (1357, 'M', '\u057d'), (1358, 'M', '\u057e'), (1359, 'M', '\u057f'), (1360, 'M', '\u0580'), (1361, 'M', '\u0581'), (1362, 'M', '\u0582'), (1363, 'M', '\u0583'), (1364, 'M', '\u0584'), (1365, 'M', '\u0585'), (1366, 'M', '\u0586'), (1367, 'X'), (1369, 'V'), (1415, 'M', '\u0565\u0582'), (1416, 'V'), (1419, 'X'), (1421, 'V'), (1424, 'X'), (1425, 'V'), (1480, 'X'), (1488, 'V'), (1515, 'X'), (1519, 'V'), (1525, 'X'), (1542, 'V'), (1564, 'X'), (1565, 'V')]"
        ]
    },
    {
        "func_name": "_seg_10",
        "original": "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]",
        "mutated": [
            "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]",
            "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]",
            "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]",
            "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]",
            "def _seg_10() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(1653, 'M', '\u0627\u0674'), (1654, 'M', '\u0648\u0674'), (1655, 'M', '\u06c7\u0674'), (1656, 'M', '\u064a\u0674'), (1657, 'V'), (1757, 'X'), (1758, 'V'), (1806, 'X'), (1808, 'V'), (1867, 'X'), (1869, 'V'), (1970, 'X'), (1984, 'V'), (2043, 'X'), (2045, 'V'), (2094, 'X'), (2096, 'V'), (2111, 'X'), (2112, 'V'), (2140, 'X'), (2142, 'V'), (2143, 'X'), (2144, 'V'), (2155, 'X'), (2160, 'V'), (2191, 'X'), (2200, 'V'), (2274, 'X'), (2275, 'V'), (2392, 'M', '\u0915\u093c'), (2393, 'M', '\u0916\u093c'), (2394, 'M', '\u0917\u093c'), (2395, 'M', '\u091c\u093c'), (2396, 'M', '\u0921\u093c'), (2397, 'M', '\u0922\u093c'), (2398, 'M', '\u092b\u093c'), (2399, 'M', '\u092f\u093c'), (2400, 'V'), (2436, 'X'), (2437, 'V'), (2445, 'X'), (2447, 'V'), (2449, 'X'), (2451, 'V'), (2473, 'X'), (2474, 'V'), (2481, 'X'), (2482, 'V'), (2483, 'X'), (2486, 'V'), (2490, 'X'), (2492, 'V'), (2501, 'X'), (2503, 'V'), (2505, 'X'), (2507, 'V'), (2511, 'X'), (2519, 'V'), (2520, 'X'), (2524, 'M', '\u09a1\u09bc'), (2525, 'M', '\u09a2\u09bc'), (2526, 'X'), (2527, 'M', '\u09af\u09bc'), (2528, 'V'), (2532, 'X'), (2534, 'V'), (2559, 'X'), (2561, 'V'), (2564, 'X'), (2565, 'V'), (2571, 'X'), (2575, 'V'), (2577, 'X'), (2579, 'V'), (2601, 'X'), (2602, 'V'), (2609, 'X'), (2610, 'V'), (2611, 'M', '\u0a32\u0a3c'), (2612, 'X'), (2613, 'V'), (2614, 'M', '\u0a38\u0a3c'), (2615, 'X'), (2616, 'V'), (2618, 'X'), (2620, 'V'), (2621, 'X'), (2622, 'V'), (2627, 'X'), (2631, 'V'), (2633, 'X'), (2635, 'V'), (2638, 'X'), (2641, 'V'), (2642, 'X'), (2649, 'M', '\u0a16\u0a3c'), (2650, 'M', '\u0a17\u0a3c'), (2651, 'M', '\u0a1c\u0a3c'), (2652, 'V'), (2653, 'X')]"
        ]
    },
    {
        "func_name": "_seg_11",
        "original": "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]",
        "mutated": [
            "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]",
            "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]",
            "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]",
            "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]",
            "def _seg_11() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(2654, 'M', '\u0a2b\u0a3c'), (2655, 'X'), (2662, 'V'), (2679, 'X'), (2689, 'V'), (2692, 'X'), (2693, 'V'), (2702, 'X'), (2703, 'V'), (2706, 'X'), (2707, 'V'), (2729, 'X'), (2730, 'V'), (2737, 'X'), (2738, 'V'), (2740, 'X'), (2741, 'V'), (2746, 'X'), (2748, 'V'), (2758, 'X'), (2759, 'V'), (2762, 'X'), (2763, 'V'), (2766, 'X'), (2768, 'V'), (2769, 'X'), (2784, 'V'), (2788, 'X'), (2790, 'V'), (2802, 'X'), (2809, 'V'), (2816, 'X'), (2817, 'V'), (2820, 'X'), (2821, 'V'), (2829, 'X'), (2831, 'V'), (2833, 'X'), (2835, 'V'), (2857, 'X'), (2858, 'V'), (2865, 'X'), (2866, 'V'), (2868, 'X'), (2869, 'V'), (2874, 'X'), (2876, 'V'), (2885, 'X'), (2887, 'V'), (2889, 'X'), (2891, 'V'), (2894, 'X'), (2901, 'V'), (2904, 'X'), (2908, 'M', '\u0b21\u0b3c'), (2909, 'M', '\u0b22\u0b3c'), (2910, 'X'), (2911, 'V'), (2916, 'X'), (2918, 'V'), (2936, 'X'), (2946, 'V'), (2948, 'X'), (2949, 'V'), (2955, 'X'), (2958, 'V'), (2961, 'X'), (2962, 'V'), (2966, 'X'), (2969, 'V'), (2971, 'X'), (2972, 'V'), (2973, 'X'), (2974, 'V'), (2976, 'X'), (2979, 'V'), (2981, 'X'), (2984, 'V'), (2987, 'X'), (2990, 'V'), (3002, 'X'), (3006, 'V'), (3011, 'X'), (3014, 'V'), (3017, 'X'), (3018, 'V'), (3022, 'X'), (3024, 'V'), (3025, 'X'), (3031, 'V'), (3032, 'X'), (3046, 'V'), (3067, 'X'), (3072, 'V'), (3085, 'X'), (3086, 'V'), (3089, 'X'), (3090, 'V'), (3113, 'X'), (3114, 'V')]"
        ]
    },
    {
        "func_name": "_seg_12",
        "original": "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]",
        "mutated": [
            "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]",
            "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]",
            "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]",
            "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]",
            "def _seg_12() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(3130, 'X'), (3132, 'V'), (3141, 'X'), (3142, 'V'), (3145, 'X'), (3146, 'V'), (3150, 'X'), (3157, 'V'), (3159, 'X'), (3160, 'V'), (3163, 'X'), (3165, 'V'), (3166, 'X'), (3168, 'V'), (3172, 'X'), (3174, 'V'), (3184, 'X'), (3191, 'V'), (3213, 'X'), (3214, 'V'), (3217, 'X'), (3218, 'V'), (3241, 'X'), (3242, 'V'), (3252, 'X'), (3253, 'V'), (3258, 'X'), (3260, 'V'), (3269, 'X'), (3270, 'V'), (3273, 'X'), (3274, 'V'), (3278, 'X'), (3285, 'V'), (3287, 'X'), (3293, 'V'), (3295, 'X'), (3296, 'V'), (3300, 'X'), (3302, 'V'), (3312, 'X'), (3313, 'V'), (3316, 'X'), (3328, 'V'), (3341, 'X'), (3342, 'V'), (3345, 'X'), (3346, 'V'), (3397, 'X'), (3398, 'V'), (3401, 'X'), (3402, 'V'), (3408, 'X'), (3412, 'V'), (3428, 'X'), (3430, 'V'), (3456, 'X'), (3457, 'V'), (3460, 'X'), (3461, 'V'), (3479, 'X'), (3482, 'V'), (3506, 'X'), (3507, 'V'), (3516, 'X'), (3517, 'V'), (3518, 'X'), (3520, 'V'), (3527, 'X'), (3530, 'V'), (3531, 'X'), (3535, 'V'), (3541, 'X'), (3542, 'V'), (3543, 'X'), (3544, 'V'), (3552, 'X'), (3558, 'V'), (3568, 'X'), (3570, 'V'), (3573, 'X'), (3585, 'V'), (3635, 'M', '\u0e4d\u0e32'), (3636, 'V'), (3643, 'X'), (3647, 'V'), (3676, 'X'), (3713, 'V'), (3715, 'X'), (3716, 'V'), (3717, 'X'), (3718, 'V'), (3723, 'X'), (3724, 'V'), (3748, 'X'), (3749, 'V'), (3750, 'X'), (3751, 'V'), (3763, 'M', '\u0ecd\u0eb2'), (3764, 'V')]"
        ]
    },
    {
        "func_name": "_seg_13",
        "original": "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]",
        "mutated": [
            "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]",
            "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]",
            "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]",
            "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]",
            "def _seg_13() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(3774, 'X'), (3776, 'V'), (3781, 'X'), (3782, 'V'), (3783, 'X'), (3784, 'V'), (3791, 'X'), (3792, 'V'), (3802, 'X'), (3804, 'M', '\u0eab\u0e99'), (3805, 'M', '\u0eab\u0ea1'), (3806, 'V'), (3808, 'X'), (3840, 'V'), (3852, 'M', '\u0f0b'), (3853, 'V'), (3907, 'M', '\u0f42\u0fb7'), (3908, 'V'), (3912, 'X'), (3913, 'V'), (3917, 'M', '\u0f4c\u0fb7'), (3918, 'V'), (3922, 'M', '\u0f51\u0fb7'), (3923, 'V'), (3927, 'M', '\u0f56\u0fb7'), (3928, 'V'), (3932, 'M', '\u0f5b\u0fb7'), (3933, 'V'), (3945, 'M', '\u0f40\u0fb5'), (3946, 'V'), (3949, 'X'), (3953, 'V'), (3955, 'M', '\u0f71\u0f72'), (3956, 'V'), (3957, 'M', '\u0f71\u0f74'), (3958, 'M', '\u0fb2\u0f80'), (3959, 'M', '\u0fb2\u0f71\u0f80'), (3960, 'M', '\u0fb3\u0f80'), (3961, 'M', '\u0fb3\u0f71\u0f80'), (3962, 'V'), (3969, 'M', '\u0f71\u0f80'), (3970, 'V'), (3987, 'M', '\u0f92\u0fb7'), (3988, 'V'), (3992, 'X'), (3993, 'V'), (3997, 'M', '\u0f9c\u0fb7'), (3998, 'V'), (4002, 'M', '\u0fa1\u0fb7'), (4003, 'V'), (4007, 'M', '\u0fa6\u0fb7'), (4008, 'V'), (4012, 'M', '\u0fab\u0fb7'), (4013, 'V'), (4025, 'M', '\u0f90\u0fb5'), (4026, 'V'), (4029, 'X'), (4030, 'V'), (4045, 'X'), (4046, 'V'), (4059, 'X'), (4096, 'V'), (4256, 'X'), (4295, 'M', '\u2d27'), (4296, 'X'), (4301, 'M', '\u2d2d'), (4302, 'X'), (4304, 'V'), (4348, 'M', '\u10dc'), (4349, 'V'), (4447, 'X'), (4449, 'V'), (4681, 'X'), (4682, 'V'), (4686, 'X'), (4688, 'V'), (4695, 'X'), (4696, 'V'), (4697, 'X'), (4698, 'V'), (4702, 'X'), (4704, 'V'), (4745, 'X'), (4746, 'V'), (4750, 'X'), (4752, 'V'), (4785, 'X'), (4786, 'V'), (4790, 'X'), (4792, 'V'), (4799, 'X'), (4800, 'V'), (4801, 'X'), (4802, 'V'), (4806, 'X'), (4808, 'V'), (4823, 'X'), (4824, 'V'), (4881, 'X'), (4882, 'V')]"
        ]
    },
    {
        "func_name": "_seg_14",
        "original": "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]",
        "mutated": [
            "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]",
            "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]",
            "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]",
            "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]",
            "def _seg_14() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(4886, 'X'), (4888, 'V'), (4955, 'X'), (4957, 'V'), (4989, 'X'), (4992, 'V'), (5018, 'X'), (5024, 'V'), (5110, 'X'), (5112, 'M', '\u13f0'), (5113, 'M', '\u13f1'), (5114, 'M', '\u13f2'), (5115, 'M', '\u13f3'), (5116, 'M', '\u13f4'), (5117, 'M', '\u13f5'), (5118, 'X'), (5120, 'V'), (5760, 'X'), (5761, 'V'), (5789, 'X'), (5792, 'V'), (5881, 'X'), (5888, 'V'), (5910, 'X'), (5919, 'V'), (5943, 'X'), (5952, 'V'), (5972, 'X'), (5984, 'V'), (5997, 'X'), (5998, 'V'), (6001, 'X'), (6002, 'V'), (6004, 'X'), (6016, 'V'), (6068, 'X'), (6070, 'V'), (6110, 'X'), (6112, 'V'), (6122, 'X'), (6128, 'V'), (6138, 'X'), (6144, 'V'), (6150, 'X'), (6151, 'V'), (6155, 'I'), (6158, 'X'), (6159, 'I'), (6160, 'V'), (6170, 'X'), (6176, 'V'), (6265, 'X'), (6272, 'V'), (6315, 'X'), (6320, 'V'), (6390, 'X'), (6400, 'V'), (6431, 'X'), (6432, 'V'), (6444, 'X'), (6448, 'V'), (6460, 'X'), (6464, 'V'), (6465, 'X'), (6468, 'V'), (6510, 'X'), (6512, 'V'), (6517, 'X'), (6528, 'V'), (6572, 'X'), (6576, 'V'), (6602, 'X'), (6608, 'V'), (6619, 'X'), (6622, 'V'), (6684, 'X'), (6686, 'V'), (6751, 'X'), (6752, 'V'), (6781, 'X'), (6783, 'V'), (6794, 'X'), (6800, 'V'), (6810, 'X'), (6816, 'V'), (6830, 'X'), (6832, 'V'), (6863, 'X'), (6912, 'V'), (6989, 'X'), (6992, 'V'), (7039, 'X'), (7040, 'V'), (7156, 'X'), (7164, 'V'), (7224, 'X'), (7227, 'V'), (7242, 'X'), (7245, 'V'), (7296, 'M', '\u0432')]"
        ]
    },
    {
        "func_name": "_seg_15",
        "original": "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]",
        "mutated": [
            "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]",
            "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]",
            "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]",
            "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]",
            "def _seg_15() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(7297, 'M', '\u0434'), (7298, 'M', '\u043e'), (7299, 'M', '\u0441'), (7300, 'M', '\u0442'), (7302, 'M', '\u044a'), (7303, 'M', '\u0463'), (7304, 'M', '\ua64b'), (7305, 'X'), (7312, 'M', '\u10d0'), (7313, 'M', '\u10d1'), (7314, 'M', '\u10d2'), (7315, 'M', '\u10d3'), (7316, 'M', '\u10d4'), (7317, 'M', '\u10d5'), (7318, 'M', '\u10d6'), (7319, 'M', '\u10d7'), (7320, 'M', '\u10d8'), (7321, 'M', '\u10d9'), (7322, 'M', '\u10da'), (7323, 'M', '\u10db'), (7324, 'M', '\u10dc'), (7325, 'M', '\u10dd'), (7326, 'M', '\u10de'), (7327, 'M', '\u10df'), (7328, 'M', '\u10e0'), (7329, 'M', '\u10e1'), (7330, 'M', '\u10e2'), (7331, 'M', '\u10e3'), (7332, 'M', '\u10e4'), (7333, 'M', '\u10e5'), (7334, 'M', '\u10e6'), (7335, 'M', '\u10e7'), (7336, 'M', '\u10e8'), (7337, 'M', '\u10e9'), (7338, 'M', '\u10ea'), (7339, 'M', '\u10eb'), (7340, 'M', '\u10ec'), (7341, 'M', '\u10ed'), (7342, 'M', '\u10ee'), (7343, 'M', '\u10ef'), (7344, 'M', '\u10f0'), (7345, 'M', '\u10f1'), (7346, 'M', '\u10f2'), (7347, 'M', '\u10f3'), (7348, 'M', '\u10f4'), (7349, 'M', '\u10f5'), (7350, 'M', '\u10f6'), (7351, 'M', '\u10f7'), (7352, 'M', '\u10f8'), (7353, 'M', '\u10f9'), (7354, 'M', '\u10fa'), (7355, 'X'), (7357, 'M', '\u10fd'), (7358, 'M', '\u10fe'), (7359, 'M', '\u10ff'), (7360, 'V'), (7368, 'X'), (7376, 'V'), (7419, 'X'), (7424, 'V'), (7468, 'M', 'a'), (7469, 'M', '\u00e6'), (7470, 'M', 'b'), (7471, 'V'), (7472, 'M', 'd'), (7473, 'M', 'e'), (7474, 'M', '\u01dd'), (7475, 'M', 'g'), (7476, 'M', 'h'), (7477, 'M', 'i'), (7478, 'M', 'j'), (7479, 'M', 'k'), (7480, 'M', 'l'), (7481, 'M', 'm'), (7482, 'M', 'n'), (7483, 'V'), (7484, 'M', 'o'), (7485, 'M', '\u0223'), (7486, 'M', 'p'), (7487, 'M', 'r'), (7488, 'M', 't'), (7489, 'M', 'u'), (7490, 'M', 'w'), (7491, 'M', 'a'), (7492, 'M', '\u0250'), (7493, 'M', '\u0251'), (7494, 'M', '\u1d02'), (7495, 'M', 'b'), (7496, 'M', 'd'), (7497, 'M', 'e'), (7498, 'M', '\u0259'), (7499, 'M', '\u025b'), (7500, 'M', '\u025c'), (7501, 'M', 'g'), (7502, 'V'), (7503, 'M', 'k'), (7504, 'M', 'm'), (7505, 'M', '\u014b'), (7506, 'M', 'o'), (7507, 'M', '\u0254')]"
        ]
    },
    {
        "func_name": "_seg_16",
        "original": "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]",
        "mutated": [
            "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]",
            "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]",
            "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]",
            "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]",
            "def _seg_16() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(7508, 'M', '\u1d16'), (7509, 'M', '\u1d17'), (7510, 'M', 'p'), (7511, 'M', 't'), (7512, 'M', 'u'), (7513, 'M', '\u1d1d'), (7514, 'M', '\u026f'), (7515, 'M', 'v'), (7516, 'M', '\u1d25'), (7517, 'M', '\u03b2'), (7518, 'M', '\u03b3'), (7519, 'M', '\u03b4'), (7520, 'M', '\u03c6'), (7521, 'M', '\u03c7'), (7522, 'M', 'i'), (7523, 'M', 'r'), (7524, 'M', 'u'), (7525, 'M', 'v'), (7526, 'M', '\u03b2'), (7527, 'M', '\u03b3'), (7528, 'M', '\u03c1'), (7529, 'M', '\u03c6'), (7530, 'M', '\u03c7'), (7531, 'V'), (7544, 'M', '\u043d'), (7545, 'V'), (7579, 'M', '\u0252'), (7580, 'M', 'c'), (7581, 'M', '\u0255'), (7582, 'M', '\u00f0'), (7583, 'M', '\u025c'), (7584, 'M', 'f'), (7585, 'M', '\u025f'), (7586, 'M', '\u0261'), (7587, 'M', '\u0265'), (7588, 'M', '\u0268'), (7589, 'M', '\u0269'), (7590, 'M', '\u026a'), (7591, 'M', '\u1d7b'), (7592, 'M', '\u029d'), (7593, 'M', '\u026d'), (7594, 'M', '\u1d85'), (7595, 'M', '\u029f'), (7596, 'M', '\u0271'), (7597, 'M', '\u0270'), (7598, 'M', '\u0272'), (7599, 'M', '\u0273'), (7600, 'M', '\u0274'), (7601, 'M', '\u0275'), (7602, 'M', '\u0278'), (7603, 'M', '\u0282'), (7604, 'M', '\u0283'), (7605, 'M', '\u01ab'), (7606, 'M', '\u0289'), (7607, 'M', '\u028a'), (7608, 'M', '\u1d1c'), (7609, 'M', '\u028b'), (7610, 'M', '\u028c'), (7611, 'M', 'z'), (7612, 'M', '\u0290'), (7613, 'M', '\u0291'), (7614, 'M', '\u0292'), (7615, 'M', '\u03b8'), (7616, 'V'), (7680, 'M', '\u1e01'), (7681, 'V'), (7682, 'M', '\u1e03'), (7683, 'V'), (7684, 'M', '\u1e05'), (7685, 'V'), (7686, 'M', '\u1e07'), (7687, 'V'), (7688, 'M', '\u1e09'), (7689, 'V'), (7690, 'M', '\u1e0b'), (7691, 'V'), (7692, 'M', '\u1e0d'), (7693, 'V'), (7694, 'M', '\u1e0f'), (7695, 'V'), (7696, 'M', '\u1e11'), (7697, 'V'), (7698, 'M', '\u1e13'), (7699, 'V'), (7700, 'M', '\u1e15'), (7701, 'V'), (7702, 'M', '\u1e17'), (7703, 'V'), (7704, 'M', '\u1e19'), (7705, 'V'), (7706, 'M', '\u1e1b'), (7707, 'V'), (7708, 'M', '\u1e1d'), (7709, 'V'), (7710, 'M', '\u1e1f'), (7711, 'V'), (7712, 'M', '\u1e21'), (7713, 'V'), (7714, 'M', '\u1e23'), (7715, 'V')]"
        ]
    },
    {
        "func_name": "_seg_17",
        "original": "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]",
        "mutated": [
            "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]",
            "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]",
            "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]",
            "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]",
            "def _seg_17() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(7716, 'M', '\u1e25'), (7717, 'V'), (7718, 'M', '\u1e27'), (7719, 'V'), (7720, 'M', '\u1e29'), (7721, 'V'), (7722, 'M', '\u1e2b'), (7723, 'V'), (7724, 'M', '\u1e2d'), (7725, 'V'), (7726, 'M', '\u1e2f'), (7727, 'V'), (7728, 'M', '\u1e31'), (7729, 'V'), (7730, 'M', '\u1e33'), (7731, 'V'), (7732, 'M', '\u1e35'), (7733, 'V'), (7734, 'M', '\u1e37'), (7735, 'V'), (7736, 'M', '\u1e39'), (7737, 'V'), (7738, 'M', '\u1e3b'), (7739, 'V'), (7740, 'M', '\u1e3d'), (7741, 'V'), (7742, 'M', '\u1e3f'), (7743, 'V'), (7744, 'M', '\u1e41'), (7745, 'V'), (7746, 'M', '\u1e43'), (7747, 'V'), (7748, 'M', '\u1e45'), (7749, 'V'), (7750, 'M', '\u1e47'), (7751, 'V'), (7752, 'M', '\u1e49'), (7753, 'V'), (7754, 'M', '\u1e4b'), (7755, 'V'), (7756, 'M', '\u1e4d'), (7757, 'V'), (7758, 'M', '\u1e4f'), (7759, 'V'), (7760, 'M', '\u1e51'), (7761, 'V'), (7762, 'M', '\u1e53'), (7763, 'V'), (7764, 'M', '\u1e55'), (7765, 'V'), (7766, 'M', '\u1e57'), (7767, 'V'), (7768, 'M', '\u1e59'), (7769, 'V'), (7770, 'M', '\u1e5b'), (7771, 'V'), (7772, 'M', '\u1e5d'), (7773, 'V'), (7774, 'M', '\u1e5f'), (7775, 'V'), (7776, 'M', '\u1e61'), (7777, 'V'), (7778, 'M', '\u1e63'), (7779, 'V'), (7780, 'M', '\u1e65'), (7781, 'V'), (7782, 'M', '\u1e67'), (7783, 'V'), (7784, 'M', '\u1e69'), (7785, 'V'), (7786, 'M', '\u1e6b'), (7787, 'V'), (7788, 'M', '\u1e6d'), (7789, 'V'), (7790, 'M', '\u1e6f'), (7791, 'V'), (7792, 'M', '\u1e71'), (7793, 'V'), (7794, 'M', '\u1e73'), (7795, 'V'), (7796, 'M', '\u1e75'), (7797, 'V'), (7798, 'M', '\u1e77'), (7799, 'V'), (7800, 'M', '\u1e79'), (7801, 'V'), (7802, 'M', '\u1e7b'), (7803, 'V'), (7804, 'M', '\u1e7d'), (7805, 'V'), (7806, 'M', '\u1e7f'), (7807, 'V'), (7808, 'M', '\u1e81'), (7809, 'V'), (7810, 'M', '\u1e83'), (7811, 'V'), (7812, 'M', '\u1e85'), (7813, 'V'), (7814, 'M', '\u1e87'), (7815, 'V')]"
        ]
    },
    {
        "func_name": "_seg_18",
        "original": "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]",
        "mutated": [
            "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]",
            "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]",
            "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]",
            "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]",
            "def _seg_18() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(7816, 'M', '\u1e89'), (7817, 'V'), (7818, 'M', '\u1e8b'), (7819, 'V'), (7820, 'M', '\u1e8d'), (7821, 'V'), (7822, 'M', '\u1e8f'), (7823, 'V'), (7824, 'M', '\u1e91'), (7825, 'V'), (7826, 'M', '\u1e93'), (7827, 'V'), (7828, 'M', '\u1e95'), (7829, 'V'), (7834, 'M', 'a\u02be'), (7835, 'M', '\u1e61'), (7836, 'V'), (7838, 'M', 'ss'), (7839, 'V'), (7840, 'M', '\u1ea1'), (7841, 'V'), (7842, 'M', '\u1ea3'), (7843, 'V'), (7844, 'M', '\u1ea5'), (7845, 'V'), (7846, 'M', '\u1ea7'), (7847, 'V'), (7848, 'M', '\u1ea9'), (7849, 'V'), (7850, 'M', '\u1eab'), (7851, 'V'), (7852, 'M', '\u1ead'), (7853, 'V'), (7854, 'M', '\u1eaf'), (7855, 'V'), (7856, 'M', '\u1eb1'), (7857, 'V'), (7858, 'M', '\u1eb3'), (7859, 'V'), (7860, 'M', '\u1eb5'), (7861, 'V'), (7862, 'M', '\u1eb7'), (7863, 'V'), (7864, 'M', '\u1eb9'), (7865, 'V'), (7866, 'M', '\u1ebb'), (7867, 'V'), (7868, 'M', '\u1ebd'), (7869, 'V'), (7870, 'M', '\u1ebf'), (7871, 'V'), (7872, 'M', '\u1ec1'), (7873, 'V'), (7874, 'M', '\u1ec3'), (7875, 'V'), (7876, 'M', '\u1ec5'), (7877, 'V'), (7878, 'M', '\u1ec7'), (7879, 'V'), (7880, 'M', '\u1ec9'), (7881, 'V'), (7882, 'M', '\u1ecb'), (7883, 'V'), (7884, 'M', '\u1ecd'), (7885, 'V'), (7886, 'M', '\u1ecf'), (7887, 'V'), (7888, 'M', '\u1ed1'), (7889, 'V'), (7890, 'M', '\u1ed3'), (7891, 'V'), (7892, 'M', '\u1ed5'), (7893, 'V'), (7894, 'M', '\u1ed7'), (7895, 'V'), (7896, 'M', '\u1ed9'), (7897, 'V'), (7898, 'M', '\u1edb'), (7899, 'V'), (7900, 'M', '\u1edd'), (7901, 'V'), (7902, 'M', '\u1edf'), (7903, 'V'), (7904, 'M', '\u1ee1'), (7905, 'V'), (7906, 'M', '\u1ee3'), (7907, 'V'), (7908, 'M', '\u1ee5'), (7909, 'V'), (7910, 'M', '\u1ee7'), (7911, 'V'), (7912, 'M', '\u1ee9'), (7913, 'V'), (7914, 'M', '\u1eeb'), (7915, 'V'), (7916, 'M', '\u1eed'), (7917, 'V'), (7918, 'M', '\u1eef'), (7919, 'V'), (7920, 'M', '\u1ef1')]"
        ]
    },
    {
        "func_name": "_seg_19",
        "original": "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]",
        "mutated": [
            "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]",
            "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]",
            "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]",
            "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]",
            "def _seg_19() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(7921, 'V'), (7922, 'M', '\u1ef3'), (7923, 'V'), (7924, 'M', '\u1ef5'), (7925, 'V'), (7926, 'M', '\u1ef7'), (7927, 'V'), (7928, 'M', '\u1ef9'), (7929, 'V'), (7930, 'M', '\u1efb'), (7931, 'V'), (7932, 'M', '\u1efd'), (7933, 'V'), (7934, 'M', '\u1eff'), (7935, 'V'), (7944, 'M', '\u1f00'), (7945, 'M', '\u1f01'), (7946, 'M', '\u1f02'), (7947, 'M', '\u1f03'), (7948, 'M', '\u1f04'), (7949, 'M', '\u1f05'), (7950, 'M', '\u1f06'), (7951, 'M', '\u1f07'), (7952, 'V'), (7958, 'X'), (7960, 'M', '\u1f10'), (7961, 'M', '\u1f11'), (7962, 'M', '\u1f12'), (7963, 'M', '\u1f13'), (7964, 'M', '\u1f14'), (7965, 'M', '\u1f15'), (7966, 'X'), (7968, 'V'), (7976, 'M', '\u1f20'), (7977, 'M', '\u1f21'), (7978, 'M', '\u1f22'), (7979, 'M', '\u1f23'), (7980, 'M', '\u1f24'), (7981, 'M', '\u1f25'), (7982, 'M', '\u1f26'), (7983, 'M', '\u1f27'), (7984, 'V'), (7992, 'M', '\u1f30'), (7993, 'M', '\u1f31'), (7994, 'M', '\u1f32'), (7995, 'M', '\u1f33'), (7996, 'M', '\u1f34'), (7997, 'M', '\u1f35'), (7998, 'M', '\u1f36'), (7999, 'M', '\u1f37'), (8000, 'V'), (8006, 'X'), (8008, 'M', '\u1f40'), (8009, 'M', '\u1f41'), (8010, 'M', '\u1f42'), (8011, 'M', '\u1f43'), (8012, 'M', '\u1f44'), (8013, 'M', '\u1f45'), (8014, 'X'), (8016, 'V'), (8024, 'X'), (8025, 'M', '\u1f51'), (8026, 'X'), (8027, 'M', '\u1f53'), (8028, 'X'), (8029, 'M', '\u1f55'), (8030, 'X'), (8031, 'M', '\u1f57'), (8032, 'V'), (8040, 'M', '\u1f60'), (8041, 'M', '\u1f61'), (8042, 'M', '\u1f62'), (8043, 'M', '\u1f63'), (8044, 'M', '\u1f64'), (8045, 'M', '\u1f65'), (8046, 'M', '\u1f66'), (8047, 'M', '\u1f67'), (8048, 'V'), (8049, 'M', '\u03ac'), (8050, 'V'), (8051, 'M', '\u03ad'), (8052, 'V'), (8053, 'M', '\u03ae'), (8054, 'V'), (8055, 'M', '\u03af'), (8056, 'V'), (8057, 'M', '\u03cc'), (8058, 'V'), (8059, 'M', '\u03cd'), (8060, 'V'), (8061, 'M', '\u03ce'), (8062, 'X'), (8064, 'M', '\u1f00\u03b9'), (8065, 'M', '\u1f01\u03b9'), (8066, 'M', '\u1f02\u03b9'), (8067, 'M', '\u1f03\u03b9'), (8068, 'M', '\u1f04\u03b9'), (8069, 'M', '\u1f05\u03b9'), (8070, 'M', '\u1f06\u03b9'), (8071, 'M', '\u1f07\u03b9')]"
        ]
    },
    {
        "func_name": "_seg_20",
        "original": "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]",
        "mutated": [
            "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]",
            "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]",
            "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]",
            "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]",
            "def _seg_20() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(8072, 'M', '\u1f00\u03b9'), (8073, 'M', '\u1f01\u03b9'), (8074, 'M', '\u1f02\u03b9'), (8075, 'M', '\u1f03\u03b9'), (8076, 'M', '\u1f04\u03b9'), (8077, 'M', '\u1f05\u03b9'), (8078, 'M', '\u1f06\u03b9'), (8079, 'M', '\u1f07\u03b9'), (8080, 'M', '\u1f20\u03b9'), (8081, 'M', '\u1f21\u03b9'), (8082, 'M', '\u1f22\u03b9'), (8083, 'M', '\u1f23\u03b9'), (8084, 'M', '\u1f24\u03b9'), (8085, 'M', '\u1f25\u03b9'), (8086, 'M', '\u1f26\u03b9'), (8087, 'M', '\u1f27\u03b9'), (8088, 'M', '\u1f20\u03b9'), (8089, 'M', '\u1f21\u03b9'), (8090, 'M', '\u1f22\u03b9'), (8091, 'M', '\u1f23\u03b9'), (8092, 'M', '\u1f24\u03b9'), (8093, 'M', '\u1f25\u03b9'), (8094, 'M', '\u1f26\u03b9'), (8095, 'M', '\u1f27\u03b9'), (8096, 'M', '\u1f60\u03b9'), (8097, 'M', '\u1f61\u03b9'), (8098, 'M', '\u1f62\u03b9'), (8099, 'M', '\u1f63\u03b9'), (8100, 'M', '\u1f64\u03b9'), (8101, 'M', '\u1f65\u03b9'), (8102, 'M', '\u1f66\u03b9'), (8103, 'M', '\u1f67\u03b9'), (8104, 'M', '\u1f60\u03b9'), (8105, 'M', '\u1f61\u03b9'), (8106, 'M', '\u1f62\u03b9'), (8107, 'M', '\u1f63\u03b9'), (8108, 'M', '\u1f64\u03b9'), (8109, 'M', '\u1f65\u03b9'), (8110, 'M', '\u1f66\u03b9'), (8111, 'M', '\u1f67\u03b9'), (8112, 'V'), (8114, 'M', '\u1f70\u03b9'), (8115, 'M', '\u03b1\u03b9'), (8116, 'M', '\u03ac\u03b9'), (8117, 'X'), (8118, 'V'), (8119, 'M', '\u1fb6\u03b9'), (8120, 'M', '\u1fb0'), (8121, 'M', '\u1fb1'), (8122, 'M', '\u1f70'), (8123, 'M', '\u03ac'), (8124, 'M', '\u03b1\u03b9'), (8125, '3', ' \u0313'), (8126, 'M', '\u03b9'), (8127, '3', ' \u0313'), (8128, '3', ' \u0342'), (8129, '3', ' \u0308\u0342'), (8130, 'M', '\u1f74\u03b9'), (8131, 'M', '\u03b7\u03b9'), (8132, 'M', '\u03ae\u03b9'), (8133, 'X'), (8134, 'V'), (8135, 'M', '\u1fc6\u03b9'), (8136, 'M', '\u1f72'), (8137, 'M', '\u03ad'), (8138, 'M', '\u1f74'), (8139, 'M', '\u03ae'), (8140, 'M', '\u03b7\u03b9'), (8141, '3', ' \u0313\u0300'), (8142, '3', ' \u0313\u0301'), (8143, '3', ' \u0313\u0342'), (8144, 'V'), (8147, 'M', '\u0390'), (8148, 'X'), (8150, 'V'), (8152, 'M', '\u1fd0'), (8153, 'M', '\u1fd1'), (8154, 'M', '\u1f76'), (8155, 'M', '\u03af'), (8156, 'X'), (8157, '3', ' \u0314\u0300'), (8158, '3', ' \u0314\u0301'), (8159, '3', ' \u0314\u0342'), (8160, 'V'), (8163, 'M', '\u03b0'), (8164, 'V'), (8168, 'M', '\u1fe0'), (8169, 'M', '\u1fe1'), (8170, 'M', '\u1f7a'), (8171, 'M', '\u03cd'), (8172, 'M', '\u1fe5'), (8173, '3', ' \u0308\u0300'), (8174, '3', ' \u0308\u0301'), (8175, '3', '`'), (8176, 'X'), (8178, 'M', '\u1f7c\u03b9'), (8179, 'M', '\u03c9\u03b9'), (8180, 'M', '\u03ce\u03b9'), (8181, 'X'), (8182, 'V')]"
        ]
    },
    {
        "func_name": "_seg_21",
        "original": "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]",
        "mutated": [
            "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]",
            "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]",
            "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]",
            "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]",
            "def _seg_21() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(8183, 'M', '\u1ff6\u03b9'), (8184, 'M', '\u1f78'), (8185, 'M', '\u03cc'), (8186, 'M', '\u1f7c'), (8187, 'M', '\u03ce'), (8188, 'M', '\u03c9\u03b9'), (8189, '3', ' \u0301'), (8190, '3', ' \u0314'), (8191, 'X'), (8192, '3', ' '), (8203, 'I'), (8204, 'D', ''), (8206, 'X'), (8208, 'V'), (8209, 'M', '\u2010'), (8210, 'V'), (8215, '3', ' \u0333'), (8216, 'V'), (8228, 'X'), (8231, 'V'), (8232, 'X'), (8239, '3', ' '), (8240, 'V'), (8243, 'M', '\u2032\u2032'), (8244, 'M', '\u2032\u2032\u2032'), (8245, 'V'), (8246, 'M', '\u2035\u2035'), (8247, 'M', '\u2035\u2035\u2035'), (8248, 'V'), (8252, '3', '!!'), (8253, 'V'), (8254, '3', ' \u0305'), (8255, 'V'), (8263, '3', '??'), (8264, '3', '?!'), (8265, '3', '!?'), (8266, 'V'), (8279, 'M', '\u2032\u2032\u2032\u2032'), (8280, 'V'), (8287, '3', ' '), (8288, 'I'), (8289, 'X'), (8292, 'I'), (8293, 'X'), (8304, 'M', '0'), (8305, 'M', 'i'), (8306, 'X'), (8308, 'M', '4'), (8309, 'M', '5'), (8310, 'M', '6'), (8311, 'M', '7'), (8312, 'M', '8'), (8313, 'M', '9'), (8314, '3', '+'), (8315, 'M', '\u2212'), (8316, '3', '='), (8317, '3', '('), (8318, '3', ')'), (8319, 'M', 'n'), (8320, 'M', '0'), (8321, 'M', '1'), (8322, 'M', '2'), (8323, 'M', '3'), (8324, 'M', '4'), (8325, 'M', '5'), (8326, 'M', '6'), (8327, 'M', '7'), (8328, 'M', '8'), (8329, 'M', '9'), (8330, '3', '+'), (8331, 'M', '\u2212'), (8332, '3', '='), (8333, '3', '('), (8334, '3', ')'), (8335, 'X'), (8336, 'M', 'a'), (8337, 'M', 'e'), (8338, 'M', 'o'), (8339, 'M', 'x'), (8340, 'M', '\u0259'), (8341, 'M', 'h'), (8342, 'M', 'k'), (8343, 'M', 'l'), (8344, 'M', 'm'), (8345, 'M', 'n'), (8346, 'M', 'p'), (8347, 'M', 's'), (8348, 'M', 't'), (8349, 'X'), (8352, 'V'), (8360, 'M', 'rs'), (8361, 'V'), (8385, 'X'), (8400, 'V'), (8433, 'X'), (8448, '3', 'a/c'), (8449, '3', 'a/s'), (8450, 'M', 'c'), (8451, 'M', '\u00b0c'), (8452, 'V')]"
        ]
    },
    {
        "func_name": "_seg_22",
        "original": "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]",
        "mutated": [
            "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]",
            "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]",
            "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]",
            "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]",
            "def _seg_22() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(8453, '3', 'c/o'), (8454, '3', 'c/u'), (8455, 'M', '\u025b'), (8456, 'V'), (8457, 'M', '\u00b0f'), (8458, 'M', 'g'), (8459, 'M', 'h'), (8463, 'M', '\u0127'), (8464, 'M', 'i'), (8466, 'M', 'l'), (8468, 'V'), (8469, 'M', 'n'), (8470, 'M', 'no'), (8471, 'V'), (8473, 'M', 'p'), (8474, 'M', 'q'), (8475, 'M', 'r'), (8478, 'V'), (8480, 'M', 'sm'), (8481, 'M', 'tel'), (8482, 'M', 'tm'), (8483, 'V'), (8484, 'M', 'z'), (8485, 'V'), (8486, 'M', '\u03c9'), (8487, 'V'), (8488, 'M', 'z'), (8489, 'V'), (8490, 'M', 'k'), (8491, 'M', '\u00e5'), (8492, 'M', 'b'), (8493, 'M', 'c'), (8494, 'V'), (8495, 'M', 'e'), (8497, 'M', 'f'), (8498, 'X'), (8499, 'M', 'm'), (8500, 'M', 'o'), (8501, 'M', '\u05d0'), (8502, 'M', '\u05d1'), (8503, 'M', '\u05d2'), (8504, 'M', '\u05d3'), (8505, 'M', 'i'), (8506, 'V'), (8507, 'M', 'fax'), (8508, 'M', '\u03c0'), (8509, 'M', '\u03b3'), (8511, 'M', '\u03c0'), (8512, 'M', '\u2211'), (8513, 'V'), (8517, 'M', 'd'), (8519, 'M', 'e'), (8520, 'M', 'i'), (8521, 'M', 'j'), (8522, 'V'), (8528, 'M', '1\u20447'), (8529, 'M', '1\u20449'), (8530, 'M', '1\u204410'), (8531, 'M', '1\u20443'), (8532, 'M', '2\u20443'), (8533, 'M', '1\u20445'), (8534, 'M', '2\u20445'), (8535, 'M', '3\u20445'), (8536, 'M', '4\u20445'), (8537, 'M', '1\u20446'), (8538, 'M', '5\u20446'), (8539, 'M', '1\u20448'), (8540, 'M', '3\u20448'), (8541, 'M', '5\u20448'), (8542, 'M', '7\u20448'), (8543, 'M', '1\u2044'), (8544, 'M', 'i'), (8545, 'M', 'ii'), (8546, 'M', 'iii'), (8547, 'M', 'iv'), (8548, 'M', 'v'), (8549, 'M', 'vi'), (8550, 'M', 'vii'), (8551, 'M', 'viii'), (8552, 'M', 'ix'), (8553, 'M', 'x'), (8554, 'M', 'xi'), (8555, 'M', 'xii'), (8556, 'M', 'l'), (8557, 'M', 'c'), (8558, 'M', 'd'), (8559, 'M', 'm'), (8560, 'M', 'i'), (8561, 'M', 'ii'), (8562, 'M', 'iii'), (8563, 'M', 'iv'), (8564, 'M', 'v'), (8565, 'M', 'vi'), (8566, 'M', 'vii'), (8567, 'M', 'viii'), (8568, 'M', 'ix'), (8569, 'M', 'x'), (8570, 'M', 'xi'), (8571, 'M', 'xii'), (8572, 'M', 'l')]"
        ]
    },
    {
        "func_name": "_seg_23",
        "original": "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]",
        "mutated": [
            "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]",
            "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]",
            "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]",
            "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]",
            "def _seg_23() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(8573, 'M', 'c'), (8574, 'M', 'd'), (8575, 'M', 'm'), (8576, 'V'), (8579, 'X'), (8580, 'V'), (8585, 'M', '0\u20443'), (8586, 'V'), (8588, 'X'), (8592, 'V'), (8748, 'M', '\u222b\u222b'), (8749, 'M', '\u222b\u222b\u222b'), (8750, 'V'), (8751, 'M', '\u222e\u222e'), (8752, 'M', '\u222e\u222e\u222e'), (8753, 'V'), (8800, '3'), (8801, 'V'), (8814, '3'), (8816, 'V'), (9001, 'M', '\u3008'), (9002, 'M', '\u3009'), (9003, 'V'), (9255, 'X'), (9280, 'V'), (9291, 'X'), (9312, 'M', '1'), (9313, 'M', '2'), (9314, 'M', '3'), (9315, 'M', '4'), (9316, 'M', '5'), (9317, 'M', '6'), (9318, 'M', '7'), (9319, 'M', '8'), (9320, 'M', '9'), (9321, 'M', '10'), (9322, 'M', '11'), (9323, 'M', '12'), (9324, 'M', '13'), (9325, 'M', '14'), (9326, 'M', '15'), (9327, 'M', '16'), (9328, 'M', '17'), (9329, 'M', '18'), (9330, 'M', '19'), (9331, 'M', '20'), (9332, '3', '(1)'), (9333, '3', '(2)'), (9334, '3', '(3)'), (9335, '3', '(4)'), (9336, '3', '(5)'), (9337, '3', '(6)'), (9338, '3', '(7)'), (9339, '3', '(8)'), (9340, '3', '(9)'), (9341, '3', '(10)'), (9342, '3', '(11)'), (9343, '3', '(12)'), (9344, '3', '(13)'), (9345, '3', '(14)'), (9346, '3', '(15)'), (9347, '3', '(16)'), (9348, '3', '(17)'), (9349, '3', '(18)'), (9350, '3', '(19)'), (9351, '3', '(20)'), (9352, 'X'), (9372, '3', '(a)'), (9373, '3', '(b)'), (9374, '3', '(c)'), (9375, '3', '(d)'), (9376, '3', '(e)'), (9377, '3', '(f)'), (9378, '3', '(g)'), (9379, '3', '(h)'), (9380, '3', '(i)'), (9381, '3', '(j)'), (9382, '3', '(k)'), (9383, '3', '(l)'), (9384, '3', '(m)'), (9385, '3', '(n)'), (9386, '3', '(o)'), (9387, '3', '(p)'), (9388, '3', '(q)'), (9389, '3', '(r)'), (9390, '3', '(s)'), (9391, '3', '(t)'), (9392, '3', '(u)'), (9393, '3', '(v)'), (9394, '3', '(w)'), (9395, '3', '(x)'), (9396, '3', '(y)'), (9397, '3', '(z)'), (9398, 'M', 'a'), (9399, 'M', 'b'), (9400, 'M', 'c'), (9401, 'M', 'd'), (9402, 'M', 'e'), (9403, 'M', 'f'), (9404, 'M', 'g')]"
        ]
    },
    {
        "func_name": "_seg_24",
        "original": "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]",
        "mutated": [
            "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]",
            "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]",
            "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]",
            "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]",
            "def _seg_24() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(9405, 'M', 'h'), (9406, 'M', 'i'), (9407, 'M', 'j'), (9408, 'M', 'k'), (9409, 'M', 'l'), (9410, 'M', 'm'), (9411, 'M', 'n'), (9412, 'M', 'o'), (9413, 'M', 'p'), (9414, 'M', 'q'), (9415, 'M', 'r'), (9416, 'M', 's'), (9417, 'M', 't'), (9418, 'M', 'u'), (9419, 'M', 'v'), (9420, 'M', 'w'), (9421, 'M', 'x'), (9422, 'M', 'y'), (9423, 'M', 'z'), (9424, 'M', 'a'), (9425, 'M', 'b'), (9426, 'M', 'c'), (9427, 'M', 'd'), (9428, 'M', 'e'), (9429, 'M', 'f'), (9430, 'M', 'g'), (9431, 'M', 'h'), (9432, 'M', 'i'), (9433, 'M', 'j'), (9434, 'M', 'k'), (9435, 'M', 'l'), (9436, 'M', 'm'), (9437, 'M', 'n'), (9438, 'M', 'o'), (9439, 'M', 'p'), (9440, 'M', 'q'), (9441, 'M', 'r'), (9442, 'M', 's'), (9443, 'M', 't'), (9444, 'M', 'u'), (9445, 'M', 'v'), (9446, 'M', 'w'), (9447, 'M', 'x'), (9448, 'M', 'y'), (9449, 'M', 'z'), (9450, 'M', '0'), (9451, 'V'), (10764, 'M', '\u222b\u222b\u222b\u222b'), (10765, 'V'), (10868, '3', '::='), (10869, '3', '=='), (10870, '3', '==='), (10871, 'V'), (10972, 'M', '\u2add\u0338'), (10973, 'V'), (11124, 'X'), (11126, 'V'), (11158, 'X'), (11159, 'V'), (11264, 'M', '\u2c30'), (11265, 'M', '\u2c31'), (11266, 'M', '\u2c32'), (11267, 'M', '\u2c33'), (11268, 'M', '\u2c34'), (11269, 'M', '\u2c35'), (11270, 'M', '\u2c36'), (11271, 'M', '\u2c37'), (11272, 'M', '\u2c38'), (11273, 'M', '\u2c39'), (11274, 'M', '\u2c3a'), (11275, 'M', '\u2c3b'), (11276, 'M', '\u2c3c'), (11277, 'M', '\u2c3d'), (11278, 'M', '\u2c3e'), (11279, 'M', '\u2c3f'), (11280, 'M', '\u2c40'), (11281, 'M', '\u2c41'), (11282, 'M', '\u2c42'), (11283, 'M', '\u2c43'), (11284, 'M', '\u2c44'), (11285, 'M', '\u2c45'), (11286, 'M', '\u2c46'), (11287, 'M', '\u2c47'), (11288, 'M', '\u2c48'), (11289, 'M', '\u2c49'), (11290, 'M', '\u2c4a'), (11291, 'M', '\u2c4b'), (11292, 'M', '\u2c4c'), (11293, 'M', '\u2c4d'), (11294, 'M', '\u2c4e'), (11295, 'M', '\u2c4f'), (11296, 'M', '\u2c50'), (11297, 'M', '\u2c51'), (11298, 'M', '\u2c52'), (11299, 'M', '\u2c53'), (11300, 'M', '\u2c54'), (11301, 'M', '\u2c55'), (11302, 'M', '\u2c56'), (11303, 'M', '\u2c57'), (11304, 'M', '\u2c58')]"
        ]
    },
    {
        "func_name": "_seg_25",
        "original": "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]",
        "mutated": [
            "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]",
            "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]",
            "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]",
            "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]",
            "def _seg_25() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(11305, 'M', '\u2c59'), (11306, 'M', '\u2c5a'), (11307, 'M', '\u2c5b'), (11308, 'M', '\u2c5c'), (11309, 'M', '\u2c5d'), (11310, 'M', '\u2c5e'), (11311, 'M', '\\u2c5f'), (11312, 'V'), (11360, 'M', '\u2c61'), (11361, 'V'), (11362, 'M', '\u026b'), (11363, 'M', '\u1d7d'), (11364, 'M', '\u027d'), (11365, 'V'), (11367, 'M', '\u2c68'), (11368, 'V'), (11369, 'M', '\u2c6a'), (11370, 'V'), (11371, 'M', '\u2c6c'), (11372, 'V'), (11373, 'M', '\u0251'), (11374, 'M', '\u0271'), (11375, 'M', '\u0250'), (11376, 'M', '\u0252'), (11377, 'V'), (11378, 'M', '\u2c73'), (11379, 'V'), (11381, 'M', '\u2c76'), (11382, 'V'), (11388, 'M', 'j'), (11389, 'M', 'v'), (11390, 'M', '\u023f'), (11391, 'M', '\u0240'), (11392, 'M', '\u2c81'), (11393, 'V'), (11394, 'M', '\u2c83'), (11395, 'V'), (11396, 'M', '\u2c85'), (11397, 'V'), (11398, 'M', '\u2c87'), (11399, 'V'), (11400, 'M', '\u2c89'), (11401, 'V'), (11402, 'M', '\u2c8b'), (11403, 'V'), (11404, 'M', '\u2c8d'), (11405, 'V'), (11406, 'M', '\u2c8f'), (11407, 'V'), (11408, 'M', '\u2c91'), (11409, 'V'), (11410, 'M', '\u2c93'), (11411, 'V'), (11412, 'M', '\u2c95'), (11413, 'V'), (11414, 'M', '\u2c97'), (11415, 'V'), (11416, 'M', '\u2c99'), (11417, 'V'), (11418, 'M', '\u2c9b'), (11419, 'V'), (11420, 'M', '\u2c9d'), (11421, 'V'), (11422, 'M', '\u2c9f'), (11423, 'V'), (11424, 'M', '\u2ca1'), (11425, 'V'), (11426, 'M', '\u2ca3'), (11427, 'V'), (11428, 'M', '\u2ca5'), (11429, 'V'), (11430, 'M', '\u2ca7'), (11431, 'V'), (11432, 'M', '\u2ca9'), (11433, 'V'), (11434, 'M', '\u2cab'), (11435, 'V'), (11436, 'M', '\u2cad'), (11437, 'V'), (11438, 'M', '\u2caf'), (11439, 'V'), (11440, 'M', '\u2cb1'), (11441, 'V'), (11442, 'M', '\u2cb3'), (11443, 'V'), (11444, 'M', '\u2cb5'), (11445, 'V'), (11446, 'M', '\u2cb7'), (11447, 'V'), (11448, 'M', '\u2cb9'), (11449, 'V'), (11450, 'M', '\u2cbb'), (11451, 'V'), (11452, 'M', '\u2cbd'), (11453, 'V'), (11454, 'M', '\u2cbf'), (11455, 'V'), (11456, 'M', '\u2cc1'), (11457, 'V'), (11458, 'M', '\u2cc3')]"
        ]
    },
    {
        "func_name": "_seg_26",
        "original": "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]",
        "mutated": [
            "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]",
            "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]",
            "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]",
            "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]",
            "def _seg_26() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(11459, 'V'), (11460, 'M', '\u2cc5'), (11461, 'V'), (11462, 'M', '\u2cc7'), (11463, 'V'), (11464, 'M', '\u2cc9'), (11465, 'V'), (11466, 'M', '\u2ccb'), (11467, 'V'), (11468, 'M', '\u2ccd'), (11469, 'V'), (11470, 'M', '\u2ccf'), (11471, 'V'), (11472, 'M', '\u2cd1'), (11473, 'V'), (11474, 'M', '\u2cd3'), (11475, 'V'), (11476, 'M', '\u2cd5'), (11477, 'V'), (11478, 'M', '\u2cd7'), (11479, 'V'), (11480, 'M', '\u2cd9'), (11481, 'V'), (11482, 'M', '\u2cdb'), (11483, 'V'), (11484, 'M', '\u2cdd'), (11485, 'V'), (11486, 'M', '\u2cdf'), (11487, 'V'), (11488, 'M', '\u2ce1'), (11489, 'V'), (11490, 'M', '\u2ce3'), (11491, 'V'), (11499, 'M', '\u2cec'), (11500, 'V'), (11501, 'M', '\u2cee'), (11502, 'V'), (11506, 'M', '\u2cf3'), (11507, 'V'), (11508, 'X'), (11513, 'V'), (11558, 'X'), (11559, 'V'), (11560, 'X'), (11565, 'V'), (11566, 'X'), (11568, 'V'), (11624, 'X'), (11631, 'M', '\u2d61'), (11632, 'V'), (11633, 'X'), (11647, 'V'), (11671, 'X'), (11680, 'V'), (11687, 'X'), (11688, 'V'), (11695, 'X'), (11696, 'V'), (11703, 'X'), (11704, 'V'), (11711, 'X'), (11712, 'V'), (11719, 'X'), (11720, 'V'), (11727, 'X'), (11728, 'V'), (11735, 'X'), (11736, 'V'), (11743, 'X'), (11744, 'V'), (11870, 'X'), (11904, 'V'), (11930, 'X'), (11931, 'V'), (11935, 'M', '\u6bcd'), (11936, 'V'), (12019, 'M', '\u9f9f'), (12020, 'X'), (12032, 'M', '\u4e00'), (12033, 'M', '\u4e28'), (12034, 'M', '\u4e36'), (12035, 'M', '\u4e3f'), (12036, 'M', '\u4e59'), (12037, 'M', '\u4e85'), (12038, 'M', '\u4e8c'), (12039, 'M', '\u4ea0'), (12040, 'M', '\u4eba'), (12041, 'M', '\u513f'), (12042, 'M', '\u5165'), (12043, 'M', '\u516b'), (12044, 'M', '\u5182'), (12045, 'M', '\u5196'), (12046, 'M', '\u51ab'), (12047, 'M', '\u51e0'), (12048, 'M', '\u51f5'), (12049, 'M', '\u5200'), (12050, 'M', '\u529b'), (12051, 'M', '\u52f9'), (12052, 'M', '\u5315'), (12053, 'M', '\u531a')]"
        ]
    },
    {
        "func_name": "_seg_27",
        "original": "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]",
        "mutated": [
            "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]",
            "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]",
            "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]",
            "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]",
            "def _seg_27() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12054, 'M', '\u5338'), (12055, 'M', '\u5341'), (12056, 'M', '\u535c'), (12057, 'M', '\u5369'), (12058, 'M', '\u5382'), (12059, 'M', '\u53b6'), (12060, 'M', '\u53c8'), (12061, 'M', '\u53e3'), (12062, 'M', '\u56d7'), (12063, 'M', '\u571f'), (12064, 'M', '\u58eb'), (12065, 'M', '\u5902'), (12066, 'M', '\u590a'), (12067, 'M', '\u5915'), (12068, 'M', '\u5927'), (12069, 'M', '\u5973'), (12070, 'M', '\u5b50'), (12071, 'M', '\u5b80'), (12072, 'M', '\u5bf8'), (12073, 'M', '\u5c0f'), (12074, 'M', '\u5c22'), (12075, 'M', '\u5c38'), (12076, 'M', '\u5c6e'), (12077, 'M', '\u5c71'), (12078, 'M', '\u5ddb'), (12079, 'M', '\u5de5'), (12080, 'M', '\u5df1'), (12081, 'M', '\u5dfe'), (12082, 'M', '\u5e72'), (12083, 'M', '\u5e7a'), (12084, 'M', '\u5e7f'), (12085, 'M', '\u5ef4'), (12086, 'M', '\u5efe'), (12087, 'M', '\u5f0b'), (12088, 'M', '\u5f13'), (12089, 'M', '\u5f50'), (12090, 'M', '\u5f61'), (12091, 'M', '\u5f73'), (12092, 'M', '\u5fc3'), (12093, 'M', '\u6208'), (12094, 'M', '\u6236'), (12095, 'M', '\u624b'), (12096, 'M', '\u652f'), (12097, 'M', '\u6534'), (12098, 'M', '\u6587'), (12099, 'M', '\u6597'), (12100, 'M', '\u65a4'), (12101, 'M', '\u65b9'), (12102, 'M', '\u65e0'), (12103, 'M', '\u65e5'), (12104, 'M', '\u66f0'), (12105, 'M', '\u6708'), (12106, 'M', '\u6728'), (12107, 'M', '\u6b20'), (12108, 'M', '\u6b62'), (12109, 'M', '\u6b79'), (12110, 'M', '\u6bb3'), (12111, 'M', '\u6bcb'), (12112, 'M', '\u6bd4'), (12113, 'M', '\u6bdb'), (12114, 'M', '\u6c0f'), (12115, 'M', '\u6c14'), (12116, 'M', '\u6c34'), (12117, 'M', '\u706b'), (12118, 'M', '\u722a'), (12119, 'M', '\u7236'), (12120, 'M', '\u723b'), (12121, 'M', '\u723f'), (12122, 'M', '\u7247'), (12123, 'M', '\u7259'), (12124, 'M', '\u725b'), (12125, 'M', '\u72ac'), (12126, 'M', '\u7384'), (12127, 'M', '\u7389'), (12128, 'M', '\u74dc'), (12129, 'M', '\u74e6'), (12130, 'M', '\u7518'), (12131, 'M', '\u751f'), (12132, 'M', '\u7528'), (12133, 'M', '\u7530'), (12134, 'M', '\u758b'), (12135, 'M', '\u7592'), (12136, 'M', '\u7676'), (12137, 'M', '\u767d'), (12138, 'M', '\u76ae'), (12139, 'M', '\u76bf'), (12140, 'M', '\u76ee'), (12141, 'M', '\u77db'), (12142, 'M', '\u77e2'), (12143, 'M', '\u77f3'), (12144, 'M', '\u793a'), (12145, 'M', '\u79b8'), (12146, 'M', '\u79be'), (12147, 'M', '\u7a74'), (12148, 'M', '\u7acb'), (12149, 'M', '\u7af9'), (12150, 'M', '\u7c73'), (12151, 'M', '\u7cf8'), (12152, 'M', '\u7f36'), (12153, 'M', '\u7f51')]"
        ]
    },
    {
        "func_name": "_seg_28",
        "original": "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]",
        "mutated": [
            "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]",
            "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]",
            "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]",
            "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]",
            "def _seg_28() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12154, 'M', '\u7f8a'), (12155, 'M', '\u7fbd'), (12156, 'M', '\u8001'), (12157, 'M', '\u800c'), (12158, 'M', '\u8012'), (12159, 'M', '\u8033'), (12160, 'M', '\u807f'), (12161, 'M', '\u8089'), (12162, 'M', '\u81e3'), (12163, 'M', '\u81ea'), (12164, 'M', '\u81f3'), (12165, 'M', '\u81fc'), (12166, 'M', '\u820c'), (12167, 'M', '\u821b'), (12168, 'M', '\u821f'), (12169, 'M', '\u826e'), (12170, 'M', '\u8272'), (12171, 'M', '\u8278'), (12172, 'M', '\u864d'), (12173, 'M', '\u866b'), (12174, 'M', '\u8840'), (12175, 'M', '\u884c'), (12176, 'M', '\u8863'), (12177, 'M', '\u897e'), (12178, 'M', '\u898b'), (12179, 'M', '\u89d2'), (12180, 'M', '\u8a00'), (12181, 'M', '\u8c37'), (12182, 'M', '\u8c46'), (12183, 'M', '\u8c55'), (12184, 'M', '\u8c78'), (12185, 'M', '\u8c9d'), (12186, 'M', '\u8d64'), (12187, 'M', '\u8d70'), (12188, 'M', '\u8db3'), (12189, 'M', '\u8eab'), (12190, 'M', '\u8eca'), (12191, 'M', '\u8f9b'), (12192, 'M', '\u8fb0'), (12193, 'M', '\u8fb5'), (12194, 'M', '\u9091'), (12195, 'M', '\u9149'), (12196, 'M', '\u91c6'), (12197, 'M', '\u91cc'), (12198, 'M', '\u91d1'), (12199, 'M', '\u9577'), (12200, 'M', '\u9580'), (12201, 'M', '\u961c'), (12202, 'M', '\u96b6'), (12203, 'M', '\u96b9'), (12204, 'M', '\u96e8'), (12205, 'M', '\u9751'), (12206, 'M', '\u975e'), (12207, 'M', '\u9762'), (12208, 'M', '\u9769'), (12209, 'M', '\u97cb'), (12210, 'M', '\u97ed'), (12211, 'M', '\u97f3'), (12212, 'M', '\u9801'), (12213, 'M', '\u98a8'), (12214, 'M', '\u98db'), (12215, 'M', '\u98df'), (12216, 'M', '\u9996'), (12217, 'M', '\u9999'), (12218, 'M', '\u99ac'), (12219, 'M', '\u9aa8'), (12220, 'M', '\u9ad8'), (12221, 'M', '\u9adf'), (12222, 'M', '\u9b25'), (12223, 'M', '\u9b2f'), (12224, 'M', '\u9b32'), (12225, 'M', '\u9b3c'), (12226, 'M', '\u9b5a'), (12227, 'M', '\u9ce5'), (12228, 'M', '\u9e75'), (12229, 'M', '\u9e7f'), (12230, 'M', '\u9ea5'), (12231, 'M', '\u9ebb'), (12232, 'M', '\u9ec3'), (12233, 'M', '\u9ecd'), (12234, 'M', '\u9ed1'), (12235, 'M', '\u9ef9'), (12236, 'M', '\u9efd'), (12237, 'M', '\u9f0e'), (12238, 'M', '\u9f13'), (12239, 'M', '\u9f20'), (12240, 'M', '\u9f3b'), (12241, 'M', '\u9f4a'), (12242, 'M', '\u9f52'), (12243, 'M', '\u9f8d'), (12244, 'M', '\u9f9c'), (12245, 'M', '\u9fa0'), (12246, 'X'), (12288, '3', ' '), (12289, 'V'), (12290, 'M', '.'), (12291, 'V'), (12342, 'M', '\u3012'), (12343, 'V'), (12344, 'M', '\u5341')]"
        ]
    },
    {
        "func_name": "_seg_29",
        "original": "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]",
        "mutated": [
            "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]",
            "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]",
            "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]",
            "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]",
            "def _seg_29() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12345, 'M', '\u5344'), (12346, 'M', '\u5345'), (12347, 'V'), (12352, 'X'), (12353, 'V'), (12439, 'X'), (12441, 'V'), (12443, '3', ' \u3099'), (12444, '3', ' \u309a'), (12445, 'V'), (12447, 'M', '\u3088\u308a'), (12448, 'V'), (12543, 'M', '\u30b3\u30c8'), (12544, 'X'), (12549, 'V'), (12592, 'X'), (12593, 'M', '\u1100'), (12594, 'M', '\u1101'), (12595, 'M', '\u11aa'), (12596, 'M', '\u1102'), (12597, 'M', '\u11ac'), (12598, 'M', '\u11ad'), (12599, 'M', '\u1103'), (12600, 'M', '\u1104'), (12601, 'M', '\u1105'), (12602, 'M', '\u11b0'), (12603, 'M', '\u11b1'), (12604, 'M', '\u11b2'), (12605, 'M', '\u11b3'), (12606, 'M', '\u11b4'), (12607, 'M', '\u11b5'), (12608, 'M', '\u111a'), (12609, 'M', '\u1106'), (12610, 'M', '\u1107'), (12611, 'M', '\u1108'), (12612, 'M', '\u1121'), (12613, 'M', '\u1109'), (12614, 'M', '\u110a'), (12615, 'M', '\u110b'), (12616, 'M', '\u110c'), (12617, 'M', '\u110d'), (12618, 'M', '\u110e'), (12619, 'M', '\u110f'), (12620, 'M', '\u1110'), (12621, 'M', '\u1111'), (12622, 'M', '\u1112'), (12623, 'M', '\u1161'), (12624, 'M', '\u1162'), (12625, 'M', '\u1163'), (12626, 'M', '\u1164'), (12627, 'M', '\u1165'), (12628, 'M', '\u1166'), (12629, 'M', '\u1167'), (12630, 'M', '\u1168'), (12631, 'M', '\u1169'), (12632, 'M', '\u116a'), (12633, 'M', '\u116b'), (12634, 'M', '\u116c'), (12635, 'M', '\u116d'), (12636, 'M', '\u116e'), (12637, 'M', '\u116f'), (12638, 'M', '\u1170'), (12639, 'M', '\u1171'), (12640, 'M', '\u1172'), (12641, 'M', '\u1173'), (12642, 'M', '\u1174'), (12643, 'M', '\u1175'), (12644, 'X'), (12645, 'M', '\u1114'), (12646, 'M', '\u1115'), (12647, 'M', '\u11c7'), (12648, 'M', '\u11c8'), (12649, 'M', '\u11cc'), (12650, 'M', '\u11ce'), (12651, 'M', '\u11d3'), (12652, 'M', '\u11d7'), (12653, 'M', '\u11d9'), (12654, 'M', '\u111c'), (12655, 'M', '\u11dd'), (12656, 'M', '\u11df'), (12657, 'M', '\u111d'), (12658, 'M', '\u111e'), (12659, 'M', '\u1120'), (12660, 'M', '\u1122'), (12661, 'M', '\u1123'), (12662, 'M', '\u1127'), (12663, 'M', '\u1129'), (12664, 'M', '\u112b'), (12665, 'M', '\u112c'), (12666, 'M', '\u112d'), (12667, 'M', '\u112e'), (12668, 'M', '\u112f'), (12669, 'M', '\u1132'), (12670, 'M', '\u1136'), (12671, 'M', '\u1140'), (12672, 'M', '\u1147'), (12673, 'M', '\u114c'), (12674, 'M', '\u11f1'), (12675, 'M', '\u11f2'), (12676, 'M', '\u1157')]"
        ]
    },
    {
        "func_name": "_seg_30",
        "original": "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]",
        "mutated": [
            "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]",
            "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]",
            "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]",
            "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]",
            "def _seg_30() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12677, 'M', '\u1158'), (12678, 'M', '\u1159'), (12679, 'M', '\u1184'), (12680, 'M', '\u1185'), (12681, 'M', '\u1188'), (12682, 'M', '\u1191'), (12683, 'M', '\u1192'), (12684, 'M', '\u1194'), (12685, 'M', '\u119e'), (12686, 'M', '\u11a1'), (12687, 'X'), (12688, 'V'), (12690, 'M', '\u4e00'), (12691, 'M', '\u4e8c'), (12692, 'M', '\u4e09'), (12693, 'M', '\u56db'), (12694, 'M', '\u4e0a'), (12695, 'M', '\u4e2d'), (12696, 'M', '\u4e0b'), (12697, 'M', '\u7532'), (12698, 'M', '\u4e59'), (12699, 'M', '\u4e19'), (12700, 'M', '\u4e01'), (12701, 'M', '\u5929'), (12702, 'M', '\u5730'), (12703, 'M', '\u4eba'), (12704, 'V'), (12772, 'X'), (12784, 'V'), (12800, '3', '(\u1100)'), (12801, '3', '(\u1102)'), (12802, '3', '(\u1103)'), (12803, '3', '(\u1105)'), (12804, '3', '(\u1106)'), (12805, '3', '(\u1107)'), (12806, '3', '(\u1109)'), (12807, '3', '(\u110b)'), (12808, '3', '(\u110c)'), (12809, '3', '(\u110e)'), (12810, '3', '(\u110f)'), (12811, '3', '(\u1110)'), (12812, '3', '(\u1111)'), (12813, '3', '(\u1112)'), (12814, '3', '(\uac00)'), (12815, '3', '(\ub098)'), (12816, '3', '(\ub2e4)'), (12817, '3', '(\ub77c)'), (12818, '3', '(\ub9c8)'), (12819, '3', '(\ubc14)'), (12820, '3', '(\uc0ac)'), (12821, '3', '(\uc544)'), (12822, '3', '(\uc790)'), (12823, '3', '(\ucc28)'), (12824, '3', '(\uce74)'), (12825, '3', '(\ud0c0)'), (12826, '3', '(\ud30c)'), (12827, '3', '(\ud558)'), (12828, '3', '(\uc8fc)'), (12829, '3', '(\uc624\uc804)'), (12830, '3', '(\uc624\ud6c4)'), (12831, 'X'), (12832, '3', '(\u4e00)'), (12833, '3', '(\u4e8c)'), (12834, '3', '(\u4e09)'), (12835, '3', '(\u56db)'), (12836, '3', '(\u4e94)'), (12837, '3', '(\u516d)'), (12838, '3', '(\u4e03)'), (12839, '3', '(\u516b)'), (12840, '3', '(\u4e5d)'), (12841, '3', '(\u5341)'), (12842, '3', '(\u6708)'), (12843, '3', '(\u706b)'), (12844, '3', '(\u6c34)'), (12845, '3', '(\u6728)'), (12846, '3', '(\u91d1)'), (12847, '3', '(\u571f)'), (12848, '3', '(\u65e5)'), (12849, '3', '(\u682a)'), (12850, '3', '(\u6709)'), (12851, '3', '(\u793e)'), (12852, '3', '(\u540d)'), (12853, '3', '(\u7279)'), (12854, '3', '(\u8ca1)'), (12855, '3', '(\u795d)'), (12856, '3', '(\u52b4)'), (12857, '3', '(\u4ee3)'), (12858, '3', '(\u547c)'), (12859, '3', '(\u5b66)'), (12860, '3', '(\u76e3)'), (12861, '3', '(\u4f01)'), (12862, '3', '(\u8cc7)'), (12863, '3', '(\u5354)'), (12864, '3', '(\u796d)'), (12865, '3', '(\u4f11)'), (12866, '3', '(\u81ea)'), (12867, '3', '(\u81f3)'), (12868, 'M', '\u554f'), (12869, 'M', '\u5e7c'), (12870, 'M', '\u6587')]"
        ]
    },
    {
        "func_name": "_seg_31",
        "original": "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]",
        "mutated": [
            "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]",
            "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]",
            "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]",
            "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]",
            "def _seg_31() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12871, 'M', '\u7b8f'), (12872, 'V'), (12880, 'M', 'pte'), (12881, 'M', '21'), (12882, 'M', '22'), (12883, 'M', '23'), (12884, 'M', '24'), (12885, 'M', '25'), (12886, 'M', '26'), (12887, 'M', '27'), (12888, 'M', '28'), (12889, 'M', '29'), (12890, 'M', '30'), (12891, 'M', '31'), (12892, 'M', '32'), (12893, 'M', '33'), (12894, 'M', '34'), (12895, 'M', '35'), (12896, 'M', '\u1100'), (12897, 'M', '\u1102'), (12898, 'M', '\u1103'), (12899, 'M', '\u1105'), (12900, 'M', '\u1106'), (12901, 'M', '\u1107'), (12902, 'M', '\u1109'), (12903, 'M', '\u110b'), (12904, 'M', '\u110c'), (12905, 'M', '\u110e'), (12906, 'M', '\u110f'), (12907, 'M', '\u1110'), (12908, 'M', '\u1111'), (12909, 'M', '\u1112'), (12910, 'M', '\uac00'), (12911, 'M', '\ub098'), (12912, 'M', '\ub2e4'), (12913, 'M', '\ub77c'), (12914, 'M', '\ub9c8'), (12915, 'M', '\ubc14'), (12916, 'M', '\uc0ac'), (12917, 'M', '\uc544'), (12918, 'M', '\uc790'), (12919, 'M', '\ucc28'), (12920, 'M', '\uce74'), (12921, 'M', '\ud0c0'), (12922, 'M', '\ud30c'), (12923, 'M', '\ud558'), (12924, 'M', '\ucc38\uace0'), (12925, 'M', '\uc8fc\uc758'), (12926, 'M', '\uc6b0'), (12927, 'V'), (12928, 'M', '\u4e00'), (12929, 'M', '\u4e8c'), (12930, 'M', '\u4e09'), (12931, 'M', '\u56db'), (12932, 'M', '\u4e94'), (12933, 'M', '\u516d'), (12934, 'M', '\u4e03'), (12935, 'M', '\u516b'), (12936, 'M', '\u4e5d'), (12937, 'M', '\u5341'), (12938, 'M', '\u6708'), (12939, 'M', '\u706b'), (12940, 'M', '\u6c34'), (12941, 'M', '\u6728'), (12942, 'M', '\u91d1'), (12943, 'M', '\u571f'), (12944, 'M', '\u65e5'), (12945, 'M', '\u682a'), (12946, 'M', '\u6709'), (12947, 'M', '\u793e'), (12948, 'M', '\u540d'), (12949, 'M', '\u7279'), (12950, 'M', '\u8ca1'), (12951, 'M', '\u795d'), (12952, 'M', '\u52b4'), (12953, 'M', '\u79d8'), (12954, 'M', '\u7537'), (12955, 'M', '\u5973'), (12956, 'M', '\u9069'), (12957, 'M', '\u512a'), (12958, 'M', '\u5370'), (12959, 'M', '\u6ce8'), (12960, 'M', '\u9805'), (12961, 'M', '\u4f11'), (12962, 'M', '\u5199'), (12963, 'M', '\u6b63'), (12964, 'M', '\u4e0a'), (12965, 'M', '\u4e2d'), (12966, 'M', '\u4e0b'), (12967, 'M', '\u5de6'), (12968, 'M', '\u53f3'), (12969, 'M', '\u533b'), (12970, 'M', '\u5b97'), (12971, 'M', '\u5b66'), (12972, 'M', '\u76e3'), (12973, 'M', '\u4f01'), (12974, 'M', '\u8cc7'), (12975, 'M', '\u5354'), (12976, 'M', '\u591c'), (12977, 'M', '36')]"
        ]
    },
    {
        "func_name": "_seg_32",
        "original": "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]",
        "mutated": [
            "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]",
            "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]",
            "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]",
            "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]",
            "def _seg_32() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(12978, 'M', '37'), (12979, 'M', '38'), (12980, 'M', '39'), (12981, 'M', '40'), (12982, 'M', '41'), (12983, 'M', '42'), (12984, 'M', '43'), (12985, 'M', '44'), (12986, 'M', '45'), (12987, 'M', '46'), (12988, 'M', '47'), (12989, 'M', '48'), (12990, 'M', '49'), (12991, 'M', '50'), (12992, 'M', '1\u6708'), (12993, 'M', '2\u6708'), (12994, 'M', '3\u6708'), (12995, 'M', '4\u6708'), (12996, 'M', '5\u6708'), (12997, 'M', '6\u6708'), (12998, 'M', '7\u6708'), (12999, 'M', '8\u6708'), (13000, 'M', '9\u6708'), (13001, 'M', '10\u6708'), (13002, 'M', '11\u6708'), (13003, 'M', '12\u6708'), (13004, 'M', 'hg'), (13005, 'M', 'erg'), (13006, 'M', 'ev'), (13007, 'M', 'ltd'), (13008, 'M', '\u30a2'), (13009, 'M', '\u30a4'), (13010, 'M', '\u30a6'), (13011, 'M', '\u30a8'), (13012, 'M', '\u30aa'), (13013, 'M', '\u30ab'), (13014, 'M', '\u30ad'), (13015, 'M', '\u30af'), (13016, 'M', '\u30b1'), (13017, 'M', '\u30b3'), (13018, 'M', '\u30b5'), (13019, 'M', '\u30b7'), (13020, 'M', '\u30b9'), (13021, 'M', '\u30bb'), (13022, 'M', '\u30bd'), (13023, 'M', '\u30bf'), (13024, 'M', '\u30c1'), (13025, 'M', '\u30c4'), (13026, 'M', '\u30c6'), (13027, 'M', '\u30c8'), (13028, 'M', '\u30ca'), (13029, 'M', '\u30cb'), (13030, 'M', '\u30cc'), (13031, 'M', '\u30cd'), (13032, 'M', '\u30ce'), (13033, 'M', '\u30cf'), (13034, 'M', '\u30d2'), (13035, 'M', '\u30d5'), (13036, 'M', '\u30d8'), (13037, 'M', '\u30db'), (13038, 'M', '\u30de'), (13039, 'M', '\u30df'), (13040, 'M', '\u30e0'), (13041, 'M', '\u30e1'), (13042, 'M', '\u30e2'), (13043, 'M', '\u30e4'), (13044, 'M', '\u30e6'), (13045, 'M', '\u30e8'), (13046, 'M', '\u30e9'), (13047, 'M', '\u30ea'), (13048, 'M', '\u30eb'), (13049, 'M', '\u30ec'), (13050, 'M', '\u30ed'), (13051, 'M', '\u30ef'), (13052, 'M', '\u30f0'), (13053, 'M', '\u30f1'), (13054, 'M', '\u30f2'), (13055, 'M', '\u4ee4\u548c'), (13056, 'M', '\u30a2\u30d1\u30fc\u30c8'), (13057, 'M', '\u30a2\u30eb\u30d5\u30a1'), (13058, 'M', '\u30a2\u30f3\u30da\u30a2'), (13059, 'M', '\u30a2\u30fc\u30eb'), (13060, 'M', '\u30a4\u30cb\u30f3\u30b0'), (13061, 'M', '\u30a4\u30f3\u30c1'), (13062, 'M', '\u30a6\u30a9\u30f3'), (13063, 'M', '\u30a8\u30b9\u30af\u30fc\u30c9'), (13064, 'M', '\u30a8\u30fc\u30ab\u30fc'), (13065, 'M', '\u30aa\u30f3\u30b9'), (13066, 'M', '\u30aa\u30fc\u30e0'), (13067, 'M', '\u30ab\u30a4\u30ea'), (13068, 'M', '\u30ab\u30e9\u30c3\u30c8'), (13069, 'M', '\u30ab\u30ed\u30ea\u30fc'), (13070, 'M', '\u30ac\u30ed\u30f3'), (13071, 'M', '\u30ac\u30f3\u30de'), (13072, 'M', '\u30ae\u30ac'), (13073, 'M', '\u30ae\u30cb\u30fc'), (13074, 'M', '\u30ad\u30e5\u30ea\u30fc'), (13075, 'M', '\u30ae\u30eb\u30c0\u30fc'), (13076, 'M', '\u30ad\u30ed'), (13077, 'M', '\u30ad\u30ed\u30b0\u30e9\u30e0')]"
        ]
    },
    {
        "func_name": "_seg_33",
        "original": "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]",
        "mutated": [
            "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]",
            "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]",
            "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]",
            "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]",
            "def _seg_33() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(13078, 'M', '\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb'), (13079, 'M', '\u30ad\u30ed\u30ef\u30c3\u30c8'), (13080, 'M', '\u30b0\u30e9\u30e0'), (13081, 'M', '\u30b0\u30e9\u30e0\u30c8\u30f3'), (13082, 'M', '\u30af\u30eb\u30bc\u30a4\u30ed'), (13083, 'M', '\u30af\u30ed\u30fc\u30cd'), (13084, 'M', '\u30b1\u30fc\u30b9'), (13085, 'M', '\u30b3\u30eb\u30ca'), (13086, 'M', '\u30b3\u30fc\u30dd'), (13087, 'M', '\u30b5\u30a4\u30af\u30eb'), (13088, 'M', '\u30b5\u30f3\u30c1\u30fc\u30e0'), (13089, 'M', '\u30b7\u30ea\u30f3\u30b0'), (13090, 'M', '\u30bb\u30f3\u30c1'), (13091, 'M', '\u30bb\u30f3\u30c8'), (13092, 'M', '\u30c0\u30fc\u30b9'), (13093, 'M', '\u30c7\u30b7'), (13094, 'M', '\u30c9\u30eb'), (13095, 'M', '\u30c8\u30f3'), (13096, 'M', '\u30ca\u30ce'), (13097, 'M', '\u30ce\u30c3\u30c8'), (13098, 'M', '\u30cf\u30a4\u30c4'), (13099, 'M', '\u30d1\u30fc\u30bb\u30f3\u30c8'), (13100, 'M', '\u30d1\u30fc\u30c4'), (13101, 'M', '\u30d0\u30fc\u30ec\u30eb'), (13102, 'M', '\u30d4\u30a2\u30b9\u30c8\u30eb'), (13103, 'M', '\u30d4\u30af\u30eb'), (13104, 'M', '\u30d4\u30b3'), (13105, 'M', '\u30d3\u30eb'), (13106, 'M', '\u30d5\u30a1\u30e9\u30c3\u30c9'), (13107, 'M', '\u30d5\u30a3\u30fc\u30c8'), (13108, 'M', '\u30d6\u30c3\u30b7\u30a7\u30eb'), (13109, 'M', '\u30d5\u30e9\u30f3'), (13110, 'M', '\u30d8\u30af\u30bf\u30fc\u30eb'), (13111, 'M', '\u30da\u30bd'), (13112, 'M', '\u30da\u30cb\u30d2'), (13113, 'M', '\u30d8\u30eb\u30c4'), (13114, 'M', '\u30da\u30f3\u30b9'), (13115, 'M', '\u30da\u30fc\u30b8'), (13116, 'M', '\u30d9\u30fc\u30bf'), (13117, 'M', '\u30dd\u30a4\u30f3\u30c8'), (13118, 'M', '\u30dc\u30eb\u30c8'), (13119, 'M', '\u30db\u30f3'), (13120, 'M', '\u30dd\u30f3\u30c9'), (13121, 'M', '\u30db\u30fc\u30eb'), (13122, 'M', '\u30db\u30fc\u30f3'), (13123, 'M', '\u30de\u30a4\u30af\u30ed'), (13124, 'M', '\u30de\u30a4\u30eb'), (13125, 'M', '\u30de\u30c3\u30cf'), (13126, 'M', '\u30de\u30eb\u30af'), (13127, 'M', '\u30de\u30f3\u30b7\u30e7\u30f3'), (13128, 'M', '\u30df\u30af\u30ed\u30f3'), (13129, 'M', '\u30df\u30ea'), (13130, 'M', '\u30df\u30ea\u30d0\u30fc\u30eb'), (13131, 'M', '\u30e1\u30ac'), (13132, 'M', '\u30e1\u30ac\u30c8\u30f3'), (13133, 'M', '\u30e1\u30fc\u30c8\u30eb'), (13134, 'M', '\u30e4\u30fc\u30c9'), (13135, 'M', '\u30e4\u30fc\u30eb'), (13136, 'M', '\u30e6\u30a2\u30f3'), (13137, 'M', '\u30ea\u30c3\u30c8\u30eb'), (13138, 'M', '\u30ea\u30e9'), (13139, 'M', '\u30eb\u30d4\u30fc'), (13140, 'M', '\u30eb\u30fc\u30d6\u30eb'), (13141, 'M', '\u30ec\u30e0'), (13142, 'M', '\u30ec\u30f3\u30c8\u30b2\u30f3'), (13143, 'M', '\u30ef\u30c3\u30c8'), (13144, 'M', '0\u70b9'), (13145, 'M', '1\u70b9'), (13146, 'M', '2\u70b9'), (13147, 'M', '3\u70b9'), (13148, 'M', '4\u70b9'), (13149, 'M', '5\u70b9'), (13150, 'M', '6\u70b9'), (13151, 'M', '7\u70b9'), (13152, 'M', '8\u70b9'), (13153, 'M', '9\u70b9'), (13154, 'M', '10\u70b9'), (13155, 'M', '11\u70b9'), (13156, 'M', '12\u70b9'), (13157, 'M', '13\u70b9'), (13158, 'M', '14\u70b9'), (13159, 'M', '15\u70b9'), (13160, 'M', '16\u70b9'), (13161, 'M', '17\u70b9'), (13162, 'M', '18\u70b9'), (13163, 'M', '19\u70b9'), (13164, 'M', '20\u70b9'), (13165, 'M', '21\u70b9'), (13166, 'M', '22\u70b9'), (13167, 'M', '23\u70b9'), (13168, 'M', '24\u70b9'), (13169, 'M', 'hpa'), (13170, 'M', 'da'), (13171, 'M', 'au'), (13172, 'M', 'bar'), (13173, 'M', 'ov'), (13174, 'M', 'pc'), (13175, 'M', 'dm'), (13176, 'M', 'dm2'), (13177, 'M', 'dm3')]"
        ]
    },
    {
        "func_name": "_seg_34",
        "original": "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]",
        "mutated": [
            "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]",
            "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]",
            "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]",
            "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]",
            "def _seg_34() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(13178, 'M', 'iu'), (13179, 'M', '\u5e73\u6210'), (13180, 'M', '\u662d\u548c'), (13181, 'M', '\u5927\u6b63'), (13182, 'M', '\u660e\u6cbb'), (13183, 'M', '\u682a\u5f0f\u4f1a\u793e'), (13184, 'M', 'pa'), (13185, 'M', 'na'), (13186, 'M', '\u03bca'), (13187, 'M', 'ma'), (13188, 'M', 'ka'), (13189, 'M', 'kb'), (13190, 'M', 'mb'), (13191, 'M', 'gb'), (13192, 'M', 'cal'), (13193, 'M', 'kcal'), (13194, 'M', 'pf'), (13195, 'M', 'nf'), (13196, 'M', '\u03bcf'), (13197, 'M', '\u03bcg'), (13198, 'M', 'mg'), (13199, 'M', 'kg'), (13200, 'M', 'hz'), (13201, 'M', 'khz'), (13202, 'M', 'mhz'), (13203, 'M', 'ghz'), (13204, 'M', 'thz'), (13205, 'M', '\u03bcl'), (13206, 'M', 'ml'), (13207, 'M', 'dl'), (13208, 'M', 'kl'), (13209, 'M', 'fm'), (13210, 'M', 'nm'), (13211, 'M', '\u03bcm'), (13212, 'M', 'mm'), (13213, 'M', 'cm'), (13214, 'M', 'km'), (13215, 'M', 'mm2'), (13216, 'M', 'cm2'), (13217, 'M', 'm2'), (13218, 'M', 'km2'), (13219, 'M', 'mm3'), (13220, 'M', 'cm3'), (13221, 'M', 'm3'), (13222, 'M', 'km3'), (13223, 'M', 'm\u2215s'), (13224, 'M', 'm\u2215s2'), (13225, 'M', 'pa'), (13226, 'M', 'kpa'), (13227, 'M', 'mpa'), (13228, 'M', 'gpa'), (13229, 'M', 'rad'), (13230, 'M', 'rad\u2215s'), (13231, 'M', 'rad\u2215s2'), (13232, 'M', 'ps'), (13233, 'M', 'ns'), (13234, 'M', '\u03bcs'), (13235, 'M', 'ms'), (13236, 'M', 'pv'), (13237, 'M', 'nv'), (13238, 'M', '\u03bcv'), (13239, 'M', 'mv'), (13240, 'M', 'kv'), (13241, 'M', 'mv'), (13242, 'M', 'pw'), (13243, 'M', 'nw'), (13244, 'M', '\u03bcw'), (13245, 'M', 'mw'), (13246, 'M', 'kw'), (13247, 'M', 'mw'), (13248, 'M', 'k\u03c9'), (13249, 'M', 'm\u03c9'), (13250, 'X'), (13251, 'M', 'bq'), (13252, 'M', 'cc'), (13253, 'M', 'cd'), (13254, 'M', 'c\u2215kg'), (13255, 'X'), (13256, 'M', 'db'), (13257, 'M', 'gy'), (13258, 'M', 'ha'), (13259, 'M', 'hp'), (13260, 'M', 'in'), (13261, 'M', 'kk'), (13262, 'M', 'km'), (13263, 'M', 'kt'), (13264, 'M', 'lm'), (13265, 'M', 'ln'), (13266, 'M', 'log'), (13267, 'M', 'lx'), (13268, 'M', 'mb'), (13269, 'M', 'mil'), (13270, 'M', 'mol'), (13271, 'M', 'ph'), (13272, 'X'), (13273, 'M', 'ppm'), (13274, 'M', 'pr'), (13275, 'M', 'sr'), (13276, 'M', 'sv'), (13277, 'M', 'wb')]"
        ]
    },
    {
        "func_name": "_seg_35",
        "original": "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]",
        "mutated": [
            "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]",
            "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]",
            "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]",
            "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]",
            "def _seg_35() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(13278, 'M', 'v\u2215m'), (13279, 'M', 'a\u2215m'), (13280, 'M', '1\u65e5'), (13281, 'M', '2\u65e5'), (13282, 'M', '3\u65e5'), (13283, 'M', '4\u65e5'), (13284, 'M', '5\u65e5'), (13285, 'M', '6\u65e5'), (13286, 'M', '7\u65e5'), (13287, 'M', '8\u65e5'), (13288, 'M', '9\u65e5'), (13289, 'M', '10\u65e5'), (13290, 'M', '11\u65e5'), (13291, 'M', '12\u65e5'), (13292, 'M', '13\u65e5'), (13293, 'M', '14\u65e5'), (13294, 'M', '15\u65e5'), (13295, 'M', '16\u65e5'), (13296, 'M', '17\u65e5'), (13297, 'M', '18\u65e5'), (13298, 'M', '19\u65e5'), (13299, 'M', '20\u65e5'), (13300, 'M', '21\u65e5'), (13301, 'M', '22\u65e5'), (13302, 'M', '23\u65e5'), (13303, 'M', '24\u65e5'), (13304, 'M', '25\u65e5'), (13305, 'M', '26\u65e5'), (13306, 'M', '27\u65e5'), (13307, 'M', '28\u65e5'), (13308, 'M', '29\u65e5'), (13309, 'M', '30\u65e5'), (13310, 'M', '31\u65e5'), (13311, 'M', 'gal'), (13312, 'V'), (42125, 'X'), (42128, 'V'), (42183, 'X'), (42192, 'V'), (42540, 'X'), (42560, 'M', '\ua641'), (42561, 'V'), (42562, 'M', '\ua643'), (42563, 'V'), (42564, 'M', '\ua645'), (42565, 'V'), (42566, 'M', '\ua647'), (42567, 'V'), (42568, 'M', '\ua649'), (42569, 'V'), (42570, 'M', '\ua64b'), (42571, 'V'), (42572, 'M', '\ua64d'), (42573, 'V'), (42574, 'M', '\ua64f'), (42575, 'V'), (42576, 'M', '\ua651'), (42577, 'V'), (42578, 'M', '\ua653'), (42579, 'V'), (42580, 'M', '\ua655'), (42581, 'V'), (42582, 'M', '\ua657'), (42583, 'V'), (42584, 'M', '\ua659'), (42585, 'V'), (42586, 'M', '\ua65b'), (42587, 'V'), (42588, 'M', '\ua65d'), (42589, 'V'), (42590, 'M', '\ua65f'), (42591, 'V'), (42592, 'M', '\ua661'), (42593, 'V'), (42594, 'M', '\ua663'), (42595, 'V'), (42596, 'M', '\ua665'), (42597, 'V'), (42598, 'M', '\ua667'), (42599, 'V'), (42600, 'M', '\ua669'), (42601, 'V'), (42602, 'M', '\ua66b'), (42603, 'V'), (42604, 'M', '\ua66d'), (42605, 'V'), (42624, 'M', '\ua681'), (42625, 'V'), (42626, 'M', '\ua683'), (42627, 'V'), (42628, 'M', '\ua685'), (42629, 'V'), (42630, 'M', '\ua687'), (42631, 'V'), (42632, 'M', '\ua689'), (42633, 'V'), (42634, 'M', '\ua68b'), (42635, 'V'), (42636, 'M', '\ua68d'), (42637, 'V')]"
        ]
    },
    {
        "func_name": "_seg_36",
        "original": "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]",
        "mutated": [
            "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]",
            "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]",
            "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]",
            "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]",
            "def _seg_36() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(42638, 'M', '\ua68f'), (42639, 'V'), (42640, 'M', '\ua691'), (42641, 'V'), (42642, 'M', '\ua693'), (42643, 'V'), (42644, 'M', '\ua695'), (42645, 'V'), (42646, 'M', '\ua697'), (42647, 'V'), (42648, 'M', '\ua699'), (42649, 'V'), (42650, 'M', '\ua69b'), (42651, 'V'), (42652, 'M', '\u044a'), (42653, 'M', '\u044c'), (42654, 'V'), (42744, 'X'), (42752, 'V'), (42786, 'M', '\ua723'), (42787, 'V'), (42788, 'M', '\ua725'), (42789, 'V'), (42790, 'M', '\ua727'), (42791, 'V'), (42792, 'M', '\ua729'), (42793, 'V'), (42794, 'M', '\ua72b'), (42795, 'V'), (42796, 'M', '\ua72d'), (42797, 'V'), (42798, 'M', '\ua72f'), (42799, 'V'), (42802, 'M', '\ua733'), (42803, 'V'), (42804, 'M', '\ua735'), (42805, 'V'), (42806, 'M', '\ua737'), (42807, 'V'), (42808, 'M', '\ua739'), (42809, 'V'), (42810, 'M', '\ua73b'), (42811, 'V'), (42812, 'M', '\ua73d'), (42813, 'V'), (42814, 'M', '\ua73f'), (42815, 'V'), (42816, 'M', '\ua741'), (42817, 'V'), (42818, 'M', '\ua743'), (42819, 'V'), (42820, 'M', '\ua745'), (42821, 'V'), (42822, 'M', '\ua747'), (42823, 'V'), (42824, 'M', '\ua749'), (42825, 'V'), (42826, 'M', '\ua74b'), (42827, 'V'), (42828, 'M', '\ua74d'), (42829, 'V'), (42830, 'M', '\ua74f'), (42831, 'V'), (42832, 'M', '\ua751'), (42833, 'V'), (42834, 'M', '\ua753'), (42835, 'V'), (42836, 'M', '\ua755'), (42837, 'V'), (42838, 'M', '\ua757'), (42839, 'V'), (42840, 'M', '\ua759'), (42841, 'V'), (42842, 'M', '\ua75b'), (42843, 'V'), (42844, 'M', '\ua75d'), (42845, 'V'), (42846, 'M', '\ua75f'), (42847, 'V'), (42848, 'M', '\ua761'), (42849, 'V'), (42850, 'M', '\ua763'), (42851, 'V'), (42852, 'M', '\ua765'), (42853, 'V'), (42854, 'M', '\ua767'), (42855, 'V'), (42856, 'M', '\ua769'), (42857, 'V'), (42858, 'M', '\ua76b'), (42859, 'V'), (42860, 'M', '\ua76d'), (42861, 'V'), (42862, 'M', '\ua76f'), (42863, 'V'), (42864, 'M', '\ua76f'), (42865, 'V'), (42873, 'M', '\ua77a'), (42874, 'V'), (42875, 'M', '\ua77c')]"
        ]
    },
    {
        "func_name": "_seg_37",
        "original": "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]",
        "mutated": [
            "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]",
            "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]",
            "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]",
            "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]",
            "def _seg_37() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(42876, 'V'), (42877, 'M', '\u1d79'), (42878, 'M', '\ua77f'), (42879, 'V'), (42880, 'M', '\ua781'), (42881, 'V'), (42882, 'M', '\ua783'), (42883, 'V'), (42884, 'M', '\ua785'), (42885, 'V'), (42886, 'M', '\ua787'), (42887, 'V'), (42891, 'M', '\ua78c'), (42892, 'V'), (42893, 'M', '\u0265'), (42894, 'V'), (42896, 'M', '\ua791'), (42897, 'V'), (42898, 'M', '\ua793'), (42899, 'V'), (42902, 'M', '\ua797'), (42903, 'V'), (42904, 'M', '\ua799'), (42905, 'V'), (42906, 'M', '\ua79b'), (42907, 'V'), (42908, 'M', '\ua79d'), (42909, 'V'), (42910, 'M', '\ua79f'), (42911, 'V'), (42912, 'M', '\ua7a1'), (42913, 'V'), (42914, 'M', '\ua7a3'), (42915, 'V'), (42916, 'M', '\ua7a5'), (42917, 'V'), (42918, 'M', '\ua7a7'), (42919, 'V'), (42920, 'M', '\ua7a9'), (42921, 'V'), (42922, 'M', '\u0266'), (42923, 'M', '\u025c'), (42924, 'M', '\u0261'), (42925, 'M', '\u026c'), (42926, 'M', '\u026a'), (42927, 'V'), (42928, 'M', '\u029e'), (42929, 'M', '\u0287'), (42930, 'M', '\u029d'), (42931, 'M', '\uab53'), (42932, 'M', '\ua7b5'), (42933, 'V'), (42934, 'M', '\ua7b7'), (42935, 'V'), (42936, 'M', '\ua7b9'), (42937, 'V'), (42938, 'M', '\ua7bb'), (42939, 'V'), (42940, 'M', '\ua7bd'), (42941, 'V'), (42942, 'M', '\ua7bf'), (42943, 'V'), (42944, 'M', '\\ua7c1'), (42945, 'V'), (42946, 'M', '\ua7c3'), (42947, 'V'), (42948, 'M', '\ua794'), (42949, 'M', '\u0282'), (42950, 'M', '\u1d8e'), (42951, 'M', '\ua7c8'), (42952, 'V'), (42953, 'M', '\ua7ca'), (42954, 'V'), (42955, 'X'), (42960, 'M', '\\ua7d1'), (42961, 'V'), (42962, 'X'), (42963, 'V'), (42964, 'X'), (42965, 'V'), (42966, 'M', '\\ua7d7'), (42967, 'V'), (42968, 'M', '\\ua7d9'), (42969, 'V'), (42970, 'X'), (42994, 'M', 'c'), (42995, 'M', 'f'), (42996, 'M', 'q'), (42997, 'M', '\ua7f6'), (42998, 'V'), (43000, 'M', '\u0127'), (43001, 'M', '\u0153'), (43002, 'V'), (43053, 'X'), (43056, 'V'), (43066, 'X'), (43072, 'V'), (43128, 'X'), (43136, 'V'), (43206, 'X')]"
        ]
    },
    {
        "func_name": "_seg_38",
        "original": "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]",
        "mutated": [
            "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]",
            "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]",
            "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]",
            "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]",
            "def _seg_38() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(43214, 'V'), (43226, 'X'), (43232, 'V'), (43348, 'X'), (43359, 'V'), (43389, 'X'), (43392, 'V'), (43470, 'X'), (43471, 'V'), (43482, 'X'), (43486, 'V'), (43519, 'X'), (43520, 'V'), (43575, 'X'), (43584, 'V'), (43598, 'X'), (43600, 'V'), (43610, 'X'), (43612, 'V'), (43715, 'X'), (43739, 'V'), (43767, 'X'), (43777, 'V'), (43783, 'X'), (43785, 'V'), (43791, 'X'), (43793, 'V'), (43799, 'X'), (43808, 'V'), (43815, 'X'), (43816, 'V'), (43823, 'X'), (43824, 'V'), (43868, 'M', '\ua727'), (43869, 'M', '\uab37'), (43870, 'M', '\u026b'), (43871, 'M', '\uab52'), (43872, 'V'), (43881, 'M', '\u028d'), (43882, 'V'), (43884, 'X'), (43888, 'M', '\u13a0'), (43889, 'M', '\u13a1'), (43890, 'M', '\u13a2'), (43891, 'M', '\u13a3'), (43892, 'M', '\u13a4'), (43893, 'M', '\u13a5'), (43894, 'M', '\u13a6'), (43895, 'M', '\u13a7'), (43896, 'M', '\u13a8'), (43897, 'M', '\u13a9'), (43898, 'M', '\u13aa'), (43899, 'M', '\u13ab'), (43900, 'M', '\u13ac'), (43901, 'M', '\u13ad'), (43902, 'M', '\u13ae'), (43903, 'M', '\u13af'), (43904, 'M', '\u13b0'), (43905, 'M', '\u13b1'), (43906, 'M', '\u13b2'), (43907, 'M', '\u13b3'), (43908, 'M', '\u13b4'), (43909, 'M', '\u13b5'), (43910, 'M', '\u13b6'), (43911, 'M', '\u13b7'), (43912, 'M', '\u13b8'), (43913, 'M', '\u13b9'), (43914, 'M', '\u13ba'), (43915, 'M', '\u13bb'), (43916, 'M', '\u13bc'), (43917, 'M', '\u13bd'), (43918, 'M', '\u13be'), (43919, 'M', '\u13bf'), (43920, 'M', '\u13c0'), (43921, 'M', '\u13c1'), (43922, 'M', '\u13c2'), (43923, 'M', '\u13c3'), (43924, 'M', '\u13c4'), (43925, 'M', '\u13c5'), (43926, 'M', '\u13c6'), (43927, 'M', '\u13c7'), (43928, 'M', '\u13c8'), (43929, 'M', '\u13c9'), (43930, 'M', '\u13ca'), (43931, 'M', '\u13cb'), (43932, 'M', '\u13cc'), (43933, 'M', '\u13cd'), (43934, 'M', '\u13ce'), (43935, 'M', '\u13cf'), (43936, 'M', '\u13d0'), (43937, 'M', '\u13d1'), (43938, 'M', '\u13d2'), (43939, 'M', '\u13d3'), (43940, 'M', '\u13d4'), (43941, 'M', '\u13d5'), (43942, 'M', '\u13d6'), (43943, 'M', '\u13d7'), (43944, 'M', '\u13d8'), (43945, 'M', '\u13d9'), (43946, 'M', '\u13da')]"
        ]
    },
    {
        "func_name": "_seg_39",
        "original": "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]",
        "mutated": [
            "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]",
            "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]",
            "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]",
            "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]",
            "def _seg_39() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(43947, 'M', '\u13db'), (43948, 'M', '\u13dc'), (43949, 'M', '\u13dd'), (43950, 'M', '\u13de'), (43951, 'M', '\u13df'), (43952, 'M', '\u13e0'), (43953, 'M', '\u13e1'), (43954, 'M', '\u13e2'), (43955, 'M', '\u13e3'), (43956, 'M', '\u13e4'), (43957, 'M', '\u13e5'), (43958, 'M', '\u13e6'), (43959, 'M', '\u13e7'), (43960, 'M', '\u13e8'), (43961, 'M', '\u13e9'), (43962, 'M', '\u13ea'), (43963, 'M', '\u13eb'), (43964, 'M', '\u13ec'), (43965, 'M', '\u13ed'), (43966, 'M', '\u13ee'), (43967, 'M', '\u13ef'), (43968, 'V'), (44014, 'X'), (44016, 'V'), (44026, 'X'), (44032, 'V'), (55204, 'X'), (55216, 'V'), (55239, 'X'), (55243, 'V'), (55292, 'X'), (63744, 'M', '\u8c48'), (63745, 'M', '\u66f4'), (63746, 'M', '\u8eca'), (63747, 'M', '\u8cc8'), (63748, 'M', '\u6ed1'), (63749, 'M', '\u4e32'), (63750, 'M', '\u53e5'), (63751, 'M', '\u9f9c'), (63753, 'M', '\u5951'), (63754, 'M', '\u91d1'), (63755, 'M', '\u5587'), (63756, 'M', '\u5948'), (63757, 'M', '\u61f6'), (63758, 'M', '\u7669'), (63759, 'M', '\u7f85'), (63760, 'M', '\u863f'), (63761, 'M', '\u87ba'), (63762, 'M', '\u88f8'), (63763, 'M', '\u908f'), (63764, 'M', '\u6a02'), (63765, 'M', '\u6d1b'), (63766, 'M', '\u70d9'), (63767, 'M', '\u73de'), (63768, 'M', '\u843d'), (63769, 'M', '\u916a'), (63770, 'M', '\u99f1'), (63771, 'M', '\u4e82'), (63772, 'M', '\u5375'), (63773, 'M', '\u6b04'), (63774, 'M', '\u721b'), (63775, 'M', '\u862d'), (63776, 'M', '\u9e1e'), (63777, 'M', '\u5d50'), (63778, 'M', '\u6feb'), (63779, 'M', '\u85cd'), (63780, 'M', '\u8964'), (63781, 'M', '\u62c9'), (63782, 'M', '\u81d8'), (63783, 'M', '\u881f'), (63784, 'M', '\u5eca'), (63785, 'M', '\u6717'), (63786, 'M', '\u6d6a'), (63787, 'M', '\u72fc'), (63788, 'M', '\u90ce'), (63789, 'M', '\u4f86'), (63790, 'M', '\u51b7'), (63791, 'M', '\u52de'), (63792, 'M', '\u64c4'), (63793, 'M', '\u6ad3'), (63794, 'M', '\u7210'), (63795, 'M', '\u76e7'), (63796, 'M', '\u8001'), (63797, 'M', '\u8606'), (63798, 'M', '\u865c'), (63799, 'M', '\u8def'), (63800, 'M', '\u9732'), (63801, 'M', '\u9b6f'), (63802, 'M', '\u9dfa'), (63803, 'M', '\u788c'), (63804, 'M', '\u797f'), (63805, 'M', '\u7da0'), (63806, 'M', '\u83c9'), (63807, 'M', '\u9304'), (63808, 'M', '\u9e7f'), (63809, 'M', '\u8ad6'), (63810, 'M', '\u58df'), (63811, 'M', '\u5f04'), (63812, 'M', '\u7c60'), (63813, 'M', '\u807e')]"
        ]
    },
    {
        "func_name": "_seg_40",
        "original": "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]",
        "mutated": [
            "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]",
            "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]",
            "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]",
            "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]",
            "def _seg_40() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(63814, 'M', '\u7262'), (63815, 'M', '\u78ca'), (63816, 'M', '\u8cc2'), (63817, 'M', '\u96f7'), (63818, 'M', '\u58d8'), (63819, 'M', '\u5c62'), (63820, 'M', '\u6a13'), (63821, 'M', '\u6dda'), (63822, 'M', '\u6f0f'), (63823, 'M', '\u7d2f'), (63824, 'M', '\u7e37'), (63825, 'M', '\u964b'), (63826, 'M', '\u52d2'), (63827, 'M', '\u808b'), (63828, 'M', '\u51dc'), (63829, 'M', '\u51cc'), (63830, 'M', '\u7a1c'), (63831, 'M', '\u7dbe'), (63832, 'M', '\u83f1'), (63833, 'M', '\u9675'), (63834, 'M', '\u8b80'), (63835, 'M', '\u62cf'), (63836, 'M', '\u6a02'), (63837, 'M', '\u8afe'), (63838, 'M', '\u4e39'), (63839, 'M', '\u5be7'), (63840, 'M', '\u6012'), (63841, 'M', '\u7387'), (63842, 'M', '\u7570'), (63843, 'M', '\u5317'), (63844, 'M', '\u78fb'), (63845, 'M', '\u4fbf'), (63846, 'M', '\u5fa9'), (63847, 'M', '\u4e0d'), (63848, 'M', '\u6ccc'), (63849, 'M', '\u6578'), (63850, 'M', '\u7d22'), (63851, 'M', '\u53c3'), (63852, 'M', '\u585e'), (63853, 'M', '\u7701'), (63854, 'M', '\u8449'), (63855, 'M', '\u8aaa'), (63856, 'M', '\u6bba'), (63857, 'M', '\u8fb0'), (63858, 'M', '\u6c88'), (63859, 'M', '\u62fe'), (63860, 'M', '\u82e5'), (63861, 'M', '\u63a0'), (63862, 'M', '\u7565'), (63863, 'M', '\u4eae'), (63864, 'M', '\u5169'), (63865, 'M', '\u51c9'), (63866, 'M', '\u6881'), (63867, 'M', '\u7ce7'), (63868, 'M', '\u826f'), (63869, 'M', '\u8ad2'), (63870, 'M', '\u91cf'), (63871, 'M', '\u52f5'), (63872, 'M', '\u5442'), (63873, 'M', '\u5973'), (63874, 'M', '\u5eec'), (63875, 'M', '\u65c5'), (63876, 'M', '\u6ffe'), (63877, 'M', '\u792a'), (63878, 'M', '\u95ad'), (63879, 'M', '\u9a6a'), (63880, 'M', '\u9e97'), (63881, 'M', '\u9ece'), (63882, 'M', '\u529b'), (63883, 'M', '\u66c6'), (63884, 'M', '\u6b77'), (63885, 'M', '\u8f62'), (63886, 'M', '\u5e74'), (63887, 'M', '\u6190'), (63888, 'M', '\u6200'), (63889, 'M', '\u649a'), (63890, 'M', '\u6f23'), (63891, 'M', '\u7149'), (63892, 'M', '\u7489'), (63893, 'M', '\u79ca'), (63894, 'M', '\u7df4'), (63895, 'M', '\u806f'), (63896, 'M', '\u8f26'), (63897, 'M', '\u84ee'), (63898, 'M', '\u9023'), (63899, 'M', '\u934a'), (63900, 'M', '\u5217'), (63901, 'M', '\u52a3'), (63902, 'M', '\u54bd'), (63903, 'M', '\u70c8'), (63904, 'M', '\u88c2'), (63905, 'M', '\u8aaa'), (63906, 'M', '\u5ec9'), (63907, 'M', '\u5ff5'), (63908, 'M', '\u637b'), (63909, 'M', '\u6bae'), (63910, 'M', '\u7c3e'), (63911, 'M', '\u7375'), (63912, 'M', '\u4ee4'), (63913, 'M', '\u56f9')]"
        ]
    },
    {
        "func_name": "_seg_41",
        "original": "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]",
        "mutated": [
            "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]",
            "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]",
            "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]",
            "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]",
            "def _seg_41() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(63914, 'M', '\u5be7'), (63915, 'M', '\u5dba'), (63916, 'M', '\u601c'), (63917, 'M', '\u73b2'), (63918, 'M', '\u7469'), (63919, 'M', '\u7f9a'), (63920, 'M', '\u8046'), (63921, 'M', '\u9234'), (63922, 'M', '\u96f6'), (63923, 'M', '\u9748'), (63924, 'M', '\u9818'), (63925, 'M', '\u4f8b'), (63926, 'M', '\u79ae'), (63927, 'M', '\u91b4'), (63928, 'M', '\u96b8'), (63929, 'M', '\u60e1'), (63930, 'M', '\u4e86'), (63931, 'M', '\u50da'), (63932, 'M', '\u5bee'), (63933, 'M', '\u5c3f'), (63934, 'M', '\u6599'), (63935, 'M', '\u6a02'), (63936, 'M', '\u71ce'), (63937, 'M', '\u7642'), (63938, 'M', '\u84fc'), (63939, 'M', '\u907c'), (63940, 'M', '\u9f8d'), (63941, 'M', '\u6688'), (63942, 'M', '\u962e'), (63943, 'M', '\u5289'), (63944, 'M', '\u677b'), (63945, 'M', '\u67f3'), (63946, 'M', '\u6d41'), (63947, 'M', '\u6e9c'), (63948, 'M', '\u7409'), (63949, 'M', '\u7559'), (63950, 'M', '\u786b'), (63951, 'M', '\u7d10'), (63952, 'M', '\u985e'), (63953, 'M', '\u516d'), (63954, 'M', '\u622e'), (63955, 'M', '\u9678'), (63956, 'M', '\u502b'), (63957, 'M', '\u5d19'), (63958, 'M', '\u6dea'), (63959, 'M', '\u8f2a'), (63960, 'M', '\u5f8b'), (63961, 'M', '\u6144'), (63962, 'M', '\u6817'), (63963, 'M', '\u7387'), (63964, 'M', '\u9686'), (63965, 'M', '\u5229'), (63966, 'M', '\u540f'), (63967, 'M', '\u5c65'), (63968, 'M', '\u6613'), (63969, 'M', '\u674e'), (63970, 'M', '\u68a8'), (63971, 'M', '\u6ce5'), (63972, 'M', '\u7406'), (63973, 'M', '\u75e2'), (63974, 'M', '\u7f79'), (63975, 'M', '\u88cf'), (63976, 'M', '\u88e1'), (63977, 'M', '\u91cc'), (63978, 'M', '\u96e2'), (63979, 'M', '\u533f'), (63980, 'M', '\u6eba'), (63981, 'M', '\u541d'), (63982, 'M', '\u71d0'), (63983, 'M', '\u7498'), (63984, 'M', '\u85fa'), (63985, 'M', '\u96a3'), (63986, 'M', '\u9c57'), (63987, 'M', '\u9e9f'), (63988, 'M', '\u6797'), (63989, 'M', '\u6dcb'), (63990, 'M', '\u81e8'), (63991, 'M', '\u7acb'), (63992, 'M', '\u7b20'), (63993, 'M', '\u7c92'), (63994, 'M', '\u72c0'), (63995, 'M', '\u7099'), (63996, 'M', '\u8b58'), (63997, 'M', '\u4ec0'), (63998, 'M', '\u8336'), (63999, 'M', '\u523a'), (64000, 'M', '\u5207'), (64001, 'M', '\u5ea6'), (64002, 'M', '\u62d3'), (64003, 'M', '\u7cd6'), (64004, 'M', '\u5b85'), (64005, 'M', '\u6d1e'), (64006, 'M', '\u66b4'), (64007, 'M', '\u8f3b'), (64008, 'M', '\u884c'), (64009, 'M', '\u964d'), (64010, 'M', '\u898b'), (64011, 'M', '\u5ed3'), (64012, 'M', '\u5140'), (64013, 'M', '\u55c0')]"
        ]
    },
    {
        "func_name": "_seg_42",
        "original": "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]",
        "mutated": [
            "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]",
            "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]",
            "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]",
            "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]",
            "def _seg_42() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64014, 'V'), (64016, 'M', '\u585a'), (64017, 'V'), (64018, 'M', '\u6674'), (64019, 'V'), (64021, 'M', '\u51de'), (64022, 'M', '\u732a'), (64023, 'M', '\u76ca'), (64024, 'M', '\u793c'), (64025, 'M', '\u795e'), (64026, 'M', '\u7965'), (64027, 'M', '\u798f'), (64028, 'M', '\u9756'), (64029, 'M', '\u7cbe'), (64030, 'M', '\u7fbd'), (64031, 'V'), (64032, 'M', '\u8612'), (64033, 'V'), (64034, 'M', '\u8af8'), (64035, 'V'), (64037, 'M', '\u9038'), (64038, 'M', '\u90fd'), (64039, 'V'), (64042, 'M', '\u98ef'), (64043, 'M', '\u98fc'), (64044, 'M', '\u9928'), (64045, 'M', '\u9db4'), (64046, 'M', '\u90de'), (64047, 'M', '\u96b7'), (64048, 'M', '\u4fae'), (64049, 'M', '\u50e7'), (64050, 'M', '\u514d'), (64051, 'M', '\u52c9'), (64052, 'M', '\u52e4'), (64053, 'M', '\u5351'), (64054, 'M', '\u559d'), (64055, 'M', '\u5606'), (64056, 'M', '\u5668'), (64057, 'M', '\u5840'), (64058, 'M', '\u58a8'), (64059, 'M', '\u5c64'), (64060, 'M', '\u5c6e'), (64061, 'M', '\u6094'), (64062, 'M', '\u6168'), (64063, 'M', '\u618e'), (64064, 'M', '\u61f2'), (64065, 'M', '\u654f'), (64066, 'M', '\u65e2'), (64067, 'M', '\u6691'), (64068, 'M', '\u6885'), (64069, 'M', '\u6d77'), (64070, 'M', '\u6e1a'), (64071, 'M', '\u6f22'), (64072, 'M', '\u716e'), (64073, 'M', '\u722b'), (64074, 'M', '\u7422'), (64075, 'M', '\u7891'), (64076, 'M', '\u793e'), (64077, 'M', '\u7949'), (64078, 'M', '\u7948'), (64079, 'M', '\u7950'), (64080, 'M', '\u7956'), (64081, 'M', '\u795d'), (64082, 'M', '\u798d'), (64083, 'M', '\u798e'), (64084, 'M', '\u7a40'), (64085, 'M', '\u7a81'), (64086, 'M', '\u7bc0'), (64087, 'M', '\u7df4'), (64088, 'M', '\u7e09'), (64089, 'M', '\u7e41'), (64090, 'M', '\u7f72'), (64091, 'M', '\u8005'), (64092, 'M', '\u81ed'), (64093, 'M', '\u8279'), (64095, 'M', '\u8457'), (64096, 'M', '\u8910'), (64097, 'M', '\u8996'), (64098, 'M', '\u8b01'), (64099, 'M', '\u8b39'), (64100, 'M', '\u8cd3'), (64101, 'M', '\u8d08'), (64102, 'M', '\u8fb6'), (64103, 'M', '\u9038'), (64104, 'M', '\u96e3'), (64105, 'M', '\u97ff'), (64106, 'M', '\u983b'), (64107, 'M', '\u6075'), (64108, 'M', '\ud850\udeee'), (64109, 'M', '\u8218'), (64110, 'X'), (64112, 'M', '\u4e26'), (64113, 'M', '\u51b5'), (64114, 'M', '\u5168'), (64115, 'M', '\u4f80'), (64116, 'M', '\u5145'), (64117, 'M', '\u5180'), (64118, 'M', '\u52c7'), (64119, 'M', '\u52fa'), (64120, 'M', '\u559d')]"
        ]
    },
    {
        "func_name": "_seg_43",
        "original": "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]",
        "mutated": [
            "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]",
            "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]",
            "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]",
            "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]",
            "def _seg_43() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64121, 'M', '\u5555'), (64122, 'M', '\u5599'), (64123, 'M', '\u55e2'), (64124, 'M', '\u585a'), (64125, 'M', '\u58b3'), (64126, 'M', '\u5944'), (64127, 'M', '\u5954'), (64128, 'M', '\u5a62'), (64129, 'M', '\u5b28'), (64130, 'M', '\u5ed2'), (64131, 'M', '\u5ed9'), (64132, 'M', '\u5f69'), (64133, 'M', '\u5fad'), (64134, 'M', '\u60d8'), (64135, 'M', '\u614e'), (64136, 'M', '\u6108'), (64137, 'M', '\u618e'), (64138, 'M', '\u6160'), (64139, 'M', '\u61f2'), (64140, 'M', '\u6234'), (64141, 'M', '\u63c4'), (64142, 'M', '\u641c'), (64143, 'M', '\u6452'), (64144, 'M', '\u6556'), (64145, 'M', '\u6674'), (64146, 'M', '\u6717'), (64147, 'M', '\u671b'), (64148, 'M', '\u6756'), (64149, 'M', '\u6b79'), (64150, 'M', '\u6bba'), (64151, 'M', '\u6d41'), (64152, 'M', '\u6edb'), (64153, 'M', '\u6ecb'), (64154, 'M', '\u6f22'), (64155, 'M', '\u701e'), (64156, 'M', '\u716e'), (64157, 'M', '\u77a7'), (64158, 'M', '\u7235'), (64159, 'M', '\u72af'), (64160, 'M', '\u732a'), (64161, 'M', '\u7471'), (64162, 'M', '\u7506'), (64163, 'M', '\u753b'), (64164, 'M', '\u761d'), (64165, 'M', '\u761f'), (64166, 'M', '\u76ca'), (64167, 'M', '\u76db'), (64168, 'M', '\u76f4'), (64169, 'M', '\u774a'), (64170, 'M', '\u7740'), (64171, 'M', '\u78cc'), (64172, 'M', '\u7ab1'), (64173, 'M', '\u7bc0'), (64174, 'M', '\u7c7b'), (64175, 'M', '\u7d5b'), (64176, 'M', '\u7df4'), (64177, 'M', '\u7f3e'), (64178, 'M', '\u8005'), (64179, 'M', '\u8352'), (64180, 'M', '\u83ef'), (64181, 'M', '\u8779'), (64182, 'M', '\u8941'), (64183, 'M', '\u8986'), (64184, 'M', '\u8996'), (64185, 'M', '\u8abf'), (64186, 'M', '\u8af8'), (64187, 'M', '\u8acb'), (64188, 'M', '\u8b01'), (64189, 'M', '\u8afe'), (64190, 'M', '\u8aed'), (64191, 'M', '\u8b39'), (64192, 'M', '\u8b8a'), (64193, 'M', '\u8d08'), (64194, 'M', '\u8f38'), (64195, 'M', '\u9072'), (64196, 'M', '\u9199'), (64197, 'M', '\u9276'), (64198, 'M', '\u967c'), (64199, 'M', '\u96e3'), (64200, 'M', '\u9756'), (64201, 'M', '\u97db'), (64202, 'M', '\u97ff'), (64203, 'M', '\u980b'), (64204, 'M', '\u983b'), (64205, 'M', '\u9b12'), (64206, 'M', '\u9f9c'), (64207, 'M', '\ud84a\udc4a'), (64208, 'M', '\ud84a\udc44'), (64209, 'M', '\ud84c\udfd5'), (64210, 'M', '\u3b9d'), (64211, 'M', '\u4018'), (64212, 'M', '\u4039'), (64213, 'M', '\ud854\ude49'), (64214, 'M', '\ud857\udcd0'), (64215, 'M', '\ud85f\uded3'), (64216, 'M', '\u9f43'), (64217, 'M', '\u9f8e'), (64218, 'X'), (64256, 'M', 'ff'), (64257, 'M', 'fi')]"
        ]
    },
    {
        "func_name": "_seg_44",
        "original": "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]",
        "mutated": [
            "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]",
            "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]",
            "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]",
            "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]",
            "def _seg_44() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64258, 'M', 'fl'), (64259, 'M', 'ffi'), (64260, 'M', 'ffl'), (64261, 'M', 'st'), (64263, 'X'), (64275, 'M', '\u0574\u0576'), (64276, 'M', '\u0574\u0565'), (64277, 'M', '\u0574\u056b'), (64278, 'M', '\u057e\u0576'), (64279, 'M', '\u0574\u056d'), (64280, 'X'), (64285, 'M', '\u05d9\u05b4'), (64286, 'V'), (64287, 'M', '\u05f2\u05b7'), (64288, 'M', '\u05e2'), (64289, 'M', '\u05d0'), (64290, 'M', '\u05d3'), (64291, 'M', '\u05d4'), (64292, 'M', '\u05db'), (64293, 'M', '\u05dc'), (64294, 'M', '\u05dd'), (64295, 'M', '\u05e8'), (64296, 'M', '\u05ea'), (64297, '3', '+'), (64298, 'M', '\u05e9\u05c1'), (64299, 'M', '\u05e9\u05c2'), (64300, 'M', '\u05e9\u05bc\u05c1'), (64301, 'M', '\u05e9\u05bc\u05c2'), (64302, 'M', '\u05d0\u05b7'), (64303, 'M', '\u05d0\u05b8'), (64304, 'M', '\u05d0\u05bc'), (64305, 'M', '\u05d1\u05bc'), (64306, 'M', '\u05d2\u05bc'), (64307, 'M', '\u05d3\u05bc'), (64308, 'M', '\u05d4\u05bc'), (64309, 'M', '\u05d5\u05bc'), (64310, 'M', '\u05d6\u05bc'), (64311, 'X'), (64312, 'M', '\u05d8\u05bc'), (64313, 'M', '\u05d9\u05bc'), (64314, 'M', '\u05da\u05bc'), (64315, 'M', '\u05db\u05bc'), (64316, 'M', '\u05dc\u05bc'), (64317, 'X'), (64318, 'M', '\u05de\u05bc'), (64319, 'X'), (64320, 'M', '\u05e0\u05bc'), (64321, 'M', '\u05e1\u05bc'), (64322, 'X'), (64323, 'M', '\u05e3\u05bc'), (64324, 'M', '\u05e4\u05bc'), (64325, 'X'), (64326, 'M', '\u05e6\u05bc'), (64327, 'M', '\u05e7\u05bc'), (64328, 'M', '\u05e8\u05bc'), (64329, 'M', '\u05e9\u05bc'), (64330, 'M', '\u05ea\u05bc'), (64331, 'M', '\u05d5\u05b9'), (64332, 'M', '\u05d1\u05bf'), (64333, 'M', '\u05db\u05bf'), (64334, 'M', '\u05e4\u05bf'), (64335, 'M', '\u05d0\u05dc'), (64336, 'M', '\u0671'), (64338, 'M', '\u067b'), (64342, 'M', '\u067e'), (64346, 'M', '\u0680'), (64350, 'M', '\u067a'), (64354, 'M', '\u067f'), (64358, 'M', '\u0679'), (64362, 'M', '\u06a4'), (64366, 'M', '\u06a6'), (64370, 'M', '\u0684'), (64374, 'M', '\u0683'), (64378, 'M', '\u0686'), (64382, 'M', '\u0687'), (64386, 'M', '\u068d'), (64388, 'M', '\u068c'), (64390, 'M', '\u068e'), (64392, 'M', '\u0688'), (64394, 'M', '\u0698'), (64396, 'M', '\u0691'), (64398, 'M', '\u06a9'), (64402, 'M', '\u06af'), (64406, 'M', '\u06b3'), (64410, 'M', '\u06b1'), (64414, 'M', '\u06ba'), (64416, 'M', '\u06bb'), (64420, 'M', '\u06c0'), (64422, 'M', '\u06c1'), (64426, 'M', '\u06be'), (64430, 'M', '\u06d2'), (64432, 'M', '\u06d3'), (64434, 'V'), (64451, 'X'), (64467, 'M', '\u06ad'), (64471, 'M', '\u06c7'), (64473, 'M', '\u06c6'), (64475, 'M', '\u06c8'), (64477, 'M', '\u06c7\u0674'), (64478, 'M', '\u06cb')]"
        ]
    },
    {
        "func_name": "_seg_45",
        "original": "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]",
        "mutated": [
            "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]",
            "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]",
            "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]",
            "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]",
            "def _seg_45() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64480, 'M', '\u06c5'), (64482, 'M', '\u06c9'), (64484, 'M', '\u06d0'), (64488, 'M', '\u0649'), (64490, 'M', '\u0626\u0627'), (64492, 'M', '\u0626\u06d5'), (64494, 'M', '\u0626\u0648'), (64496, 'M', '\u0626\u06c7'), (64498, 'M', '\u0626\u06c6'), (64500, 'M', '\u0626\u06c8'), (64502, 'M', '\u0626\u06d0'), (64505, 'M', '\u0626\u0649'), (64508, 'M', '\u06cc'), (64512, 'M', '\u0626\u062c'), (64513, 'M', '\u0626\u062d'), (64514, 'M', '\u0626\u0645'), (64515, 'M', '\u0626\u0649'), (64516, 'M', '\u0626\u064a'), (64517, 'M', '\u0628\u062c'), (64518, 'M', '\u0628\u062d'), (64519, 'M', '\u0628\u062e'), (64520, 'M', '\u0628\u0645'), (64521, 'M', '\u0628\u0649'), (64522, 'M', '\u0628\u064a'), (64523, 'M', '\u062a\u062c'), (64524, 'M', '\u062a\u062d'), (64525, 'M', '\u062a\u062e'), (64526, 'M', '\u062a\u0645'), (64527, 'M', '\u062a\u0649'), (64528, 'M', '\u062a\u064a'), (64529, 'M', '\u062b\u062c'), (64530, 'M', '\u062b\u0645'), (64531, 'M', '\u062b\u0649'), (64532, 'M', '\u062b\u064a'), (64533, 'M', '\u062c\u062d'), (64534, 'M', '\u062c\u0645'), (64535, 'M', '\u062d\u062c'), (64536, 'M', '\u062d\u0645'), (64537, 'M', '\u062e\u062c'), (64538, 'M', '\u062e\u062d'), (64539, 'M', '\u062e\u0645'), (64540, 'M', '\u0633\u062c'), (64541, 'M', '\u0633\u062d'), (64542, 'M', '\u0633\u062e'), (64543, 'M', '\u0633\u0645'), (64544, 'M', '\u0635\u062d'), (64545, 'M', '\u0635\u0645'), (64546, 'M', '\u0636\u062c'), (64547, 'M', '\u0636\u062d'), (64548, 'M', '\u0636\u062e'), (64549, 'M', '\u0636\u0645'), (64550, 'M', '\u0637\u062d'), (64551, 'M', '\u0637\u0645'), (64552, 'M', '\u0638\u0645'), (64553, 'M', '\u0639\u062c'), (64554, 'M', '\u0639\u0645'), (64555, 'M', '\u063a\u062c'), (64556, 'M', '\u063a\u0645'), (64557, 'M', '\u0641\u062c'), (64558, 'M', '\u0641\u062d'), (64559, 'M', '\u0641\u062e'), (64560, 'M', '\u0641\u0645'), (64561, 'M', '\u0641\u0649'), (64562, 'M', '\u0641\u064a'), (64563, 'M', '\u0642\u062d'), (64564, 'M', '\u0642\u0645'), (64565, 'M', '\u0642\u0649'), (64566, 'M', '\u0642\u064a'), (64567, 'M', '\u0643\u0627'), (64568, 'M', '\u0643\u062c'), (64569, 'M', '\u0643\u062d'), (64570, 'M', '\u0643\u062e'), (64571, 'M', '\u0643\u0644'), (64572, 'M', '\u0643\u0645'), (64573, 'M', '\u0643\u0649'), (64574, 'M', '\u0643\u064a'), (64575, 'M', '\u0644\u062c'), (64576, 'M', '\u0644\u062d'), (64577, 'M', '\u0644\u062e'), (64578, 'M', '\u0644\u0645'), (64579, 'M', '\u0644\u0649'), (64580, 'M', '\u0644\u064a'), (64581, 'M', '\u0645\u062c'), (64582, 'M', '\u0645\u062d'), (64583, 'M', '\u0645\u062e'), (64584, 'M', '\u0645\u0645'), (64585, 'M', '\u0645\u0649'), (64586, 'M', '\u0645\u064a'), (64587, 'M', '\u0646\u062c'), (64588, 'M', '\u0646\u062d'), (64589, 'M', '\u0646\u062e'), (64590, 'M', '\u0646\u0645'), (64591, 'M', '\u0646\u0649'), (64592, 'M', '\u0646\u064a'), (64593, 'M', '\u0647\u062c'), (64594, 'M', '\u0647\u0645'), (64595, 'M', '\u0647\u0649'), (64596, 'M', '\u0647\u064a'), (64597, 'M', '\u064a\u062c'), (64598, 'M', '\u064a\u062d')]"
        ]
    },
    {
        "func_name": "_seg_46",
        "original": "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]",
        "mutated": [
            "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]",
            "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]",
            "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]",
            "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]",
            "def _seg_46() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64599, 'M', '\u064a\u062e'), (64600, 'M', '\u064a\u0645'), (64601, 'M', '\u064a\u0649'), (64602, 'M', '\u064a\u064a'), (64603, 'M', '\u0630\u0670'), (64604, 'M', '\u0631\u0670'), (64605, 'M', '\u0649\u0670'), (64606, '3', ' \u064c\u0651'), (64607, '3', ' \u064d\u0651'), (64608, '3', ' \u064e\u0651'), (64609, '3', ' \u064f\u0651'), (64610, '3', ' \u0650\u0651'), (64611, '3', ' \u0651\u0670'), (64612, 'M', '\u0626\u0631'), (64613, 'M', '\u0626\u0632'), (64614, 'M', '\u0626\u0645'), (64615, 'M', '\u0626\u0646'), (64616, 'M', '\u0626\u0649'), (64617, 'M', '\u0626\u064a'), (64618, 'M', '\u0628\u0631'), (64619, 'M', '\u0628\u0632'), (64620, 'M', '\u0628\u0645'), (64621, 'M', '\u0628\u0646'), (64622, 'M', '\u0628\u0649'), (64623, 'M', '\u0628\u064a'), (64624, 'M', '\u062a\u0631'), (64625, 'M', '\u062a\u0632'), (64626, 'M', '\u062a\u0645'), (64627, 'M', '\u062a\u0646'), (64628, 'M', '\u062a\u0649'), (64629, 'M', '\u062a\u064a'), (64630, 'M', '\u062b\u0631'), (64631, 'M', '\u062b\u0632'), (64632, 'M', '\u062b\u0645'), (64633, 'M', '\u062b\u0646'), (64634, 'M', '\u062b\u0649'), (64635, 'M', '\u062b\u064a'), (64636, 'M', '\u0641\u0649'), (64637, 'M', '\u0641\u064a'), (64638, 'M', '\u0642\u0649'), (64639, 'M', '\u0642\u064a'), (64640, 'M', '\u0643\u0627'), (64641, 'M', '\u0643\u0644'), (64642, 'M', '\u0643\u0645'), (64643, 'M', '\u0643\u0649'), (64644, 'M', '\u0643\u064a'), (64645, 'M', '\u0644\u0645'), (64646, 'M', '\u0644\u0649'), (64647, 'M', '\u0644\u064a'), (64648, 'M', '\u0645\u0627'), (64649, 'M', '\u0645\u0645'), (64650, 'M', '\u0646\u0631'), (64651, 'M', '\u0646\u0632'), (64652, 'M', '\u0646\u0645'), (64653, 'M', '\u0646\u0646'), (64654, 'M', '\u0646\u0649'), (64655, 'M', '\u0646\u064a'), (64656, 'M', '\u0649\u0670'), (64657, 'M', '\u064a\u0631'), (64658, 'M', '\u064a\u0632'), (64659, 'M', '\u064a\u0645'), (64660, 'M', '\u064a\u0646'), (64661, 'M', '\u064a\u0649'), (64662, 'M', '\u064a\u064a'), (64663, 'M', '\u0626\u062c'), (64664, 'M', '\u0626\u062d'), (64665, 'M', '\u0626\u062e'), (64666, 'M', '\u0626\u0645'), (64667, 'M', '\u0626\u0647'), (64668, 'M', '\u0628\u062c'), (64669, 'M', '\u0628\u062d'), (64670, 'M', '\u0628\u062e'), (64671, 'M', '\u0628\u0645'), (64672, 'M', '\u0628\u0647'), (64673, 'M', '\u062a\u062c'), (64674, 'M', '\u062a\u062d'), (64675, 'M', '\u062a\u062e'), (64676, 'M', '\u062a\u0645'), (64677, 'M', '\u062a\u0647'), (64678, 'M', '\u062b\u0645'), (64679, 'M', '\u062c\u062d'), (64680, 'M', '\u062c\u0645'), (64681, 'M', '\u062d\u062c'), (64682, 'M', '\u062d\u0645'), (64683, 'M', '\u062e\u062c'), (64684, 'M', '\u062e\u0645'), (64685, 'M', '\u0633\u062c'), (64686, 'M', '\u0633\u062d'), (64687, 'M', '\u0633\u062e'), (64688, 'M', '\u0633\u0645'), (64689, 'M', '\u0635\u062d'), (64690, 'M', '\u0635\u062e'), (64691, 'M', '\u0635\u0645'), (64692, 'M', '\u0636\u062c'), (64693, 'M', '\u0636\u062d'), (64694, 'M', '\u0636\u062e'), (64695, 'M', '\u0636\u0645'), (64696, 'M', '\u0637\u062d'), (64697, 'M', '\u0638\u0645'), (64698, 'M', '\u0639\u062c')]"
        ]
    },
    {
        "func_name": "_seg_47",
        "original": "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]",
        "mutated": [
            "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]",
            "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]",
            "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]",
            "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]",
            "def _seg_47() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64699, 'M', '\u0639\u0645'), (64700, 'M', '\u063a\u062c'), (64701, 'M', '\u063a\u0645'), (64702, 'M', '\u0641\u062c'), (64703, 'M', '\u0641\u062d'), (64704, 'M', '\u0641\u062e'), (64705, 'M', '\u0641\u0645'), (64706, 'M', '\u0642\u062d'), (64707, 'M', '\u0642\u0645'), (64708, 'M', '\u0643\u062c'), (64709, 'M', '\u0643\u062d'), (64710, 'M', '\u0643\u062e'), (64711, 'M', '\u0643\u0644'), (64712, 'M', '\u0643\u0645'), (64713, 'M', '\u0644\u062c'), (64714, 'M', '\u0644\u062d'), (64715, 'M', '\u0644\u062e'), (64716, 'M', '\u0644\u0645'), (64717, 'M', '\u0644\u0647'), (64718, 'M', '\u0645\u062c'), (64719, 'M', '\u0645\u062d'), (64720, 'M', '\u0645\u062e'), (64721, 'M', '\u0645\u0645'), (64722, 'M', '\u0646\u062c'), (64723, 'M', '\u0646\u062d'), (64724, 'M', '\u0646\u062e'), (64725, 'M', '\u0646\u0645'), (64726, 'M', '\u0646\u0647'), (64727, 'M', '\u0647\u062c'), (64728, 'M', '\u0647\u0645'), (64729, 'M', '\u0647\u0670'), (64730, 'M', '\u064a\u062c'), (64731, 'M', '\u064a\u062d'), (64732, 'M', '\u064a\u062e'), (64733, 'M', '\u064a\u0645'), (64734, 'M', '\u064a\u0647'), (64735, 'M', '\u0626\u0645'), (64736, 'M', '\u0626\u0647'), (64737, 'M', '\u0628\u0645'), (64738, 'M', '\u0628\u0647'), (64739, 'M', '\u062a\u0645'), (64740, 'M', '\u062a\u0647'), (64741, 'M', '\u062b\u0645'), (64742, 'M', '\u062b\u0647'), (64743, 'M', '\u0633\u0645'), (64744, 'M', '\u0633\u0647'), (64745, 'M', '\u0634\u0645'), (64746, 'M', '\u0634\u0647'), (64747, 'M', '\u0643\u0644'), (64748, 'M', '\u0643\u0645'), (64749, 'M', '\u0644\u0645'), (64750, 'M', '\u0646\u0645'), (64751, 'M', '\u0646\u0647'), (64752, 'M', '\u064a\u0645'), (64753, 'M', '\u064a\u0647'), (64754, 'M', '\u0640\u064e\u0651'), (64755, 'M', '\u0640\u064f\u0651'), (64756, 'M', '\u0640\u0650\u0651'), (64757, 'M', '\u0637\u0649'), (64758, 'M', '\u0637\u064a'), (64759, 'M', '\u0639\u0649'), (64760, 'M', '\u0639\u064a'), (64761, 'M', '\u063a\u0649'), (64762, 'M', '\u063a\u064a'), (64763, 'M', '\u0633\u0649'), (64764, 'M', '\u0633\u064a'), (64765, 'M', '\u0634\u0649'), (64766, 'M', '\u0634\u064a'), (64767, 'M', '\u062d\u0649'), (64768, 'M', '\u062d\u064a'), (64769, 'M', '\u062c\u0649'), (64770, 'M', '\u062c\u064a'), (64771, 'M', '\u062e\u0649'), (64772, 'M', '\u062e\u064a'), (64773, 'M', '\u0635\u0649'), (64774, 'M', '\u0635\u064a'), (64775, 'M', '\u0636\u0649'), (64776, 'M', '\u0636\u064a'), (64777, 'M', '\u0634\u062c'), (64778, 'M', '\u0634\u062d'), (64779, 'M', '\u0634\u062e'), (64780, 'M', '\u0634\u0645'), (64781, 'M', '\u0634\u0631'), (64782, 'M', '\u0633\u0631'), (64783, 'M', '\u0635\u0631'), (64784, 'M', '\u0636\u0631'), (64785, 'M', '\u0637\u0649'), (64786, 'M', '\u0637\u064a'), (64787, 'M', '\u0639\u0649'), (64788, 'M', '\u0639\u064a'), (64789, 'M', '\u063a\u0649'), (64790, 'M', '\u063a\u064a'), (64791, 'M', '\u0633\u0649'), (64792, 'M', '\u0633\u064a'), (64793, 'M', '\u0634\u0649'), (64794, 'M', '\u0634\u064a'), (64795, 'M', '\u062d\u0649'), (64796, 'M', '\u062d\u064a'), (64797, 'M', '\u062c\u0649'), (64798, 'M', '\u062c\u064a')]"
        ]
    },
    {
        "func_name": "_seg_48",
        "original": "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]",
        "mutated": [
            "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]",
            "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]",
            "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]",
            "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]",
            "def _seg_48() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64799, 'M', '\u062e\u0649'), (64800, 'M', '\u062e\u064a'), (64801, 'M', '\u0635\u0649'), (64802, 'M', '\u0635\u064a'), (64803, 'M', '\u0636\u0649'), (64804, 'M', '\u0636\u064a'), (64805, 'M', '\u0634\u062c'), (64806, 'M', '\u0634\u062d'), (64807, 'M', '\u0634\u062e'), (64808, 'M', '\u0634\u0645'), (64809, 'M', '\u0634\u0631'), (64810, 'M', '\u0633\u0631'), (64811, 'M', '\u0635\u0631'), (64812, 'M', '\u0636\u0631'), (64813, 'M', '\u0634\u062c'), (64814, 'M', '\u0634\u062d'), (64815, 'M', '\u0634\u062e'), (64816, 'M', '\u0634\u0645'), (64817, 'M', '\u0633\u0647'), (64818, 'M', '\u0634\u0647'), (64819, 'M', '\u0637\u0645'), (64820, 'M', '\u0633\u062c'), (64821, 'M', '\u0633\u062d'), (64822, 'M', '\u0633\u062e'), (64823, 'M', '\u0634\u062c'), (64824, 'M', '\u0634\u062d'), (64825, 'M', '\u0634\u062e'), (64826, 'M', '\u0637\u0645'), (64827, 'M', '\u0638\u0645'), (64828, 'M', '\u0627\u064b'), (64830, 'V'), (64848, 'M', '\u062a\u062c\u0645'), (64849, 'M', '\u062a\u062d\u062c'), (64851, 'M', '\u062a\u062d\u0645'), (64852, 'M', '\u062a\u062e\u0645'), (64853, 'M', '\u062a\u0645\u062c'), (64854, 'M', '\u062a\u0645\u062d'), (64855, 'M', '\u062a\u0645\u062e'), (64856, 'M', '\u062c\u0645\u062d'), (64858, 'M', '\u062d\u0645\u064a'), (64859, 'M', '\u062d\u0645\u0649'), (64860, 'M', '\u0633\u062d\u062c'), (64861, 'M', '\u0633\u062c\u062d'), (64862, 'M', '\u0633\u062c\u0649'), (64863, 'M', '\u0633\u0645\u062d'), (64865, 'M', '\u0633\u0645\u062c'), (64866, 'M', '\u0633\u0645\u0645'), (64868, 'M', '\u0635\u062d\u062d'), (64870, 'M', '\u0635\u0645\u0645'), (64871, 'M', '\u0634\u062d\u0645'), (64873, 'M', '\u0634\u062c\u064a'), (64874, 'M', '\u0634\u0645\u062e'), (64876, 'M', '\u0634\u0645\u0645'), (64878, 'M', '\u0636\u062d\u0649'), (64879, 'M', '\u0636\u062e\u0645'), (64881, 'M', '\u0637\u0645\u062d'), (64883, 'M', '\u0637\u0645\u0645'), (64884, 'M', '\u0637\u0645\u064a'), (64885, 'M', '\u0639\u062c\u0645'), (64886, 'M', '\u0639\u0645\u0645'), (64888, 'M', '\u0639\u0645\u0649'), (64889, 'M', '\u063a\u0645\u0645'), (64890, 'M', '\u063a\u0645\u064a'), (64891, 'M', '\u063a\u0645\u0649'), (64892, 'M', '\u0641\u062e\u0645'), (64894, 'M', '\u0642\u0645\u062d'), (64895, 'M', '\u0642\u0645\u0645'), (64896, 'M', '\u0644\u062d\u0645'), (64897, 'M', '\u0644\u062d\u064a'), (64898, 'M', '\u0644\u062d\u0649'), (64899, 'M', '\u0644\u062c\u062c'), (64901, 'M', '\u0644\u062e\u0645'), (64903, 'M', '\u0644\u0645\u062d'), (64905, 'M', '\u0645\u062d\u062c'), (64906, 'M', '\u0645\u062d\u0645'), (64907, 'M', '\u0645\u062d\u064a'), (64908, 'M', '\u0645\u062c\u062d'), (64909, 'M', '\u0645\u062c\u0645'), (64910, 'M', '\u0645\u062e\u062c'), (64911, 'M', '\u0645\u062e\u0645'), (64912, 'X'), (64914, 'M', '\u0645\u062c\u062e'), (64915, 'M', '\u0647\u0645\u062c'), (64916, 'M', '\u0647\u0645\u0645'), (64917, 'M', '\u0646\u062d\u0645'), (64918, 'M', '\u0646\u062d\u0649'), (64919, 'M', '\u0646\u062c\u0645'), (64921, 'M', '\u0646\u062c\u0649'), (64922, 'M', '\u0646\u0645\u064a'), (64923, 'M', '\u0646\u0645\u0649'), (64924, 'M', '\u064a\u0645\u0645'), (64926, 'M', '\u0628\u062e\u064a'), (64927, 'M', '\u062a\u062c\u064a'), (64928, 'M', '\u062a\u062c\u0649'), (64929, 'M', '\u062a\u062e\u064a'), (64930, 'M', '\u062a\u062e\u0649'), (64931, 'M', '\u062a\u0645\u064a'), (64932, 'M', '\u062a\u0645\u0649'), (64933, 'M', '\u062c\u0645\u064a'), (64934, 'M', '\u062c\u062d\u0649')]"
        ]
    },
    {
        "func_name": "_seg_49",
        "original": "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]",
        "mutated": [
            "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]",
            "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]",
            "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]",
            "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]",
            "def _seg_49() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(64935, 'M', '\u062c\u0645\u0649'), (64936, 'M', '\u0633\u062e\u0649'), (64937, 'M', '\u0635\u062d\u064a'), (64938, 'M', '\u0634\u062d\u064a'), (64939, 'M', '\u0636\u062d\u064a'), (64940, 'M', '\u0644\u062c\u064a'), (64941, 'M', '\u0644\u0645\u064a'), (64942, 'M', '\u064a\u062d\u064a'), (64943, 'M', '\u064a\u062c\u064a'), (64944, 'M', '\u064a\u0645\u064a'), (64945, 'M', '\u0645\u0645\u064a'), (64946, 'M', '\u0642\u0645\u064a'), (64947, 'M', '\u0646\u062d\u064a'), (64948, 'M', '\u0642\u0645\u062d'), (64949, 'M', '\u0644\u062d\u0645'), (64950, 'M', '\u0639\u0645\u064a'), (64951, 'M', '\u0643\u0645\u064a'), (64952, 'M', '\u0646\u062c\u062d'), (64953, 'M', '\u0645\u062e\u064a'), (64954, 'M', '\u0644\u062c\u0645'), (64955, 'M', '\u0643\u0645\u0645'), (64956, 'M', '\u0644\u062c\u0645'), (64957, 'M', '\u0646\u062c\u062d'), (64958, 'M', '\u062c\u062d\u064a'), (64959, 'M', '\u062d\u062c\u064a'), (64960, 'M', '\u0645\u062c\u064a'), (64961, 'M', '\u0641\u0645\u064a'), (64962, 'M', '\u0628\u062d\u064a'), (64963, 'M', '\u0643\u0645\u0645'), (64964, 'M', '\u0639\u062c\u0645'), (64965, 'M', '\u0635\u0645\u0645'), (64966, 'M', '\u0633\u062e\u064a'), (64967, 'M', '\u0646\u062c\u064a'), (64968, 'X'), (64975, 'V'), (64976, 'X'), (65008, 'M', '\u0635\u0644\u06d2'), (65009, 'M', '\u0642\u0644\u06d2'), (65010, 'M', '\u0627\u0644\u0644\u0647'), (65011, 'M', '\u0627\u0643\u0628\u0631'), (65012, 'M', '\u0645\u062d\u0645\u062f'), (65013, 'M', '\u0635\u0644\u0639\u0645'), (65014, 'M', '\u0631\u0633\u0648\u0644'), (65015, 'M', '\u0639\u0644\u064a\u0647'), (65016, 'M', '\u0648\u0633\u0644\u0645'), (65017, 'M', '\u0635\u0644\u0649'), (65018, '3', '\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064a\u0647 \u0648\u0633\u0644\u0645'), (65019, '3', '\u062c\u0644 \u062c\u0644\u0627\u0644\u0647'), (65020, 'M', '\u0631\u06cc\u0627\u0644'), (65021, 'V'), (65024, 'I'), (65040, '3', ','), (65041, 'M', '\u3001'), (65042, 'X'), (65043, '3', ':'), (65044, '3', ';'), (65045, '3', '!'), (65046, '3', '?'), (65047, 'M', '\u3016'), (65048, 'M', '\u3017'), (65049, 'X'), (65056, 'V'), (65072, 'X'), (65073, 'M', '\u2014'), (65074, 'M', '\u2013'), (65075, '3', '_'), (65077, '3', '('), (65078, '3', ')'), (65079, '3', '{'), (65080, '3', '}'), (65081, 'M', '\u3014'), (65082, 'M', '\u3015'), (65083, 'M', '\u3010'), (65084, 'M', '\u3011'), (65085, 'M', '\u300a'), (65086, 'M', '\u300b'), (65087, 'M', '\u3008'), (65088, 'M', '\u3009'), (65089, 'M', '\u300c'), (65090, 'M', '\u300d'), (65091, 'M', '\u300e'), (65092, 'M', '\u300f'), (65093, 'V'), (65095, '3', '['), (65096, '3', ']'), (65097, '3', ' \u0305'), (65101, '3', '_'), (65104, '3', ','), (65105, 'M', '\u3001'), (65106, 'X'), (65108, '3', ';'), (65109, '3', ':'), (65110, '3', '?'), (65111, '3', '!'), (65112, 'M', '\u2014'), (65113, '3', '('), (65114, '3', ')'), (65115, '3', '{'), (65116, '3', '}'), (65117, 'M', '\u3014')]"
        ]
    },
    {
        "func_name": "_seg_50",
        "original": "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]",
        "mutated": [
            "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]",
            "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]",
            "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]",
            "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]",
            "def _seg_50() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(65118, 'M', '\u3015'), (65119, '3', '#'), (65120, '3', '&'), (65121, '3', '*'), (65122, '3', '+'), (65123, 'M', '-'), (65124, '3', '<'), (65125, '3', '>'), (65126, '3', '='), (65127, 'X'), (65128, '3', '\\\\'), (65129, '3', '$'), (65130, '3', '%'), (65131, '3', '@'), (65132, 'X'), (65136, '3', ' \u064b'), (65137, 'M', '\u0640\u064b'), (65138, '3', ' \u064c'), (65139, 'V'), (65140, '3', ' \u064d'), (65141, 'X'), (65142, '3', ' \u064e'), (65143, 'M', '\u0640\u064e'), (65144, '3', ' \u064f'), (65145, 'M', '\u0640\u064f'), (65146, '3', ' \u0650'), (65147, 'M', '\u0640\u0650'), (65148, '3', ' \u0651'), (65149, 'M', '\u0640\u0651'), (65150, '3', ' \u0652'), (65151, 'M', '\u0640\u0652'), (65152, 'M', '\u0621'), (65153, 'M', '\u0622'), (65155, 'M', '\u0623'), (65157, 'M', '\u0624'), (65159, 'M', '\u0625'), (65161, 'M', '\u0626'), (65165, 'M', '\u0627'), (65167, 'M', '\u0628'), (65171, 'M', '\u0629'), (65173, 'M', '\u062a'), (65177, 'M', '\u062b'), (65181, 'M', '\u062c'), (65185, 'M', '\u062d'), (65189, 'M', '\u062e'), (65193, 'M', '\u062f'), (65195, 'M', '\u0630'), (65197, 'M', '\u0631'), (65199, 'M', '\u0632'), (65201, 'M', '\u0633'), (65205, 'M', '\u0634'), (65209, 'M', '\u0635'), (65213, 'M', '\u0636'), (65217, 'M', '\u0637'), (65221, 'M', '\u0638'), (65225, 'M', '\u0639'), (65229, 'M', '\u063a'), (65233, 'M', '\u0641'), (65237, 'M', '\u0642'), (65241, 'M', '\u0643'), (65245, 'M', '\u0644'), (65249, 'M', '\u0645'), (65253, 'M', '\u0646'), (65257, 'M', '\u0647'), (65261, 'M', '\u0648'), (65263, 'M', '\u0649'), (65265, 'M', '\u064a'), (65269, 'M', '\u0644\u0622'), (65271, 'M', '\u0644\u0623'), (65273, 'M', '\u0644\u0625'), (65275, 'M', '\u0644\u0627'), (65277, 'X'), (65279, 'I'), (65280, 'X'), (65281, '3', '!'), (65282, '3', '\"'), (65283, '3', '#'), (65284, '3', '$'), (65285, '3', '%'), (65286, '3', '&'), (65287, '3', \"'\"), (65288, '3', '('), (65289, '3', ')'), (65290, '3', '*'), (65291, '3', '+'), (65292, '3', ','), (65293, 'M', '-'), (65294, 'M', '.'), (65295, '3', '/'), (65296, 'M', '0'), (65297, 'M', '1'), (65298, 'M', '2'), (65299, 'M', '3'), (65300, 'M', '4'), (65301, 'M', '5'), (65302, 'M', '6'), (65303, 'M', '7'), (65304, 'M', '8'), (65305, 'M', '9'), (65306, '3', ':')]"
        ]
    },
    {
        "func_name": "_seg_51",
        "original": "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]",
        "mutated": [
            "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]",
            "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]",
            "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]",
            "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]",
            "def _seg_51() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(65307, '3', ';'), (65308, '3', '<'), (65309, '3', '='), (65310, '3', '>'), (65311, '3', '?'), (65312, '3', '@'), (65313, 'M', 'a'), (65314, 'M', 'b'), (65315, 'M', 'c'), (65316, 'M', 'd'), (65317, 'M', 'e'), (65318, 'M', 'f'), (65319, 'M', 'g'), (65320, 'M', 'h'), (65321, 'M', 'i'), (65322, 'M', 'j'), (65323, 'M', 'k'), (65324, 'M', 'l'), (65325, 'M', 'm'), (65326, 'M', 'n'), (65327, 'M', 'o'), (65328, 'M', 'p'), (65329, 'M', 'q'), (65330, 'M', 'r'), (65331, 'M', 's'), (65332, 'M', 't'), (65333, 'M', 'u'), (65334, 'M', 'v'), (65335, 'M', 'w'), (65336, 'M', 'x'), (65337, 'M', 'y'), (65338, 'M', 'z'), (65339, '3', '['), (65340, '3', '\\\\'), (65341, '3', ']'), (65342, '3', '^'), (65343, '3', '_'), (65344, '3', '`'), (65345, 'M', 'a'), (65346, 'M', 'b'), (65347, 'M', 'c'), (65348, 'M', 'd'), (65349, 'M', 'e'), (65350, 'M', 'f'), (65351, 'M', 'g'), (65352, 'M', 'h'), (65353, 'M', 'i'), (65354, 'M', 'j'), (65355, 'M', 'k'), (65356, 'M', 'l'), (65357, 'M', 'm'), (65358, 'M', 'n'), (65359, 'M', 'o'), (65360, 'M', 'p'), (65361, 'M', 'q'), (65362, 'M', 'r'), (65363, 'M', 's'), (65364, 'M', 't'), (65365, 'M', 'u'), (65366, 'M', 'v'), (65367, 'M', 'w'), (65368, 'M', 'x'), (65369, 'M', 'y'), (65370, 'M', 'z'), (65371, '3', '{'), (65372, '3', '|'), (65373, '3', '}'), (65374, '3', '~'), (65375, 'M', '\u2985'), (65376, 'M', '\u2986'), (65377, 'M', '.'), (65378, 'M', '\u300c'), (65379, 'M', '\u300d'), (65380, 'M', '\u3001'), (65381, 'M', '\u30fb'), (65382, 'M', '\u30f2'), (65383, 'M', '\u30a1'), (65384, 'M', '\u30a3'), (65385, 'M', '\u30a5'), (65386, 'M', '\u30a7'), (65387, 'M', '\u30a9'), (65388, 'M', '\u30e3'), (65389, 'M', '\u30e5'), (65390, 'M', '\u30e7'), (65391, 'M', '\u30c3'), (65392, 'M', '\u30fc'), (65393, 'M', '\u30a2'), (65394, 'M', '\u30a4'), (65395, 'M', '\u30a6'), (65396, 'M', '\u30a8'), (65397, 'M', '\u30aa'), (65398, 'M', '\u30ab'), (65399, 'M', '\u30ad'), (65400, 'M', '\u30af'), (65401, 'M', '\u30b1'), (65402, 'M', '\u30b3'), (65403, 'M', '\u30b5'), (65404, 'M', '\u30b7'), (65405, 'M', '\u30b9'), (65406, 'M', '\u30bb')]"
        ]
    },
    {
        "func_name": "_seg_52",
        "original": "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]",
        "mutated": [
            "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]",
            "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]",
            "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]",
            "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]",
            "def _seg_52() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(65407, 'M', '\u30bd'), (65408, 'M', '\u30bf'), (65409, 'M', '\u30c1'), (65410, 'M', '\u30c4'), (65411, 'M', '\u30c6'), (65412, 'M', '\u30c8'), (65413, 'M', '\u30ca'), (65414, 'M', '\u30cb'), (65415, 'M', '\u30cc'), (65416, 'M', '\u30cd'), (65417, 'M', '\u30ce'), (65418, 'M', '\u30cf'), (65419, 'M', '\u30d2'), (65420, 'M', '\u30d5'), (65421, 'M', '\u30d8'), (65422, 'M', '\u30db'), (65423, 'M', '\u30de'), (65424, 'M', '\u30df'), (65425, 'M', '\u30e0'), (65426, 'M', '\u30e1'), (65427, 'M', '\u30e2'), (65428, 'M', '\u30e4'), (65429, 'M', '\u30e6'), (65430, 'M', '\u30e8'), (65431, 'M', '\u30e9'), (65432, 'M', '\u30ea'), (65433, 'M', '\u30eb'), (65434, 'M', '\u30ec'), (65435, 'M', '\u30ed'), (65436, 'M', '\u30ef'), (65437, 'M', '\u30f3'), (65438, 'M', '\u3099'), (65439, 'M', '\u309a'), (65440, 'X'), (65441, 'M', '\u1100'), (65442, 'M', '\u1101'), (65443, 'M', '\u11aa'), (65444, 'M', '\u1102'), (65445, 'M', '\u11ac'), (65446, 'M', '\u11ad'), (65447, 'M', '\u1103'), (65448, 'M', '\u1104'), (65449, 'M', '\u1105'), (65450, 'M', '\u11b0'), (65451, 'M', '\u11b1'), (65452, 'M', '\u11b2'), (65453, 'M', '\u11b3'), (65454, 'M', '\u11b4'), (65455, 'M', '\u11b5'), (65456, 'M', '\u111a'), (65457, 'M', '\u1106'), (65458, 'M', '\u1107'), (65459, 'M', '\u1108'), (65460, 'M', '\u1121'), (65461, 'M', '\u1109'), (65462, 'M', '\u110a'), (65463, 'M', '\u110b'), (65464, 'M', '\u110c'), (65465, 'M', '\u110d'), (65466, 'M', '\u110e'), (65467, 'M', '\u110f'), (65468, 'M', '\u1110'), (65469, 'M', '\u1111'), (65470, 'M', '\u1112'), (65471, 'X'), (65474, 'M', '\u1161'), (65475, 'M', '\u1162'), (65476, 'M', '\u1163'), (65477, 'M', '\u1164'), (65478, 'M', '\u1165'), (65479, 'M', '\u1166'), (65480, 'X'), (65482, 'M', '\u1167'), (65483, 'M', '\u1168'), (65484, 'M', '\u1169'), (65485, 'M', '\u116a'), (65486, 'M', '\u116b'), (65487, 'M', '\u116c'), (65488, 'X'), (65490, 'M', '\u116d'), (65491, 'M', '\u116e'), (65492, 'M', '\u116f'), (65493, 'M', '\u1170'), (65494, 'M', '\u1171'), (65495, 'M', '\u1172'), (65496, 'X'), (65498, 'M', '\u1173'), (65499, 'M', '\u1174'), (65500, 'M', '\u1175'), (65501, 'X'), (65504, 'M', '\u00a2'), (65505, 'M', '\u00a3'), (65506, 'M', '\u00ac'), (65507, '3', ' \u0304'), (65508, 'M', '\u00a6'), (65509, 'M', '\u00a5'), (65510, 'M', '\u20a9'), (65511, 'X'), (65512, 'M', '\u2502'), (65513, 'M', '\u2190')]"
        ]
    },
    {
        "func_name": "_seg_53",
        "original": "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]",
        "mutated": [
            "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]",
            "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]",
            "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]",
            "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]",
            "def _seg_53() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(65514, 'M', '\u2191'), (65515, 'M', '\u2192'), (65516, 'M', '\u2193'), (65517, 'M', '\u25a0'), (65518, 'M', '\u25cb'), (65519, 'X'), (65536, 'V'), (65548, 'X'), (65549, 'V'), (65575, 'X'), (65576, 'V'), (65595, 'X'), (65596, 'V'), (65598, 'X'), (65599, 'V'), (65614, 'X'), (65616, 'V'), (65630, 'X'), (65664, 'V'), (65787, 'X'), (65792, 'V'), (65795, 'X'), (65799, 'V'), (65844, 'X'), (65847, 'V'), (65935, 'X'), (65936, 'V'), (65949, 'X'), (65952, 'V'), (65953, 'X'), (66000, 'V'), (66046, 'X'), (66176, 'V'), (66205, 'X'), (66208, 'V'), (66257, 'X'), (66272, 'V'), (66300, 'X'), (66304, 'V'), (66340, 'X'), (66349, 'V'), (66379, 'X'), (66384, 'V'), (66427, 'X'), (66432, 'V'), (66462, 'X'), (66463, 'V'), (66500, 'X'), (66504, 'V'), (66518, 'X'), (66560, 'M', '\ud801\udc28'), (66561, 'M', '\ud801\udc29'), (66562, 'M', '\ud801\udc2a'), (66563, 'M', '\ud801\udc2b'), (66564, 'M', '\ud801\udc2c'), (66565, 'M', '\ud801\udc2d'), (66566, 'M', '\ud801\udc2e'), (66567, 'M', '\ud801\udc2f'), (66568, 'M', '\ud801\udc30'), (66569, 'M', '\ud801\udc31'), (66570, 'M', '\ud801\udc32'), (66571, 'M', '\ud801\udc33'), (66572, 'M', '\ud801\udc34'), (66573, 'M', '\ud801\udc35'), (66574, 'M', '\ud801\udc36'), (66575, 'M', '\ud801\udc37'), (66576, 'M', '\ud801\udc38'), (66577, 'M', '\ud801\udc39'), (66578, 'M', '\ud801\udc3a'), (66579, 'M', '\ud801\udc3b'), (66580, 'M', '\ud801\udc3c'), (66581, 'M', '\ud801\udc3d'), (66582, 'M', '\ud801\udc3e'), (66583, 'M', '\ud801\udc3f'), (66584, 'M', '\ud801\udc40'), (66585, 'M', '\ud801\udc41'), (66586, 'M', '\ud801\udc42'), (66587, 'M', '\ud801\udc43'), (66588, 'M', '\ud801\udc44'), (66589, 'M', '\ud801\udc45'), (66590, 'M', '\ud801\udc46'), (66591, 'M', '\ud801\udc47'), (66592, 'M', '\ud801\udc48'), (66593, 'M', '\ud801\udc49'), (66594, 'M', '\ud801\udc4a'), (66595, 'M', '\ud801\udc4b'), (66596, 'M', '\ud801\udc4c'), (66597, 'M', '\ud801\udc4d'), (66598, 'M', '\ud801\udc4e'), (66599, 'M', '\ud801\udc4f'), (66600, 'V'), (66718, 'X'), (66720, 'V'), (66730, 'X'), (66736, 'M', '\ud801\udcd8'), (66737, 'M', '\ud801\udcd9'), (66738, 'M', '\ud801\udcda'), (66739, 'M', '\ud801\udcdb'), (66740, 'M', '\ud801\udcdc'), (66741, 'M', '\ud801\udcdd')]"
        ]
    },
    {
        "func_name": "_seg_54",
        "original": "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]",
        "mutated": [
            "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]",
            "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]",
            "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]",
            "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]",
            "def _seg_54() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(66742, 'M', '\ud801\udcde'), (66743, 'M', '\ud801\udcdf'), (66744, 'M', '\ud801\udce0'), (66745, 'M', '\ud801\udce1'), (66746, 'M', '\ud801\udce2'), (66747, 'M', '\ud801\udce3'), (66748, 'M', '\ud801\udce4'), (66749, 'M', '\ud801\udce5'), (66750, 'M', '\ud801\udce6'), (66751, 'M', '\ud801\udce7'), (66752, 'M', '\ud801\udce8'), (66753, 'M', '\ud801\udce9'), (66754, 'M', '\ud801\udcea'), (66755, 'M', '\ud801\udceb'), (66756, 'M', '\ud801\udcec'), (66757, 'M', '\ud801\udced'), (66758, 'M', '\ud801\udcee'), (66759, 'M', '\ud801\udcef'), (66760, 'M', '\ud801\udcf0'), (66761, 'M', '\ud801\udcf1'), (66762, 'M', '\ud801\udcf2'), (66763, 'M', '\ud801\udcf3'), (66764, 'M', '\ud801\udcf4'), (66765, 'M', '\ud801\udcf5'), (66766, 'M', '\ud801\udcf6'), (66767, 'M', '\ud801\udcf7'), (66768, 'M', '\ud801\udcf8'), (66769, 'M', '\ud801\udcf9'), (66770, 'M', '\ud801\udcfa'), (66771, 'M', '\ud801\udcfb'), (66772, 'X'), (66776, 'V'), (66812, 'X'), (66816, 'V'), (66856, 'X'), (66864, 'V'), (66916, 'X'), (66927, 'V'), (66928, 'M', '\\U00010597'), (66929, 'M', '\\U00010598'), (66930, 'M', '\\U00010599'), (66931, 'M', '\\U0001059a'), (66932, 'M', '\\U0001059b'), (66933, 'M', '\\U0001059c'), (66934, 'M', '\\U0001059d'), (66935, 'M', '\\U0001059e'), (66936, 'M', '\\U0001059f'), (66937, 'M', '\\U000105a0'), (66938, 'M', '\\U000105a1'), (66939, 'X'), (66940, 'M', '\\U000105a3'), (66941, 'M', '\\U000105a4'), (66942, 'M', '\\U000105a5'), (66943, 'M', '\\U000105a6'), (66944, 'M', '\\U000105a7'), (66945, 'M', '\\U000105a8'), (66946, 'M', '\\U000105a9'), (66947, 'M', '\\U000105aa'), (66948, 'M', '\\U000105ab'), (66949, 'M', '\\U000105ac'), (66950, 'M', '\\U000105ad'), (66951, 'M', '\\U000105ae'), (66952, 'M', '\\U000105af'), (66953, 'M', '\\U000105b0'), (66954, 'M', '\\U000105b1'), (66955, 'X'), (66956, 'M', '\\U000105b3'), (66957, 'M', '\\U000105b4'), (66958, 'M', '\\U000105b5'), (66959, 'M', '\\U000105b6'), (66960, 'M', '\\U000105b7'), (66961, 'M', '\\U000105b8'), (66962, 'M', '\\U000105b9'), (66963, 'X'), (66964, 'M', '\\U000105bb'), (66965, 'M', '\\U000105bc'), (66966, 'X'), (66967, 'V'), (66978, 'X'), (66979, 'V'), (66994, 'X'), (66995, 'V'), (67002, 'X'), (67003, 'V'), (67005, 'X'), (67072, 'V'), (67383, 'X'), (67392, 'V'), (67414, 'X'), (67424, 'V'), (67432, 'X'), (67456, 'V'), (67457, 'M', '\u02d0'), (67458, 'M', '\u02d1'), (67459, 'M', '\u00e6'), (67460, 'M', '\u0299'), (67461, 'M', '\u0253'), (67462, 'X'), (67463, 'M', '\u02a3'), (67464, 'M', '\uab66')]"
        ]
    },
    {
        "func_name": "_seg_55",
        "original": "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]",
        "mutated": [
            "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]",
            "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]",
            "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]",
            "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]",
            "def _seg_55() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(67465, 'M', '\u02a5'), (67466, 'M', '\u02a4'), (67467, 'M', '\u0256'), (67468, 'M', '\u0257'), (67469, 'M', '\u1d91'), (67470, 'M', '\u0258'), (67471, 'M', '\u025e'), (67472, 'M', '\u02a9'), (67473, 'M', '\u0264'), (67474, 'M', '\u0262'), (67475, 'M', '\u0260'), (67476, 'M', '\u029b'), (67477, 'M', '\u0127'), (67478, 'M', '\u029c'), (67479, 'M', '\u0267'), (67480, 'M', '\u0284'), (67481, 'M', '\u02aa'), (67482, 'M', '\u02ab'), (67483, 'M', '\u026c'), (67484, 'M', '\\U0001df04'), (67485, 'M', '\ua78e'), (67486, 'M', '\u026e'), (67487, 'M', '\\U0001df05'), (67488, 'M', '\u028e'), (67489, 'M', '\\U0001df06'), (67490, 'M', '\u00f8'), (67491, 'M', '\u0276'), (67492, 'M', '\u0277'), (67493, 'M', 'q'), (67494, 'M', '\u027a'), (67495, 'M', '\\U0001df08'), (67496, 'M', '\u027d'), (67497, 'M', '\u027e'), (67498, 'M', '\u0280'), (67499, 'M', '\u02a8'), (67500, 'M', '\u02a6'), (67501, 'M', '\uab67'), (67502, 'M', '\u02a7'), (67503, 'M', '\u0288'), (67504, 'M', '\u2c71'), (67505, 'X'), (67506, 'M', '\u028f'), (67507, 'M', '\u02a1'), (67508, 'M', '\u02a2'), (67509, 'M', '\u0298'), (67510, 'M', '\u01c0'), (67511, 'M', '\u01c1'), (67512, 'M', '\u01c2'), (67513, 'M', '\\U0001df0a'), (67514, 'M', '\\U0001df1e'), (67515, 'X'), (67584, 'V'), (67590, 'X'), (67592, 'V'), (67593, 'X'), (67594, 'V'), (67638, 'X'), (67639, 'V'), (67641, 'X'), (67644, 'V'), (67645, 'X'), (67647, 'V'), (67670, 'X'), (67671, 'V'), (67743, 'X'), (67751, 'V'), (67760, 'X'), (67808, 'V'), (67827, 'X'), (67828, 'V'), (67830, 'X'), (67835, 'V'), (67868, 'X'), (67871, 'V'), (67898, 'X'), (67903, 'V'), (67904, 'X'), (67968, 'V'), (68024, 'X'), (68028, 'V'), (68048, 'X'), (68050, 'V'), (68100, 'X'), (68101, 'V'), (68103, 'X'), (68108, 'V'), (68116, 'X'), (68117, 'V'), (68120, 'X'), (68121, 'V'), (68150, 'X'), (68152, 'V'), (68155, 'X'), (68159, 'V'), (68169, 'X'), (68176, 'V'), (68185, 'X'), (68192, 'V'), (68256, 'X'), (68288, 'V')]"
        ]
    },
    {
        "func_name": "_seg_56",
        "original": "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]",
        "mutated": [
            "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]",
            "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]",
            "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]",
            "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]",
            "def _seg_56() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(68327, 'X'), (68331, 'V'), (68343, 'X'), (68352, 'V'), (68406, 'X'), (68409, 'V'), (68438, 'X'), (68440, 'V'), (68467, 'X'), (68472, 'V'), (68498, 'X'), (68505, 'V'), (68509, 'X'), (68521, 'V'), (68528, 'X'), (68608, 'V'), (68681, 'X'), (68736, 'M', '\ud803\udcc0'), (68737, 'M', '\ud803\udcc1'), (68738, 'M', '\ud803\udcc2'), (68739, 'M', '\ud803\udcc3'), (68740, 'M', '\ud803\udcc4'), (68741, 'M', '\ud803\udcc5'), (68742, 'M', '\ud803\udcc6'), (68743, 'M', '\ud803\udcc7'), (68744, 'M', '\ud803\udcc8'), (68745, 'M', '\ud803\udcc9'), (68746, 'M', '\ud803\udcca'), (68747, 'M', '\ud803\udccb'), (68748, 'M', '\ud803\udccc'), (68749, 'M', '\ud803\udccd'), (68750, 'M', '\ud803\udcce'), (68751, 'M', '\ud803\udccf'), (68752, 'M', '\ud803\udcd0'), (68753, 'M', '\ud803\udcd1'), (68754, 'M', '\ud803\udcd2'), (68755, 'M', '\ud803\udcd3'), (68756, 'M', '\ud803\udcd4'), (68757, 'M', '\ud803\udcd5'), (68758, 'M', '\ud803\udcd6'), (68759, 'M', '\ud803\udcd7'), (68760, 'M', '\ud803\udcd8'), (68761, 'M', '\ud803\udcd9'), (68762, 'M', '\ud803\udcda'), (68763, 'M', '\ud803\udcdb'), (68764, 'M', '\ud803\udcdc'), (68765, 'M', '\ud803\udcdd'), (68766, 'M', '\ud803\udcde'), (68767, 'M', '\ud803\udcdf'), (68768, 'M', '\ud803\udce0'), (68769, 'M', '\ud803\udce1'), (68770, 'M', '\ud803\udce2'), (68771, 'M', '\ud803\udce3'), (68772, 'M', '\ud803\udce4'), (68773, 'M', '\ud803\udce5'), (68774, 'M', '\ud803\udce6'), (68775, 'M', '\ud803\udce7'), (68776, 'M', '\ud803\udce8'), (68777, 'M', '\ud803\udce9'), (68778, 'M', '\ud803\udcea'), (68779, 'M', '\ud803\udceb'), (68780, 'M', '\ud803\udcec'), (68781, 'M', '\ud803\udced'), (68782, 'M', '\ud803\udcee'), (68783, 'M', '\ud803\udcef'), (68784, 'M', '\ud803\udcf0'), (68785, 'M', '\ud803\udcf1'), (68786, 'M', '\ud803\udcf2'), (68787, 'X'), (68800, 'V'), (68851, 'X'), (68858, 'V'), (68904, 'X'), (68912, 'V'), (68922, 'X'), (69216, 'V'), (69247, 'X'), (69248, 'V'), (69290, 'X'), (69291, 'V'), (69294, 'X'), (69296, 'V'), (69298, 'X'), (69373, 'V'), (69416, 'X'), (69424, 'V'), (69466, 'X'), (69488, 'V'), (69514, 'X'), (69552, 'V'), (69580, 'X'), (69600, 'V'), (69623, 'X'), (69632, 'V'), (69710, 'X'), (69714, 'V'), (69750, 'X'), (69759, 'V'), (69821, 'X'), (69822, 'V')]"
        ]
    },
    {
        "func_name": "_seg_57",
        "original": "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]",
        "mutated": [
            "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]",
            "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]",
            "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]",
            "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]",
            "def _seg_57() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(69827, 'X'), (69840, 'V'), (69865, 'X'), (69872, 'V'), (69882, 'X'), (69888, 'V'), (69941, 'X'), (69942, 'V'), (69960, 'X'), (69968, 'V'), (70007, 'X'), (70016, 'V'), (70112, 'X'), (70113, 'V'), (70133, 'X'), (70144, 'V'), (70162, 'X'), (70163, 'V'), (70210, 'X'), (70272, 'V'), (70279, 'X'), (70280, 'V'), (70281, 'X'), (70282, 'V'), (70286, 'X'), (70287, 'V'), (70302, 'X'), (70303, 'V'), (70314, 'X'), (70320, 'V'), (70379, 'X'), (70384, 'V'), (70394, 'X'), (70400, 'V'), (70404, 'X'), (70405, 'V'), (70413, 'X'), (70415, 'V'), (70417, 'X'), (70419, 'V'), (70441, 'X'), (70442, 'V'), (70449, 'X'), (70450, 'V'), (70452, 'X'), (70453, 'V'), (70458, 'X'), (70459, 'V'), (70469, 'X'), (70471, 'V'), (70473, 'X'), (70475, 'V'), (70478, 'X'), (70480, 'V'), (70481, 'X'), (70487, 'V'), (70488, 'X'), (70493, 'V'), (70500, 'X'), (70502, 'V'), (70509, 'X'), (70512, 'V'), (70517, 'X'), (70656, 'V'), (70748, 'X'), (70749, 'V'), (70754, 'X'), (70784, 'V'), (70856, 'X'), (70864, 'V'), (70874, 'X'), (71040, 'V'), (71094, 'X'), (71096, 'V'), (71134, 'X'), (71168, 'V'), (71237, 'X'), (71248, 'V'), (71258, 'X'), (71264, 'V'), (71277, 'X'), (71296, 'V'), (71354, 'X'), (71360, 'V'), (71370, 'X'), (71424, 'V'), (71451, 'X'), (71453, 'V'), (71468, 'X'), (71472, 'V'), (71495, 'X'), (71680, 'V'), (71740, 'X'), (71840, 'M', '\ud806\udcc0'), (71841, 'M', '\ud806\udcc1'), (71842, 'M', '\ud806\udcc2'), (71843, 'M', '\ud806\udcc3'), (71844, 'M', '\ud806\udcc4'), (71845, 'M', '\ud806\udcc5'), (71846, 'M', '\ud806\udcc6')]"
        ]
    },
    {
        "func_name": "_seg_58",
        "original": "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]",
        "mutated": [
            "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]",
            "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]",
            "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]",
            "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]",
            "def _seg_58() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(71847, 'M', '\ud806\udcc7'), (71848, 'M', '\ud806\udcc8'), (71849, 'M', '\ud806\udcc9'), (71850, 'M', '\ud806\udcca'), (71851, 'M', '\ud806\udccb'), (71852, 'M', '\ud806\udccc'), (71853, 'M', '\ud806\udccd'), (71854, 'M', '\ud806\udcce'), (71855, 'M', '\ud806\udccf'), (71856, 'M', '\ud806\udcd0'), (71857, 'M', '\ud806\udcd1'), (71858, 'M', '\ud806\udcd2'), (71859, 'M', '\ud806\udcd3'), (71860, 'M', '\ud806\udcd4'), (71861, 'M', '\ud806\udcd5'), (71862, 'M', '\ud806\udcd6'), (71863, 'M', '\ud806\udcd7'), (71864, 'M', '\ud806\udcd8'), (71865, 'M', '\ud806\udcd9'), (71866, 'M', '\ud806\udcda'), (71867, 'M', '\ud806\udcdb'), (71868, 'M', '\ud806\udcdc'), (71869, 'M', '\ud806\udcdd'), (71870, 'M', '\ud806\udcde'), (71871, 'M', '\ud806\udcdf'), (71872, 'V'), (71923, 'X'), (71935, 'V'), (71943, 'X'), (71945, 'V'), (71946, 'X'), (71948, 'V'), (71956, 'X'), (71957, 'V'), (71959, 'X'), (71960, 'V'), (71990, 'X'), (71991, 'V'), (71993, 'X'), (71995, 'V'), (72007, 'X'), (72016, 'V'), (72026, 'X'), (72096, 'V'), (72104, 'X'), (72106, 'V'), (72152, 'X'), (72154, 'V'), (72165, 'X'), (72192, 'V'), (72264, 'X'), (72272, 'V'), (72355, 'X'), (72368, 'V'), (72441, 'X'), (72448, 'V'), (72458, 'X'), (72704, 'V'), (72713, 'X'), (72714, 'V'), (72759, 'X'), (72760, 'V'), (72774, 'X'), (72784, 'V'), (72813, 'X'), (72816, 'V'), (72848, 'X'), (72850, 'V'), (72872, 'X'), (72873, 'V'), (72887, 'X'), (72960, 'V'), (72967, 'X'), (72968, 'V'), (72970, 'X'), (72971, 'V'), (73015, 'X'), (73018, 'V'), (73019, 'X'), (73020, 'V'), (73022, 'X'), (73023, 'V'), (73032, 'X'), (73040, 'V'), (73050, 'X'), (73056, 'V'), (73062, 'X'), (73063, 'V'), (73065, 'X'), (73066, 'V'), (73103, 'X'), (73104, 'V'), (73106, 'X'), (73107, 'V'), (73113, 'X'), (73120, 'V'), (73130, 'X'), (73440, 'V'), (73465, 'X'), (73472, 'V')]"
        ]
    },
    {
        "func_name": "_seg_59",
        "original": "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]",
        "mutated": [
            "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]",
            "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]",
            "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]",
            "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]",
            "def _seg_59() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(73489, 'X'), (73490, 'V'), (73531, 'X'), (73534, 'V'), (73562, 'X'), (73648, 'V'), (73649, 'X'), (73664, 'V'), (73714, 'X'), (73727, 'V'), (74650, 'X'), (74752, 'V'), (74863, 'X'), (74864, 'V'), (74869, 'X'), (74880, 'V'), (75076, 'X'), (77712, 'V'), (77811, 'X'), (77824, 'V'), (78896, 'X'), (78912, 'V'), (78934, 'X'), (82944, 'V'), (83527, 'X'), (92160, 'V'), (92729, 'X'), (92736, 'V'), (92767, 'X'), (92768, 'V'), (92778, 'X'), (92782, 'V'), (92863, 'X'), (92864, 'V'), (92874, 'X'), (92880, 'V'), (92910, 'X'), (92912, 'V'), (92918, 'X'), (92928, 'V'), (92998, 'X'), (93008, 'V'), (93018, 'X'), (93019, 'V'), (93026, 'X'), (93027, 'V'), (93048, 'X'), (93053, 'V'), (93072, 'X'), (93760, 'M', '\ud81b\ude60'), (93761, 'M', '\ud81b\ude61'), (93762, 'M', '\ud81b\ude62'), (93763, 'M', '\ud81b\ude63'), (93764, 'M', '\ud81b\ude64'), (93765, 'M', '\ud81b\ude65'), (93766, 'M', '\ud81b\ude66'), (93767, 'M', '\ud81b\ude67'), (93768, 'M', '\ud81b\ude68'), (93769, 'M', '\ud81b\ude69'), (93770, 'M', '\ud81b\ude6a'), (93771, 'M', '\ud81b\ude6b'), (93772, 'M', '\ud81b\ude6c'), (93773, 'M', '\ud81b\ude6d'), (93774, 'M', '\ud81b\ude6e'), (93775, 'M', '\ud81b\ude6f'), (93776, 'M', '\ud81b\ude70'), (93777, 'M', '\ud81b\ude71'), (93778, 'M', '\ud81b\ude72'), (93779, 'M', '\ud81b\ude73'), (93780, 'M', '\ud81b\ude74'), (93781, 'M', '\ud81b\ude75'), (93782, 'M', '\ud81b\ude76'), (93783, 'M', '\ud81b\ude77'), (93784, 'M', '\ud81b\ude78'), (93785, 'M', '\ud81b\ude79'), (93786, 'M', '\ud81b\ude7a'), (93787, 'M', '\ud81b\ude7b'), (93788, 'M', '\ud81b\ude7c'), (93789, 'M', '\ud81b\ude7d'), (93790, 'M', '\ud81b\ude7e'), (93791, 'M', '\ud81b\ude7f'), (93792, 'V'), (93851, 'X'), (93952, 'V'), (94027, 'X'), (94031, 'V'), (94088, 'X'), (94095, 'V'), (94112, 'X'), (94176, 'V'), (94181, 'X'), (94192, 'V'), (94194, 'X'), (94208, 'V'), (100344, 'X'), (100352, 'V'), (101590, 'X'), (101632, 'V'), (101641, 'X'), (110576, 'V')]"
        ]
    },
    {
        "func_name": "_seg_60",
        "original": "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]",
        "mutated": [
            "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]",
            "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]",
            "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]",
            "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]",
            "def _seg_60() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(110580, 'X'), (110581, 'V'), (110588, 'X'), (110589, 'V'), (110591, 'X'), (110592, 'V'), (110883, 'X'), (110898, 'V'), (110899, 'X'), (110928, 'V'), (110931, 'X'), (110933, 'V'), (110934, 'X'), (110948, 'V'), (110952, 'X'), (110960, 'V'), (111356, 'X'), (113664, 'V'), (113771, 'X'), (113776, 'V'), (113789, 'X'), (113792, 'V'), (113801, 'X'), (113808, 'V'), (113818, 'X'), (113820, 'V'), (113824, 'I'), (113828, 'X'), (118528, 'V'), (118574, 'X'), (118576, 'V'), (118599, 'X'), (118608, 'V'), (118724, 'X'), (118784, 'V'), (119030, 'X'), (119040, 'V'), (119079, 'X'), (119081, 'V'), (119134, 'M', '\ud834\udd57\ud834\udd65'), (119135, 'M', '\ud834\udd58\ud834\udd65'), (119136, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6e'), (119137, 'M', '\ud834\udd58\ud834\udd65\ud834\udd6f'), (119138, 'M', '\ud834\udd58\ud834\udd65\ud834\udd70'), (119139, 'M', '\ud834\udd58\ud834\udd65\ud834\udd71'), (119140, 'M', '\ud834\udd58\ud834\udd65\ud834\udd72'), (119141, 'V'), (119155, 'X'), (119163, 'V'), (119227, 'M', '\ud834\uddb9\ud834\udd65'), (119228, 'M', '\ud834\uddba\ud834\udd65'), (119229, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6e'), (119230, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6e'), (119231, 'M', '\ud834\uddb9\ud834\udd65\ud834\udd6f'), (119232, 'M', '\ud834\uddba\ud834\udd65\ud834\udd6f'), (119233, 'V'), (119275, 'X'), (119296, 'V'), (119366, 'X'), (119488, 'V'), (119508, 'X'), (119520, 'V'), (119540, 'X'), (119552, 'V'), (119639, 'X'), (119648, 'V'), (119673, 'X'), (119808, 'M', 'a'), (119809, 'M', 'b'), (119810, 'M', 'c'), (119811, 'M', 'd'), (119812, 'M', 'e'), (119813, 'M', 'f'), (119814, 'M', 'g'), (119815, 'M', 'h'), (119816, 'M', 'i'), (119817, 'M', 'j'), (119818, 'M', 'k'), (119819, 'M', 'l'), (119820, 'M', 'm'), (119821, 'M', 'n'), (119822, 'M', 'o'), (119823, 'M', 'p'), (119824, 'M', 'q'), (119825, 'M', 'r'), (119826, 'M', 's'), (119827, 'M', 't'), (119828, 'M', 'u'), (119829, 'M', 'v'), (119830, 'M', 'w'), (119831, 'M', 'x'), (119832, 'M', 'y'), (119833, 'M', 'z'), (119834, 'M', 'a'), (119835, 'M', 'b'), (119836, 'M', 'c'), (119837, 'M', 'd'), (119838, 'M', 'e'), (119839, 'M', 'f'), (119840, 'M', 'g')]"
        ]
    },
    {
        "func_name": "_seg_61",
        "original": "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]",
        "mutated": [
            "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]",
            "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]",
            "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]",
            "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]",
            "def _seg_61() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(119841, 'M', 'h'), (119842, 'M', 'i'), (119843, 'M', 'j'), (119844, 'M', 'k'), (119845, 'M', 'l'), (119846, 'M', 'm'), (119847, 'M', 'n'), (119848, 'M', 'o'), (119849, 'M', 'p'), (119850, 'M', 'q'), (119851, 'M', 'r'), (119852, 'M', 's'), (119853, 'M', 't'), (119854, 'M', 'u'), (119855, 'M', 'v'), (119856, 'M', 'w'), (119857, 'M', 'x'), (119858, 'M', 'y'), (119859, 'M', 'z'), (119860, 'M', 'a'), (119861, 'M', 'b'), (119862, 'M', 'c'), (119863, 'M', 'd'), (119864, 'M', 'e'), (119865, 'M', 'f'), (119866, 'M', 'g'), (119867, 'M', 'h'), (119868, 'M', 'i'), (119869, 'M', 'j'), (119870, 'M', 'k'), (119871, 'M', 'l'), (119872, 'M', 'm'), (119873, 'M', 'n'), (119874, 'M', 'o'), (119875, 'M', 'p'), (119876, 'M', 'q'), (119877, 'M', 'r'), (119878, 'M', 's'), (119879, 'M', 't'), (119880, 'M', 'u'), (119881, 'M', 'v'), (119882, 'M', 'w'), (119883, 'M', 'x'), (119884, 'M', 'y'), (119885, 'M', 'z'), (119886, 'M', 'a'), (119887, 'M', 'b'), (119888, 'M', 'c'), (119889, 'M', 'd'), (119890, 'M', 'e'), (119891, 'M', 'f'), (119892, 'M', 'g'), (119893, 'X'), (119894, 'M', 'i'), (119895, 'M', 'j'), (119896, 'M', 'k'), (119897, 'M', 'l'), (119898, 'M', 'm'), (119899, 'M', 'n'), (119900, 'M', 'o'), (119901, 'M', 'p'), (119902, 'M', 'q'), (119903, 'M', 'r'), (119904, 'M', 's'), (119905, 'M', 't'), (119906, 'M', 'u'), (119907, 'M', 'v'), (119908, 'M', 'w'), (119909, 'M', 'x'), (119910, 'M', 'y'), (119911, 'M', 'z'), (119912, 'M', 'a'), (119913, 'M', 'b'), (119914, 'M', 'c'), (119915, 'M', 'd'), (119916, 'M', 'e'), (119917, 'M', 'f'), (119918, 'M', 'g'), (119919, 'M', 'h'), (119920, 'M', 'i'), (119921, 'M', 'j'), (119922, 'M', 'k'), (119923, 'M', 'l'), (119924, 'M', 'm'), (119925, 'M', 'n'), (119926, 'M', 'o'), (119927, 'M', 'p'), (119928, 'M', 'q'), (119929, 'M', 'r'), (119930, 'M', 's'), (119931, 'M', 't'), (119932, 'M', 'u'), (119933, 'M', 'v'), (119934, 'M', 'w'), (119935, 'M', 'x'), (119936, 'M', 'y'), (119937, 'M', 'z'), (119938, 'M', 'a'), (119939, 'M', 'b'), (119940, 'M', 'c')]"
        ]
    },
    {
        "func_name": "_seg_62",
        "original": "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]",
        "mutated": [
            "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]",
            "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]",
            "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]",
            "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]",
            "def _seg_62() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(119941, 'M', 'd'), (119942, 'M', 'e'), (119943, 'M', 'f'), (119944, 'M', 'g'), (119945, 'M', 'h'), (119946, 'M', 'i'), (119947, 'M', 'j'), (119948, 'M', 'k'), (119949, 'M', 'l'), (119950, 'M', 'm'), (119951, 'M', 'n'), (119952, 'M', 'o'), (119953, 'M', 'p'), (119954, 'M', 'q'), (119955, 'M', 'r'), (119956, 'M', 's'), (119957, 'M', 't'), (119958, 'M', 'u'), (119959, 'M', 'v'), (119960, 'M', 'w'), (119961, 'M', 'x'), (119962, 'M', 'y'), (119963, 'M', 'z'), (119964, 'M', 'a'), (119965, 'X'), (119966, 'M', 'c'), (119967, 'M', 'd'), (119968, 'X'), (119970, 'M', 'g'), (119971, 'X'), (119973, 'M', 'j'), (119974, 'M', 'k'), (119975, 'X'), (119977, 'M', 'n'), (119978, 'M', 'o'), (119979, 'M', 'p'), (119980, 'M', 'q'), (119981, 'X'), (119982, 'M', 's'), (119983, 'M', 't'), (119984, 'M', 'u'), (119985, 'M', 'v'), (119986, 'M', 'w'), (119987, 'M', 'x'), (119988, 'M', 'y'), (119989, 'M', 'z'), (119990, 'M', 'a'), (119991, 'M', 'b'), (119992, 'M', 'c'), (119993, 'M', 'd'), (119994, 'X'), (119995, 'M', 'f'), (119996, 'X'), (119997, 'M', 'h'), (119998, 'M', 'i'), (119999, 'M', 'j'), (120000, 'M', 'k'), (120001, 'M', 'l'), (120002, 'M', 'm'), (120003, 'M', 'n'), (120004, 'X'), (120005, 'M', 'p'), (120006, 'M', 'q'), (120007, 'M', 'r'), (120008, 'M', 's'), (120009, 'M', 't'), (120010, 'M', 'u'), (120011, 'M', 'v'), (120012, 'M', 'w'), (120013, 'M', 'x'), (120014, 'M', 'y'), (120015, 'M', 'z'), (120016, 'M', 'a'), (120017, 'M', 'b'), (120018, 'M', 'c'), (120019, 'M', 'd'), (120020, 'M', 'e'), (120021, 'M', 'f'), (120022, 'M', 'g'), (120023, 'M', 'h'), (120024, 'M', 'i'), (120025, 'M', 'j'), (120026, 'M', 'k'), (120027, 'M', 'l'), (120028, 'M', 'm'), (120029, 'M', 'n'), (120030, 'M', 'o'), (120031, 'M', 'p'), (120032, 'M', 'q'), (120033, 'M', 'r'), (120034, 'M', 's'), (120035, 'M', 't'), (120036, 'M', 'u'), (120037, 'M', 'v'), (120038, 'M', 'w'), (120039, 'M', 'x'), (120040, 'M', 'y'), (120041, 'M', 'z'), (120042, 'M', 'a'), (120043, 'M', 'b')]"
        ]
    },
    {
        "func_name": "_seg_63",
        "original": "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]",
        "mutated": [
            "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]",
            "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]",
            "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]",
            "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]",
            "def _seg_63() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120044, 'M', 'c'), (120045, 'M', 'd'), (120046, 'M', 'e'), (120047, 'M', 'f'), (120048, 'M', 'g'), (120049, 'M', 'h'), (120050, 'M', 'i'), (120051, 'M', 'j'), (120052, 'M', 'k'), (120053, 'M', 'l'), (120054, 'M', 'm'), (120055, 'M', 'n'), (120056, 'M', 'o'), (120057, 'M', 'p'), (120058, 'M', 'q'), (120059, 'M', 'r'), (120060, 'M', 's'), (120061, 'M', 't'), (120062, 'M', 'u'), (120063, 'M', 'v'), (120064, 'M', 'w'), (120065, 'M', 'x'), (120066, 'M', 'y'), (120067, 'M', 'z'), (120068, 'M', 'a'), (120069, 'M', 'b'), (120070, 'X'), (120071, 'M', 'd'), (120072, 'M', 'e'), (120073, 'M', 'f'), (120074, 'M', 'g'), (120075, 'X'), (120077, 'M', 'j'), (120078, 'M', 'k'), (120079, 'M', 'l'), (120080, 'M', 'm'), (120081, 'M', 'n'), (120082, 'M', 'o'), (120083, 'M', 'p'), (120084, 'M', 'q'), (120085, 'X'), (120086, 'M', 's'), (120087, 'M', 't'), (120088, 'M', 'u'), (120089, 'M', 'v'), (120090, 'M', 'w'), (120091, 'M', 'x'), (120092, 'M', 'y'), (120093, 'X'), (120094, 'M', 'a'), (120095, 'M', 'b'), (120096, 'M', 'c'), (120097, 'M', 'd'), (120098, 'M', 'e'), (120099, 'M', 'f'), (120100, 'M', 'g'), (120101, 'M', 'h'), (120102, 'M', 'i'), (120103, 'M', 'j'), (120104, 'M', 'k'), (120105, 'M', 'l'), (120106, 'M', 'm'), (120107, 'M', 'n'), (120108, 'M', 'o'), (120109, 'M', 'p'), (120110, 'M', 'q'), (120111, 'M', 'r'), (120112, 'M', 's'), (120113, 'M', 't'), (120114, 'M', 'u'), (120115, 'M', 'v'), (120116, 'M', 'w'), (120117, 'M', 'x'), (120118, 'M', 'y'), (120119, 'M', 'z'), (120120, 'M', 'a'), (120121, 'M', 'b'), (120122, 'X'), (120123, 'M', 'd'), (120124, 'M', 'e'), (120125, 'M', 'f'), (120126, 'M', 'g'), (120127, 'X'), (120128, 'M', 'i'), (120129, 'M', 'j'), (120130, 'M', 'k'), (120131, 'M', 'l'), (120132, 'M', 'm'), (120133, 'X'), (120134, 'M', 'o'), (120135, 'X'), (120138, 'M', 's'), (120139, 'M', 't'), (120140, 'M', 'u'), (120141, 'M', 'v'), (120142, 'M', 'w'), (120143, 'M', 'x'), (120144, 'M', 'y'), (120145, 'X'), (120146, 'M', 'a')]"
        ]
    },
    {
        "func_name": "_seg_64",
        "original": "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]",
        "mutated": [
            "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]",
            "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]",
            "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]",
            "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]",
            "def _seg_64() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120147, 'M', 'b'), (120148, 'M', 'c'), (120149, 'M', 'd'), (120150, 'M', 'e'), (120151, 'M', 'f'), (120152, 'M', 'g'), (120153, 'M', 'h'), (120154, 'M', 'i'), (120155, 'M', 'j'), (120156, 'M', 'k'), (120157, 'M', 'l'), (120158, 'M', 'm'), (120159, 'M', 'n'), (120160, 'M', 'o'), (120161, 'M', 'p'), (120162, 'M', 'q'), (120163, 'M', 'r'), (120164, 'M', 's'), (120165, 'M', 't'), (120166, 'M', 'u'), (120167, 'M', 'v'), (120168, 'M', 'w'), (120169, 'M', 'x'), (120170, 'M', 'y'), (120171, 'M', 'z'), (120172, 'M', 'a'), (120173, 'M', 'b'), (120174, 'M', 'c'), (120175, 'M', 'd'), (120176, 'M', 'e'), (120177, 'M', 'f'), (120178, 'M', 'g'), (120179, 'M', 'h'), (120180, 'M', 'i'), (120181, 'M', 'j'), (120182, 'M', 'k'), (120183, 'M', 'l'), (120184, 'M', 'm'), (120185, 'M', 'n'), (120186, 'M', 'o'), (120187, 'M', 'p'), (120188, 'M', 'q'), (120189, 'M', 'r'), (120190, 'M', 's'), (120191, 'M', 't'), (120192, 'M', 'u'), (120193, 'M', 'v'), (120194, 'M', 'w'), (120195, 'M', 'x'), (120196, 'M', 'y'), (120197, 'M', 'z'), (120198, 'M', 'a'), (120199, 'M', 'b'), (120200, 'M', 'c'), (120201, 'M', 'd'), (120202, 'M', 'e'), (120203, 'M', 'f'), (120204, 'M', 'g'), (120205, 'M', 'h'), (120206, 'M', 'i'), (120207, 'M', 'j'), (120208, 'M', 'k'), (120209, 'M', 'l'), (120210, 'M', 'm'), (120211, 'M', 'n'), (120212, 'M', 'o'), (120213, 'M', 'p'), (120214, 'M', 'q'), (120215, 'M', 'r'), (120216, 'M', 's'), (120217, 'M', 't'), (120218, 'M', 'u'), (120219, 'M', 'v'), (120220, 'M', 'w'), (120221, 'M', 'x'), (120222, 'M', 'y'), (120223, 'M', 'z'), (120224, 'M', 'a'), (120225, 'M', 'b'), (120226, 'M', 'c'), (120227, 'M', 'd'), (120228, 'M', 'e'), (120229, 'M', 'f'), (120230, 'M', 'g'), (120231, 'M', 'h'), (120232, 'M', 'i'), (120233, 'M', 'j'), (120234, 'M', 'k'), (120235, 'M', 'l'), (120236, 'M', 'm'), (120237, 'M', 'n'), (120238, 'M', 'o'), (120239, 'M', 'p'), (120240, 'M', 'q'), (120241, 'M', 'r'), (120242, 'M', 's'), (120243, 'M', 't'), (120244, 'M', 'u'), (120245, 'M', 'v'), (120246, 'M', 'w')]"
        ]
    },
    {
        "func_name": "_seg_65",
        "original": "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]",
        "mutated": [
            "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]",
            "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]",
            "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]",
            "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]",
            "def _seg_65() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120247, 'M', 'x'), (120248, 'M', 'y'), (120249, 'M', 'z'), (120250, 'M', 'a'), (120251, 'M', 'b'), (120252, 'M', 'c'), (120253, 'M', 'd'), (120254, 'M', 'e'), (120255, 'M', 'f'), (120256, 'M', 'g'), (120257, 'M', 'h'), (120258, 'M', 'i'), (120259, 'M', 'j'), (120260, 'M', 'k'), (120261, 'M', 'l'), (120262, 'M', 'm'), (120263, 'M', 'n'), (120264, 'M', 'o'), (120265, 'M', 'p'), (120266, 'M', 'q'), (120267, 'M', 'r'), (120268, 'M', 's'), (120269, 'M', 't'), (120270, 'M', 'u'), (120271, 'M', 'v'), (120272, 'M', 'w'), (120273, 'M', 'x'), (120274, 'M', 'y'), (120275, 'M', 'z'), (120276, 'M', 'a'), (120277, 'M', 'b'), (120278, 'M', 'c'), (120279, 'M', 'd'), (120280, 'M', 'e'), (120281, 'M', 'f'), (120282, 'M', 'g'), (120283, 'M', 'h'), (120284, 'M', 'i'), (120285, 'M', 'j'), (120286, 'M', 'k'), (120287, 'M', 'l'), (120288, 'M', 'm'), (120289, 'M', 'n'), (120290, 'M', 'o'), (120291, 'M', 'p'), (120292, 'M', 'q'), (120293, 'M', 'r'), (120294, 'M', 's'), (120295, 'M', 't'), (120296, 'M', 'u'), (120297, 'M', 'v'), (120298, 'M', 'w'), (120299, 'M', 'x'), (120300, 'M', 'y'), (120301, 'M', 'z'), (120302, 'M', 'a'), (120303, 'M', 'b'), (120304, 'M', 'c'), (120305, 'M', 'd'), (120306, 'M', 'e'), (120307, 'M', 'f'), (120308, 'M', 'g'), (120309, 'M', 'h'), (120310, 'M', 'i'), (120311, 'M', 'j'), (120312, 'M', 'k'), (120313, 'M', 'l'), (120314, 'M', 'm'), (120315, 'M', 'n'), (120316, 'M', 'o'), (120317, 'M', 'p'), (120318, 'M', 'q'), (120319, 'M', 'r'), (120320, 'M', 's'), (120321, 'M', 't'), (120322, 'M', 'u'), (120323, 'M', 'v'), (120324, 'M', 'w'), (120325, 'M', 'x'), (120326, 'M', 'y'), (120327, 'M', 'z'), (120328, 'M', 'a'), (120329, 'M', 'b'), (120330, 'M', 'c'), (120331, 'M', 'd'), (120332, 'M', 'e'), (120333, 'M', 'f'), (120334, 'M', 'g'), (120335, 'M', 'h'), (120336, 'M', 'i'), (120337, 'M', 'j'), (120338, 'M', 'k'), (120339, 'M', 'l'), (120340, 'M', 'm'), (120341, 'M', 'n'), (120342, 'M', 'o'), (120343, 'M', 'p'), (120344, 'M', 'q'), (120345, 'M', 'r'), (120346, 'M', 's')]"
        ]
    },
    {
        "func_name": "_seg_66",
        "original": "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]",
        "mutated": [
            "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]",
            "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]",
            "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]",
            "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]",
            "def _seg_66() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120347, 'M', 't'), (120348, 'M', 'u'), (120349, 'M', 'v'), (120350, 'M', 'w'), (120351, 'M', 'x'), (120352, 'M', 'y'), (120353, 'M', 'z'), (120354, 'M', 'a'), (120355, 'M', 'b'), (120356, 'M', 'c'), (120357, 'M', 'd'), (120358, 'M', 'e'), (120359, 'M', 'f'), (120360, 'M', 'g'), (120361, 'M', 'h'), (120362, 'M', 'i'), (120363, 'M', 'j'), (120364, 'M', 'k'), (120365, 'M', 'l'), (120366, 'M', 'm'), (120367, 'M', 'n'), (120368, 'M', 'o'), (120369, 'M', 'p'), (120370, 'M', 'q'), (120371, 'M', 'r'), (120372, 'M', 's'), (120373, 'M', 't'), (120374, 'M', 'u'), (120375, 'M', 'v'), (120376, 'M', 'w'), (120377, 'M', 'x'), (120378, 'M', 'y'), (120379, 'M', 'z'), (120380, 'M', 'a'), (120381, 'M', 'b'), (120382, 'M', 'c'), (120383, 'M', 'd'), (120384, 'M', 'e'), (120385, 'M', 'f'), (120386, 'M', 'g'), (120387, 'M', 'h'), (120388, 'M', 'i'), (120389, 'M', 'j'), (120390, 'M', 'k'), (120391, 'M', 'l'), (120392, 'M', 'm'), (120393, 'M', 'n'), (120394, 'M', 'o'), (120395, 'M', 'p'), (120396, 'M', 'q'), (120397, 'M', 'r'), (120398, 'M', 's'), (120399, 'M', 't'), (120400, 'M', 'u'), (120401, 'M', 'v'), (120402, 'M', 'w'), (120403, 'M', 'x'), (120404, 'M', 'y'), (120405, 'M', 'z'), (120406, 'M', 'a'), (120407, 'M', 'b'), (120408, 'M', 'c'), (120409, 'M', 'd'), (120410, 'M', 'e'), (120411, 'M', 'f'), (120412, 'M', 'g'), (120413, 'M', 'h'), (120414, 'M', 'i'), (120415, 'M', 'j'), (120416, 'M', 'k'), (120417, 'M', 'l'), (120418, 'M', 'm'), (120419, 'M', 'n'), (120420, 'M', 'o'), (120421, 'M', 'p'), (120422, 'M', 'q'), (120423, 'M', 'r'), (120424, 'M', 's'), (120425, 'M', 't'), (120426, 'M', 'u'), (120427, 'M', 'v'), (120428, 'M', 'w'), (120429, 'M', 'x'), (120430, 'M', 'y'), (120431, 'M', 'z'), (120432, 'M', 'a'), (120433, 'M', 'b'), (120434, 'M', 'c'), (120435, 'M', 'd'), (120436, 'M', 'e'), (120437, 'M', 'f'), (120438, 'M', 'g'), (120439, 'M', 'h'), (120440, 'M', 'i'), (120441, 'M', 'j'), (120442, 'M', 'k'), (120443, 'M', 'l'), (120444, 'M', 'm'), (120445, 'M', 'n'), (120446, 'M', 'o')]"
        ]
    },
    {
        "func_name": "_seg_67",
        "original": "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]",
        "mutated": [
            "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]",
            "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]",
            "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]",
            "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]",
            "def _seg_67() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120447, 'M', 'p'), (120448, 'M', 'q'), (120449, 'M', 'r'), (120450, 'M', 's'), (120451, 'M', 't'), (120452, 'M', 'u'), (120453, 'M', 'v'), (120454, 'M', 'w'), (120455, 'M', 'x'), (120456, 'M', 'y'), (120457, 'M', 'z'), (120458, 'M', 'a'), (120459, 'M', 'b'), (120460, 'M', 'c'), (120461, 'M', 'd'), (120462, 'M', 'e'), (120463, 'M', 'f'), (120464, 'M', 'g'), (120465, 'M', 'h'), (120466, 'M', 'i'), (120467, 'M', 'j'), (120468, 'M', 'k'), (120469, 'M', 'l'), (120470, 'M', 'm'), (120471, 'M', 'n'), (120472, 'M', 'o'), (120473, 'M', 'p'), (120474, 'M', 'q'), (120475, 'M', 'r'), (120476, 'M', 's'), (120477, 'M', 't'), (120478, 'M', 'u'), (120479, 'M', 'v'), (120480, 'M', 'w'), (120481, 'M', 'x'), (120482, 'M', 'y'), (120483, 'M', 'z'), (120484, 'M', '\u0131'), (120485, 'M', '\u0237'), (120486, 'X'), (120488, 'M', '\u03b1'), (120489, 'M', '\u03b2'), (120490, 'M', '\u03b3'), (120491, 'M', '\u03b4'), (120492, 'M', '\u03b5'), (120493, 'M', '\u03b6'), (120494, 'M', '\u03b7'), (120495, 'M', '\u03b8'), (120496, 'M', '\u03b9'), (120497, 'M', '\u03ba'), (120498, 'M', '\u03bb'), (120499, 'M', '\u03bc'), (120500, 'M', '\u03bd'), (120501, 'M', '\u03be'), (120502, 'M', '\u03bf'), (120503, 'M', '\u03c0'), (120504, 'M', '\u03c1'), (120505, 'M', '\u03b8'), (120506, 'M', '\u03c3'), (120507, 'M', '\u03c4'), (120508, 'M', '\u03c5'), (120509, 'M', '\u03c6'), (120510, 'M', '\u03c7'), (120511, 'M', '\u03c8'), (120512, 'M', '\u03c9'), (120513, 'M', '\u2207'), (120514, 'M', '\u03b1'), (120515, 'M', '\u03b2'), (120516, 'M', '\u03b3'), (120517, 'M', '\u03b4'), (120518, 'M', '\u03b5'), (120519, 'M', '\u03b6'), (120520, 'M', '\u03b7'), (120521, 'M', '\u03b8'), (120522, 'M', '\u03b9'), (120523, 'M', '\u03ba'), (120524, 'M', '\u03bb'), (120525, 'M', '\u03bc'), (120526, 'M', '\u03bd'), (120527, 'M', '\u03be'), (120528, 'M', '\u03bf'), (120529, 'M', '\u03c0'), (120530, 'M', '\u03c1'), (120531, 'M', '\u03c3'), (120533, 'M', '\u03c4'), (120534, 'M', '\u03c5'), (120535, 'M', '\u03c6'), (120536, 'M', '\u03c7'), (120537, 'M', '\u03c8'), (120538, 'M', '\u03c9'), (120539, 'M', '\u2202'), (120540, 'M', '\u03b5'), (120541, 'M', '\u03b8'), (120542, 'M', '\u03ba'), (120543, 'M', '\u03c6'), (120544, 'M', '\u03c1'), (120545, 'M', '\u03c0'), (120546, 'M', '\u03b1'), (120547, 'M', '\u03b2'), (120548, 'M', '\u03b3')]"
        ]
    },
    {
        "func_name": "_seg_68",
        "original": "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]",
        "mutated": [
            "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]",
            "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]",
            "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]",
            "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]",
            "def _seg_68() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120549, 'M', '\u03b4'), (120550, 'M', '\u03b5'), (120551, 'M', '\u03b6'), (120552, 'M', '\u03b7'), (120553, 'M', '\u03b8'), (120554, 'M', '\u03b9'), (120555, 'M', '\u03ba'), (120556, 'M', '\u03bb'), (120557, 'M', '\u03bc'), (120558, 'M', '\u03bd'), (120559, 'M', '\u03be'), (120560, 'M', '\u03bf'), (120561, 'M', '\u03c0'), (120562, 'M', '\u03c1'), (120563, 'M', '\u03b8'), (120564, 'M', '\u03c3'), (120565, 'M', '\u03c4'), (120566, 'M', '\u03c5'), (120567, 'M', '\u03c6'), (120568, 'M', '\u03c7'), (120569, 'M', '\u03c8'), (120570, 'M', '\u03c9'), (120571, 'M', '\u2207'), (120572, 'M', '\u03b1'), (120573, 'M', '\u03b2'), (120574, 'M', '\u03b3'), (120575, 'M', '\u03b4'), (120576, 'M', '\u03b5'), (120577, 'M', '\u03b6'), (120578, 'M', '\u03b7'), (120579, 'M', '\u03b8'), (120580, 'M', '\u03b9'), (120581, 'M', '\u03ba'), (120582, 'M', '\u03bb'), (120583, 'M', '\u03bc'), (120584, 'M', '\u03bd'), (120585, 'M', '\u03be'), (120586, 'M', '\u03bf'), (120587, 'M', '\u03c0'), (120588, 'M', '\u03c1'), (120589, 'M', '\u03c3'), (120591, 'M', '\u03c4'), (120592, 'M', '\u03c5'), (120593, 'M', '\u03c6'), (120594, 'M', '\u03c7'), (120595, 'M', '\u03c8'), (120596, 'M', '\u03c9'), (120597, 'M', '\u2202'), (120598, 'M', '\u03b5'), (120599, 'M', '\u03b8'), (120600, 'M', '\u03ba'), (120601, 'M', '\u03c6'), (120602, 'M', '\u03c1'), (120603, 'M', '\u03c0'), (120604, 'M', '\u03b1'), (120605, 'M', '\u03b2'), (120606, 'M', '\u03b3'), (120607, 'M', '\u03b4'), (120608, 'M', '\u03b5'), (120609, 'M', '\u03b6'), (120610, 'M', '\u03b7'), (120611, 'M', '\u03b8'), (120612, 'M', '\u03b9'), (120613, 'M', '\u03ba'), (120614, 'M', '\u03bb'), (120615, 'M', '\u03bc'), (120616, 'M', '\u03bd'), (120617, 'M', '\u03be'), (120618, 'M', '\u03bf'), (120619, 'M', '\u03c0'), (120620, 'M', '\u03c1'), (120621, 'M', '\u03b8'), (120622, 'M', '\u03c3'), (120623, 'M', '\u03c4'), (120624, 'M', '\u03c5'), (120625, 'M', '\u03c6'), (120626, 'M', '\u03c7'), (120627, 'M', '\u03c8'), (120628, 'M', '\u03c9'), (120629, 'M', '\u2207'), (120630, 'M', '\u03b1'), (120631, 'M', '\u03b2'), (120632, 'M', '\u03b3'), (120633, 'M', '\u03b4'), (120634, 'M', '\u03b5'), (120635, 'M', '\u03b6'), (120636, 'M', '\u03b7'), (120637, 'M', '\u03b8'), (120638, 'M', '\u03b9'), (120639, 'M', '\u03ba'), (120640, 'M', '\u03bb'), (120641, 'M', '\u03bc'), (120642, 'M', '\u03bd'), (120643, 'M', '\u03be'), (120644, 'M', '\u03bf'), (120645, 'M', '\u03c0'), (120646, 'M', '\u03c1'), (120647, 'M', '\u03c3'), (120649, 'M', '\u03c4'), (120650, 'M', '\u03c5')]"
        ]
    },
    {
        "func_name": "_seg_69",
        "original": "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]",
        "mutated": [
            "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]",
            "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]",
            "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]",
            "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]",
            "def _seg_69() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120651, 'M', '\u03c6'), (120652, 'M', '\u03c7'), (120653, 'M', '\u03c8'), (120654, 'M', '\u03c9'), (120655, 'M', '\u2202'), (120656, 'M', '\u03b5'), (120657, 'M', '\u03b8'), (120658, 'M', '\u03ba'), (120659, 'M', '\u03c6'), (120660, 'M', '\u03c1'), (120661, 'M', '\u03c0'), (120662, 'M', '\u03b1'), (120663, 'M', '\u03b2'), (120664, 'M', '\u03b3'), (120665, 'M', '\u03b4'), (120666, 'M', '\u03b5'), (120667, 'M', '\u03b6'), (120668, 'M', '\u03b7'), (120669, 'M', '\u03b8'), (120670, 'M', '\u03b9'), (120671, 'M', '\u03ba'), (120672, 'M', '\u03bb'), (120673, 'M', '\u03bc'), (120674, 'M', '\u03bd'), (120675, 'M', '\u03be'), (120676, 'M', '\u03bf'), (120677, 'M', '\u03c0'), (120678, 'M', '\u03c1'), (120679, 'M', '\u03b8'), (120680, 'M', '\u03c3'), (120681, 'M', '\u03c4'), (120682, 'M', '\u03c5'), (120683, 'M', '\u03c6'), (120684, 'M', '\u03c7'), (120685, 'M', '\u03c8'), (120686, 'M', '\u03c9'), (120687, 'M', '\u2207'), (120688, 'M', '\u03b1'), (120689, 'M', '\u03b2'), (120690, 'M', '\u03b3'), (120691, 'M', '\u03b4'), (120692, 'M', '\u03b5'), (120693, 'M', '\u03b6'), (120694, 'M', '\u03b7'), (120695, 'M', '\u03b8'), (120696, 'M', '\u03b9'), (120697, 'M', '\u03ba'), (120698, 'M', '\u03bb'), (120699, 'M', '\u03bc'), (120700, 'M', '\u03bd'), (120701, 'M', '\u03be'), (120702, 'M', '\u03bf'), (120703, 'M', '\u03c0'), (120704, 'M', '\u03c1'), (120705, 'M', '\u03c3'), (120707, 'M', '\u03c4'), (120708, 'M', '\u03c5'), (120709, 'M', '\u03c6'), (120710, 'M', '\u03c7'), (120711, 'M', '\u03c8'), (120712, 'M', '\u03c9'), (120713, 'M', '\u2202'), (120714, 'M', '\u03b5'), (120715, 'M', '\u03b8'), (120716, 'M', '\u03ba'), (120717, 'M', '\u03c6'), (120718, 'M', '\u03c1'), (120719, 'M', '\u03c0'), (120720, 'M', '\u03b1'), (120721, 'M', '\u03b2'), (120722, 'M', '\u03b3'), (120723, 'M', '\u03b4'), (120724, 'M', '\u03b5'), (120725, 'M', '\u03b6'), (120726, 'M', '\u03b7'), (120727, 'M', '\u03b8'), (120728, 'M', '\u03b9'), (120729, 'M', '\u03ba'), (120730, 'M', '\u03bb'), (120731, 'M', '\u03bc'), (120732, 'M', '\u03bd'), (120733, 'M', '\u03be'), (120734, 'M', '\u03bf'), (120735, 'M', '\u03c0'), (120736, 'M', '\u03c1'), (120737, 'M', '\u03b8'), (120738, 'M', '\u03c3'), (120739, 'M', '\u03c4'), (120740, 'M', '\u03c5'), (120741, 'M', '\u03c6'), (120742, 'M', '\u03c7'), (120743, 'M', '\u03c8'), (120744, 'M', '\u03c9'), (120745, 'M', '\u2207'), (120746, 'M', '\u03b1'), (120747, 'M', '\u03b2'), (120748, 'M', '\u03b3'), (120749, 'M', '\u03b4'), (120750, 'M', '\u03b5'), (120751, 'M', '\u03b6')]"
        ]
    },
    {
        "func_name": "_seg_70",
        "original": "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]",
        "mutated": [
            "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]",
            "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]",
            "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]",
            "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]",
            "def _seg_70() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(120752, 'M', '\u03b7'), (120753, 'M', '\u03b8'), (120754, 'M', '\u03b9'), (120755, 'M', '\u03ba'), (120756, 'M', '\u03bb'), (120757, 'M', '\u03bc'), (120758, 'M', '\u03bd'), (120759, 'M', '\u03be'), (120760, 'M', '\u03bf'), (120761, 'M', '\u03c0'), (120762, 'M', '\u03c1'), (120763, 'M', '\u03c3'), (120765, 'M', '\u03c4'), (120766, 'M', '\u03c5'), (120767, 'M', '\u03c6'), (120768, 'M', '\u03c7'), (120769, 'M', '\u03c8'), (120770, 'M', '\u03c9'), (120771, 'M', '\u2202'), (120772, 'M', '\u03b5'), (120773, 'M', '\u03b8'), (120774, 'M', '\u03ba'), (120775, 'M', '\u03c6'), (120776, 'M', '\u03c1'), (120777, 'M', '\u03c0'), (120778, 'M', '\u03dd'), (120780, 'X'), (120782, 'M', '0'), (120783, 'M', '1'), (120784, 'M', '2'), (120785, 'M', '3'), (120786, 'M', '4'), (120787, 'M', '5'), (120788, 'M', '6'), (120789, 'M', '7'), (120790, 'M', '8'), (120791, 'M', '9'), (120792, 'M', '0'), (120793, 'M', '1'), (120794, 'M', '2'), (120795, 'M', '3'), (120796, 'M', '4'), (120797, 'M', '5'), (120798, 'M', '6'), (120799, 'M', '7'), (120800, 'M', '8'), (120801, 'M', '9'), (120802, 'M', '0'), (120803, 'M', '1'), (120804, 'M', '2'), (120805, 'M', '3'), (120806, 'M', '4'), (120807, 'M', '5'), (120808, 'M', '6'), (120809, 'M', '7'), (120810, 'M', '8'), (120811, 'M', '9'), (120812, 'M', '0'), (120813, 'M', '1'), (120814, 'M', '2'), (120815, 'M', '3'), (120816, 'M', '4'), (120817, 'M', '5'), (120818, 'M', '6'), (120819, 'M', '7'), (120820, 'M', '8'), (120821, 'M', '9'), (120822, 'M', '0'), (120823, 'M', '1'), (120824, 'M', '2'), (120825, 'M', '3'), (120826, 'M', '4'), (120827, 'M', '5'), (120828, 'M', '6'), (120829, 'M', '7'), (120830, 'M', '8'), (120831, 'M', '9'), (120832, 'V'), (121484, 'X'), (121499, 'V'), (121504, 'X'), (121505, 'V'), (121520, 'X'), (122624, 'V'), (122655, 'X'), (122661, 'V'), (122667, 'X'), (122880, 'V'), (122887, 'X'), (122888, 'V'), (122905, 'X'), (122907, 'V'), (122914, 'X'), (122915, 'V'), (122917, 'X'), (122918, 'V'), (122923, 'X'), (122928, 'M', '\u0430'), (122929, 'M', '\u0431'), (122930, 'M', '\u0432')]"
        ]
    },
    {
        "func_name": "_seg_71",
        "original": "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]",
        "mutated": [
            "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]",
            "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]",
            "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]",
            "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]",
            "def _seg_71() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(122931, 'M', '\u0433'), (122932, 'M', '\u0434'), (122933, 'M', '\u0435'), (122934, 'M', '\u0436'), (122935, 'M', '\u0437'), (122936, 'M', '\u0438'), (122937, 'M', '\u043a'), (122938, 'M', '\u043b'), (122939, 'M', '\u043c'), (122940, 'M', '\u043e'), (122941, 'M', '\u043f'), (122942, 'M', '\u0440'), (122943, 'M', '\u0441'), (122944, 'M', '\u0442'), (122945, 'M', '\u0443'), (122946, 'M', '\u0444'), (122947, 'M', '\u0445'), (122948, 'M', '\u0446'), (122949, 'M', '\u0447'), (122950, 'M', '\u0448'), (122951, 'M', '\u044b'), (122952, 'M', '\u044d'), (122953, 'M', '\u044e'), (122954, 'M', '\ua689'), (122955, 'M', '\u04d9'), (122956, 'M', '\u0456'), (122957, 'M', '\u0458'), (122958, 'M', '\u04e9'), (122959, 'M', '\u04af'), (122960, 'M', '\u04cf'), (122961, 'M', '\u0430'), (122962, 'M', '\u0431'), (122963, 'M', '\u0432'), (122964, 'M', '\u0433'), (122965, 'M', '\u0434'), (122966, 'M', '\u0435'), (122967, 'M', '\u0436'), (122968, 'M', '\u0437'), (122969, 'M', '\u0438'), (122970, 'M', '\u043a'), (122971, 'M', '\u043b'), (122972, 'M', '\u043e'), (122973, 'M', '\u043f'), (122974, 'M', '\u0441'), (122975, 'M', '\u0443'), (122976, 'M', '\u0444'), (122977, 'M', '\u0445'), (122978, 'M', '\u0446'), (122979, 'M', '\u0447'), (122980, 'M', '\u0448'), (122981, 'M', '\u044a'), (122982, 'M', '\u044b'), (122983, 'M', '\u0491'), (122984, 'M', '\u0456'), (122985, 'M', '\u0455'), (122986, 'M', '\u045f'), (122987, 'M', '\u04ab'), (122988, 'M', '\ua651'), (122989, 'M', '\u04b1'), (122990, 'X'), (123023, 'V'), (123024, 'X'), (123136, 'V'), (123181, 'X'), (123184, 'V'), (123198, 'X'), (123200, 'V'), (123210, 'X'), (123214, 'V'), (123216, 'X'), (123536, 'V'), (123567, 'X'), (123584, 'V'), (123642, 'X'), (123647, 'V'), (123648, 'X'), (124112, 'V'), (124154, 'X'), (124896, 'V'), (124903, 'X'), (124904, 'V'), (124908, 'X'), (124909, 'V'), (124911, 'X'), (124912, 'V'), (124927, 'X'), (124928, 'V'), (125125, 'X'), (125127, 'V'), (125143, 'X'), (125184, 'M', '\ud83a\udd22'), (125185, 'M', '\ud83a\udd23'), (125186, 'M', '\ud83a\udd24'), (125187, 'M', '\ud83a\udd25'), (125188, 'M', '\ud83a\udd26'), (125189, 'M', '\ud83a\udd27'), (125190, 'M', '\ud83a\udd28'), (125191, 'M', '\ud83a\udd29'), (125192, 'M', '\ud83a\udd2a'), (125193, 'M', '\ud83a\udd2b')]"
        ]
    },
    {
        "func_name": "_seg_72",
        "original": "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]",
        "mutated": [
            "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]",
            "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]",
            "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]",
            "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]",
            "def _seg_72() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(125194, 'M', '\ud83a\udd2c'), (125195, 'M', '\ud83a\udd2d'), (125196, 'M', '\ud83a\udd2e'), (125197, 'M', '\ud83a\udd2f'), (125198, 'M', '\ud83a\udd30'), (125199, 'M', '\ud83a\udd31'), (125200, 'M', '\ud83a\udd32'), (125201, 'M', '\ud83a\udd33'), (125202, 'M', '\ud83a\udd34'), (125203, 'M', '\ud83a\udd35'), (125204, 'M', '\ud83a\udd36'), (125205, 'M', '\ud83a\udd37'), (125206, 'M', '\ud83a\udd38'), (125207, 'M', '\ud83a\udd39'), (125208, 'M', '\ud83a\udd3a'), (125209, 'M', '\ud83a\udd3b'), (125210, 'M', '\ud83a\udd3c'), (125211, 'M', '\ud83a\udd3d'), (125212, 'M', '\ud83a\udd3e'), (125213, 'M', '\ud83a\udd3f'), (125214, 'M', '\ud83a\udd40'), (125215, 'M', '\ud83a\udd41'), (125216, 'M', '\ud83a\udd42'), (125217, 'M', '\ud83a\udd43'), (125218, 'V'), (125260, 'X'), (125264, 'V'), (125274, 'X'), (125278, 'V'), (125280, 'X'), (126065, 'V'), (126133, 'X'), (126209, 'V'), (126270, 'X'), (126464, 'M', '\u0627'), (126465, 'M', '\u0628'), (126466, 'M', '\u062c'), (126467, 'M', '\u062f'), (126468, 'X'), (126469, 'M', '\u0648'), (126470, 'M', '\u0632'), (126471, 'M', '\u062d'), (126472, 'M', '\u0637'), (126473, 'M', '\u064a'), (126474, 'M', '\u0643'), (126475, 'M', '\u0644'), (126476, 'M', '\u0645'), (126477, 'M', '\u0646'), (126478, 'M', '\u0633'), (126479, 'M', '\u0639'), (126480, 'M', '\u0641'), (126481, 'M', '\u0635'), (126482, 'M', '\u0642'), (126483, 'M', '\u0631'), (126484, 'M', '\u0634'), (126485, 'M', '\u062a'), (126486, 'M', '\u062b'), (126487, 'M', '\u062e'), (126488, 'M', '\u0630'), (126489, 'M', '\u0636'), (126490, 'M', '\u0638'), (126491, 'M', '\u063a'), (126492, 'M', '\u066e'), (126493, 'M', '\u06ba'), (126494, 'M', '\u06a1'), (126495, 'M', '\u066f'), (126496, 'X'), (126497, 'M', '\u0628'), (126498, 'M', '\u062c'), (126499, 'X'), (126500, 'M', '\u0647'), (126501, 'X'), (126503, 'M', '\u062d'), (126504, 'X'), (126505, 'M', '\u064a'), (126506, 'M', '\u0643'), (126507, 'M', '\u0644'), (126508, 'M', '\u0645'), (126509, 'M', '\u0646'), (126510, 'M', '\u0633'), (126511, 'M', '\u0639'), (126512, 'M', '\u0641'), (126513, 'M', '\u0635'), (126514, 'M', '\u0642'), (126515, 'X'), (126516, 'M', '\u0634'), (126517, 'M', '\u062a'), (126518, 'M', '\u062b'), (126519, 'M', '\u062e'), (126520, 'X'), (126521, 'M', '\u0636'), (126522, 'X'), (126523, 'M', '\u063a'), (126524, 'X'), (126530, 'M', '\u062c'), (126531, 'X'), (126535, 'M', '\u062d'), (126536, 'X'), (126537, 'M', '\u064a'), (126538, 'X')]"
        ]
    },
    {
        "func_name": "_seg_73",
        "original": "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]",
        "mutated": [
            "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]",
            "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]",
            "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]",
            "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]",
            "def _seg_73() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(126539, 'M', '\u0644'), (126540, 'X'), (126541, 'M', '\u0646'), (126542, 'M', '\u0633'), (126543, 'M', '\u0639'), (126544, 'X'), (126545, 'M', '\u0635'), (126546, 'M', '\u0642'), (126547, 'X'), (126548, 'M', '\u0634'), (126549, 'X'), (126551, 'M', '\u062e'), (126552, 'X'), (126553, 'M', '\u0636'), (126554, 'X'), (126555, 'M', '\u063a'), (126556, 'X'), (126557, 'M', '\u06ba'), (126558, 'X'), (126559, 'M', '\u066f'), (126560, 'X'), (126561, 'M', '\u0628'), (126562, 'M', '\u062c'), (126563, 'X'), (126564, 'M', '\u0647'), (126565, 'X'), (126567, 'M', '\u062d'), (126568, 'M', '\u0637'), (126569, 'M', '\u064a'), (126570, 'M', '\u0643'), (126571, 'X'), (126572, 'M', '\u0645'), (126573, 'M', '\u0646'), (126574, 'M', '\u0633'), (126575, 'M', '\u0639'), (126576, 'M', '\u0641'), (126577, 'M', '\u0635'), (126578, 'M', '\u0642'), (126579, 'X'), (126580, 'M', '\u0634'), (126581, 'M', '\u062a'), (126582, 'M', '\u062b'), (126583, 'M', '\u062e'), (126584, 'X'), (126585, 'M', '\u0636'), (126586, 'M', '\u0638'), (126587, 'M', '\u063a'), (126588, 'M', '\u066e'), (126589, 'X'), (126590, 'M', '\u06a1'), (126591, 'X'), (126592, 'M', '\u0627'), (126593, 'M', '\u0628'), (126594, 'M', '\u062c'), (126595, 'M', '\u062f'), (126596, 'M', '\u0647'), (126597, 'M', '\u0648'), (126598, 'M', '\u0632'), (126599, 'M', '\u062d'), (126600, 'M', '\u0637'), (126601, 'M', '\u064a'), (126602, 'X'), (126603, 'M', '\u0644'), (126604, 'M', '\u0645'), (126605, 'M', '\u0646'), (126606, 'M', '\u0633'), (126607, 'M', '\u0639'), (126608, 'M', '\u0641'), (126609, 'M', '\u0635'), (126610, 'M', '\u0642'), (126611, 'M', '\u0631'), (126612, 'M', '\u0634'), (126613, 'M', '\u062a'), (126614, 'M', '\u062b'), (126615, 'M', '\u062e'), (126616, 'M', '\u0630'), (126617, 'M', '\u0636'), (126618, 'M', '\u0638'), (126619, 'M', '\u063a'), (126620, 'X'), (126625, 'M', '\u0628'), (126626, 'M', '\u062c'), (126627, 'M', '\u062f'), (126628, 'X'), (126629, 'M', '\u0648'), (126630, 'M', '\u0632'), (126631, 'M', '\u062d'), (126632, 'M', '\u0637'), (126633, 'M', '\u064a'), (126634, 'X'), (126635, 'M', '\u0644'), (126636, 'M', '\u0645'), (126637, 'M', '\u0646'), (126638, 'M', '\u0633'), (126639, 'M', '\u0639'), (126640, 'M', '\u0641'), (126641, 'M', '\u0635'), (126642, 'M', '\u0642'), (126643, 'M', '\u0631'), (126644, 'M', '\u0634')]"
        ]
    },
    {
        "func_name": "_seg_74",
        "original": "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]",
        "mutated": [
            "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]",
            "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]",
            "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]",
            "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]",
            "def _seg_74() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(126645, 'M', '\u062a'), (126646, 'M', '\u062b'), (126647, 'M', '\u062e'), (126648, 'M', '\u0630'), (126649, 'M', '\u0636'), (126650, 'M', '\u0638'), (126651, 'M', '\u063a'), (126652, 'X'), (126704, 'V'), (126706, 'X'), (126976, 'V'), (127020, 'X'), (127024, 'V'), (127124, 'X'), (127136, 'V'), (127151, 'X'), (127153, 'V'), (127168, 'X'), (127169, 'V'), (127184, 'X'), (127185, 'V'), (127222, 'X'), (127233, '3', '0,'), (127234, '3', '1,'), (127235, '3', '2,'), (127236, '3', '3,'), (127237, '3', '4,'), (127238, '3', '5,'), (127239, '3', '6,'), (127240, '3', '7,'), (127241, '3', '8,'), (127242, '3', '9,'), (127243, 'V'), (127248, '3', '(a)'), (127249, '3', '(b)'), (127250, '3', '(c)'), (127251, '3', '(d)'), (127252, '3', '(e)'), (127253, '3', '(f)'), (127254, '3', '(g)'), (127255, '3', '(h)'), (127256, '3', '(i)'), (127257, '3', '(j)'), (127258, '3', '(k)'), (127259, '3', '(l)'), (127260, '3', '(m)'), (127261, '3', '(n)'), (127262, '3', '(o)'), (127263, '3', '(p)'), (127264, '3', '(q)'), (127265, '3', '(r)'), (127266, '3', '(s)'), (127267, '3', '(t)'), (127268, '3', '(u)'), (127269, '3', '(v)'), (127270, '3', '(w)'), (127271, '3', '(x)'), (127272, '3', '(y)'), (127273, '3', '(z)'), (127274, 'M', '\u3014s\u3015'), (127275, 'M', 'c'), (127276, 'M', 'r'), (127277, 'M', 'cd'), (127278, 'M', 'wz'), (127279, 'V'), (127280, 'M', 'a'), (127281, 'M', 'b'), (127282, 'M', 'c'), (127283, 'M', 'd'), (127284, 'M', 'e'), (127285, 'M', 'f'), (127286, 'M', 'g'), (127287, 'M', 'h'), (127288, 'M', 'i'), (127289, 'M', 'j'), (127290, 'M', 'k'), (127291, 'M', 'l'), (127292, 'M', 'm'), (127293, 'M', 'n'), (127294, 'M', 'o'), (127295, 'M', 'p'), (127296, 'M', 'q'), (127297, 'M', 'r'), (127298, 'M', 's'), (127299, 'M', 't'), (127300, 'M', 'u'), (127301, 'M', 'v'), (127302, 'M', 'w'), (127303, 'M', 'x'), (127304, 'M', 'y'), (127305, 'M', 'z'), (127306, 'M', 'hv'), (127307, 'M', 'mv'), (127308, 'M', 'sd'), (127309, 'M', 'ss'), (127310, 'M', 'ppv'), (127311, 'M', 'wc'), (127312, 'V'), (127338, 'M', 'mc'), (127339, 'M', 'md')]"
        ]
    },
    {
        "func_name": "_seg_75",
        "original": "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]",
        "mutated": [
            "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]",
            "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]",
            "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]",
            "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]",
            "def _seg_75() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(127340, 'M', 'mr'), (127341, 'V'), (127376, 'M', 'dj'), (127377, 'V'), (127406, 'X'), (127462, 'V'), (127488, 'M', '\u307b\u304b'), (127489, 'M', '\u30b3\u30b3'), (127490, 'M', '\u30b5'), (127491, 'X'), (127504, 'M', '\u624b'), (127505, 'M', '\u5b57'), (127506, 'M', '\u53cc'), (127507, 'M', '\u30c7'), (127508, 'M', '\u4e8c'), (127509, 'M', '\u591a'), (127510, 'M', '\u89e3'), (127511, 'M', '\u5929'), (127512, 'M', '\u4ea4'), (127513, 'M', '\u6620'), (127514, 'M', '\u7121'), (127515, 'M', '\u6599'), (127516, 'M', '\u524d'), (127517, 'M', '\u5f8c'), (127518, 'M', '\u518d'), (127519, 'M', '\u65b0'), (127520, 'M', '\u521d'), (127521, 'M', '\u7d42'), (127522, 'M', '\u751f'), (127523, 'M', '\u8ca9'), (127524, 'M', '\u58f0'), (127525, 'M', '\u5439'), (127526, 'M', '\u6f14'), (127527, 'M', '\u6295'), (127528, 'M', '\u6355'), (127529, 'M', '\u4e00'), (127530, 'M', '\u4e09'), (127531, 'M', '\u904a'), (127532, 'M', '\u5de6'), (127533, 'M', '\u4e2d'), (127534, 'M', '\u53f3'), (127535, 'M', '\u6307'), (127536, 'M', '\u8d70'), (127537, 'M', '\u6253'), (127538, 'M', '\u7981'), (127539, 'M', '\u7a7a'), (127540, 'M', '\u5408'), (127541, 'M', '\u6e80'), (127542, 'M', '\u6709'), (127543, 'M', '\u6708'), (127544, 'M', '\u7533'), (127545, 'M', '\u5272'), (127546, 'M', '\u55b6'), (127547, 'M', '\u914d'), (127548, 'X'), (127552, 'M', '\u3014\u672c\u3015'), (127553, 'M', '\u3014\u4e09\u3015'), (127554, 'M', '\u3014\u4e8c\u3015'), (127555, 'M', '\u3014\u5b89\u3015'), (127556, 'M', '\u3014\u70b9\u3015'), (127557, 'M', '\u3014\u6253\u3015'), (127558, 'M', '\u3014\u76d7\u3015'), (127559, 'M', '\u3014\u52dd\u3015'), (127560, 'M', '\u3014\u6557\u3015'), (127561, 'X'), (127568, 'M', '\u5f97'), (127569, 'M', '\u53ef'), (127570, 'X'), (127584, 'V'), (127590, 'X'), (127744, 'V'), (128728, 'X'), (128732, 'V'), (128749, 'X'), (128752, 'V'), (128765, 'X'), (128768, 'V'), (128887, 'X'), (128891, 'V'), (128986, 'X'), (128992, 'V'), (129004, 'X'), (129008, 'V'), (129009, 'X'), (129024, 'V'), (129036, 'X'), (129040, 'V'), (129096, 'X'), (129104, 'V'), (129114, 'X'), (129120, 'V'), (129160, 'X'), (129168, 'V'), (129198, 'X'), (129200, 'V'), (129202, 'X'), (129280, 'V'), (129620, 'X'), (129632, 'V'), (129646, 'X')]"
        ]
    },
    {
        "func_name": "_seg_76",
        "original": "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]",
        "mutated": [
            "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]",
            "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]",
            "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]",
            "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]",
            "def _seg_76() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(129648, 'V'), (129661, 'X'), (129664, 'V'), (129673, 'X'), (129680, 'V'), (129726, 'X'), (129727, 'V'), (129734, 'X'), (129742, 'V'), (129756, 'X'), (129760, 'V'), (129769, 'X'), (129776, 'V'), (129785, 'X'), (129792, 'V'), (129939, 'X'), (129940, 'V'), (129995, 'X'), (130032, 'M', '0'), (130033, 'M', '1'), (130034, 'M', '2'), (130035, 'M', '3'), (130036, 'M', '4'), (130037, 'M', '5'), (130038, 'M', '6'), (130039, 'M', '7'), (130040, 'M', '8'), (130041, 'M', '9'), (130042, 'X'), (131072, 'V'), (173792, 'X'), (173824, 'V'), (177978, 'X'), (177984, 'V'), (178206, 'X'), (178208, 'V'), (183970, 'X'), (183984, 'V'), (191457, 'X'), (194560, 'M', '\u4e3d'), (194561, 'M', '\u4e38'), (194562, 'M', '\u4e41'), (194563, 'M', '\ud840\udd22'), (194564, 'M', '\u4f60'), (194565, 'M', '\u4fae'), (194566, 'M', '\u4fbb'), (194567, 'M', '\u5002'), (194568, 'M', '\u507a'), (194569, 'M', '\u5099'), (194570, 'M', '\u50e7'), (194571, 'M', '\u50cf'), (194572, 'M', '\u349e'), (194573, 'M', '\ud841\ude3a'), (194574, 'M', '\u514d'), (194575, 'M', '\u5154'), (194576, 'M', '\u5164'), (194577, 'M', '\u5177'), (194578, 'M', '\ud841\udd1c'), (194579, 'M', '\u34b9'), (194580, 'M', '\u5167'), (194581, 'M', '\u518d'), (194582, 'M', '\ud841\udd4b'), (194583, 'M', '\u5197'), (194584, 'M', '\u51a4'), (194585, 'M', '\u4ecc'), (194586, 'M', '\u51ac'), (194587, 'M', '\u51b5'), (194588, 'M', '\ud864\udddf'), (194589, 'M', '\u51f5'), (194590, 'M', '\u5203'), (194591, 'M', '\u34df'), (194592, 'M', '\u523b'), (194593, 'M', '\u5246'), (194594, 'M', '\u5272'), (194595, 'M', '\u5277'), (194596, 'M', '\u3515'), (194597, 'M', '\u52c7'), (194598, 'M', '\u52c9'), (194599, 'M', '\u52e4'), (194600, 'M', '\u52fa'), (194601, 'M', '\u5305'), (194602, 'M', '\u5306'), (194603, 'M', '\u5317'), (194604, 'M', '\u5349'), (194605, 'M', '\u5351'), (194606, 'M', '\u535a'), (194607, 'M', '\u5373'), (194608, 'M', '\u537d'), (194609, 'M', '\u537f'), (194612, 'M', '\ud842\ude2c'), (194613, 'M', '\u7070'), (194614, 'M', '\u53ca'), (194615, 'M', '\u53df'), (194616, 'M', '\ud842\udf63'), (194617, 'M', '\u53eb'), (194618, 'M', '\u53f1'), (194619, 'M', '\u5406'), (194620, 'M', '\u549e'), (194621, 'M', '\u5438'), (194622, 'M', '\u5448')]"
        ]
    },
    {
        "func_name": "_seg_77",
        "original": "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]",
        "mutated": [
            "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]",
            "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]",
            "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]",
            "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]",
            "def _seg_77() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(194623, 'M', '\u5468'), (194624, 'M', '\u54a2'), (194625, 'M', '\u54f6'), (194626, 'M', '\u5510'), (194627, 'M', '\u5553'), (194628, 'M', '\u5563'), (194629, 'M', '\u5584'), (194631, 'M', '\u5599'), (194632, 'M', '\u55ab'), (194633, 'M', '\u55b3'), (194634, 'M', '\u55c2'), (194635, 'M', '\u5716'), (194636, 'M', '\u5606'), (194637, 'M', '\u5717'), (194638, 'M', '\u5651'), (194639, 'M', '\u5674'), (194640, 'M', '\u5207'), (194641, 'M', '\u58ee'), (194642, 'M', '\u57ce'), (194643, 'M', '\u57f4'), (194644, 'M', '\u580d'), (194645, 'M', '\u578b'), (194646, 'M', '\u5832'), (194647, 'M', '\u5831'), (194648, 'M', '\u58ac'), (194649, 'M', '\ud845\udce4'), (194650, 'M', '\u58f2'), (194651, 'M', '\u58f7'), (194652, 'M', '\u5906'), (194653, 'M', '\u591a'), (194654, 'M', '\u5922'), (194655, 'M', '\u5962'), (194656, 'M', '\ud845\udea8'), (194657, 'M', '\ud845\udeea'), (194658, 'M', '\u59ec'), (194659, 'M', '\u5a1b'), (194660, 'M', '\u5a27'), (194661, 'M', '\u59d8'), (194662, 'M', '\u5a66'), (194663, 'M', '\u36ee'), (194664, 'X'), (194665, 'M', '\u5b08'), (194666, 'M', '\u5b3e'), (194668, 'M', '\ud846\uddc8'), (194669, 'M', '\u5bc3'), (194670, 'M', '\u5bd8'), (194671, 'M', '\u5be7'), (194672, 'M', '\u5bf3'), (194673, 'M', '\ud846\udf18'), (194674, 'M', '\u5bff'), (194675, 'M', '\u5c06'), (194676, 'X'), (194677, 'M', '\u5c22'), (194678, 'M', '\u3781'), (194679, 'M', '\u5c60'), (194680, 'M', '\u5c6e'), (194681, 'M', '\u5cc0'), (194682, 'M', '\u5c8d'), (194683, 'M', '\ud847\udde4'), (194684, 'M', '\u5d43'), (194685, 'M', '\ud847\udde6'), (194686, 'M', '\u5d6e'), (194687, 'M', '\u5d6b'), (194688, 'M', '\u5d7c'), (194689, 'M', '\u5de1'), (194690, 'M', '\u5de2'), (194691, 'M', '\u382f'), (194692, 'M', '\u5dfd'), (194693, 'M', '\u5e28'), (194694, 'M', '\u5e3d'), (194695, 'M', '\u5e69'), (194696, 'M', '\u3862'), (194697, 'M', '\ud848\udd83'), (194698, 'M', '\u387c'), (194699, 'M', '\u5eb0'), (194700, 'M', '\u5eb3'), (194701, 'M', '\u5eb6'), (194702, 'M', '\u5eca'), (194703, 'M', '\ud868\udf92'), (194704, 'M', '\u5efe'), (194705, 'M', '\ud848\udf31'), (194707, 'M', '\u8201'), (194708, 'M', '\u5f22'), (194710, 'M', '\u38c7'), (194711, 'M', '\ud84c\udeb8'), (194712, 'M', '\ud858\uddda'), (194713, 'M', '\u5f62'), (194714, 'M', '\u5f6b'), (194715, 'M', '\u38e3'), (194716, 'M', '\u5f9a'), (194717, 'M', '\u5fcd'), (194718, 'M', '\u5fd7'), (194719, 'M', '\u5ff9'), (194720, 'M', '\u6081'), (194721, 'M', '\u393a'), (194722, 'M', '\u391c'), (194723, 'M', '\u6094'), (194724, 'M', '\ud849\uded4'), (194725, 'M', '\u60c7'), (194726, 'M', '\u6148')]"
        ]
    },
    {
        "func_name": "_seg_78",
        "original": "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]",
        "mutated": [
            "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]",
            "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]",
            "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]",
            "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]",
            "def _seg_78() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(194727, 'M', '\u614c'), (194728, 'M', '\u614e'), (194729, 'M', '\u614c'), (194730, 'M', '\u617a'), (194731, 'M', '\u618e'), (194732, 'M', '\u61b2'), (194733, 'M', '\u61a4'), (194734, 'M', '\u61af'), (194735, 'M', '\u61de'), (194736, 'M', '\u61f2'), (194737, 'M', '\u61f6'), (194738, 'M', '\u6210'), (194739, 'M', '\u621b'), (194740, 'M', '\u625d'), (194741, 'M', '\u62b1'), (194742, 'M', '\u62d4'), (194743, 'M', '\u6350'), (194744, 'M', '\ud84a\udf0c'), (194745, 'M', '\u633d'), (194746, 'M', '\u62fc'), (194747, 'M', '\u6368'), (194748, 'M', '\u6383'), (194749, 'M', '\u63e4'), (194750, 'M', '\ud84a\udff1'), (194751, 'M', '\u6422'), (194752, 'M', '\u63c5'), (194753, 'M', '\u63a9'), (194754, 'M', '\u3a2e'), (194755, 'M', '\u6469'), (194756, 'M', '\u647e'), (194757, 'M', '\u649d'), (194758, 'M', '\u6477'), (194759, 'M', '\u3a6c'), (194760, 'M', '\u654f'), (194761, 'M', '\u656c'), (194762, 'M', '\ud84c\udc0a'), (194763, 'M', '\u65e3'), (194764, 'M', '\u66f8'), (194765, 'M', '\u6649'), (194766, 'M', '\u3b19'), (194767, 'M', '\u6691'), (194768, 'M', '\u3b08'), (194769, 'M', '\u3ae4'), (194770, 'M', '\u5192'), (194771, 'M', '\u5195'), (194772, 'M', '\u6700'), (194773, 'M', '\u669c'), (194774, 'M', '\u80ad'), (194775, 'M', '\u43d9'), (194776, 'M', '\u6717'), (194777, 'M', '\u671b'), (194778, 'M', '\u6721'), (194779, 'M', '\u675e'), (194780, 'M', '\u6753'), (194781, 'M', '\ud84c\udfc3'), (194782, 'M', '\u3b49'), (194783, 'M', '\u67fa'), (194784, 'M', '\u6785'), (194785, 'M', '\u6852'), (194786, 'M', '\u6885'), (194787, 'M', '\ud84d\udc6d'), (194788, 'M', '\u688e'), (194789, 'M', '\u681f'), (194790, 'M', '\u6914'), (194791, 'M', '\u3b9d'), (194792, 'M', '\u6942'), (194793, 'M', '\u69a3'), (194794, 'M', '\u69ea'), (194795, 'M', '\u6aa8'), (194796, 'M', '\ud84d\udea3'), (194797, 'M', '\u6adb'), (194798, 'M', '\u3c18'), (194799, 'M', '\u6b21'), (194800, 'M', '\ud84e\udca7'), (194801, 'M', '\u6b54'), (194802, 'M', '\u3c4e'), (194803, 'M', '\u6b72'), (194804, 'M', '\u6b9f'), (194805, 'M', '\u6bba'), (194806, 'M', '\u6bbb'), (194807, 'M', '\ud84e\ude8d'), (194808, 'M', '\ud847\udd0b'), (194809, 'M', '\ud84e\udefa'), (194810, 'M', '\u6c4e'), (194811, 'M', '\ud84f\udcbc'), (194812, 'M', '\u6cbf'), (194813, 'M', '\u6ccd'), (194814, 'M', '\u6c67'), (194815, 'M', '\u6d16'), (194816, 'M', '\u6d3e'), (194817, 'M', '\u6d77'), (194818, 'M', '\u6d41'), (194819, 'M', '\u6d69'), (194820, 'M', '\u6d78'), (194821, 'M', '\u6d85'), (194822, 'M', '\ud84f\udd1e'), (194823, 'M', '\u6d34'), (194824, 'M', '\u6e2f'), (194825, 'M', '\u6e6e'), (194826, 'M', '\u3d33')]"
        ]
    },
    {
        "func_name": "_seg_79",
        "original": "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]",
        "mutated": [
            "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]",
            "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]",
            "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]",
            "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]",
            "def _seg_79() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(194827, 'M', '\u6ecb'), (194828, 'M', '\u6ec7'), (194829, 'M', '\ud84f\uded1'), (194830, 'M', '\u6df9'), (194831, 'M', '\u6f6e'), (194832, 'M', '\ud84f\udf5e'), (194833, 'M', '\ud84f\udf8e'), (194834, 'M', '\u6fc6'), (194835, 'M', '\u7039'), (194836, 'M', '\u701e'), (194837, 'M', '\u701b'), (194838, 'M', '\u3d96'), (194839, 'M', '\u704a'), (194840, 'M', '\u707d'), (194841, 'M', '\u7077'), (194842, 'M', '\u70ad'), (194843, 'M', '\ud841\udd25'), (194844, 'M', '\u7145'), (194845, 'M', '\ud850\ude63'), (194846, 'M', '\u719c'), (194847, 'X'), (194848, 'M', '\u7228'), (194849, 'M', '\u7235'), (194850, 'M', '\u7250'), (194851, 'M', '\ud851\ude08'), (194852, 'M', '\u7280'), (194853, 'M', '\u7295'), (194854, 'M', '\ud851\udf35'), (194855, 'M', '\ud852\udc14'), (194856, 'M', '\u737a'), (194857, 'M', '\u738b'), (194858, 'M', '\u3eac'), (194859, 'M', '\u73a5'), (194860, 'M', '\u3eb8'), (194862, 'M', '\u7447'), (194863, 'M', '\u745c'), (194864, 'M', '\u7471'), (194865, 'M', '\u7485'), (194866, 'M', '\u74ca'), (194867, 'M', '\u3f1b'), (194868, 'M', '\u7524'), (194869, 'M', '\ud853\udc36'), (194870, 'M', '\u753e'), (194871, 'M', '\ud853\udc92'), (194872, 'M', '\u7570'), (194873, 'M', '\ud848\udd9f'), (194874, 'M', '\u7610'), (194875, 'M', '\ud853\udfa1'), (194876, 'M', '\ud853\udfb8'), (194877, 'M', '\ud854\udc44'), (194878, 'M', '\u3ffc'), (194879, 'M', '\u4008'), (194880, 'M', '\u76f4'), (194881, 'M', '\ud854\udcf3'), (194882, 'M', '\ud854\udcf2'), (194883, 'M', '\ud854\udd19'), (194884, 'M', '\ud854\udd33'), (194885, 'M', '\u771e'), (194886, 'M', '\u771f'), (194888, 'M', '\u774a'), (194889, 'M', '\u4039'), (194890, 'M', '\u778b'), (194891, 'M', '\u4046'), (194892, 'M', '\u4096'), (194893, 'M', '\ud855\udc1d'), (194894, 'M', '\u784e'), (194895, 'M', '\u788c'), (194896, 'M', '\u78cc'), (194897, 'M', '\u40e3'), (194898, 'M', '\ud855\ude26'), (194899, 'M', '\u7956'), (194900, 'M', '\ud855\ude9a'), (194901, 'M', '\ud855\udec5'), (194902, 'M', '\u798f'), (194903, 'M', '\u79eb'), (194904, 'M', '\u412f'), (194905, 'M', '\u7a40'), (194906, 'M', '\u7a4a'), (194907, 'M', '\u7a4f'), (194908, 'M', '\ud856\udd7c'), (194909, 'M', '\ud856\udea7'), (194911, 'X'), (194912, 'M', '\u4202'), (194913, 'M', '\ud856\udfab'), (194914, 'M', '\u7bc6'), (194915, 'M', '\u7bc9'), (194916, 'M', '\u4227'), (194917, 'M', '\ud857\udc80'), (194918, 'M', '\u7cd2'), (194919, 'M', '\u42a0'), (194920, 'M', '\u7ce8'), (194921, 'M', '\u7ce3'), (194922, 'M', '\u7d00'), (194923, 'M', '\ud857\udf86'), (194924, 'M', '\u7d63'), (194925, 'M', '\u4301'), (194926, 'M', '\u7dc7'), (194927, 'M', '\u7e02'), (194928, 'M', '\u7e45'), (194929, 'M', '\u4334')]"
        ]
    },
    {
        "func_name": "_seg_80",
        "original": "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]",
        "mutated": [
            "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]",
            "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]",
            "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]",
            "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]",
            "def _seg_80() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(194930, 'M', '\ud858\ude28'), (194931, 'M', '\ud858\ude47'), (194932, 'M', '\u4359'), (194933, 'M', '\ud858\uded9'), (194934, 'M', '\u7f7a'), (194935, 'M', '\ud858\udf3e'), (194936, 'M', '\u7f95'), (194937, 'M', '\u7ffa'), (194938, 'M', '\u8005'), (194939, 'M', '\ud859\udcda'), (194940, 'M', '\ud859\udd23'), (194941, 'M', '\u8060'), (194942, 'M', '\ud859\udda8'), (194943, 'M', '\u8070'), (194944, 'M', '\ud84c\udf5f'), (194945, 'M', '\u43d5'), (194946, 'M', '\u80b2'), (194947, 'M', '\u8103'), (194948, 'M', '\u440b'), (194949, 'M', '\u813e'), (194950, 'M', '\u5ab5'), (194951, 'M', '\ud859\udfa7'), (194952, 'M', '\ud859\udfb5'), (194953, 'M', '\ud84c\udf93'), (194954, 'M', '\ud84c\udf9c'), (194955, 'M', '\u8201'), (194956, 'M', '\u8204'), (194957, 'M', '\u8f9e'), (194958, 'M', '\u446b'), (194959, 'M', '\u8291'), (194960, 'M', '\u828b'), (194961, 'M', '\u829d'), (194962, 'M', '\u52b3'), (194963, 'M', '\u82b1'), (194964, 'M', '\u82b3'), (194965, 'M', '\u82bd'), (194966, 'M', '\u82e6'), (194967, 'M', '\ud85a\udf3c'), (194968, 'M', '\u82e5'), (194969, 'M', '\u831d'), (194970, 'M', '\u8363'), (194971, 'M', '\u83ad'), (194972, 'M', '\u8323'), (194973, 'M', '\u83bd'), (194974, 'M', '\u83e7'), (194975, 'M', '\u8457'), (194976, 'M', '\u8353'), (194977, 'M', '\u83ca'), (194978, 'M', '\u83cc'), (194979, 'M', '\u83dc'), (194980, 'M', '\ud85b\udc36'), (194981, 'M', '\ud85b\udd6b'), (194982, 'M', '\ud85b\udcd5'), (194983, 'M', '\u452b'), (194984, 'M', '\u84f1'), (194985, 'M', '\u84f3'), (194986, 'M', '\u8516'), (194987, 'M', '\ud85c\udfca'), (194988, 'M', '\u8564'), (194989, 'M', '\ud85b\udf2c'), (194990, 'M', '\u455d'), (194991, 'M', '\u4561'), (194992, 'M', '\ud85b\udfb1'), (194993, 'M', '\ud85c\udcd2'), (194994, 'M', '\u456b'), (194995, 'M', '\u8650'), (194996, 'M', '\u865c'), (194997, 'M', '\u8667'), (194998, 'M', '\u8669'), (194999, 'M', '\u86a9'), (195000, 'M', '\u8688'), (195001, 'M', '\u870e'), (195002, 'M', '\u86e2'), (195003, 'M', '\u8779'), (195004, 'M', '\u8728'), (195005, 'M', '\u876b'), (195006, 'M', '\u8786'), (195007, 'X'), (195008, 'M', '\u87e1'), (195009, 'M', '\u8801'), (195010, 'M', '\u45f9'), (195011, 'M', '\u8860'), (195012, 'M', '\u8863'), (195013, 'M', '\ud85d\ude67'), (195014, 'M', '\u88d7'), (195015, 'M', '\u88de'), (195016, 'M', '\u4635'), (195017, 'M', '\u88fa'), (195018, 'M', '\u34bb'), (195019, 'M', '\ud85e\udcae'), (195020, 'M', '\ud85e\udd66'), (195021, 'M', '\u46be'), (195022, 'M', '\u46c7'), (195023, 'M', '\u8aa0'), (195024, 'M', '\u8aed'), (195025, 'M', '\u8b8a'), (195026, 'M', '\u8c55'), (195027, 'M', '\ud85f\udca8'), (195028, 'M', '\u8cab'), (195029, 'M', '\u8cc1')]"
        ]
    },
    {
        "func_name": "_seg_81",
        "original": "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]",
        "mutated": [
            "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]",
            "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]",
            "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]",
            "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]",
            "def _seg_81() -> List[Union[Tuple[int, str], Tuple[int, str, str]]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return [(195030, 'M', '\u8d1b'), (195031, 'M', '\u8d77'), (195032, 'M', '\ud85f\udf2f'), (195033, 'M', '\ud842\udc04'), (195034, 'M', '\u8dcb'), (195035, 'M', '\u8dbc'), (195036, 'M', '\u8df0'), (195037, 'M', '\ud842\udcde'), (195038, 'M', '\u8ed4'), (195039, 'M', '\u8f38'), (195040, 'M', '\ud861\uddd2'), (195041, 'M', '\ud861\udded'), (195042, 'M', '\u9094'), (195043, 'M', '\u90f1'), (195044, 'M', '\u9111'), (195045, 'M', '\ud861\udf2e'), (195046, 'M', '\u911b'), (195047, 'M', '\u9238'), (195048, 'M', '\u92d7'), (195049, 'M', '\u92d8'), (195050, 'M', '\u927c'), (195051, 'M', '\u93f9'), (195052, 'M', '\u9415'), (195053, 'M', '\ud862\udffa'), (195054, 'M', '\u958b'), (195055, 'M', '\u4995'), (195056, 'M', '\u95b7'), (195057, 'M', '\ud863\udd77'), (195058, 'M', '\u49e6'), (195059, 'M', '\u96c3'), (195060, 'M', '\u5db2'), (195061, 'M', '\u9723'), (195062, 'M', '\ud864\udd45'), (195063, 'M', '\ud864\ude1a'), (195064, 'M', '\u4a6e'), (195065, 'M', '\u4a76'), (195066, 'M', '\u97e0'), (195067, 'M', '\ud865\udc0a'), (195068, 'M', '\u4ab2'), (195069, 'M', '\ud865\udc96'), (195070, 'M', '\u980b'), (195072, 'M', '\u9829'), (195073, 'M', '\ud865\uddb6'), (195074, 'M', '\u98e2'), (195075, 'M', '\u4b33'), (195076, 'M', '\u9929'), (195077, 'M', '\u99a7'), (195078, 'M', '\u99c2'), (195079, 'M', '\u99fe'), (195080, 'M', '\u4bce'), (195081, 'M', '\ud866\udf30'), (195082, 'M', '\u9b12'), (195083, 'M', '\u9c40'), (195084, 'M', '\u9cfd'), (195085, 'M', '\u4cce'), (195086, 'M', '\u4ced'), (195087, 'M', '\u9d67'), (195088, 'M', '\ud868\udcce'), (195089, 'M', '\u4cf8'), (195090, 'M', '\ud868\udd05'), (195091, 'M', '\ud868\ude0e'), (195092, 'M', '\ud868\ude91'), (195093, 'M', '\u9ebb'), (195094, 'M', '\u4d56'), (195095, 'M', '\u9ef9'), (195096, 'M', '\u9efe'), (195097, 'M', '\u9f05'), (195098, 'M', '\u9f0f'), (195099, 'M', '\u9f16'), (195100, 'M', '\u9f3b'), (195101, 'M', '\ud869\ude00'), (195102, 'X'), (196608, 'V'), (201547, 'X'), (201552, 'V'), (205744, 'X'), (917760, 'I'), (918000, 'X')]"
        ]
    }
]