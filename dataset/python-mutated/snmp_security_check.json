[
    {
        "func_name": "snmp_insecure_version_check",
        "original": "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    \"\"\"**B508: Checking for insecure SNMP versions**\n\n    This test is for checking for the usage of insecure SNMP version like\n      v1, v2c\n\n    Please update your code to use more secure versions of SNMP.\n\n    :Example:\n\n    .. code-block:: none\n\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\n           SNMPv2 is insecure. You should use SNMPv3 if able.\n           Severity: Medium Confidence: High\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\n           Location: examples/snmp.py:4:4\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\n        3   # SHOULD FAIL\n        4   a = CommunityData('public', mpModel=0)\n        5   # SHOULD FAIL\n\n    .. seealso::\n\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\n     - https://cwe.mitre.org/data/definitions/319.html\n\n    .. versionadded:: 1.7.2\n\n    .. versionchanged:: 1.7.3\n        CWE information added\n\n    \"\"\"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))",
        "mutated": [
            "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    if False:\n        i = 10\n    \"**B508: Checking for insecure SNMP versions**\\n\\n    This test is for checking for the usage of insecure SNMP version like\\n      v1, v2c\\n\\n    Please update your code to use more secure versions of SNMP.\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\\n           SNMPv2 is insecure. You should use SNMPv3 if able.\\n           Severity: Medium Confidence: High\\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\\n           Location: examples/snmp.py:4:4\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\\n        3   # SHOULD FAIL\\n        4   a = CommunityData('public', mpModel=0)\\n        5   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    \"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))",
            "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"**B508: Checking for insecure SNMP versions**\\n\\n    This test is for checking for the usage of insecure SNMP version like\\n      v1, v2c\\n\\n    Please update your code to use more secure versions of SNMP.\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\\n           SNMPv2 is insecure. You should use SNMPv3 if able.\\n           Severity: Medium Confidence: High\\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\\n           Location: examples/snmp.py:4:4\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\\n        3   # SHOULD FAIL\\n        4   a = CommunityData('public', mpModel=0)\\n        5   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    \"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))",
            "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"**B508: Checking for insecure SNMP versions**\\n\\n    This test is for checking for the usage of insecure SNMP version like\\n      v1, v2c\\n\\n    Please update your code to use more secure versions of SNMP.\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\\n           SNMPv2 is insecure. You should use SNMPv3 if able.\\n           Severity: Medium Confidence: High\\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\\n           Location: examples/snmp.py:4:4\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\\n        3   # SHOULD FAIL\\n        4   a = CommunityData('public', mpModel=0)\\n        5   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    \"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))",
            "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"**B508: Checking for insecure SNMP versions**\\n\\n    This test is for checking for the usage of insecure SNMP version like\\n      v1, v2c\\n\\n    Please update your code to use more secure versions of SNMP.\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\\n           SNMPv2 is insecure. You should use SNMPv3 if able.\\n           Severity: Medium Confidence: High\\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\\n           Location: examples/snmp.py:4:4\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\\n        3   # SHOULD FAIL\\n        4   a = CommunityData('public', mpModel=0)\\n        5   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    \"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))",
            "@test.checks('Call')\n@test.test_id('B508')\ndef snmp_insecure_version_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"**B508: Checking for insecure SNMP versions**\\n\\n    This test is for checking for the usage of insecure SNMP version like\\n      v1, v2c\\n\\n    Please update your code to use more secure versions of SNMP.\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B508:snmp_insecure_version_check] The use of SNMPv1 and\\n           SNMPv2 is insecure. You should use SNMPv3 if able.\\n           Severity: Medium Confidence: High\\n           CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html)\\n           Location: examples/snmp.py:4:4\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b508_snmp_insecure_version_check.html\\n        3   # SHOULD FAIL\\n        4   a = CommunityData('public', mpModel=0)\\n        5   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    \"\n    if context.call_function_name_qual == 'pysnmp.hlapi.CommunityData':\n        if context.check_call_arg_value('mpModel', 0) or context.check_call_arg_value('mpModel', 1):\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='The use of SNMPv1 and SNMPv2 is insecure. You should use SNMPv3 if able.', lineno=context.get_lineno_for_call_arg('CommunityData'))"
        ]
    },
    {
        "func_name": "snmp_crypto_check",
        "original": "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    \"\"\"**B509: Checking for weak cryptography**\n\n    This test is for checking for the usage of insecure SNMP cryptography:\n      v3 using noAuthNoPriv.\n\n    Please update your code to use more secure versions of SNMP. For example:\n\n    Instead of:\n      `CommunityData('public', mpModel=0)`\n\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\n\n    :Example:\n\n    .. code-block:: none\n\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\n           Location: examples/snmp.py:6:11\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\n        5   # SHOULD FAIL\n        6   insecure = UsmUserData(\"securityName\")\n        7   # SHOULD FAIL\n\n    .. seealso::\n\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\n     - https://cwe.mitre.org/data/definitions/319.html\n\n    .. versionadded:: 1.7.2\n\n    .. versionchanged:: 1.7.3\n        CWE information added\n\n    \"\"\"\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))",
        "mutated": [
            "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    if False:\n        i = 10\n    '**B509: Checking for weak cryptography**\\n\\n    This test is for checking for the usage of insecure SNMP cryptography:\\n      v3 using noAuthNoPriv.\\n\\n    Please update your code to use more secure versions of SNMP. For example:\\n\\n    Instead of:\\n      `CommunityData(\\'public\\', mpModel=0)`\\n\\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\\n           Location: examples/snmp.py:6:11\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\\n        5   # SHOULD FAIL\\n        6   insecure = UsmUserData(\"securityName\")\\n        7   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    '\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))",
            "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '**B509: Checking for weak cryptography**\\n\\n    This test is for checking for the usage of insecure SNMP cryptography:\\n      v3 using noAuthNoPriv.\\n\\n    Please update your code to use more secure versions of SNMP. For example:\\n\\n    Instead of:\\n      `CommunityData(\\'public\\', mpModel=0)`\\n\\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\\n           Location: examples/snmp.py:6:11\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\\n        5   # SHOULD FAIL\\n        6   insecure = UsmUserData(\"securityName\")\\n        7   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    '\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))",
            "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '**B509: Checking for weak cryptography**\\n\\n    This test is for checking for the usage of insecure SNMP cryptography:\\n      v3 using noAuthNoPriv.\\n\\n    Please update your code to use more secure versions of SNMP. For example:\\n\\n    Instead of:\\n      `CommunityData(\\'public\\', mpModel=0)`\\n\\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\\n           Location: examples/snmp.py:6:11\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\\n        5   # SHOULD FAIL\\n        6   insecure = UsmUserData(\"securityName\")\\n        7   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    '\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))",
            "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '**B509: Checking for weak cryptography**\\n\\n    This test is for checking for the usage of insecure SNMP cryptography:\\n      v3 using noAuthNoPriv.\\n\\n    Please update your code to use more secure versions of SNMP. For example:\\n\\n    Instead of:\\n      `CommunityData(\\'public\\', mpModel=0)`\\n\\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\\n           Location: examples/snmp.py:6:11\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\\n        5   # SHOULD FAIL\\n        6   insecure = UsmUserData(\"securityName\")\\n        7   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    '\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))",
            "@test.checks('Call')\n@test.test_id('B509')\ndef snmp_crypto_check(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '**B509: Checking for weak cryptography**\\n\\n    This test is for checking for the usage of insecure SNMP cryptography:\\n      v3 using noAuthNoPriv.\\n\\n    Please update your code to use more secure versions of SNMP. For example:\\n\\n    Instead of:\\n      `CommunityData(\\'public\\', mpModel=0)`\\n\\n    Use (Defaults to usmHMACMD5AuthProtocol and usmDESPrivProtocol\\n      `UsmUserData(\"securityName\", \"authName\", \"privName\")`\\n\\n    :Example:\\n\\n    .. code-block:: none\\n\\n        >> Issue: [B509:snmp_crypto_check] You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure\\n           Severity: Medium CWE: CWE-319 (https://cwe.mitre.org/data/definitions/319.html) Confidence: High\\n           Location: examples/snmp.py:6:11\\n           More Info: https://bandit.readthedocs.io/en/latest/plugins/b509_snmp_crypto_check.html\\n        5   # SHOULD FAIL\\n        6   insecure = UsmUserData(\"securityName\")\\n        7   # SHOULD FAIL\\n\\n    .. seealso::\\n\\n     - http://snmplabs.com/pysnmp/examples/hlapi/asyncore/sync/manager/cmdgen/snmp-versions.html\\n     - https://cwe.mitre.org/data/definitions/319.html\\n\\n    .. versionadded:: 1.7.2\\n\\n    .. versionchanged:: 1.7.3\\n        CWE information added\\n\\n    '\n    if context.call_function_name_qual == 'pysnmp.hlapi.UsmUserData':\n        if context.call_args_count < 3:\n            return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CLEARTEXT_TRANSMISSION, text='You should not use SNMPv3 without encryption. noAuthNoPriv & authNoPriv is insecure', lineno=context.get_lineno_for_call_arg('UsmUserData'))"
        ]
    }
]