[
    {
        "func_name": "analice_texto",
        "original": "def analice_texto(text):\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)",
        "mutated": [
            "def analice_texto(text):\n    if False:\n        i = 10\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)",
            "def analice_texto(text):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)",
            "def analice_texto(text):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)",
            "def analice_texto(text):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)",
            "def analice_texto(text):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    words = re.findall('\\\\w+', text)\n    num_words = len(words)\n    avg_word_length = sum((len(word) for word in words)) / num_words\n    sentences = re.findall('\\\\.\\\\s+', text)\n    num_sentences = len(sentences)\n    longest_word = max(words, key=len)\n    print('Numero total de palabras:', num_words)\n    print('Longitud media de las palabras:', avg_word_length)\n    print('N\u00famero de oraciones:', num_sentences)\n    print('Palabra mas larga:', longest_word)"
        ]
    }
]