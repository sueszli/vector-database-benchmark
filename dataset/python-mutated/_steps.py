import _plotly_utils.basevalidators

class StepsValidator(_plotly_utils.basevalidators.CompoundArrayValidator):

    def __init__(self, plotly_name='steps', parent_name='layout.slider', **kwargs):
        if False:
            while True:
                i = 10
        super(StepsValidator, self).__init__(plotly_name=plotly_name, parent_name=parent_name, data_class_str=kwargs.pop('data_class_str', 'Step'), data_docs=kwargs.pop('data_docs', '\n            args\n                Sets the arguments values to be passed to the\n                Plotly method set in `method` on slide.\n            execute\n                When true, the API method is executed. When\n                false, all other behaviors are the same and\n                command execution is skipped. This may be\n                useful when hooking into, for example, the\n                `plotly_sliderchange` method and executing the\n                API command manually without losing the benefit\n                of the slider automatically binding to the\n                state of the plot through the specification of\n                `method` and `args`.\n            label\n                Sets the text label to appear on the slider\n            method\n                Sets the Plotly method to be called when the\n                slider value is changed. If the `skip` method\n                is used, the API slider will function as normal\n                but will perform no API calls and will not bind\n                automatically to state updates. This may be\n                used to create a component interface and attach\n                to slider events manually via JavaScript.\n            name\n                When used in a template, named items are\n                created in the output figure in addition to any\n                items the figure already has in this array. You\n                can modify these items in the output figure by\n                making your own item with `templateitemname`\n                matching this `name` alongside your\n                modifications (including `visible: false` or\n                `enabled: false` to hide it). Has no effect\n                outside of a template.\n            templateitemname\n                Used to refer to a named item in this array in\n                the template. Named items from the template\n                will be created even without a matching item in\n                the input figure, but you can modify one by\n                making an item with `templateitemname` matching\n                its `name`, alongside your modifications\n                (including `visible: false` or `enabled: false`\n                to hide it). If there is no template or no\n                matching item, this item will be hidden unless\n                you explicitly show it with `visible: true`.\n            value\n                Sets the value of the slider step, used to\n                refer to the step programatically. Defaults to\n                the slider label if not provided.\n            visible\n                Determines whether or not this step is included\n                in the slider.\n'), **kwargs)