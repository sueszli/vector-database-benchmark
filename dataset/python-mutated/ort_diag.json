[
    {
        "func_name": "main",
        "original": "def main():\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    ROM = uctypes.bytearray_at(1075838976, 16)\n    fid = esp.flash_id()\n    print('FlashROM:')\n    print('Flash ID: %x (Vendor: %x Device: %x)' % (fid, fid & 255, fid & 65280 | fid >> 16))\n    print('Flash bootloader data:')\n    SZ_MAP = {0: '512KB', 1: '256KB', 2: '1MB', 3: '2MB', 4: '4MB'}\n    FREQ_MAP = {0: '40MHZ', 1: '26MHZ', 2: '20MHz', 15: '80MHz'}\n    print('Byte @2: %02x' % ROM[2])\n    print('Byte @3: %02x (Flash size: %s Flash freq: %s)' % (ROM[3], SZ_MAP.get(ROM[3] >> 4, '?'), FREQ_MAP.get(ROM[3] & 15)))\n    print('Firmware checksum:')\n    print(esp.check_fw())\n    print('\\nNetworking:')\n    print('STA ifconfig:', network.WLAN(network.STA_IF).ifconfig())\n    print('AP ifconfig:', network.WLAN(network.AP_IF).ifconfig())\n    print('Free WiFi driver buffers of type:')\n    for (i, comm) in enumerate(('1,2 TX', '4 Mngmt TX(len: 0x41-0x100)', '5 Mngmt TX (len: 0-0x40)', '7', '8 RX')):\n        print('%d: %d (%s)' % (i, esp.esf_free_bufs(i), comm))\n    print('lwIP PCBs:')\n    lwip.print_pcbs()"
        ]
    }
]