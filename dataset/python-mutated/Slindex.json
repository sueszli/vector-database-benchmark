[
    {
        "func_name": "es_pangrama",
        "original": "def es_pangrama():\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False",
        "mutated": [
            "def es_pangrama():\n    if False:\n        i = 10\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False",
            "def es_pangrama():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False",
            "def es_pangrama():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False",
            "def es_pangrama():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False",
            "def es_pangrama():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    abecedario = []\n    for letra in frase:\n        if letra not in abecedario:\n            abecedario.append(letra)\n    for sym in sg.punctuation:\n        if sym in abecedario:\n            abecedario.remove(sym)\n    if ' ' in abecedario:\n        abecedario.remove(' ')\n    if len(abecedario) == 33:\n        return True\n    else:\n        return False"
        ]
    },
    {
        "func_name": "es_heterograma",
        "original": "def es_heterograma():\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True",
        "mutated": [
            "def es_heterograma():\n    if False:\n        i = 10\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True",
            "def es_heterograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True",
            "def es_heterograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True",
            "def es_heterograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True",
            "def es_heterograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num != 1:\n            return False\n    return True"
        ]
    },
    {
        "func_name": "es_isograma",
        "original": "def es_isograma():\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True",
        "mutated": [
            "def es_isograma():\n    if False:\n        i = 10\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True",
            "def es_isograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True",
            "def es_isograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True",
            "def es_isograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True",
            "def es_isograma():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    frase = input('Por favor ingresa una palabra o frase ').lower()\n    resumen = []\n    visto = []\n    for sym in sg.punctuation:\n        visto.append(sym)\n    visto.append(' ')\n    for letra in frase:\n        if letra not in visto:\n            visto.append(letra)\n            cuenta = 0\n            for i in range(len(frase)):\n                if letra == frase[i]:\n                    cuenta += 1\n            resumen.append(cuenta)\n    for num in resumen:\n        if num == 1 or num != resumen[0]:\n            return False\n    return True"
        ]
    }
]