[
    {
        "func_name": "shibor_data",
        "original": "def shibor_data(year=None):\n    \"\"\"\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\n    Parameters\n    ------\n      year:\u5e74\u4efd(int)\n      \n    Return\n    ------\n    date:\u65e5\u671f\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\n    1W:1\u5468\u62c6\u653e\u5229\u7387\n    2W:2\u5468\u62c6\u653e\u5229\u7387\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\n    \"\"\"\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
        "mutated": [
            "def shibor_data(year=None):\n    if False:\n        i = 10\n    '\\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    1W:1\u5468\u62c6\u653e\u5229\u7387\\n    2W:2\u5468\u62c6\u653e\u5229\u7387\\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    1W:1\u5468\u62c6\u653e\u5229\u7387\\n    2W:2\u5468\u62c6\u653e\u5229\u7387\\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    1W:1\u5468\u62c6\u653e\u5229\u7387\\n    2W:2\u5468\u62c6\u653e\u5229\u7387\\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    1W:1\u5468\u62c6\u653e\u5229\u7387\\n    2W:2\u5468\u62c6\u653e\u5229\u7387\\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u83b7\u53d6\u4e0a\u6d77\u94f6\u884c\u95f4\u540c\u4e1a\u62c6\u653e\u5229\u7387\uff08Shibor\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    1W:1\u5468\u62c6\u653e\u5229\u7387\\n    2W:2\u5468\u62c6\u653e\u5229\u7387\\n    1M:1\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    3M:3\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    6M:6\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    9M:9\u4e2a\u6708\u62c6\u653e\u5229\u7387\\n    1Y:1\u5e74\u62c6\u653e\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Shibor']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content))\n        df.columns = ct.SHIBOR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None"
        ]
    },
    {
        "func_name": "shibor_quote_data",
        "original": "def shibor_quote_data(year=None):\n    \"\"\"\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\n    Parameters\n    ------\n      year:\u5e74\u4efd(int)\n      \n    Return\n    ------\n    date:\u65e5\u671f\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\n    1W_B:1\u5468\u4e70\u5165\n    1W_A:1\u5468\u5356\u51fa\n    2W_B:\u4e70\u5165\n    2W_A:\u5356\u51fa\n    1M_B:\u4e70\u5165\n    1M_A:\u5356\u51fa\n    3M_B:\u4e70\u5165\n    3M_A:\u5356\u51fa\n    6M_B:\u4e70\u5165\n    6M_A:\u5356\u51fa\n    9M_B:\u4e70\u5165\n    9M_A:\u5356\u51fa\n    1Y_B:\u4e70\u5165\n    1Y_A:\u5356\u51fa\n    \"\"\"\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
        "mutated": [
            "def shibor_quote_data(year=None):\n    if False:\n        i = 10\n    '\\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\\n    1W_B:1\u5468\u4e70\u5165\\n    1W_A:1\u5468\u5356\u51fa\\n    2W_B:\u4e70\u5165\\n    2W_A:\u5356\u51fa\\n    1M_B:\u4e70\u5165\\n    1M_A:\u5356\u51fa\\n    3M_B:\u4e70\u5165\\n    3M_A:\u5356\u51fa\\n    6M_B:\u4e70\u5165\\n    6M_A:\u5356\u51fa\\n    9M_B:\u4e70\u5165\\n    9M_A:\u5356\u51fa\\n    1Y_B:\u4e70\u5165\\n    1Y_A:\u5356\u51fa\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_quote_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\\n    1W_B:1\u5468\u4e70\u5165\\n    1W_A:1\u5468\u5356\u51fa\\n    2W_B:\u4e70\u5165\\n    2W_A:\u5356\u51fa\\n    1M_B:\u4e70\u5165\\n    1M_A:\u5356\u51fa\\n    3M_B:\u4e70\u5165\\n    3M_A:\u5356\u51fa\\n    6M_B:\u4e70\u5165\\n    6M_A:\u5356\u51fa\\n    9M_B:\u4e70\u5165\\n    9M_A:\u5356\u51fa\\n    1Y_B:\u4e70\u5165\\n    1Y_A:\u5356\u51fa\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_quote_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\\n    1W_B:1\u5468\u4e70\u5165\\n    1W_A:1\u5468\u5356\u51fa\\n    2W_B:\u4e70\u5165\\n    2W_A:\u5356\u51fa\\n    1M_B:\u4e70\u5165\\n    1M_A:\u5356\u51fa\\n    3M_B:\u4e70\u5165\\n    3M_A:\u5356\u51fa\\n    6M_B:\u4e70\u5165\\n    6M_A:\u5356\u51fa\\n    9M_B:\u4e70\u5165\\n    9M_A:\u5356\u51fa\\n    1Y_B:\u4e70\u5165\\n    1Y_A:\u5356\u51fa\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_quote_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\\n    1W_B:1\u5468\u4e70\u5165\\n    1W_A:1\u5468\u5356\u51fa\\n    2W_B:\u4e70\u5165\\n    2W_A:\u5356\u51fa\\n    1M_B:\u4e70\u5165\\n    1M_A:\u5356\u51fa\\n    3M_B:\u4e70\u5165\\n    3M_A:\u5356\u51fa\\n    6M_B:\u4e70\u5165\\n    6M_A:\u5356\u51fa\\n    9M_B:\u4e70\u5165\\n    9M_A:\u5356\u51fa\\n    1Y_B:\u4e70\u5165\\n    1Y_A:\u5356\u51fa\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_quote_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u83b7\u53d6Shibor\u94f6\u884c\u62a5\u4ef7\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    bank:\u62a5\u4ef7\u94f6\u884c\u540d\u79f0\\n    ON:\u9694\u591c\u62c6\u653e\u5229\u7387\\n    ON_B:\u9694\u591c\u62c6\u653e\u4e70\u5165\u4ef7\\n    ON_A:\u9694\u591c\u62c6\u653e\u5356\u51fa\u4ef7\\n    1W_B:1\u5468\u4e70\u5165\\n    1W_A:1\u5468\u5356\u51fa\\n    2W_B:\u4e70\u5165\\n    2W_A:\u5356\u51fa\\n    1M_B:\u4e70\u5165\\n    1M_A:\u5356\u51fa\\n    3M_B:\u4e70\u5165\\n    3M_A:\u5356\u51fa\\n    6M_B:\u4e70\u5165\\n    6M_A:\u5356\u51fa\\n    9M_B:\u4e70\u5165\\n    9M_A:\u5356\u51fa\\n    1Y_B:\u4e70\u5165\\n    1Y_A:\u5356\u51fa\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Quote']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Quote', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_Q_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None"
        ]
    },
    {
        "func_name": "shibor_ma_data",
        "original": "def shibor_ma_data(year=None):\n    \"\"\"\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\n    Parameters\n    ------\n      year:\u5e74\u4efd(int)\n      \n    Return\n    ------\n    date:\u65e5\u671f\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\n    \"\"\"\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
        "mutated": [
            "def shibor_ma_data(year=None):\n    if False:\n        i = 10\n    '\\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def shibor_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u83b7\u53d6Shibor\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n       \u5176\u5b83\u5206\u522b\u4e3a\u5404\u5468\u671f5\u300110\u300120\u5747\u4ef7\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'Shibor_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.SHIBOR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None"
        ]
    },
    {
        "func_name": "lpr_data",
        "original": "def lpr_data(year=None):\n    \"\"\"\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\n    Parameters\n    ------\n      year:\u5e74\u4efd(int)\n      \n    Return\n    ------\n    date:\u65e5\u671f\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\n    \"\"\"\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
        "mutated": [
            "def lpr_data(year=None):\n    if False:\n        i = 10\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\uff08LPR\uff09\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y:1\u5e74\u8d37\u6b3e\u57fa\u7840\u5229\u7387\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None"
        ]
    },
    {
        "func_name": "lpr_ma_data",
        "original": "def lpr_ma_data(year=None):\n    \"\"\"\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\n    Parameters\n    ------\n      year:\u5e74\u4efd(int)\n      \n    Return\n    ------\n    date:\u65e5\u671f\n    1Y_5:5\u65e5\u5747\u503c\n    1Y_10:10\u65e5\u5747\u503c\n    1Y_20:20\u65e5\u5747\u503c\n    \"\"\"\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
        "mutated": [
            "def lpr_ma_data(year=None):\n    if False:\n        i = 10\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y_5:5\u65e5\u5747\u503c\\n    1Y_10:10\u65e5\u5747\u503c\\n    1Y_20:20\u65e5\u5747\u503c\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y_5:5\u65e5\u5747\u503c\\n    1Y_10:10\u65e5\u5747\u503c\\n    1Y_20:20\u65e5\u5747\u503c\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y_5:5\u65e5\u5747\u503c\\n    1Y_10:10\u65e5\u5747\u503c\\n    1Y_20:20\u65e5\u5747\u503c\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y_5:5\u65e5\u5747\u503c\\n    1Y_10:10\u65e5\u5747\u503c\\n    1Y_20:20\u65e5\u5747\u503c\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None",
            "def lpr_ma_data(year=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u83b7\u53d6\u8d37\u6b3e\u57fa\u7840\u5229\u7387\u5747\u503c\u6570\u636e\\n    Parameters\\n    ------\\n      year:\u5e74\u4efd(int)\\n      \\n    Return\\n    ------\\n    date:\u65e5\u671f\\n    1Y_5:5\u65e5\u5747\u503c\\n    1Y_10:10\u65e5\u5747\u503c\\n    1Y_20:20\u65e5\u5747\u503c\\n    '\n    year = du.get_year() if year is None else year\n    lab = ct.SHIBOR_TYPE['LPR_Tendency']\n    lab = lab.encode('utf-8') if ct.PY3 else lab\n    try:\n        clt = Client(url=ct.SHIBOR_DATA_URL % (ct.P_TYPE['http'], ct.DOMAINS['shibor'], ct.PAGES['dw'], 'LPR_Tendency', year, lab, year))\n        content = clt.gvalue()\n        df = pd.read_excel(StringIO(content), skiprows=[0])\n        df.columns = ct.LPR_MA_COLS\n        df['date'] = df['date'].map(lambda x: x.date())\n        if pd.__version__ < '0.21':\n            df['date'] = df['date'].astype(np.datetime64)\n        else:\n            df['date'] = df['date'].astype('datetime64[D]')\n        return df\n    except:\n        return None"
        ]
    }
]