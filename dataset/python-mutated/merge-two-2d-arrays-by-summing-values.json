[
    {
        "func_name": "mergeArrays",
        "original": "def mergeArrays(self, nums1, nums2):\n    \"\"\"\n        :type nums1: List[List[int]]\n        :type nums2: List[List[int]]\n        :rtype: List[List[int]]\n        \"\"\"\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result",
        "mutated": [
            "def mergeArrays(self, nums1, nums2):\n    if False:\n        i = 10\n    '\\n        :type nums1: List[List[int]]\\n        :type nums2: List[List[int]]\\n        :rtype: List[List[int]]\\n        '\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result",
            "def mergeArrays(self, nums1, nums2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        :type nums1: List[List[int]]\\n        :type nums2: List[List[int]]\\n        :rtype: List[List[int]]\\n        '\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result",
            "def mergeArrays(self, nums1, nums2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        :type nums1: List[List[int]]\\n        :type nums2: List[List[int]]\\n        :rtype: List[List[int]]\\n        '\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result",
            "def mergeArrays(self, nums1, nums2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        :type nums1: List[List[int]]\\n        :type nums2: List[List[int]]\\n        :rtype: List[List[int]]\\n        '\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result",
            "def mergeArrays(self, nums1, nums2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        :type nums1: List[List[int]]\\n        :type nums2: List[List[int]]\\n        :rtype: List[List[int]]\\n        '\n    result = []\n    i = j = 0\n    while i < len(nums1) or j < len(nums2):\n        if j == len(nums2) or (i < len(nums1) and nums1[i][0] < nums2[j][0]):\n            if result and result[-1][0] == nums1[i][0]:\n                result[-1][1] += nums1[i][1]\n            else:\n                result.append(nums1[i])\n            i += 1\n        else:\n            if result and result[-1][0] == nums2[j][0]:\n                result[-1][1] += nums2[j][1]\n            else:\n                result.append(nums2[j])\n            j += 1\n    return result"
        ]
    }
]