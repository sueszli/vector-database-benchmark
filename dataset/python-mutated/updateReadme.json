[
    {
        "func_name": "main",
        "original": "def main():\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    s = Template('${description} | [Readme](https://github.com/StevenBlack/hosts/blob/master/${location}readme.md) | [link](https://raw.githubusercontent.com/StevenBlack/hosts/master/${location}hosts) | ${fmtentries} | [link](http://sbc.io/hosts/${location}hosts)')\n    with open(README_DATA_FILENAME, 'r', encoding='utf-8', newline='\\n') as f:\n        data = json.load(f)\n    keys = list(data.keys())\n    keys.sort(key=lambda item: (item.replace('-only', '').count('-'), item.replace('-only', '')))\n    toc_rows = ''\n    for key in keys:\n        data[key]['fmtentries'] = '{:,}'.format(data[key]['entries'])\n        if key == 'base':\n            data[key]['description'] = 'Unified hosts = **(adware + malware)**'\n        elif data[key]['no_unified_hosts']:\n            data[key]['description'] = '**' + key.replace('-only', '').replace('-', ' + ') + '**'\n        else:\n            data[key]['description'] = 'Unified hosts **+ ' + key.replace('-', ' + ') + '**'\n        if '\\\\' in data[key]['location']:\n            data[key]['location'] = data[key]['location'].replace('\\\\', '/')\n        toc_rows += s.substitute(data[key]) + '\\n'\n    row_defaults = {'name': '', 'homeurl': '', 'url': '', 'license': '', 'issues': '', 'description': ''}\n    t = Template('${name} |[link](${homeurl}) | [raw](${url}) | ${license} | [issues](${issues})| ${description}')\n    size_history_graph = '![Size history](https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts_file_size_history.png)'\n    for key in keys:\n        extensions = key.replace('-only', '').replace('-', ', ')\n        extensions_str = '* Extensions: **' + extensions + '**.'\n        if data[key]['no_unified_hosts']:\n            extensions_header = 'Limited to the extensions: ' + extensions\n        else:\n            extensions_header = 'Unified hosts file with ' + extensions + ' extensions'\n        source_rows = ''\n        source_list = data[key]['sourcesdata']\n        for source in source_list:\n            this_row = {}\n            this_row.update(row_defaults)\n            this_row.update(source)\n            source_rows += t.substitute(this_row) + '\\n'\n        with open(os.path.join(data[key]['location'], README_FILENAME), 'wt', encoding='utf-8', newline='\\n') as out:\n            for line in open(README_TEMPLATE, encoding='utf-8', newline='\\n'):\n                line = line.replace('@GEN_DATE@', time.strftime('%B %d %Y', time.gmtime()))\n                line = line.replace('@EXTENSIONS@', extensions_str)\n                line = line.replace('@EXTENSIONS_HEADER@', extensions_header)\n                line = line.replace('@NUM_ENTRIES@', '{:,}'.format(data[key]['entries']))\n                line = line.replace('@SUBFOLDER@', os.path.join(data[key]['location'], ''))\n                line = line.replace('@TOCROWS@', toc_rows)\n                line = line.replace('@SOURCEROWS@', source_rows)\n                if key == 'base':\n                    line = line.replace('@SIZEHISTORY@', size_history_graph)\n                else:\n                    line = line.replace('@SIZEHISTORY@', '')\n                out.write(line)"
        ]
    }
]