[
    {
        "func_name": "demo",
        "original": "def demo(screen):\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)",
        "mutated": [
            "def demo(screen):\n    if False:\n        i = 10\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)",
            "def demo(screen):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)",
            "def demo(screen):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)",
            "def demo(screen):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)",
            "def demo(screen):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    scenes = []\n    for (bg, name) in [(Screen.COLOUR_DEFAULT, 'DEFAULT'), (Screen.COLOUR_RED, 'RED'), (Screen.COLOUR_YELLOW, 'YELLOW'), (Screen.COLOUR_GREEN, 'GREEN'), (Screen.COLOUR_CYAN, 'CYAN'), (Screen.COLOUR_BLUE, 'BLUE'), (Screen.COLOUR_MAGENTA, 'MAGENTA'), (Screen.COLOUR_WHITE, 'WHITE')]:\n        effects = [Wipe(screen, bg=bg, stop_frame=screen.height * 2 + 30), Print(screen, FigletText(name, 'epic'), screen.height // 2 - 4, colour=bg if bg == Screen.COLOUR_DEFAULT else 7 - bg, bg=bg, start_frame=screen.height * 2), Print(screen, SpeechBubble('Testing background colours - press X to exit'), screen.height - 5, speed=1, transparent=False)]\n        scenes.append(Scene(effects, 0, clear=False))\n    screen.play(scenes, stop_on_resize=True)"
        ]
    }
]