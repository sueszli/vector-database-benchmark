from __future__ import annotations

def test_agg_lag():
    if False:
        i = 10
        return i + 15
    '\n\n    Let\'s say we have daily data about the number of customers and the revenue for two shops.\n\n    >>> X = [\n    ...     {\'shop\': \'7/11\', \'customers\': 10, \'revenue\': 420},\n    ...     {\'shop\': \'Kmart\', \'customers\': 10, \'revenue\': 386},\n    ...     {\'shop\': \'7/11\', \'customers\': 20, \'revenue\': 145},\n    ...     {\'shop\': \'Kmart\', \'customers\': 5, \'revenue\': 87},\n    ...     {\'shop\': \'7/11\', \'customers\': 15, \'revenue\': 276},\n    ...     {\'shop\': \'Kmart\', \'customers\': 10, \'revenue\': 149},\n    ...     {\'shop\': \'7/11\', \'customers\': 30, \'revenue\': 890},\n    ...     {\'shop\': \'Kmart\', \'customers\': 40, \'revenue\': 782},\n    ...     {\'shop\': \'7/11\', \'customers\': 20, \'revenue\': 403},\n    ...     {\'shop\': \'Kmart\', \'customers\': 35, \'revenue\': 218},\n    ... ]\n\n    At each time step, we want to use the number of customers and revenue from 2 time steps ago:\n\n    >>> from river.feature_extraction import Agg\n    >>> from river.stats import Shift\n\n    >>> agg = (\n    ...     Agg("customers", None, Shift(2)) +\n    ...     Agg("revenue", None, Shift(2))\n    ... )\n    >>> for x in X:\n    ...     print(agg.learn_one(x).transform_one(x))\n    {\'revenue_shift_2\': None, \'customers_shift_2\': None}\n    {\'revenue_shift_2\': None, \'customers_shift_2\': None}\n    {\'revenue_shift_2\': 420, \'customers_shift_2\': 10}\n    {\'revenue_shift_2\': 386, \'customers_shift_2\': 10}\n    {\'revenue_shift_2\': 145, \'customers_shift_2\': 20}\n    {\'revenue_shift_2\': 87, \'customers_shift_2\': 5}\n    {\'revenue_shift_2\': 276, \'customers_shift_2\': 15}\n    {\'revenue_shift_2\': 149, \'customers_shift_2\': 10}\n    {\'revenue_shift_2\': 890, \'customers_shift_2\': 30}\n    {\'revenue_shift_2\': 782, \'customers_shift_2\': 40}\n\n    We can also specify multiple lags for a given feature.\n\n    >>> from river.compose import TransformerUnion\n\n    >>> agg = TransformerUnion(*[\n    ...     Agg("customers", None, Shift(d))\n    ...     for d in [1, 2, 3]\n    ... ])\n    >>> for x in X:\n    ...     print(agg.learn_one(x).transform_one(x))\n    {\'customers_shift_3\': None, \'customers_shift_2\': None, \'customers_shift_1\': None}\n    {\'customers_shift_3\': None, \'customers_shift_2\': None, \'customers_shift_1\': 10}\n    {\'customers_shift_3\': None, \'customers_shift_2\': 10, \'customers_shift_1\': 10}\n    {\'customers_shift_3\': 10, \'customers_shift_2\': 10, \'customers_shift_1\': 20}\n    {\'customers_shift_3\': 10, \'customers_shift_2\': 20, \'customers_shift_1\': 5}\n    {\'customers_shift_3\': 20, \'customers_shift_2\': 5, \'customers_shift_1\': 15}\n    {\'customers_shift_3\': 5, \'customers_shift_2\': 15, \'customers_shift_1\': 10}\n    {\'customers_shift_3\': 15, \'customers_shift_2\': 10, \'customers_shift_1\': 30}\n    {\'customers_shift_3\': 10, \'customers_shift_2\': 30, \'customers_shift_1\': 40}\n    {\'customers_shift_3\': 30, \'customers_shift_2\': 40, \'customers_shift_1\': 20}\n\n    As of now, we\'re looking at lagged values over all the data. It might make more sense to look\n    at the lags per shop.\n\n    >>> agg = Agg("customers", "shop", Shift(1))\n    >>> for x in X:\n    ...     print(agg.learn_one(x).transform_one(x))\n    {\'customers_shift_1_by_shop\': None}\n    {\'customers_shift_1_by_shop\': None}\n    {\'customers_shift_1_by_shop\': 10}\n    {\'customers_shift_1_by_shop\': 10}\n    {\'customers_shift_1_by_shop\': 20}\n    {\'customers_shift_1_by_shop\': 5}\n    {\'customers_shift_1_by_shop\': 15}\n    {\'customers_shift_1_by_shop\': 10}\n    {\'customers_shift_1_by_shop\': 30}\n    {\'customers_shift_1_by_shop\': 40}\n\n    '

def test_target_agg_lag():
    if False:
        print('Hello World!')
    '\n\n    >>> dataset = [\n    ...     ({\'country\': \'France\'}, 42),\n    ...     ({\'country\': \'Sweden\'}, 16),\n    ...     ({\'country\': \'France\'}, 24),\n    ...     ({\'country\': \'Sweden\'}, 58),\n    ...     ({\'country\': \'Sweden\'}, 20),\n    ...     ({\'country\': \'France\'}, 50),\n    ...     ({\'country\': \'France\'}, 10),\n    ...     ({\'country\': \'Sweden\'}, 80)\n    ... ]\n\n    Let\'s extract the two last values of the target at each time step.\n\n    >>> from river.feature_extraction import TargetAgg\n    >>> from river.stats import Shift\n\n    >>> agg = TargetAgg(None, Shift(1)) + TargetAgg(None, Shift(2))\n    >>> for x, y in dataset:\n    ...     print(agg.transform_one(x))\n    ...     agg = agg.learn_one(x, y)\n    {\'y_shift_2\': None, \'y_shift_1\': None}\n    {\'y_shift_2\': None, \'y_shift_1\': None}\n    {\'y_shift_2\': None, \'y_shift_1\': 42}\n    {\'y_shift_2\': 42, \'y_shift_1\': 16}\n    {\'y_shift_2\': 16, \'y_shift_1\': 24}\n    {\'y_shift_2\': 24, \'y_shift_1\': 58}\n    {\'y_shift_2\': 58, \'y_shift_1\': 20}\n    {\'y_shift_2\': 20, \'y_shift_1\': 50}\n\n    We can also calculate the lags with different groups:\n\n    >>> agg = TargetAgg("country", Shift(1)) + TargetAgg("country", Shift(2))\n    >>> for x, y in dataset:\n    ...     print(agg.transform_one(x))\n    ...     agg = agg.learn_one(x, y)\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': None}\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': None}\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': None}\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': None}\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': 16}\n    {\'y_shift_2_by_country\': None, \'y_shift_1_by_country\': 42}\n    {\'y_shift_2_by_country\': 42, \'y_shift_1_by_country\': 24}\n    {\'y_shift_2_by_country\': 16, \'y_shift_1_by_country\': 58}\n\n    '