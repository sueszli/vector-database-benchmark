[
    {
        "func_name": "make",
        "original": "def make(ax1, ax2, cmap, title, y, color='k'):\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')",
        "mutated": [
            "def make(ax1, ax2, cmap, title, y, color='k'):\n    if False:\n        i = 10\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')",
            "def make(ax1, ax2, cmap, title, y, color='k'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')",
            "def make(ax1, ax2, cmap, title, y, color='k'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')",
            "def make(ax1, ax2, cmap, title, y, color='k'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')",
            "def make(ax1, ax2, cmap, title, y, color='k'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    ax1.set_xlim(0, 1)\n    ax1.set_ylim(0, 1)\n    ax1.set_xticks([])\n    ax1.set_yticks([0, 0.5, 1])\n    ax1.get_yaxis().tick_left()\n    ax1.axhline(y, lw=1, c=color, xmin=0, xmax=1)\n    ax1.text(0.025, y + 0.015, 'Slice y=%.2f' % y, fontsize=10, color=color)\n    ax1.imshow(Z, cmap=cmap, origin='upper', extent=[0, 1, 0, 1])\n    (ax1.set_xticks([]), ax1.set_yticks([]))\n    ax1.set_title(title)\n    ax2.set_xlim(0, 1)\n    ax2.set_ylim(-0.1, +1.1)\n    ax2.set_xticks([0, 0.5, 1])\n    ax2.get_xaxis().tick_bottom()\n    ax2.set_yticks([0, 1])\n    ax2.get_yaxis().tick_left()\n    ax2.plot(T / np.pi, Z[int(1024 * (1 - y))], c='k', lw=0.5)\n    ax2.axis('off')\n    ax2.text(0.025, 1.25, 'Slice detail')"
        ]
    }
]