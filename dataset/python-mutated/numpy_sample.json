[
    {
        "func_name": "main",
        "original": "def main():\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    app = Ogre.Bites.ApplicationContext('PySample')\n    app.initApp()\n    root = app.getRoot()\n    scn_mgr = root.createSceneManager()\n    shadergen = Ogre.RTShader.ShaderGenerator.getSingleton()\n    shadergen.addSceneManager(scn_mgr)\n    arr = np.zeros((256, 256, 3), dtype=np.uint8)\n    arr[:, :, 1] = np.mgrid[0:256, 0:256][1]\n    ogre_img = Ogre.Image()\n    ogre_img.loadDynamicImage(arr, 256, 256, Ogre.PF_BYTE_RGB)\n    Ogre.TextureManager.getSingleton().loadImage('gradient', 'General', ogre_img)\n    mat = Ogre.MaterialManager.getSingleton().create('gradient_mat', 'General')\n    rpass = mat.getTechniques()[0].getPasses()[0]\n    rpass.setLightingEnabled(False)\n    rpass.createTextureUnitState('gradient')\n    rect = scn_mgr.createScreenSpaceRect(True)\n    rect.setCorners(-0.5, 0.5, 0.5, -0.5)\n    rect.setMaterial(mat)\n    scn_mgr.getRootSceneNode().createChildSceneNode().attachObject(rect)\n    cam = scn_mgr.createCamera('myCam')\n    win = app.getRenderWindow()\n    vp = win.addViewport(cam)\n    gray = np.array([0.3, 0.3, 0.3])\n    vp.setBackgroundColour(gray)\n    root.startRendering()\n    mem = np.empty((win.getHeight(), win.getWidth(), 3), dtype=np.uint8)\n    pb = Ogre.PixelBox(win.getWidth(), win.getHeight(), 1, Ogre.PF_BYTE_RGB, mem)\n    win.copyContentsToMemory(pb, pb)\n    pyplot.imsave('screenshot.png', mem)"
        ]
    }
]