[
    {
        "func_name": "hackernews_top_story_ids",
        "original": "@asset\ndef hackernews_top_story_ids():\n    \"\"\"Get top stories from the HackerNews top stories endpoint.\n\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\n    \"\"\"\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)",
        "mutated": [
            "@asset\ndef hackernews_top_story_ids():\n    if False:\n        i = 10\n    'Get top stories from the HackerNews top stories endpoint.\\n\\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\\n    '\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)",
            "@asset\ndef hackernews_top_story_ids():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Get top stories from the HackerNews top stories endpoint.\\n\\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\\n    '\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)",
            "@asset\ndef hackernews_top_story_ids():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Get top stories from the HackerNews top stories endpoint.\\n\\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\\n    '\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)",
            "@asset\ndef hackernews_top_story_ids():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Get top stories from the HackerNews top stories endpoint.\\n\\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\\n    '\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)",
            "@asset\ndef hackernews_top_story_ids():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Get top stories from the HackerNews top stories endpoint.\\n\\n    API Docs: https://github.com/HackerNews/API#new-top-and-best-stories.\\n    '\n    top_story_ids = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json').json()\n    with open('hackernews_top_story_ids.json', 'w') as f:\n        json.dump(top_story_ids[:10], f)"
        ]
    },
    {
        "func_name": "hackernews_top_stories",
        "original": "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    \"\"\"Get items based on story ids from the HackerNews items endpoint.\"\"\"\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)",
        "mutated": [
            "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    if False:\n        i = 10\n    'Get items based on story ids from the HackerNews items endpoint.'\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)",
            "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Get items based on story ids from the HackerNews items endpoint.'\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)",
            "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Get items based on story ids from the HackerNews items endpoint.'\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)",
            "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Get items based on story ids from the HackerNews items endpoint.'\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)",
            "@asset(deps=[hackernews_top_story_ids])\ndef hackernews_top_stories(context: AssetExecutionContext):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Get items based on story ids from the HackerNews items endpoint.'\n    with open('hackernews_top_story_ids.json', 'r') as f:\n        hackernews_top_story_ids = json.load(f)\n    results = []\n    for item_id in hackernews_top_story_ids:\n        item = requests.get(f'https://hacker-news.firebaseio.com/v0/item/{item_id}.json').json()\n        results.append(item)\n    df = pd.DataFrame(results)\n    df.to_csv('hackernews_top_stories.csv')\n    metadata = {'num_records': len(df), 'preview': MetadataValue.md(df[['title', 'by', 'url']].to_markdown())}\n    context.add_output_metadata(metadata=metadata)"
        ]
    }
]