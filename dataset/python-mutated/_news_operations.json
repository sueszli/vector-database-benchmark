[
    {
        "func_name": "__init__",
        "original": "def __init__(self, client, config, serializer, deserializer):\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'",
        "mutated": [
            "def __init__(self, client, config, serializer, deserializer):\n    if False:\n        i = 10\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'",
            "def __init__(self, client, config, serializer, deserializer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'",
            "def __init__(self, client, config, serializer, deserializer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'",
            "def __init__(self, client, config, serializer, deserializer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'",
            "def __init__(self, client, config, serializer, deserializer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    self._client = client\n    self._serialize = serializer\n    self._deserialize = deserializer\n    self.config = config\n    self.x_bing_apis_sdk = 'true'"
        ]
    },
    {
        "func_name": "search",
        "original": "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    \"\"\"The News Search API lets you send a search query to Bing and get back a\n        list of news that are relevant to the search query. This section\n        provides technical details about the query parameters and headers that\n        you use to request news and the JSON response objects that contain\n        them.  For examples that show how to make requests, see [Searching the\n        web for\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n\n        :param query: The user's search query string. The query string cannot\n         be empty. The query string may contain [Bing Advanced\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\n         example, to limit news to a specific domain, use the\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\n         this parameter only with the News Search API. Do not specify this\n         parameter when calling the Trending Topics API or News Category API.\n        :type query: str\n        :param accept_language: A comma-delimited list of one or more\n         languages to use for user interface strings. The list is in decreasing\n         order of preference. For additional information, including expected\n         format, see\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n         This header and the\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameter are mutually exclusive; do not specify both. If you\n         set this header, you must also specify the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter. To determine the market to return results for, Bing\n         uses the first supported language it finds from the list and combines\n         it with the cc parameter value. If the list does not include a\n         supported language, Bing finds the closest language and market that\n         supports the request or it uses an aggregated or default market for\n         the results. To determine the market that Bing used, see the\n         BingAPIs-Market header. Use this header and the cc query parameter\n         only if you specify multiple languages. Otherwise, use the\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n         and\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameters. A user interface string is a string that's used as a\n         label in a user interface. There are few user interface strings in the\n         JSON response objects. Any links to Bing.com properties in the\n         response objects apply the specified language.\n        :type accept_language: str\n        :param user_agent: The user agent originating the request. Bing uses\n         the user agent to provide mobile users with an optimized experience.\n         Although optional, you are encouraged to always specify this header.\n         The user-agent should be the same string that any commonly used\n         browser sends. For information about user agents, see [RFC\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n         following are examples of user-agent strings. Windows Phone:\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n        :type user_agent: str\n        :param client_id: Bing uses this header to provide users with\n         consistent behavior across Bing API calls. Bing often flights new\n         features and improvements, and it uses the client ID as a key for\n         assigning traffic on different flights. If you do not use the same\n         client ID for a user across multiple requests, then Bing may assign\n         the user to multiple conflicting flights. Being assigned to multiple\n         conflicting flights can lead to an inconsistent user experience. For\n         example, if the second request has a different flight assignment than\n         the first, the experience may be unexpected. Also, Bing can use the\n         client ID to tailor web results to that client ID\u2019s search history,\n         providing a richer experience for the user. Bing also uses this header\n         to help improve result rankings by analyzing the activity generated by\n         a client ID. The relevance improvements help with better quality of\n         results delivered by Bing APIs and in turn enables higher\n         click-through rates for the API consumer. IMPORTANT: Although\n         optional, you should consider this header required. Persisting the\n         client ID across multiple requests for the same end user and device\n         combination enables 1) the API consumer to receive a consistent user\n         experience, and 2) higher click-through rates via better quality of\n         results from the Bing APIs. Each user that uses your application on\n         the device must have a unique, Bing generated client ID. If you do not\n         include this header in the request, Bing generates an ID and returns\n         it in the X-MSEdge-ClientID response header. The only time that you\n         should NOT include this header in a request is the first time the user\n         uses your app on that device. Use the client ID for each Bing API\n         request that your app makes for this user on the device. Persist the\n         client ID. To persist the ID in a browser app, use a persistent HTTP\n         cookie to ensure the ID is used across all sessions. Do not use a\n         session cookie. For other apps such as mobile apps, use the device's\n         persistent storage to persist the ID. The next time the user uses your\n         app on that device, get the client ID that you persisted. Bing\n         responses may or may not include this header. If the response includes\n         this header, capture the client ID and use it for all subsequent Bing\n         requests for the user on that device. If you include the\n         X-MSEdge-ClientID, you must not include cookies in the request.\n        :type client_id: str\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\n         IP address is used to discover the user's location. Bing uses the\n         location information to determine safe search behavior. Although\n         optional, you are encouraged to always specify this header and the\n         X-Search-Location header. Do not obfuscate the address (for example,\n         by changing the last octet to 0). Obfuscating the address results in\n         the location not being anywhere near the device's actual location,\n         which may result in Bing serving erroneous results.\n        :type client_ip: str\n        :param location: A semicolon-delimited list of key/value pairs that\n         describe the client's geographical location. Bing uses the location\n         information to determine safe search behavior and to return relevant\n         local content. Specify the key/value pair as <key>:<value>. The\n         following are the keys that you use to specify the user's location.\n         lat (required): The latitude of the client's location, in degrees. The\n         latitude must be greater than or equal to -90.0 and less than or equal\n         to +90.0. Negative values indicate southern latitudes and positive\n         values indicate northern latitudes. long (required): The longitude of\n         the client's location, in degrees. The longitude must be greater than\n         or equal to -180.0 and less than or equal to +180.0. Negative values\n         indicate western longitudes and positive values indicate eastern\n         longitudes. re (required): The radius, in meters, which specifies the\n         horizontal accuracy of the coordinates. Pass the value returned by the\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\n         ts (optional): The UTC UNIX timestamp of when the client was at the\n         location. (The UNIX timestamp is the number of seconds since January\n         1, 1970.) head (optional): The client's relative heading or direction\n         of travel. Specify the direction of travel as degrees from 0 through\n         360, counting clockwise relative to true north. Specify this key only\n         if the sp key is nonzero. sp (optional): The horizontal velocity\n         (speed), in meters per second, that the client device is traveling.\n         alt (optional): The altitude of the client device, in meters. are\n         (optional): The radius, in meters, that specifies the vertical\n         accuracy of the coordinates. Specify this key only if you specify the\n         alt key. Although many of the keys are optional, the more information\n         that you provide, the more accurate the location results are. Although\n         optional, you are encouraged to always specify the user's geographical\n         location. Providing the location is especially important if the\n         client's IP address does not accurately reflect the user's physical\n         location (for example, if the client uses VPN). For optimal results,\n         you should include this header and the X-MSEdge-ClientIP header, but\n         at a minimum, you should include this header.\n        :type location: str\n        :param country_code: A 2-character country code of the country where\n         the results come from. This API supports only the United States\n         market. If you specify this query parameter, it must be set to us. If\n         you set this parameter, you must also specify the Accept-Language\n         header. Bing uses the first supported language it finds from the\n         languages list, and combine that language with the country code that\n         you specify to determine the market to return results for. If the\n         languages list does not include a supported language, Bing finds the\n         closest language and market that supports the request, or it may use\n         an aggregated or default market for the results instead of a specified\n         one. You should use this query parameter and the Accept-Language query\n         parameter only if you specify multiple languages; otherwise, you\n         should use the mkt and setLang query parameters. This parameter and\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\n        :type country_code: str\n        :param count: The number of news articles to return in the response.\n         The actual number delivered may be less than requested. The default is\n         10 and the maximum value is 100. The actual number delivered may be\n         less than requested.You may use this parameter along with the offset\n         parameter to page results. For example, if your user interface\n         displays 20 articles per page, set count to 20 and offset to 0 to get\n         the first page of results. For each subsequent page, increment offset\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\n         include some overlap in results.\n        :type count: int\n        :param freshness: Filter news by the date and time that Bing\n         discovered the news. The following are the possible filter values.\n         Day: Return news discovered within the last 24 hours. Week: Return\n         news discovered within the last 7 days. Month: Return news discovered\n         within the last 30 days. Use this parameter only with the News Search\n         API. Do not specify this parameter when calling the News Category API\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\n         'Month'\n        :type freshness: str or\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\n        :param market: The market where the results come from. Typically, mkt\n         is the country where the user is making the request from. However, it\n         could be a different country if the user is not located in a country\n         where Bing delivers results. The market must be in the form <language\n         code>-<country code>. For example, en-US. The string is case\n         insensitive. For a list of possible market values, see [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n         NOTE: If known, you are encouraged to always specify the market.\n         Specifying the market helps Bing route the request and return an\n         appropriate and optimal response. If you specify a market that is not\n         listed in [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n         Bing uses a best fit market code based on an internal mapping that is\n         subject to change. This parameter and the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter are mutually exclusive\u2014do not specify both.\n        :type market: str\n        :param offset: The zero-based offset that indicates the number of news\n         to skip before returning news. The default is 0. The offset should be\n         less than\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n         - count). Use this parameter along with the count parameter to page\n         results. For example, if your user interface displays 20 news per\n         page, set count to 20 and offset to 0 to get the first page of\n         results. For each subsequent page, increment offset by 20 (for\n         example, 0, 20, 40). It is possible for multiple pages to include some\n         overlap in results.\n        :type offset: int\n        :param original_image: A Boolean value that determines whether the\n         image's contentUrl contains a URL that points to a thumbnail of the\n         original article's image or the image itself. If the article includes\n         an image, and this parameter is set to true, the image's contentUrl\n         property contains a URL that you may use to download the original\n         image from the publisher's website. Otherwise, if this parameter is\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\n         same thumbnail image. Use this parameter only with the News Search\n         API. Do not specify this parameter when calling the Trending Topics\n         API or News Category API.\n        :type original_image: bool\n        :param safe_search: Filter news for adult content. The following are\n         the possible filter values. Off: Return news articles with adult text,\n         images, or videos. Moderate: Return news articles with adult text but\n         not adult images or videos. Strict: Do not return news articles with\n         adult text, images, or videos. If the request comes from a market that\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\n         ignores the safeSearch value and uses Strict. If you use the site:\n         query operator, there is the chance that the response may contain\n         adult content regardless of what the safeSearch query parameter is set\n         to. Use site: only if you are aware of the content on the site and\n         your scenario supports the possibility of adult content. Possible\n         values include: 'Off', 'Moderate', 'Strict'\n        :type safe_search: str or\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\n        :param set_lang: The language to use for user interface strings.\n         Specify the language using the ISO 639-1 2-letter language code. For\n         example, the language code for English is EN. The default is EN\n         (English). Although optional, you should always specify the language.\n         Typically, you set setLang to the same language specified by mkt\n         unless the user wants the user interface strings displayed in a\n         different language. This parameter and the\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n         header are mutually exclusive; do not specify both. A user interface\n         string is a string that's used as a label in a user interface. There\n         are few user interface strings in the JSON response objects. Also, any\n         links to Bing.com properties in the response objects apply the\n         specified language.\n        :type set_lang: str\n        :param sort_by: The order to return the news in. The following are the\n         possible case-insensitive values. Date: If the request is through the\n         News Search API, the response returns news articles sorted by date\n         from the most recent to the oldest. If the request is through the News\n         Trending Topics API, the response returns trending topics sorted by\n         date from the most recent to the oldest.\n        :type sort_by: str\n        :param text_decorations: A Boolean value that determines whether\n         display strings contain decoration markers such as hit highlighting\n         characters. If true, the strings may include markers. The default is\n         false. To specify whether to use Unicode characters or HTML tags as\n         the markers, see the\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n         query parameter. For information about hit highlighting, see [Hit\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n        :type text_decorations: bool\n        :param text_format: The type of markers to use for text decorations\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\n         Unicode characters to mark content that needs special formatting. The\n         Unicode characters are in the range E000 through E019. For example,\n         Bing uses E000 and E001 to mark the beginning and end of query terms\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\n         special formatting. For example, use <b> tags to highlight query terms\n         in display strings. The default is Raw. For display strings that\n         contain escapable HTML characters such as <, >, and &, if textFormat\n         is set to HTML, Bing escapes the characters as appropriate (for\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n        :type text_format: str or\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\n        :param dict custom_headers: headers that will be added to the request\n        :param bool raw: returns the direct response alongside the\n         deserialized response\n        :param operation_config: :ref:`Operation configuration\n         overrides<msrest:optionsforoperations>`.\n        :return: News or ClientRawResponse if raw=true\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\n         ~msrest.pipeline.ClientRawResponse\n        :raises:\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\n        \"\"\"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
        "mutated": [
            "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n    \"The News Search API lets you send a search query to Bing and get back a\\n        list of news that are relevant to the search query. This section\\n        provides technical details about the query parameters and headers that\\n        you use to request news and the JSON response objects that contain\\n        them.  For examples that show how to make requests, see [Searching the\\n        web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param query: The user's search query string. The query string cannot\\n         be empty. The query string may contain [Bing Advanced\\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\\n         example, to limit news to a specific domain, use the\\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\\n         this parameter only with the News Search API. Do not specify this\\n         parameter when calling the Trending Topics API or News Category API.\\n        :type query: str\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param freshness: Filter news by the date and time that Bing\\n         discovered the news. The following are the possible filter values.\\n         Day: Return news discovered within the last 24 hours. Week: Return\\n         news discovered within the last 7 days. Month: Return news discovered\\n         within the last 30 days. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the News Category API\\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\\n         'Month'\\n        :type freshness: str or\\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the Trending Topics\\n         API or News Category API.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"The News Search API lets you send a search query to Bing and get back a\\n        list of news that are relevant to the search query. This section\\n        provides technical details about the query parameters and headers that\\n        you use to request news and the JSON response objects that contain\\n        them.  For examples that show how to make requests, see [Searching the\\n        web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param query: The user's search query string. The query string cannot\\n         be empty. The query string may contain [Bing Advanced\\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\\n         example, to limit news to a specific domain, use the\\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\\n         this parameter only with the News Search API. Do not specify this\\n         parameter when calling the Trending Topics API or News Category API.\\n        :type query: str\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param freshness: Filter news by the date and time that Bing\\n         discovered the news. The following are the possible filter values.\\n         Day: Return news discovered within the last 24 hours. Week: Return\\n         news discovered within the last 7 days. Month: Return news discovered\\n         within the last 30 days. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the News Category API\\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\\n         'Month'\\n        :type freshness: str or\\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the Trending Topics\\n         API or News Category API.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"The News Search API lets you send a search query to Bing and get back a\\n        list of news that are relevant to the search query. This section\\n        provides technical details about the query parameters and headers that\\n        you use to request news and the JSON response objects that contain\\n        them.  For examples that show how to make requests, see [Searching the\\n        web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param query: The user's search query string. The query string cannot\\n         be empty. The query string may contain [Bing Advanced\\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\\n         example, to limit news to a specific domain, use the\\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\\n         this parameter only with the News Search API. Do not specify this\\n         parameter when calling the Trending Topics API or News Category API.\\n        :type query: str\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param freshness: Filter news by the date and time that Bing\\n         discovered the news. The following are the possible filter values.\\n         Day: Return news discovered within the last 24 hours. Week: Return\\n         news discovered within the last 7 days. Month: Return news discovered\\n         within the last 30 days. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the News Category API\\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\\n         'Month'\\n        :type freshness: str or\\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the Trending Topics\\n         API or News Category API.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"The News Search API lets you send a search query to Bing and get back a\\n        list of news that are relevant to the search query. This section\\n        provides technical details about the query parameters and headers that\\n        you use to request news and the JSON response objects that contain\\n        them.  For examples that show how to make requests, see [Searching the\\n        web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param query: The user's search query string. The query string cannot\\n         be empty. The query string may contain [Bing Advanced\\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\\n         example, to limit news to a specific domain, use the\\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\\n         this parameter only with the News Search API. Do not specify this\\n         parameter when calling the Trending Topics API or News Category API.\\n        :type query: str\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param freshness: Filter news by the date and time that Bing\\n         discovered the news. The following are the possible filter values.\\n         Day: Return news discovered within the last 24 hours. Week: Return\\n         news discovered within the last 7 days. Month: Return news discovered\\n         within the last 30 days. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the News Category API\\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\\n         'Month'\\n        :type freshness: str or\\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the Trending Topics\\n         API or News Category API.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def search(self, query, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, freshness=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"The News Search API lets you send a search query to Bing and get back a\\n        list of news that are relevant to the search query. This section\\n        provides technical details about the query parameters and headers that\\n        you use to request news and the JSON response objects that contain\\n        them.  For examples that show how to make requests, see [Searching the\\n        web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param query: The user's search query string. The query string cannot\\n         be empty. The query string may contain [Bing Advanced\\n         Operators](http://msdn.microsoft.com/library/ff795620.aspx). For\\n         example, to limit news to a specific domain, use the\\n         [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use\\n         this parameter only with the News Search API. Do not specify this\\n         parameter when calling the Trending Topics API or News Category API.\\n        :type query: str\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param freshness: Filter news by the date and time that Bing\\n         discovered the news. The following are the possible filter values.\\n         Day: Return news discovered within the last 24 hours. Week: Return\\n         news discovered within the last 7 days. Month: Return news discovered\\n         within the last 30 days. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the News Category API\\n         or the Trending Topics API. Possible values include: 'Day', 'Week',\\n         'Month'\\n        :type freshness: str or\\n         ~azure.cognitiveservices.search.newssearch.models.Freshness\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search\\n         API. Do not specify this parameter when calling the Trending Topics\\n         API or News Category API.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.search.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if freshness is not None:\n        query_parameters['freshness'] = self._serialize.query('freshness', freshness, 'str')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    query_parameters['q'] = self._serialize.query('query', query, 'str')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized"
        ]
    },
    {
        "func_name": "category",
        "original": "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    \"\"\"The News Category API lets you search on Bing and get back a list of\n        top news articles by category. This section provides technical details\n        about the query parameters and headers that you use to request news and\n        the JSON response objects that contain them.  For examples that show\n        how to make requests, see [Searching the web for\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n\n        :param accept_language: A comma-delimited list of one or more\n         languages to use for user interface strings. The list is in decreasing\n         order of preference. For additional information, including expected\n         format, see\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n         This header and the\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameter are mutually exclusive; do not specify both. If you\n         set this header, you must also specify the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter. To determine the market to return results for, Bing\n         uses the first supported language it finds from the list and combines\n         it with the cc parameter value. If the list does not include a\n         supported language, Bing finds the closest language and market that\n         supports the request or it uses an aggregated or default market for\n         the results. To determine the market that Bing used, see the\n         BingAPIs-Market header. Use this header and the cc query parameter\n         only if you specify multiple languages. Otherwise, use the\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n         and\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameters. A user interface string is a string that's used as a\n         label in a user interface. There are few user interface strings in the\n         JSON response objects. Any links to Bing.com properties in the\n         response objects apply the specified language.\n        :type accept_language: str\n        :param user_agent: The user agent originating the request. Bing uses\n         the user agent to provide mobile users with an optimized experience.\n         Although optional, you are encouraged to always specify this header.\n         The user-agent should be the same string that any commonly used\n         browser sends. For information about user agents, see [RFC\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n         following are examples of user-agent strings. Windows Phone:\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n        :type user_agent: str\n        :param client_id: Bing uses this header to provide users with\n         consistent behavior across Bing API calls. Bing often flights new\n         features and improvements, and it uses the client ID as a key for\n         assigning traffic on different flights. If you do not use the same\n         client ID for a user across multiple requests, then Bing may assign\n         the user to multiple conflicting flights. Being assigned to multiple\n         conflicting flights can lead to an inconsistent user experience. For\n         example, if the second request has a different flight assignment than\n         the first, the experience may be unexpected. Also, Bing can use the\n         client ID to tailor web results to that client ID\u2019s search history,\n         providing a richer experience for the user. Bing also uses this header\n         to help improve result rankings by analyzing the activity generated by\n         a client ID. The relevance improvements help with better quality of\n         results delivered by Bing APIs and in turn enables higher\n         click-through rates for the API consumer. IMPORTANT: Although\n         optional, you should consider this header required. Persisting the\n         client ID across multiple requests for the same end user and device\n         combination enables 1) the API consumer to receive a consistent user\n         experience, and 2) higher click-through rates via better quality of\n         results from the Bing APIs. Each user that uses your application on\n         the device must have a unique, Bing generated client ID. If you do not\n         include this header in the request, Bing generates an ID and returns\n         it in the X-MSEdge-ClientID response header. The only time that you\n         should NOT include this header in a request is the first time the user\n         uses your app on that device. Use the client ID for each Bing API\n         request that your app makes for this user on the device. Persist the\n         client ID. To persist the ID in a browser app, use a persistent HTTP\n         cookie to ensure the ID is used across all sessions. Do not use a\n         session cookie. For other apps such as mobile apps, use the device's\n         persistent storage to persist the ID. The next time the user uses your\n         app on that device, get the client ID that you persisted. Bing\n         responses may or may not include this header. If the response includes\n         this header, capture the client ID and use it for all subsequent Bing\n         requests for the user on that device. If you include the\n         X-MSEdge-ClientID, you must not include cookies in the request.\n        :type client_id: str\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\n         IP address is used to discover the user's location. Bing uses the\n         location information to determine safe search behavior. Although\n         optional, you are encouraged to always specify this header and the\n         X-Search-Location header. Do not obfuscate the address (for example,\n         by changing the last octet to 0). Obfuscating the address results in\n         the location not being anywhere near the device's actual location,\n         which may result in Bing serving erroneous results.\n        :type client_ip: str\n        :param location: A semicolon-delimited list of key/value pairs that\n         describe the client's geographical location. Bing uses the location\n         information to determine safe search behavior and to return relevant\n         local content. Specify the key/value pair as <key>:<value>. The\n         following are the keys that you use to specify the user's location.\n         lat (required): The latitude of the client's location, in degrees. The\n         latitude must be greater than or equal to -90.0 and less than or equal\n         to +90.0. Negative values indicate southern latitudes and positive\n         values indicate northern latitudes. long (required): The longitude of\n         the client's location, in degrees. The longitude must be greater than\n         or equal to -180.0 and less than or equal to +180.0. Negative values\n         indicate western longitudes and positive values indicate eastern\n         longitudes. re (required): The radius, in meters, which specifies the\n         horizontal accuracy of the coordinates. Pass the value returned by the\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\n         ts (optional): The UTC UNIX timestamp of when the client was at the\n         location. (The UNIX timestamp is the number of seconds since January\n         1, 1970.) head (optional): The client's relative heading or direction\n         of travel. Specify the direction of travel as degrees from 0 through\n         360, counting clockwise relative to true north. Specify this key only\n         if the sp key is nonzero. sp (optional): The horizontal velocity\n         (speed), in meters per second, that the client device is traveling.\n         alt (optional): The altitude of the client device, in meters. are\n         (optional): The radius, in meters, that specifies the vertical\n         accuracy of the coordinates. Specify this key only if you specify the\n         alt key. Although many of the keys are optional, the more information\n         that you provide, the more accurate the location results are. Although\n         optional, you are encouraged to always specify the user's geographical\n         location. Providing the location is especially important if the\n         client's IP address does not accurately reflect the user's physical\n         location (for example, if the client uses VPN). For optimal results,\n         you should include this header and the X-MSEdge-ClientIP header, but\n         at a minimum, you should include this header.\n        :type location: str\n        :param country_code: A 2-character country code of the country where\n         the results come from. This API supports only the United States\n         market. If you specify this query parameter, it must be set to us. If\n         you set this parameter, you must also specify the Accept-Language\n         header. Bing uses the first supported language it finds from the\n         languages list, and combine that language with the country code that\n         you specify to determine the market to return results for. If the\n         languages list does not include a supported language, Bing finds the\n         closest language and market that supports the request, or it may use\n         an aggregated or default market for the results instead of a specified\n         one. You should use this query parameter and the Accept-Language query\n         parameter only if you specify multiple languages; otherwise, you\n         should use the mkt and setLang query parameters. This parameter and\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\n        :type country_code: str\n        :param category: The category of articles to return. For example,\n         Sports articles or Entertainment articles. For a list of possible\n         categories, see [News Categories by\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\n         Use this parameter only with News Category API. If you do not specify\n         this parameter, the response includes both: Headline articles\n         typically published in the last 24 hours from any category and\n         articles from each parent category (up to four articles). If the\n         article is a headline, the article's headline field is set to true. By\n         default, the response includes up to 12 headline articles. To specify\n         the number of headline articles to return, set the\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\n         query parameter.\n        :type category: str\n        :param count: The number of news articles to return in the response.\n         The actual number delivered may be less than requested. The default is\n         10 and the maximum value is 100. The actual number delivered may be\n         less than requested.You may use this parameter along with the offset\n         parameter to page results. For example, if your user interface\n         displays 20 articles per page, set count to 20 and offset to 0 to get\n         the first page of results. For each subsequent page, increment offset\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\n         include some overlap in results. If you do not specify the\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n         parameter, Bing ignores this parameter.\n        :type count: int\n        :param headline_count: The number of headline articles to return in\n         the response. The default is 12. Specify this parameter only if you do\n         not specify the\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n         parameter.\n        :type headline_count: int\n        :param market: The market where the results come from. Typically, mkt\n         is the country where the user is making the request from. However, it\n         could be a different country if the user is not located in a country\n         where Bing delivers results. The market must be in the form <language\n         code>-<country code>. For example, en-US. The string is case\n         insensitive. For a list of possible market values, see [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n         NOTE: If known, you are encouraged to always specify the market.\n         Specifying the market helps Bing route the request and return an\n         appropriate and optimal response. If you specify a market that is not\n         listed in [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n         Bing uses a best fit market code based on an internal mapping that is\n         subject to change. This parameter and the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter are mutually exclusive\u2014do not specify both.\n        :type market: str\n        :param offset: The zero-based offset that indicates the number of news\n         to skip before returning news. The default is 0. The offset should be\n         less than\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n         - count). Use this parameter along with the count parameter to page\n         results. For example, if your user interface displays 20 news per\n         page, set count to 20 and offset to 0 to get the first page of\n         results. For each subsequent page, increment offset by 20 (for\n         example, 0, 20, 40). It is possible for multiple pages to include some\n         overlap in results. If you do not specify the\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\n         parameter, Bing ignores this parameter.\n        :type offset: int\n        :param original_image: A Boolean value that determines whether the\n         image's contentUrl contains a URL that points to a thumbnail of the\n         original article's image or the image itself. If the article includes\n         an image, and this parameter is set to true, the image's contentUrl\n         property contains a URL that you may use to download the original\n         image from the publisher's website. Otherwise, if this parameter is\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\n         same thumbnail image. Use this parameter only with the News Search API\n         or News Category API. Trending Topics API ignore this parameter.\n        :type original_image: bool\n        :param safe_search: Filter news for adult content. The following are\n         the possible filter values. Off: Return news articles with adult text,\n         images, or videos. Moderate: Return news articles with adult text but\n         not adult images or videos. Strict: Do not return news articles with\n         adult text, images, or videos. If the request comes from a market that\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\n         ignores the safeSearch value and uses Strict. If you use the site:\n         query operator, there is the chance that the response may contain\n         adult content regardless of what the safeSearch query parameter is set\n         to. Use site: only if you are aware of the content on the site and\n         your scenario supports the possibility of adult content. Possible\n         values include: 'Off', 'Moderate', 'Strict'\n        :type safe_search: str or\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\n        :param set_lang: The language to use for user interface strings.\n         Specify the language using the ISO 639-1 2-letter language code. For\n         example, the language code for English is EN. The default is EN\n         (English). Although optional, you should always specify the language.\n         Typically, you set setLang to the same language specified by mkt\n         unless the user wants the user interface strings displayed in a\n         different language. This parameter and the\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n         header are mutually exclusive; do not specify both. A user interface\n         string is a string that's used as a label in a user interface. There\n         are few user interface strings in the JSON response objects. Also, any\n         links to Bing.com properties in the response objects apply the\n         specified language.\n        :type set_lang: str\n        :param text_decorations: A Boolean value that determines whether\n         display strings contain decoration markers such as hit highlighting\n         characters. If true, the strings may include markers. The default is\n         false. To specify whether to use Unicode characters or HTML tags as\n         the markers, see the\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n         query parameter. For information about hit highlighting, see [Hit\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n        :type text_decorations: bool\n        :param text_format: The type of markers to use for text decorations\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\n         Unicode characters to mark content that needs special formatting. The\n         Unicode characters are in the range E000 through E019. For example,\n         Bing uses E000 and E001 to mark the beginning and end of query terms\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\n         special formatting. For example, use <b> tags to highlight query terms\n         in display strings. The default is Raw. For display strings that\n         contain escapable HTML characters such as <, >, and &, if textFormat\n         is set to HTML, Bing escapes the characters as appropriate (for\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n        :type text_format: str or\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\n        :param dict custom_headers: headers that will be added to the request\n        :param bool raw: returns the direct response alongside the\n         deserialized response\n        :param operation_config: :ref:`Operation configuration\n         overrides<msrest:optionsforoperations>`.\n        :return: News or ClientRawResponse if raw=true\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\n         ~msrest.pipeline.ClientRawResponse\n        :raises:\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\n        \"\"\"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
        "mutated": [
            "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n    \"The News Category API lets you search on Bing and get back a list of\\n        top news articles by category. This section provides technical details\\n        about the query parameters and headers that you use to request news and\\n        the JSON response objects that contain them.  For examples that show\\n        how to make requests, see [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param category: The category of articles to return. For example,\\n         Sports articles or Entertainment articles. For a list of possible\\n         categories, see [News Categories by\\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\\n         Use this parameter only with News Category API. If you do not specify\\n         this parameter, the response includes both: Headline articles\\n         typically published in the last 24 hours from any category and\\n         articles from each parent category (up to four articles). If the\\n         article is a headline, the article's headline field is set to true. By\\n         default, the response includes up to 12 headline articles. To specify\\n         the number of headline articles to return, set the\\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\\n         query parameter.\\n        :type category: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type count: int\\n        :param headline_count: The number of headline articles to return in\\n         the response. The default is 12. Specify this parameter only if you do\\n         not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter.\\n        :type headline_count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search API\\n         or News Category API. Trending Topics API ignore this parameter.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"The News Category API lets you search on Bing and get back a list of\\n        top news articles by category. This section provides technical details\\n        about the query parameters and headers that you use to request news and\\n        the JSON response objects that contain them.  For examples that show\\n        how to make requests, see [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param category: The category of articles to return. For example,\\n         Sports articles or Entertainment articles. For a list of possible\\n         categories, see [News Categories by\\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\\n         Use this parameter only with News Category API. If you do not specify\\n         this parameter, the response includes both: Headline articles\\n         typically published in the last 24 hours from any category and\\n         articles from each parent category (up to four articles). If the\\n         article is a headline, the article's headline field is set to true. By\\n         default, the response includes up to 12 headline articles. To specify\\n         the number of headline articles to return, set the\\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\\n         query parameter.\\n        :type category: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type count: int\\n        :param headline_count: The number of headline articles to return in\\n         the response. The default is 12. Specify this parameter only if you do\\n         not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter.\\n        :type headline_count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search API\\n         or News Category API. Trending Topics API ignore this parameter.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"The News Category API lets you search on Bing and get back a list of\\n        top news articles by category. This section provides technical details\\n        about the query parameters and headers that you use to request news and\\n        the JSON response objects that contain them.  For examples that show\\n        how to make requests, see [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param category: The category of articles to return. For example,\\n         Sports articles or Entertainment articles. For a list of possible\\n         categories, see [News Categories by\\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\\n         Use this parameter only with News Category API. If you do not specify\\n         this parameter, the response includes both: Headline articles\\n         typically published in the last 24 hours from any category and\\n         articles from each parent category (up to four articles). If the\\n         article is a headline, the article's headline field is set to true. By\\n         default, the response includes up to 12 headline articles. To specify\\n         the number of headline articles to return, set the\\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\\n         query parameter.\\n        :type category: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type count: int\\n        :param headline_count: The number of headline articles to return in\\n         the response. The default is 12. Specify this parameter only if you do\\n         not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter.\\n        :type headline_count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search API\\n         or News Category API. Trending Topics API ignore this parameter.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"The News Category API lets you search on Bing and get back a list of\\n        top news articles by category. This section provides technical details\\n        about the query parameters and headers that you use to request news and\\n        the JSON response objects that contain them.  For examples that show\\n        how to make requests, see [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param category: The category of articles to return. For example,\\n         Sports articles or Entertainment articles. For a list of possible\\n         categories, see [News Categories by\\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\\n         Use this parameter only with News Category API. If you do not specify\\n         this parameter, the response includes both: Headline articles\\n         typically published in the last 24 hours from any category and\\n         articles from each parent category (up to four articles). If the\\n         article is a headline, the article's headline field is set to true. By\\n         default, the response includes up to 12 headline articles. To specify\\n         the number of headline articles to return, set the\\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\\n         query parameter.\\n        :type category: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type count: int\\n        :param headline_count: The number of headline articles to return in\\n         the response. The default is 12. Specify this parameter only if you do\\n         not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter.\\n        :type headline_count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search API\\n         or News Category API. Trending Topics API ignore this parameter.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def category(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, category=None, count=None, headline_count=None, market=None, offset=None, original_image=None, safe_search=None, set_lang=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"The News Category API lets you search on Bing and get back a list of\\n        top news articles by category. This section provides technical details\\n        about the query parameters and headers that you use to request news and\\n        the JSON response objects that contain them.  For examples that show\\n        how to make requests, see [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param category: The category of articles to return. For example,\\n         Sports articles or Entertainment articles. For a list of possible\\n         categories, see [News Categories by\\n         Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).\\n         Use this parameter only with News Category API. If you do not specify\\n         this parameter, the response includes both: Headline articles\\n         typically published in the last 24 hours from any category and\\n         articles from each parent category (up to four articles). If the\\n         article is a headline, the article's headline field is set to true. By\\n         default, the response includes up to 12 headline articles. To specify\\n         the number of headline articles to return, set the\\n         [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)\\n         query parameter.\\n        :type category: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type count: int\\n        :param headline_count: The number of headline articles to return in\\n         the response. The default is 12. Specify this parameter only if you do\\n         not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter.\\n        :type headline_count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results. If you do not specify the\\n         [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)\\n         parameter, Bing ignores this parameter.\\n        :type offset: int\\n        :param original_image: A Boolean value that determines whether the\\n         image's contentUrl contains a URL that points to a thumbnail of the\\n         original article's image or the image itself. If the article includes\\n         an image, and this parameter is set to true, the image's contentUrl\\n         property contains a URL that you may use to download the original\\n         image from the publisher's website. Otherwise, if this parameter is\\n         false, the image's contentUrl and thumbnailUrl URLs both point to the\\n         same thumbnail image. Use this parameter only with the News Search API\\n         or News Category API. Trending Topics API ignore this parameter.\\n        :type original_image: bool\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: News or ClientRawResponse if raw=true\\n        :rtype: ~azure.cognitiveservices.search.newssearch.models.News or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.category.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if category is not None:\n        query_parameters['category'] = self._serialize.query('category', category, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if headline_count is not None:\n        query_parameters['headlineCount'] = self._serialize.query('headline_count', headline_count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if original_image is not None:\n        query_parameters['originalImg'] = self._serialize.query('original_image', original_image, 'bool')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('News', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized"
        ]
    },
    {
        "func_name": "trending",
        "original": "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    \"\"\"The News Trending Topics API lets you search on Bing and get back a\n        list of trending news topics that are currently trending on Bing. This\n        section provides technical details about the query parameters and\n        headers that you use to request news and the JSON response objects that\n        contain them.  For examples that show how to make requests, see\n        [Searching the web for\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\n\n        :param accept_language: A comma-delimited list of one or more\n         languages to use for user interface strings. The list is in decreasing\n         order of preference. For additional information, including expected\n         format, see\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n         This header and the\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameter are mutually exclusive; do not specify both. If you\n         set this header, you must also specify the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter. To determine the market to return results for, Bing\n         uses the first supported language it finds from the list and combines\n         it with the cc parameter value. If the list does not include a\n         supported language, Bing finds the closest language and market that\n         supports the request or it uses an aggregated or default market for\n         the results. To determine the market that Bing used, see the\n         BingAPIs-Market header. Use this header and the cc query parameter\n         only if you specify multiple languages. Otherwise, use the\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\n         and\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\n         query parameters. A user interface string is a string that's used as a\n         label in a user interface. There are few user interface strings in the\n         JSON response objects. Any links to Bing.com properties in the\n         response objects apply the specified language.\n        :type accept_language: str\n        :param user_agent: The user agent originating the request. Bing uses\n         the user agent to provide mobile users with an optimized experience.\n         Although optional, you are encouraged to always specify this header.\n         The user-agent should be the same string that any commonly used\n         browser sends. For information about user agents, see [RFC\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n         following are examples of user-agent strings. Windows Phone:\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\n        :type user_agent: str\n        :param client_id: Bing uses this header to provide users with\n         consistent behavior across Bing API calls. Bing often flights new\n         features and improvements, and it uses the client ID as a key for\n         assigning traffic on different flights. If you do not use the same\n         client ID for a user across multiple requests, then Bing may assign\n         the user to multiple conflicting flights. Being assigned to multiple\n         conflicting flights can lead to an inconsistent user experience. For\n         example, if the second request has a different flight assignment than\n         the first, the experience may be unexpected. Also, Bing can use the\n         client ID to tailor web results to that client ID\u2019s search history,\n         providing a richer experience for the user. Bing also uses this header\n         to help improve result rankings by analyzing the activity generated by\n         a client ID. The relevance improvements help with better quality of\n         results delivered by Bing APIs and in turn enables higher\n         click-through rates for the API consumer. IMPORTANT: Although\n         optional, you should consider this header required. Persisting the\n         client ID across multiple requests for the same end user and device\n         combination enables 1) the API consumer to receive a consistent user\n         experience, and 2) higher click-through rates via better quality of\n         results from the Bing APIs. Each user that uses your application on\n         the device must have a unique, Bing generated client ID. If you do not\n         include this header in the request, Bing generates an ID and returns\n         it in the X-MSEdge-ClientID response header. The only time that you\n         should NOT include this header in a request is the first time the user\n         uses your app on that device. Use the client ID for each Bing API\n         request that your app makes for this user on the device. Persist the\n         client ID. To persist the ID in a browser app, use a persistent HTTP\n         cookie to ensure the ID is used across all sessions. Do not use a\n         session cookie. For other apps such as mobile apps, use the device's\n         persistent storage to persist the ID. The next time the user uses your\n         app on that device, get the client ID that you persisted. Bing\n         responses may or may not include this header. If the response includes\n         this header, capture the client ID and use it for all subsequent Bing\n         requests for the user on that device. If you include the\n         X-MSEdge-ClientID, you must not include cookies in the request.\n        :type client_id: str\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\n         IP address is used to discover the user's location. Bing uses the\n         location information to determine safe search behavior. Although\n         optional, you are encouraged to always specify this header and the\n         X-Search-Location header. Do not obfuscate the address (for example,\n         by changing the last octet to 0). Obfuscating the address results in\n         the location not being anywhere near the device's actual location,\n         which may result in Bing serving erroneous results.\n        :type client_ip: str\n        :param location: A semicolon-delimited list of key/value pairs that\n         describe the client's geographical location. Bing uses the location\n         information to determine safe search behavior and to return relevant\n         local content. Specify the key/value pair as <key>:<value>. The\n         following are the keys that you use to specify the user's location.\n         lat (required): The latitude of the client's location, in degrees. The\n         latitude must be greater than or equal to -90.0 and less than or equal\n         to +90.0. Negative values indicate southern latitudes and positive\n         values indicate northern latitudes. long (required): The longitude of\n         the client's location, in degrees. The longitude must be greater than\n         or equal to -180.0 and less than or equal to +180.0. Negative values\n         indicate western longitudes and positive values indicate eastern\n         longitudes. re (required): The radius, in meters, which specifies the\n         horizontal accuracy of the coordinates. Pass the value returned by the\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\n         ts (optional): The UTC UNIX timestamp of when the client was at the\n         location. (The UNIX timestamp is the number of seconds since January\n         1, 1970.) head (optional): The client's relative heading or direction\n         of travel. Specify the direction of travel as degrees from 0 through\n         360, counting clockwise relative to true north. Specify this key only\n         if the sp key is nonzero. sp (optional): The horizontal velocity\n         (speed), in meters per second, that the client device is traveling.\n         alt (optional): The altitude of the client device, in meters. are\n         (optional): The radius, in meters, that specifies the vertical\n         accuracy of the coordinates. Specify this key only if you specify the\n         alt key. Although many of the keys are optional, the more information\n         that you provide, the more accurate the location results are. Although\n         optional, you are encouraged to always specify the user's geographical\n         location. Providing the location is especially important if the\n         client's IP address does not accurately reflect the user's physical\n         location (for example, if the client uses VPN). For optimal results,\n         you should include this header and the X-MSEdge-ClientIP header, but\n         at a minimum, you should include this header.\n        :type location: str\n        :param country_code: A 2-character country code of the country where\n         the results come from. This API supports only the United States\n         market. If you specify this query parameter, it must be set to us. If\n         you set this parameter, you must also specify the Accept-Language\n         header. Bing uses the first supported language it finds from the\n         languages list, and combine that language with the country code that\n         you specify to determine the market to return results for. If the\n         languages list does not include a supported language, Bing finds the\n         closest language and market that supports the request, or it may use\n         an aggregated or default market for the results instead of a specified\n         one. You should use this query parameter and the Accept-Language query\n         parameter only if you specify multiple languages; otherwise, you\n         should use the mkt and setLang query parameters. This parameter and\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\n        :type country_code: str\n        :param count: The number of news articles to return in the response.\n         The actual number delivered may be less than requested. The default is\n         10 and the maximum value is 100. The actual number delivered may be\n         less than requested.You may use this parameter along with the offset\n         parameter to page results. For example, if your user interface\n         displays 20 articles per page, set count to 20 and offset to 0 to get\n         the first page of results. For each subsequent page, increment offset\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\n         include some overlap in results.\n        :type count: int\n        :param market: The market where the results come from. Typically, mkt\n         is the country where the user is making the request from. However, it\n         could be a different country if the user is not located in a country\n         where Bing delivers results. The market must be in the form <language\n         code>-<country code>. For example, en-US. The string is case\n         insensitive. For a list of possible market values, see [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\n         NOTE: If known, you are encouraged to always specify the market.\n         Specifying the market helps Bing route the request and return an\n         appropriate and optimal response. If you specify a market that is not\n         listed in [Market\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\n         Bing uses a best fit market code based on an internal mapping that is\n         subject to change. This parameter and the\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\n         query parameter are mutually exclusive\u2014do not specify both.\n        :type market: str\n        :param offset: The zero-based offset that indicates the number of news\n         to skip before returning news. The default is 0. The offset should be\n         less than\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\n         - count). Use this parameter along with the count parameter to page\n         results. For example, if your user interface displays 20 news per\n         page, set count to 20 and offset to 0 to get the first page of\n         results. For each subsequent page, increment offset by 20 (for\n         example, 0, 20, 40). It is possible for multiple pages to include some\n         overlap in results.\n        :type offset: int\n        :param safe_search: Filter news for adult content. The following are\n         the possible filter values. Off: Return news articles with adult text,\n         images, or videos. Moderate: Return news articles with adult text but\n         not adult images or videos. Strict: Do not return news articles with\n         adult text, images, or videos. If the request comes from a market that\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\n         ignores the safeSearch value and uses Strict. If you use the site:\n         query operator, there is the chance that the response may contain\n         adult content regardless of what the safeSearch query parameter is set\n         to. Use site: only if you are aware of the content on the site and\n         your scenario supports the possibility of adult content. Possible\n         values include: 'Off', 'Moderate', 'Strict'\n        :type safe_search: str or\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\n        :param set_lang: The language to use for user interface strings.\n         Specify the language using the ISO 639-1 2-letter language code. For\n         example, the language code for English is EN. The default is EN\n         (English). Although optional, you should always specify the language.\n         Typically, you set setLang to the same language specified by mkt\n         unless the user wants the user interface strings displayed in a\n         different language. This parameter and the\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\n         header are mutually exclusive; do not specify both. A user interface\n         string is a string that's used as a label in a user interface. There\n         are few user interface strings in the JSON response objects. Also, any\n         links to Bing.com properties in the response objects apply the\n         specified language.\n        :type set_lang: str\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\n         select the trending topics. Bing returns trending topics that it\n         discovered on or after the specified date and time, not the date the\n         topic was published. To use this parameter, also specify the sortBy\n         parameter. Use this parameter only with the News Trending Topics API.\n         Do not specify this parameter when calling the News Search API or News\n         Category API.\n        :type since: long\n        :param sort_by: The order to return the news in. The following are the\n         possible case-insensitive values. Date: If the request is through the\n         News Search API, the response returns news articles sorted by date\n         from the most recent to the oldest. If the request is through the News\n         Trending Topics API, the response returns trending topics sorted by\n         date from the most recent to the oldest.\n        :type sort_by: str\n        :param text_decorations: A Boolean value that determines whether\n         display strings contain decoration markers such as hit highlighting\n         characters. If true, the strings may include markers. The default is\n         false. To specify whether to use Unicode characters or HTML tags as\n         the markers, see the\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\n         query parameter. For information about hit highlighting, see [Hit\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\n        :type text_decorations: bool\n        :param text_format: The type of markers to use for text decorations\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\n         Unicode characters to mark content that needs special formatting. The\n         Unicode characters are in the range E000 through E019. For example,\n         Bing uses E000 and E001 to mark the beginning and end of query terms\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\n         special formatting. For example, use <b> tags to highlight query terms\n         in display strings. The default is Raw. For display strings that\n         contain escapable HTML characters such as <, >, and &, if textFormat\n         is set to HTML, Bing escapes the characters as appropriate (for\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n        :type text_format: str or\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\n        :param dict custom_headers: headers that will be added to the request\n        :param bool raw: returns the direct response alongside the\n         deserialized response\n        :param operation_config: :ref:`Operation configuration\n         overrides<msrest:optionsforoperations>`.\n        :return: TrendingTopics or ClientRawResponse if raw=true\n        :rtype:\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\n         ~msrest.pipeline.ClientRawResponse\n        :raises:\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\n        \"\"\"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
        "mutated": [
            "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n    \"The News Trending Topics API lets you search on Bing and get back a\\n        list of trending news topics that are currently trending on Bing. This\\n        section provides technical details about the query parameters and\\n        headers that you use to request news and the JSON response objects that\\n        contain them.  For examples that show how to make requests, see\\n        [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\\n         select the trending topics. Bing returns trending topics that it\\n         discovered on or after the specified date and time, not the date the\\n         topic was published. To use this parameter, also specify the sortBy\\n         parameter. Use this parameter only with the News Trending Topics API.\\n         Do not specify this parameter when calling the News Search API or News\\n         Category API.\\n        :type since: long\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: TrendingTopics or ClientRawResponse if raw=true\\n        :rtype:\\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"The News Trending Topics API lets you search on Bing and get back a\\n        list of trending news topics that are currently trending on Bing. This\\n        section provides technical details about the query parameters and\\n        headers that you use to request news and the JSON response objects that\\n        contain them.  For examples that show how to make requests, see\\n        [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\\n         select the trending topics. Bing returns trending topics that it\\n         discovered on or after the specified date and time, not the date the\\n         topic was published. To use this parameter, also specify the sortBy\\n         parameter. Use this parameter only with the News Trending Topics API.\\n         Do not specify this parameter when calling the News Search API or News\\n         Category API.\\n        :type since: long\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: TrendingTopics or ClientRawResponse if raw=true\\n        :rtype:\\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"The News Trending Topics API lets you search on Bing and get back a\\n        list of trending news topics that are currently trending on Bing. This\\n        section provides technical details about the query parameters and\\n        headers that you use to request news and the JSON response objects that\\n        contain them.  For examples that show how to make requests, see\\n        [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\\n         select the trending topics. Bing returns trending topics that it\\n         discovered on or after the specified date and time, not the date the\\n         topic was published. To use this parameter, also specify the sortBy\\n         parameter. Use this parameter only with the News Trending Topics API.\\n         Do not specify this parameter when calling the News Search API or News\\n         Category API.\\n        :type since: long\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: TrendingTopics or ClientRawResponse if raw=true\\n        :rtype:\\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"The News Trending Topics API lets you search on Bing and get back a\\n        list of trending news topics that are currently trending on Bing. This\\n        section provides technical details about the query parameters and\\n        headers that you use to request news and the JSON response objects that\\n        contain them.  For examples that show how to make requests, see\\n        [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\\n         select the trending topics. Bing returns trending topics that it\\n         discovered on or after the specified date and time, not the date the\\n         topic was published. To use this parameter, also specify the sortBy\\n         parameter. Use this parameter only with the News Trending Topics API.\\n         Do not specify this parameter when calling the News Search API or News\\n         Category API.\\n        :type since: long\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: TrendingTopics or ClientRawResponse if raw=true\\n        :rtype:\\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized",
            "def trending(self, accept_language=None, user_agent=None, client_id=None, client_ip=None, location=None, country_code=None, count=None, market=None, offset=None, safe_search=None, set_lang=None, since=None, sort_by=None, text_decorations=None, text_format=None, custom_headers=None, raw=False, **operation_config):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"The News Trending Topics API lets you search on Bing and get back a\\n        list of trending news topics that are currently trending on Bing. This\\n        section provides technical details about the query parameters and\\n        headers that you use to request news and the JSON response objects that\\n        contain them.  For examples that show how to make requests, see\\n        [Searching the web for\\n        news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).\\n\\n        :param accept_language: A comma-delimited list of one or more\\n         languages to use for user interface strings. The list is in decreasing\\n         order of preference. For additional information, including expected\\n         format, see\\n         [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\\n         This header and the\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameter are mutually exclusive; do not specify both. If you\\n         set this header, you must also specify the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter. To determine the market to return results for, Bing\\n         uses the first supported language it finds from the list and combines\\n         it with the cc parameter value. If the list does not include a\\n         supported language, Bing finds the closest language and market that\\n         supports the request or it uses an aggregated or default market for\\n         the results. To determine the market that Bing used, see the\\n         BingAPIs-Market header. Use this header and the cc query parameter\\n         only if you specify multiple languages. Otherwise, use the\\n         [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)\\n         and\\n         [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)\\n         query parameters. A user interface string is a string that's used as a\\n         label in a user interface. There are few user interface strings in the\\n         JSON response objects. Any links to Bing.com properties in the\\n         response objects apply the specified language.\\n        :type accept_language: str\\n        :param user_agent: The user agent originating the request. Bing uses\\n         the user agent to provide mobile users with an optimized experience.\\n         Although optional, you are encouraged to always specify this header.\\n         The user-agent should be the same string that any commonly used\\n         browser sends. For information about user agents, see [RFC\\n         2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\\n         following are examples of user-agent strings. Windows Phone:\\n         Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0;\\n         IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0\\n         (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD)\\n         AppleWebKit / 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari /\\n         533.1. iPhone: Mozilla / 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X)\\n         AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142 iPhone4; 1\\n         BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3;\\n         WOW64; Trident / 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0\\n         (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit / 537.51.1 (KHTML, like\\n         Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53\\n        :type user_agent: str\\n        :param client_id: Bing uses this header to provide users with\\n         consistent behavior across Bing API calls. Bing often flights new\\n         features and improvements, and it uses the client ID as a key for\\n         assigning traffic on different flights. If you do not use the same\\n         client ID for a user across multiple requests, then Bing may assign\\n         the user to multiple conflicting flights. Being assigned to multiple\\n         conflicting flights can lead to an inconsistent user experience. For\\n         example, if the second request has a different flight assignment than\\n         the first, the experience may be unexpected. Also, Bing can use the\\n         client ID to tailor web results to that client ID\u2019s search history,\\n         providing a richer experience for the user. Bing also uses this header\\n         to help improve result rankings by analyzing the activity generated by\\n         a client ID. The relevance improvements help with better quality of\\n         results delivered by Bing APIs and in turn enables higher\\n         click-through rates for the API consumer. IMPORTANT: Although\\n         optional, you should consider this header required. Persisting the\\n         client ID across multiple requests for the same end user and device\\n         combination enables 1) the API consumer to receive a consistent user\\n         experience, and 2) higher click-through rates via better quality of\\n         results from the Bing APIs. Each user that uses your application on\\n         the device must have a unique, Bing generated client ID. If you do not\\n         include this header in the request, Bing generates an ID and returns\\n         it in the X-MSEdge-ClientID response header. The only time that you\\n         should NOT include this header in a request is the first time the user\\n         uses your app on that device. Use the client ID for each Bing API\\n         request that your app makes for this user on the device. Persist the\\n         client ID. To persist the ID in a browser app, use a persistent HTTP\\n         cookie to ensure the ID is used across all sessions. Do not use a\\n         session cookie. For other apps such as mobile apps, use the device's\\n         persistent storage to persist the ID. The next time the user uses your\\n         app on that device, get the client ID that you persisted. Bing\\n         responses may or may not include this header. If the response includes\\n         this header, capture the client ID and use it for all subsequent Bing\\n         requests for the user on that device. If you include the\\n         X-MSEdge-ClientID, you must not include cookies in the request.\\n        :type client_id: str\\n        :param client_ip: The IPv4 or IPv6 address of the client device. The\\n         IP address is used to discover the user's location. Bing uses the\\n         location information to determine safe search behavior. Although\\n         optional, you are encouraged to always specify this header and the\\n         X-Search-Location header. Do not obfuscate the address (for example,\\n         by changing the last octet to 0). Obfuscating the address results in\\n         the location not being anywhere near the device's actual location,\\n         which may result in Bing serving erroneous results.\\n        :type client_ip: str\\n        :param location: A semicolon-delimited list of key/value pairs that\\n         describe the client's geographical location. Bing uses the location\\n         information to determine safe search behavior and to return relevant\\n         local content. Specify the key/value pair as <key>:<value>. The\\n         following are the keys that you use to specify the user's location.\\n         lat (required): The latitude of the client's location, in degrees. The\\n         latitude must be greater than or equal to -90.0 and less than or equal\\n         to +90.0. Negative values indicate southern latitudes and positive\\n         values indicate northern latitudes. long (required): The longitude of\\n         the client's location, in degrees. The longitude must be greater than\\n         or equal to -180.0 and less than or equal to +180.0. Negative values\\n         indicate western longitudes and positive values indicate eastern\\n         longitudes. re (required): The radius, in meters, which specifies the\\n         horizontal accuracy of the coordinates. Pass the value returned by the\\n         device's location service. Typical values might be 22m for GPS/Wi-Fi,\\n         380m for cell tower triangulation, and 18,000m for reverse IP lookup.\\n         ts (optional): The UTC UNIX timestamp of when the client was at the\\n         location. (The UNIX timestamp is the number of seconds since January\\n         1, 1970.) head (optional): The client's relative heading or direction\\n         of travel. Specify the direction of travel as degrees from 0 through\\n         360, counting clockwise relative to true north. Specify this key only\\n         if the sp key is nonzero. sp (optional): The horizontal velocity\\n         (speed), in meters per second, that the client device is traveling.\\n         alt (optional): The altitude of the client device, in meters. are\\n         (optional): The radius, in meters, that specifies the vertical\\n         accuracy of the coordinates. Specify this key only if you specify the\\n         alt key. Although many of the keys are optional, the more information\\n         that you provide, the more accurate the location results are. Although\\n         optional, you are encouraged to always specify the user's geographical\\n         location. Providing the location is especially important if the\\n         client's IP address does not accurately reflect the user's physical\\n         location (for example, if the client uses VPN). For optimal results,\\n         you should include this header and the X-MSEdge-ClientIP header, but\\n         at a minimum, you should include this header.\\n        :type location: str\\n        :param country_code: A 2-character country code of the country where\\n         the results come from. This API supports only the United States\\n         market. If you specify this query parameter, it must be set to us. If\\n         you set this parameter, you must also specify the Accept-Language\\n         header. Bing uses the first supported language it finds from the\\n         languages list, and combine that language with the country code that\\n         you specify to determine the market to return results for. If the\\n         languages list does not include a supported language, Bing finds the\\n         closest language and market that supports the request, or it may use\\n         an aggregated or default market for the results instead of a specified\\n         one. You should use this query parameter and the Accept-Language query\\n         parameter only if you specify multiple languages; otherwise, you\\n         should use the mkt and setLang query parameters. This parameter and\\n         the mkt query parameter are mutually exclusive\u2014do not specify both.\\n        :type country_code: str\\n        :param count: The number of news articles to return in the response.\\n         The actual number delivered may be less than requested. The default is\\n         10 and the maximum value is 100. The actual number delivered may be\\n         less than requested.You may use this parameter along with the offset\\n         parameter to page results. For example, if your user interface\\n         displays 20 articles per page, set count to 20 and offset to 0 to get\\n         the first page of results. For each subsequent page, increment offset\\n         by 20 (for example, 0, 20, 40). It is possible for multiple pages to\\n         include some overlap in results.\\n        :type count: int\\n        :param market: The market where the results come from. Typically, mkt\\n         is the country where the user is making the request from. However, it\\n         could be a different country if the user is not located in a country\\n         where Bing delivers results. The market must be in the form <language\\n         code>-<country code>. For example, en-US. The string is case\\n         insensitive. For a list of possible market values, see [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).\\n         NOTE: If known, you are encouraged to always specify the market.\\n         Specifying the market helps Bing route the request and return an\\n         appropriate and optimal response. If you specify a market that is not\\n         listed in [Market\\n         Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),\\n         Bing uses a best fit market code based on an internal mapping that is\\n         subject to change. This parameter and the\\n         [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)\\n         query parameter are mutually exclusive\u2014do not specify both.\\n        :type market: str\\n        :param offset: The zero-based offset that indicates the number of news\\n         to skip before returning news. The default is 0. The offset should be\\n         less than\\n         ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)\\n         - count). Use this parameter along with the count parameter to page\\n         results. For example, if your user interface displays 20 news per\\n         page, set count to 20 and offset to 0 to get the first page of\\n         results. For each subsequent page, increment offset by 20 (for\\n         example, 0, 20, 40). It is possible for multiple pages to include some\\n         overlap in results.\\n        :type offset: int\\n        :param safe_search: Filter news for adult content. The following are\\n         the possible filter values. Off: Return news articles with adult text,\\n         images, or videos. Moderate: Return news articles with adult text but\\n         not adult images or videos. Strict: Do not return news articles with\\n         adult text, images, or videos. If the request comes from a market that\\n         Bing's adult policy requires that safeSearch is set to Strict, Bing\\n         ignores the safeSearch value and uses Strict. If you use the site:\\n         query operator, there is the chance that the response may contain\\n         adult content regardless of what the safeSearch query parameter is set\\n         to. Use site: only if you are aware of the content on the site and\\n         your scenario supports the possibility of adult content. Possible\\n         values include: 'Off', 'Moderate', 'Strict'\\n        :type safe_search: str or\\n         ~azure.cognitiveservices.search.newssearch.models.SafeSearch\\n        :param set_lang: The language to use for user interface strings.\\n         Specify the language using the ISO 639-1 2-letter language code. For\\n         example, the language code for English is EN. The default is EN\\n         (English). Although optional, you should always specify the language.\\n         Typically, you set setLang to the same language specified by mkt\\n         unless the user wants the user interface strings displayed in a\\n         different language. This parameter and the\\n         [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)\\n         header are mutually exclusive; do not specify both. A user interface\\n         string is a string that's used as a label in a user interface. There\\n         are few user interface strings in the JSON response objects. Also, any\\n         links to Bing.com properties in the response objects apply the\\n         specified language.\\n        :type set_lang: str\\n        :param since: The Unix epoch time (Unix timestamp) that Bing uses to\\n         select the trending topics. Bing returns trending topics that it\\n         discovered on or after the specified date and time, not the date the\\n         topic was published. To use this parameter, also specify the sortBy\\n         parameter. Use this parameter only with the News Trending Topics API.\\n         Do not specify this parameter when calling the News Search API or News\\n         Category API.\\n        :type since: long\\n        :param sort_by: The order to return the news in. The following are the\\n         possible case-insensitive values. Date: If the request is through the\\n         News Search API, the response returns news articles sorted by date\\n         from the most recent to the oldest. If the request is through the News\\n         Trending Topics API, the response returns trending topics sorted by\\n         date from the most recent to the oldest.\\n        :type sort_by: str\\n        :param text_decorations: A Boolean value that determines whether\\n         display strings contain decoration markers such as hit highlighting\\n         characters. If true, the strings may include markers. The default is\\n         false. To specify whether to use Unicode characters or HTML tags as\\n         the markers, see the\\n         [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)\\n         query parameter. For information about hit highlighting, see [Hit\\n         Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).\\n        :type text_decorations: bool\\n        :param text_format: The type of markers to use for text decorations\\n         (see the textDecorations query parameter). Possible values are Raw\u2014Use\\n         Unicode characters to mark content that needs special formatting. The\\n         Unicode characters are in the range E000 through E019. For example,\\n         Bing uses E000 and E001 to mark the beginning and end of query terms\\n         for hit highlighting. HTML\u2014Use HTML tags to mark content that needs\\n         special formatting. For example, use <b> tags to highlight query terms\\n         in display strings. The default is Raw. For display strings that\\n         contain escapable HTML characters such as <, >, and &, if textFormat\\n         is set to HTML, Bing escapes the characters as appropriate (for\\n         example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\\n        :type text_format: str or\\n         ~azure.cognitiveservices.search.newssearch.models.TextFormat\\n        :param dict custom_headers: headers that will be added to the request\\n        :param bool raw: returns the direct response alongside the\\n         deserialized response\\n        :param operation_config: :ref:`Operation configuration\\n         overrides<msrest:optionsforoperations>`.\\n        :return: TrendingTopics or ClientRawResponse if raw=true\\n        :rtype:\\n         ~azure.cognitiveservices.search.newssearch.models.TrendingTopics or\\n         ~msrest.pipeline.ClientRawResponse\\n        :raises:\\n         :class:`ErrorResponseException<azure.cognitiveservices.search.newssearch.models.ErrorResponseException>`\\n        \"\n    url = self.trending.metadata['url']\n    path_format_arguments = {'Endpoint': self._serialize.url('self.config.endpoint', self.config.endpoint, 'str', skip_quote=True)}\n    url = self._client.format_url(url, **path_format_arguments)\n    query_parameters = {}\n    if country_code is not None:\n        query_parameters['cc'] = self._serialize.query('country_code', country_code, 'str')\n    if count is not None:\n        query_parameters['count'] = self._serialize.query('count', count, 'int')\n    if market is not None:\n        query_parameters['mkt'] = self._serialize.query('market', market, 'str')\n    if offset is not None:\n        query_parameters['offset'] = self._serialize.query('offset', offset, 'int')\n    if safe_search is not None:\n        query_parameters['safeSearch'] = self._serialize.query('safe_search', safe_search, 'str')\n    if set_lang is not None:\n        query_parameters['setLang'] = self._serialize.query('set_lang', set_lang, 'str')\n    if since is not None:\n        query_parameters['since'] = self._serialize.query('since', since, 'long')\n    if sort_by is not None:\n        query_parameters['sortBy'] = self._serialize.query('sort_by', sort_by, 'str')\n    if text_decorations is not None:\n        query_parameters['textDecorations'] = self._serialize.query('text_decorations', text_decorations, 'bool')\n    if text_format is not None:\n        query_parameters['textFormat'] = self._serialize.query('text_format', text_format, 'str')\n    header_parameters = {}\n    header_parameters['Accept'] = 'application/json'\n    if custom_headers:\n        header_parameters.update(custom_headers)\n    header_parameters['X-BingApis-SDK'] = self._serialize.header('self.x_bing_apis_sdk', self.x_bing_apis_sdk, 'str')\n    if accept_language is not None:\n        header_parameters['Accept-Language'] = self._serialize.header('accept_language', accept_language, 'str')\n    if user_agent is not None:\n        header_parameters['User-Agent'] = self._serialize.header('user_agent', user_agent, 'str')\n    if client_id is not None:\n        header_parameters['X-MSEdge-ClientID'] = self._serialize.header('client_id', client_id, 'str')\n    if client_ip is not None:\n        header_parameters['X-MSEdge-ClientIP'] = self._serialize.header('client_ip', client_ip, 'str')\n    if location is not None:\n        header_parameters['X-Search-Location'] = self._serialize.header('location', location, 'str')\n    request = self._client.get(url, query_parameters, header_parameters)\n    response = self._client.send(request, stream=False, **operation_config)\n    if response.status_code not in [200]:\n        raise models.ErrorResponseException(self._deserialize, response)\n    deserialized = None\n    if response.status_code == 200:\n        deserialized = self._deserialize('TrendingTopics', response)\n    if raw:\n        client_raw_response = ClientRawResponse(deserialized, response)\n        return client_raw_response\n    return deserialized"
        ]
    }
]