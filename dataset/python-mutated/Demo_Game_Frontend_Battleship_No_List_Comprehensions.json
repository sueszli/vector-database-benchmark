[
    {
        "func_name": "Battleship",
        "original": "def Battleship():\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()",
        "mutated": [
            "def Battleship():\n    if False:\n        i = 10\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()",
            "def Battleship():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()",
            "def Battleship():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()",
            "def Battleship():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()",
            "def Battleship():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    sg.theme('Dark Blue 3')\n    MAX_ROWS = MAX_COL = 10\n    layout = [[sg.Text('BATTLESHIP', font='Default 25')], [sg.Text(size=(15, 1), key='-MESSAGE-', font='Default 20')]]\n    board = []\n    for row in range(MAX_ROWS):\n        layout_row = []\n        for col in range(MAX_COL):\n            layout_row.append(sg.Button(str('O'), size=(4, 2), pad=(0, 0), border_width=0, key=(row, col)))\n        board.append(layout_row)\n    layout += board\n    layout += [[sg.Button('Exit', button_color=('white', 'red'))]]\n    window = sg.Window('Battleship', layout)\n    while True:\n        (event, values) = window.read()\n        print(event, values)\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if randint(1, 10) < 5:\n            window[event].update('H', button_color=('white', 'red'))\n            window['-MESSAGE-'].update('Hit')\n        else:\n            window[event].update('M', button_color=('white', 'black'))\n            window['-MESSAGE-'].update('Miss')\n    window.close()"
        ]
    }
]