[
    {
        "func_name": "send_an_email",
        "original": "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)",
        "mutated": [
            "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    if False:\n        i = 10\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)",
            "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)",
            "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)",
            "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)",
            "def send_an_email(from_address, to_address, subject, message_text, user, password, smtp_host, smtp_port):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    server = smtp.SMTP(host=smtp_host, port=smtp_port)\n    server.starttls()\n    try:\n        server.login(user=user, password=password)\n    except Exception as e:\n        sg.popup_error('Error authenticaing your email credentials', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    msg = EmailMessage()\n    msg['From'] = from_address\n    msg['To'] = to_address\n    msg['Subject'] = subject\n    msg.set_payload(message_text)\n    try:\n        server.send_message(msg)\n    except Exception as e:\n        sg.popup_error('Error sending your email', e, image=sg.EMOJI_BASE64_WEARY)\n        server.close()\n        return\n    server.close()\n    sg.popup('Email sent successfully!', image=sg.EMOJI_BASE64_HAPPY_JOY)"
        ]
    },
    {
        "func_name": "main",
        "original": "def main():\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    smtp_server_dict = {'gmail.com': 'smtp.gmail.com', 'hotmail.com': 'smtp.office365.com', 'live.com': 'smtp.office365.com', 'yahoo.com': 'smtp.mail.yahoo.com'}\n    sg.theme('Dark Blue 3')\n    layout = [[sg.Text('Send an Email', font='Default 18')], [sg.T('From:', size=(8, 1)), sg.Input(key='-EMAIL FROM-', size=(35, 1))], [sg.T('To:', size=(8, 1)), sg.Input(key='-EMAIL TO-', size=(35, 1))], [sg.T('Subject:', size=(8, 1)), sg.Input(key='-EMAIL SUBJECT-', size=(35, 1))], [sg.T('Mail login information', font='Default 18')], [sg.T('User:', size=(8, 1)), sg.Input(key='-USER-', size=(35, 1), enable_events=True)], [sg.T('Password:', size=(8, 1)), sg.Input(password_char='*', key='-PASSWORD-', size=(35, 1))], [sg.T('SMTP Server Info', font='_ 14')], [sg.T('SMTP Hostname'), sg.Input(smtp_host_default, s=20, key='-SMTP HOST-'), sg.T('SMTP Port'), sg.In(587, s=4, key='-SMTP PORT-')], [sg.Multiline('Type your message here', size=(60, 10), key='-EMAIL TEXT-')], [sg.Button('Send'), sg.Button('Exit')]]\n    window = sg.Window('Send An Email', layout)\n    while True:\n        (event, values) = window.read()\n        if event in (sg.WIN_CLOSED, 'Exit'):\n            break\n        if event == 'Send':\n            if values['-SMTP HOST-']:\n                sg.popup_quick_message('Sending your message... this will take a moment...', background_color='red')\n                send_an_email(from_address=values['-EMAIL FROM-'], to_address=values['-EMAIL TO-'], subject=values['-EMAIL SUBJECT-'], message_text=values['-EMAIL TEXT-'], user=values['-USER-'], password=values['-PASSWORD-'], smtp_host=values['-SMTP HOST-'], smtp_port=values['-SMTP PORT-'])\n            else:\n                sg.popup_error('Missing SMTP Hostname... you have to supply a hostname (gmail, hotmail, live, yahoo are autofilled)')\n        elif event == '-USER-':\n            for service in smtp_server_dict.keys():\n                if service in values[event].lower():\n                    window['-SMTP HOST-'].update(smtp_server_dict[service])\n                    break\n    window.close()"
        ]
    }
]