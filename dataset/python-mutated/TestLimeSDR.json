[
    {
        "func_name": "test_cython_wrapper",
        "original": "def test_cython_wrapper(self):\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())",
        "mutated": [
            "def test_cython_wrapper(self):\n    if False:\n        i = 10\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())",
            "def test_cython_wrapper(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())",
            "def test_cython_wrapper(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())",
            "def test_cython_wrapper(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())",
            "def test_cython_wrapper(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print('Devices:', limesdr.get_device_list())\n    print('Open:', limesdr.open())\n    print('-' * 20)\n    print('Init', limesdr.init())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    print('Num Channels TX:', limesdr.get_num_channels())\n    print('TX antennas', limesdr.get_antenna_list())\n    limesdr.set_tx(False)\n    self.assertFalse(limesdr.get_tx())\n    print('Num Channels RX:', limesdr.get_num_channels())\n    limesdr.CHANNEL = 0\n    print('Enable RX Channel 0:', limesdr.enable_channel(True, False, 0))\n    clocks = ['LMS_CLOCK_REF', 'LMS_CLOCK_SXR', 'LMS_CLOCK_SXT', 'LMS_CLOCK_CGEN', 'LMS_CLOCK_RXTSP', 'LMS_CLOCK_TXTSP']\n    for (i, clock) in enumerate(clocks):\n        print(clock, limesdr.get_clock_freq(i))\n    limesdr.print_last_error()\n    print('RX Sample Rate Range:', limesdr.get_sample_rate_range())\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    print('Set Sample Rate:', limesdr.set_sample_rate(2000000.0))\n    print('RX Channel 0 Sample Rate:', limesdr.get_sample_rate())\n    limesdr.print_last_error()\n    print('RX Frequency Range:', limesdr.get_center_frequency_range())\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    print('RX 0 set center freq:', limesdr.set_center_frequency(433920000.0))\n    print('RX 0 center freq:', limesdr.get_center_frequency())\n    limesdr.print_last_error()\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    print('RX 0 set gain', limesdr.set_normalized_gain(0.5))\n    print('RX 0 gain', limesdr.get_normalized_gain())\n    limesdr.print_last_error()\n    print('RX Bandwidth Range', limesdr.get_lpf_bandwidth_range())\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    print('RX 0 set Bandwidth', limesdr.set_lpf_bandwidth(20000000.0))\n    print('RX 0 Bandwidth', limesdr.get_lpf_bandwidth())\n    limesdr.print_last_error()\n    print('RX 0 calibrate:', limesdr.calibrate(20000000.0))\n    limesdr.print_last_error()\n    antenna_list = limesdr.get_antenna_list()\n    print('RX 0 antenna list', antenna_list)\n    print('RX 0 current antenna', limesdr.get_antenna(), antenna_list[limesdr.get_antenna()])\n    print('RX 0 current antenna BW', limesdr.get_antenna_bw(limesdr.get_antenna()))\n    print('Chip Temperature', limesdr.get_chip_temperature())\n    (parent_conn, child_conn) = Pipe()\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(1000))\n        print('Start stream', limesdr.start_stream())\n        limesdr.recv_stream(child_conn, 1000, 100)\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n        print(parent_conn.recv_bytes())\n    limesdr.set_tx(True)\n    self.assertTrue(limesdr.get_tx())\n    samples_to_send = np.ones(32768, dtype=np.complex64)\n    for _ in range(2):\n        limesdr.print_last_error()\n        print('Setup stream', limesdr.setup_stream(4000000000))\n        print('Start stream', limesdr.start_stream())\n        print('Send samples', limesdr.send_stream(samples_to_send.view(np.float32), 100))\n        print('Stop stream', limesdr.stop_stream())\n        print('Destroy stream', limesdr.destroy_stream())\n    print('-' * 20)\n    print('Close:', limesdr.close())"
        ]
    }
]