[
    {
        "func_name": "calc_dict",
        "original": "def calc_dict():\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))",
        "mutated": [
            "def calc_dict():\n    if False:\n        i = 10\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))",
            "def calc_dict():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))",
            "def calc_dict():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))",
            "def calc_dict():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))",
            "def calc_dict():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    prices = {'ACME': 45.23, 'AAPL': 612.78, 'IBM': 205.55, 'HPQ': 37.2, 'FB': 10.75}\n    min_price = min(zip(prices.values(), prices.keys()))\n    max_price = max(zip(prices.values(), prices.keys()))\n    prices_sorted = sorted(zip(prices.values(), prices.keys()))\n    prices_and_names = zip(prices.values(), prices.keys())\n    print(min(prices_and_names))\n    print(max(prices_and_names))\n    min(prices)\n    max(prices)\n    min(prices, key=lambda k: prices[k])\n    max(prices, key=lambda k: prices[k])\n    min_value = prices[min(prices, key=lambda k: prices[k])]\n    prices = {'AAA': 45.23, 'ZZZ': 45.23}\n    min(zip(prices.values(), prices.keys()))\n    max(zip(prices.values(), prices.keys()))"
        ]
    }
]