[
    {
        "func_name": "test_tpc_h20",
        "original": "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    \"\"\"Potential Part Promotion Query (Q20)\n\n    The Potential Part Promotion Query identifies suppliers in a particular\n    nation having selected parts that may be candidates for a promotional\n    offer.\"\"\"\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)",
        "mutated": [
            "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    if False:\n        i = 10\n    'Potential Part Promotion Query (Q20)\\n\\n    The Potential Part Promotion Query identifies suppliers in a particular\\n    nation having selected parts that may be candidates for a promotional\\n    offer.'\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)",
            "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Potential Part Promotion Query (Q20)\\n\\n    The Potential Part Promotion Query identifies suppliers in a particular\\n    nation having selected parts that may be candidates for a promotional\\n    offer.'\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)",
            "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Potential Part Promotion Query (Q20)\\n\\n    The Potential Part Promotion Query identifies suppliers in a particular\\n    nation having selected parts that may be candidates for a promotional\\n    offer.'\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)",
            "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Potential Part Promotion Query (Q20)\\n\\n    The Potential Part Promotion Query identifies suppliers in a particular\\n    nation having selected parts that may be candidates for a promotional\\n    offer.'\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)",
            "@tpch_test\ndef test_tpc_h20(supplier, nation, partsupp, part, lineitem):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Potential Part Promotion Query (Q20)\\n\\n    The Potential Part Promotion Query identifies suppliers in a particular\\n    nation having selected parts that may be candidates for a promotional\\n    offer.'\n    COLOR = 'forest'\n    DATE = '1994-01-01'\n    NATION = 'CANADA'\n    q1 = supplier.join(nation, supplier.s_nationkey == nation.n_nationkey)\n    q3 = part.filter([part.p_name.like(f'{COLOR}%')])\n    q2 = partsupp\n    q4 = lineitem.filter([lineitem.l_partkey == q2.ps_partkey, lineitem.l_suppkey == q2.ps_suppkey, lineitem.l_shipdate >= ibis.date(DATE), lineitem.l_shipdate < add_date(DATE, dy=1)])\n    q2 = q2.filter([partsupp.ps_partkey.isin(q3.p_partkey), partsupp.ps_availqty > 0.5 * q4.l_quantity.sum()])\n    q1 = q1.filter([q1.n_name == NATION, q1.s_suppkey.isin(q2.ps_suppkey)])\n    q1 = q1[q1.s_name, q1.s_address]\n    return q1.order_by(q1.s_name)"
        ]
    }
]