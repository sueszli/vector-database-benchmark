[
    {
        "func_name": "find_tasks",
        "original": "def find_tasks(source_code):\n    \"\"\"Find tasks in source code (TODO, FIXME, XXX, ...).\"\"\"\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results",
        "mutated": [
            "def find_tasks(source_code):\n    if False:\n        i = 10\n    'Find tasks in source code (TODO, FIXME, XXX, ...).'\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results",
            "def find_tasks(source_code):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Find tasks in source code (TODO, FIXME, XXX, ...).'\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results",
            "def find_tasks(source_code):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Find tasks in source code (TODO, FIXME, XXX, ...).'\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results",
            "def find_tasks(source_code):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Find tasks in source code (TODO, FIXME, XXX, ...).'\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results",
            "def find_tasks(source_code):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Find tasks in source code (TODO, FIXME, XXX, ...).'\n    results = []\n    for (line, text) in enumerate(source_code.splitlines()):\n        for todo in re.findall(TASKS_PATTERN, text):\n            todo_text = todo[-1].strip(' :').capitalize() if todo[-1] else todo[-2]\n            results.append((todo_text, line + 1))\n    return results"
        ]
    }
]