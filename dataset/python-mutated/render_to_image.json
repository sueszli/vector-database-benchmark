[
    {
        "func_name": "main",
        "original": "def main():\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    render = rendering.OffscreenRenderer(640, 480)\n    yellow = rendering.MaterialRecord()\n    yellow.base_color = [1.0, 0.75, 0.0, 1.0]\n    yellow.shader = 'defaultLit'\n    green = rendering.MaterialRecord()\n    green.base_color = [0.0, 0.5, 0.0, 1.0]\n    green.shader = 'defaultLit'\n    grey = rendering.MaterialRecord()\n    grey.base_color = [0.7, 0.7, 0.7, 1.0]\n    grey.shader = 'defaultLit'\n    white = rendering.MaterialRecord()\n    white.base_color = [1.0, 1.0, 1.0, 1.0]\n    white.shader = 'defaultLit'\n    cyl = o3d.geometry.TriangleMesh.create_cylinder(0.05, 3)\n    cyl.compute_vertex_normals()\n    cyl.translate([-2, 0, 1.5])\n    sphere = o3d.geometry.TriangleMesh.create_sphere(0.2)\n    sphere.compute_vertex_normals()\n    sphere.translate([-2, 0, 3])\n    box = o3d.geometry.TriangleMesh.create_box(2, 2, 1)\n    box.compute_vertex_normals()\n    box.translate([-1, -1, 0])\n    solid = o3d.geometry.TriangleMesh.create_icosahedron(0.5)\n    solid.compute_triangle_normals()\n    solid.compute_vertex_normals()\n    solid.translate([0, 0, 1.75])\n    render.scene.add_geometry('cyl', cyl, green)\n    render.scene.add_geometry('sphere', sphere, yellow)\n    render.scene.add_geometry('box', box, grey)\n    render.scene.add_geometry('solid', solid, white)\n    render.setup_camera(60.0, [0, 0, 0], [0, 10, 0], [0, 0, 1])\n    render.scene.scene.set_sun_light([0.707, 0.0, -0.707], [1.0, 1.0, 1.0], 75000)\n    render.scene.scene.enable_sun_light(True)\n    render.scene.show_axes(True)\n    img = render.render_to_image()\n    print('Saving image at test.png')\n    o3d.io.write_image('test.png', img, 9)\n    render.setup_camera(60.0, [0, 0, 0], [-10, 0, 0], [0, 0, 1])\n    img = render.render_to_image()\n    print('Saving image at test2.png')\n    o3d.io.write_image('test2.png', img, 9)"
        ]
    }
]