[
    {
        "func_name": "main",
        "original": "def main():\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    s10 = (10, 2)\n    window = sg.Window('GoodColors', [[sg.Text('Having trouble picking good colors? Try this')], [sg.Text('Here come the good colors as defined by PySimpleGUI')], [sg.Text('Button Colors Using PySimpleGUI.BLUES')], [*[sg.Button('BLUES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.BLUES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.PURPLES')], [*[sg.Button('PURPLES[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.PURPLES)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.GREENS')], [*[sg.Button('GREENS[{}]\\n{}'.format(j, c), button_color=(sg.YELLOWS[0], c), size=s10) for (j, c) in enumerate(sg.GREENS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.TANS')], [*[sg.Button('TANS[{}]\\n{}'.format(j, c), button_color=(sg.GREENS[0], c), size=s10) for (j, c) in enumerate(sg.TANS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Text('Button Colors Using PySimpleGUI.YELLOWS')], [*[sg.Button('YELLOWS[{}]\\n{}'.format(j, c), button_color=('black', c), size=s10) for (j, c) in enumerate(sg.YELLOWS)]], [sg.Text('_' * 100, size=(65, 1))], [sg.Button('Click ME!')]], default_element_size=(30, 2))\n    (event, values) = window.read()\n    window.close()"
        ]
    }
]