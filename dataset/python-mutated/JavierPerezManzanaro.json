[
    {
        "func_name": "triples_pitagoricos",
        "original": "def triples_pitagoricos(maximo: int) -> list:\n    \"\"\"Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\n\n    Args:\n        maximo (int): Numero m\u00e1ximo a anaalizar\n\n    Returns:\n        list: Lista de los trios pitag\u00f3ricos\n    \"\"\"\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado",
        "mutated": [
            "def triples_pitagoricos(maximo: int) -> list:\n    if False:\n        i = 10\n    'Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\\n\\n    Args:\\n        maximo (int): Numero m\u00e1ximo a anaalizar\\n\\n    Returns:\\n        list: Lista de los trios pitag\u00f3ricos\\n    '\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado",
            "def triples_pitagoricos(maximo: int) -> list:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\\n\\n    Args:\\n        maximo (int): Numero m\u00e1ximo a anaalizar\\n\\n    Returns:\\n        list: Lista de los trios pitag\u00f3ricos\\n    '\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado",
            "def triples_pitagoricos(maximo: int) -> list:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\\n\\n    Args:\\n        maximo (int): Numero m\u00e1ximo a anaalizar\\n\\n    Returns:\\n        list: Lista de los trios pitag\u00f3ricos\\n    '\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado",
            "def triples_pitagoricos(maximo: int) -> list:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\\n\\n    Args:\\n        maximo (int): Numero m\u00e1ximo a anaalizar\\n\\n    Returns:\\n        list: Lista de los trios pitag\u00f3ricos\\n    '\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado",
            "def triples_pitagoricos(maximo: int) -> list:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Triples Pitag\u00f3ricos son tres n\u00fameros enteros a, b y c que satisfacen la ecuaci\u00f3n del teorema de Pit\u00e1goras: ( a2 + b2 = c2 )\\n\\n    Args:\\n        maximo (int): Numero m\u00e1ximo a anaalizar\\n\\n    Returns:\\n        list: Lista de los trios pitag\u00f3ricos\\n    '\n    resultado = []\n    for a in range(maximo, 0, -1):\n        for b in range(maximo, 0, -1):\n            for c in range(maximo, 0, -1):\n                if pow(a, 2) + pow(b, 2) == pow(c, 2):\n                    print(f'{(a, b, c)}: {pow(a, 2) + pow(b, 2)} ({pow(a, 2)} + {pow(b, 2)}) = {pow(c, 2)}')\n                    resultado.append((a, b, c))\n    return resultado"
        ]
    }
]