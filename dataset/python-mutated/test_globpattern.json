[
    {
        "func_name": "test_globpattern_matches_file",
        "original": "def test_globpattern_matches_file():\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')",
        "mutated": [
            "def test_globpattern_matches_file():\n    if False:\n        i = 10\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')",
            "def test_globpattern_matches_file():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')",
            "def test_globpattern_matches_file():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')",
            "def test_globpattern_matches_file():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')",
            "def test_globpattern_matches_file():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    patt = GlobPattern('/a/b/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('///a////b//c')\n    assert patt.matches_file('/a/b/././c')\n    assert not patt.matches_file('')\n    assert not patt.matches_file('/')\n    assert not patt.matches_file('/a/b/d')\n    assert not patt.matches_file('/A/b/c')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')\n    assert not patt.matches_file('a/b/c')\n    assert not patt.matches_file('./a/b/c')\n    patt = GlobPattern('*a')\n    assert patt.matches_file('a')\n    assert patt.matches_file('aa')\n    assert patt.matches_file('xa')\n    assert not patt.matches_file('A')\n    assert not patt.matches_file('ax')\n    assert not patt.matches_file('xax')\n    for patt in (GlobPattern('/a/b/c/'), GlobPattern('/a/b/c/.'), GlobPattern('/a/b//c//'), GlobPattern('/a/b/./c/./')):\n        assert patt.matches_file('/a/b/c/')\n        assert patt.matches_file('///a////b//c//')\n        assert patt.matches_file('/a/b/././c/')\n        assert patt.matches_file('/a/b/c/.')\n        assert not patt.matches_file('/a/b/c')\n        assert not patt.matches_file('/a/b/c/./d')\n        assert not patt.matches_file('a/b/c/')\n        assert not patt.matches_file('./a/b/c/')\n    for patt in (GlobPattern('/a/**/c'), GlobPattern('/a/**/**/c')):\n        assert patt.matches_file('/a/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/d/b/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/**/b/c'), GlobPattern('/**/**/**/b/c')):\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/d/b/c')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/./b//c')\n        assert not patt.matches_file('/a/b/c/d')\n        assert not patt.matches_file('/a/c')\n        assert not patt.matches_file('/a/b/d')\n    for patt in (GlobPattern('/a/b/**'), GlobPattern('/a/b/**/**'), GlobPattern('/a/b//**//**/**')):\n        assert patt.matches_file('/a/b/')\n        assert patt.matches_file('/a/b/.')\n        assert patt.matches_file('/a/b//')\n        assert patt.matches_file('/a/b/c')\n        assert patt.matches_file('/a/b/c/d/e/f/g/h')\n        assert patt.matches_file('/a/b/d/c')\n        assert not patt.matches_file('/a/')\n        assert not patt.matches_file('/a/c/b')\n    patt = GlobPattern('/a/**/b/**/c')\n    assert patt.matches_file('/a/b/c')\n    assert patt.matches_file('/a/./b/./c')\n    assert patt.matches_file('/a//b//c')\n    assert patt.matches_file('/a/x/y/b/c')\n    assert patt.matches_file('/a/b/x/y/c')\n    assert patt.matches_file('/a/b/c/a/b/c')\n    assert patt.matches_file('/a/x/y/b/x/y/c')\n    assert not patt.matches_file('/a/b/x')\n    assert not patt.matches_file('/a/b/c/x')\n    assert not patt.matches_file('/a/b/c/')\n    assert not patt.matches_file('/a/b/c/.')"
        ]
    }
]