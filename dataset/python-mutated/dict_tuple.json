[
    {
        "func_name": "add_and_multiple",
        "original": "def add_and_multiple(n1, n2):\n    \"\"\"\n    Exercise 2\n    :param n1: Number 1\n    :param n2: Number 2\n    :return: a tuple containing sum and multiplication of two input numbers\n    \"\"\"\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)",
        "mutated": [
            "def add_and_multiple(n1, n2):\n    if False:\n        i = 10\n    '\\n    Exercise 2\\n    :param n1: Number 1\\n    :param n2: Number 2\\n    :return: a tuple containing sum and multiplication of two input numbers\\n    '\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)",
            "def add_and_multiple(n1, n2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    Exercise 2\\n    :param n1: Number 1\\n    :param n2: Number 2\\n    :return: a tuple containing sum and multiplication of two input numbers\\n    '\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)",
            "def add_and_multiple(n1, n2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    Exercise 2\\n    :param n1: Number 1\\n    :param n2: Number 2\\n    :return: a tuple containing sum and multiplication of two input numbers\\n    '\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)",
            "def add_and_multiple(n1, n2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    Exercise 2\\n    :param n1: Number 1\\n    :param n2: Number 2\\n    :return: a tuple containing sum and multiplication of two input numbers\\n    '\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)",
            "def add_and_multiple(n1, n2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    Exercise 2\\n    :param n1: Number 1\\n    :param n2: Number 2\\n    :return: a tuple containing sum and multiplication of two input numbers\\n    '\n    sum = n1 + n2\n    mult = n1 * n2\n    return (sum, mult)"
        ]
    },
    {
        "func_name": "age_dictionary",
        "original": "def age_dictionary():\n    \"\"\"\n    Exercise 1\n    This program asks for person name and age and builds a dictionary using that\n    Later on you can input person name and it will tell you the age of that person\n    :return:\n    \"\"\"\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')",
        "mutated": [
            "def age_dictionary():\n    if False:\n        i = 10\n    '\\n    Exercise 1\\n    This program asks for person name and age and builds a dictionary using that\\n    Later on you can input person name and it will tell you the age of that person\\n    :return:\\n    '\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')",
            "def age_dictionary():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    Exercise 1\\n    This program asks for person name and age and builds a dictionary using that\\n    Later on you can input person name and it will tell you the age of that person\\n    :return:\\n    '\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')",
            "def age_dictionary():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    Exercise 1\\n    This program asks for person name and age and builds a dictionary using that\\n    Later on you can input person name and it will tell you the age of that person\\n    :return:\\n    '\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')",
            "def age_dictionary():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    Exercise 1\\n    This program asks for person name and age and builds a dictionary using that\\n    Later on you can input person name and it will tell you the age of that person\\n    :return:\\n    '\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')",
            "def age_dictionary():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    Exercise 1\\n    This program asks for person name and age and builds a dictionary using that\\n    Later on you can input person name and it will tell you the age of that person\\n    :return:\\n    '\n    d = {}\n    while True:\n        person = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if person == '':\n            break\n        age = input('Enter age:')\n        d[person] = age\n    print(\"Building dictionary is complete.Now enter name of the person and I'll tell you his/her age\")\n    while True:\n        name = input(\"Enter name of the person(To stop don't enter anything and hi Enter key):\")\n        if name == '':\n            break\n        if name in d:\n            print('Age of', name, 'is:', d[name])\n        else:\n            print(\"I don't know the age of\", name)\n    print('Age dictionary program is finished now')"
        ]
    }
]