[
    {
        "func_name": "upgrade",
        "original": "def upgrade():\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)",
        "mutated": [
            "def upgrade():\n    if False:\n        i = 10\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op.create_table('artifact', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text('(GEN_RANDOM_UUID())'), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False), sa.Column('key', sa.String(), nullable=True), sa.Column('type', sa.String(), nullable=True), sa.Column('data', sa.JSON(), nullable=True), sa.Column('metadata_', sa.JSON(), nullable=True), sa.Column('task_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('task_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_id', prefect.server.utilities.database.UUID(), nullable=True), sa.Column('flow_run_state_id', prefect.server.utilities.database.UUID(), nullable=True), sa.ForeignKeyConstraint(['flow_run_id'], ['flow_run.id'], name=op.f('fk_artifact__flow_run_id__flow_run')), sa.ForeignKeyConstraint(['flow_run_state_id'], ['flow_run_state.id'], name=op.f('fk_artifact__flow_run_state_id__flow_run_state')), sa.ForeignKeyConstraint(['task_run_id'], ['task_run.id'], name=op.f('fk_artifact__task_run_id__task_run')), sa.ForeignKeyConstraint(['task_run_state_id'], ['task_run_state.id'], name=op.f('fk_artifact__task_run_state_id__task_run_state')), sa.PrimaryKeyConstraint('id', name=op.f('pk_artifact')))\n    op.create_index(op.f('ix_artifact__flow_run_id'), 'artifact', ['flow_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__flow_run_state_id'), 'artifact', ['flow_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__key'), 'artifact', ['key'], unique=True)\n    op.create_index(op.f('ix_artifact__task_run_id'), 'artifact', ['task_run_id'], unique=False)\n    op.create_index(op.f('ix_artifact__task_run_state_id'), 'artifact', ['task_run_state_id'], unique=False)\n    op.create_index(op.f('ix_artifact__updated'), 'artifact', ['updated'], unique=False)\n    op.add_column('flow_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_flow_run_state__result_artifact_id'), 'flow_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)\n    op.add_column('task_run_state', sa.Column('result_artifact_id', prefect.server.utilities.database.UUID(), nullable=True))\n    op.create_index(op.f('ix_task_run_state__result_artifact_id'), 'task_run_state', ['result_artifact_id'], unique=False)\n    op.create_foreign_key(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', 'artifact', ['result_artifact_id'], ['id'], ondelete='SET NULL', use_alter=True)"
        ]
    },
    {
        "func_name": "downgrade",
        "original": "def downgrade():\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')",
        "mutated": [
            "def downgrade():\n    if False:\n        i = 10\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op.drop_constraint(op.f('fk_task_run_state__result_artifact_id__artifact'), 'task_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_task_run_state__result_artifact_id'), table_name='task_run_state')\n    op.drop_column('task_run_state', 'result_artifact_id')\n    op.drop_constraint(op.f('fk_flow_run_state__result_artifact_id__artifact'), 'flow_run_state', type_='foreignkey')\n    op.drop_index(op.f('ix_flow_run_state__result_artifact_id'), table_name='flow_run_state')\n    op.drop_column('flow_run_state', 'result_artifact_id')\n    op.drop_index(op.f('ix_artifact__updated'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__task_run_id'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__key'), table_name='artifact')\n    op.drop_index(op.f('ix_artifact__flow_run_id'), table_name='artifact')\n    op.drop_table('artifact')"
        ]
    }
]