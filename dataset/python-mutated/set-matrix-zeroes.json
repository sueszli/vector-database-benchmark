[
    {
        "func_name": "setZeroes",
        "original": "def setZeroes(self, matrix):\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0",
        "mutated": [
            "def setZeroes(self, matrix):\n    if False:\n        i = 10\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0",
            "def setZeroes(self, matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0",
            "def setZeroes(self, matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0",
            "def setZeroes(self, matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0",
            "def setZeroes(self, matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    first_col = reduce(lambda acc, i: acc or matrix[i][0] == 0, xrange(len(matrix)), False)\n    first_row = reduce(lambda acc, j: acc or matrix[0][j] == 0, xrange(len(matrix[0])), False)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][j] == 0:\n                (matrix[i][0], matrix[0][j]) = (0, 0)\n    for i in xrange(1, len(matrix)):\n        for j in xrange(1, len(matrix[0])):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if first_col:\n        for i in xrange(len(matrix)):\n            matrix[i][0] = 0\n    if first_row:\n        for j in xrange(len(matrix[0])):\n            matrix[0][j] = 0"
        ]
    }
]