[
    {
        "func_name": "to_H2OFrame",
        "original": "def to_H2OFrame():\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)",
        "mutated": [
            "def to_H2OFrame():\n    if False:\n        i = 10\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)",
            "def to_H2OFrame():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)",
            "def to_H2OFrame():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)",
            "def to_H2OFrame():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)",
            "def to_H2OFrame():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    python_obj = [1, 2, 2.5, -100.9, 0]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[1], [2], [3.7], [8], [9]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [['a', 'b'], ['c', 'd']]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=2, cols=2)\n    python_obj = [[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = (1, 1e-05, 2.5, 23, 0)\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((1,), (2,), (3.7,), (8,), (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4, 5), (3, 2, 2, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = ((6, 7, 8, 9, 10), (1, 2, 3, 4), (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((1,), [2], (3.7,), [8], (9,))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = [(1,), [2], (3.7,), [8], (9,)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = ([6, 7, 8, 9, 10], (1, 2, 3, 4, 5), [3, 2, 2, 2, 2])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4, 5], (3, 2, 2, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = [(6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2)]\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = ((6, 7, 8, 9, 10), [1, 2, 3, 4], (3, 2, 2))\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5, dim_only=True)\n    python_obj = {'a': 1, 'b': 'a', 'c': 2.5, 'd': 'bcd', 'e': 0}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'a': [1], 'b': ['a'], 'c': [2.5], 'd': ['bcd'], 'e': [0]}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=5)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (1, 2, 3.7, 8, 9)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': [6, 7, 8, 9, 10], 'bar': (1, 2, 3, 4, 5), 'baz': (3, 2, 2, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = {'foo': (6, 7), 'bar': (1, 2, 3, 4), 'baz': (3, 2, 2)}\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=4, cols=3, dim_only=True)\n    assert set(the_frame.names) == set(python_obj.keys()), 'H2OFrame header is hosed. Got {0}, but should have got {1}'.format(the_frame.names, python_obj.keys())\n    python_obj = np.array([1, 'a', 2.5, 'bcd', 0])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[1], [2], [3.7], [8], [9]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4, 5], [3, 2, 2, 2, 2]])\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    if sys.version_info.major != 3 or sys.version_info.minor != 9:\n        python_obj = np.array([[6, 7, 8, 9, 10], [1, 2, 3, 4], [3, 2, 2]])\n        the_frame = h2o.H2OFrame(python_obj)\n        pyunit_utils.check_dims_values(python_obj, the_frame, rows=3, cols=5)\n    python_obj = pd.DataFrame({'foo': pd.Series([1]), 'bar': pd.Series([6]), 'baz': pd.Series(['a'])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=1, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([1, 2, 3, 7.8, 9])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=1)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8, 9, 10]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)\n    python_obj = pd.DataFrame({'foo': pd.Series([6, 7, 8]), 'bar': pd.Series([1, 2, 3, 4, 5]), 'baz': pd.Series([3, 2, 2, 2])})\n    the_frame = h2o.H2OFrame(python_obj)\n    pyunit_utils.check_dims_values(python_obj, the_frame, rows=5, cols=3)"
        ]
    }
]