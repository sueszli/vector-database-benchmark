[
    {
        "func_name": "use_external_yaml_spec",
        "original": "@pytest.fixture\ndef use_external_yaml_spec(self):\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)",
        "mutated": [
            "@pytest.fixture\ndef use_external_yaml_spec(self):\n    if False:\n        i = 10\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)",
            "@pytest.fixture\ndef use_external_yaml_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)",
            "@pytest.fixture\ndef use_external_yaml_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)",
            "@pytest.fixture\ndef use_external_yaml_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)",
            "@pytest.fixture\ndef use_external_yaml_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    module = sys.modules[__name__]\n    module_path = os.path.abspath(module.__file__)\n    test_path = os.path.dirname(module_path)\n    spec_root = test_path.split('/sources/declarative')[0]\n    spec = {'documentationUrl': 'https://airbyte.com/#yaml-from-external', 'connectionSpecification': EXTERNAL_CONNECTION_SPECIFICATION}\n    yaml_path = os.path.join(spec_root, 'spec.yaml')\n    with open(yaml_path, 'w') as f:\n        f.write(yaml.dump(spec))\n    yield\n    os.remove(yaml_path)"
        ]
    },
    {
        "func_name": "test_valid_manifest",
        "original": "def test_valid_manifest(self):\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)",
        "mutated": [
            "def test_valid_manifest(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)",
            "def test_valid_manifest(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)",
            "def test_valid_manifest(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)",
            "def test_valid_manifest(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)",
            "def test_valid_manifest(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    check_stream = source.connection_checker\n    check_stream.check_connection(source, logging.getLogger(''), {})\n    streams = source.streams({})\n    assert len(streams) == 2\n    assert isinstance(streams[0], DeclarativeStream)\n    assert isinstance(streams[1], DeclarativeStream)"
        ]
    },
    {
        "func_name": "test_manifest_with_spec",
        "original": "def test_manifest_with_spec(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}",
        "mutated": [
            "def test_manifest_with_spec(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}",
            "def test_manifest_with_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}",
            "def test_manifest_with_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}",
            "def test_manifest_with_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}",
            "def test_manifest_with_spec(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'spec': {'type': 'Spec', 'documentation_url': 'https://airbyte.com/#yaml-from-manifest', 'connection_specification': {'title': 'Test Spec', 'type': 'object', 'required': ['api_key'], 'additionalProperties': False, 'properties': {'api_key': {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}}}}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification is not None\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-manifest'\n    assert connector_specification.connectionSpecification['title'] == 'Test Spec'\n    assert connector_specification.connectionSpecification['required'][0] == 'api_key'\n    assert connector_specification.connectionSpecification['additionalProperties'] is False\n    assert connector_specification.connectionSpecification['properties']['api_key'] == {'type': 'string', 'airbyte_secret': True, 'title': 'API Key', 'description': 'Test API Key', 'order': 0}"
        ]
    },
    {
        "func_name": "test_manifest_with_external_spec",
        "original": "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION",
        "mutated": [
            "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION",
            "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION",
            "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION",
            "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION",
            "def test_manifest_with_external_spec(self, use_external_yaml_spec):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = MockManifestDeclarativeSource(source_config=manifest)\n    connector_specification = source.spec(logger)\n    assert connector_specification.documentationUrl == 'https://airbyte.com/#yaml-from-external'\n    assert connector_specification.connectionSpecification == EXTERNAL_CONNECTION_SPECIFICATION"
        ]
    },
    {
        "func_name": "test_source_is_not_created_if_toplevel_fields_are_unknown",
        "original": "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_is_not_created_if_toplevel_fields_are_unknown(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}, 'not_a_valid_field': 'error'}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_source_missing_checker_fails_validation",
        "original": "def test_source_missing_checker_fails_validation(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_source_missing_checker_fails_validation(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_missing_checker_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_missing_checker_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_missing_checker_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_missing_checker_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream'}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_source_with_missing_streams_fails",
        "original": "def test_source_with_missing_streams_fails(self):\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_source_with_missing_streams_fails(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_streams_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_streams_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_streams_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_streams_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': None, 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_source_with_missing_version_fails",
        "original": "def test_source_with_missing_version_fails(self):\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_source_with_missing_version_fails(self):\n    if False:\n        i = 10\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_version_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_version_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_version_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_missing_version_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_manifest_versions",
        "original": "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    if False:\n        i = 10\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)",
            "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)",
            "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)",
            "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)",
            "@pytest.mark.parametrize('cdk_version, manifest_version, expected_error', [pytest.param('0.35.0', '0.30.0', None, id='manifest_version_less_than_cdk_package_should_run'), pytest.param('1.5.0', '0.29.0', None, id='manifest_version_less_than_cdk_major_package_should_run'), pytest.param('0.29.0', '0.29.0', None, id='manifest_version_matching_cdk_package_should_run'), pytest.param('0.29.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_the_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('1.5.0', '0.25.0', ValidationError, id='manifest_version_before_beta_that_uses_package_later_major_version_than_beta_0.29.0_cdk_package_should_throw_error'), pytest.param('0.34.0', '0.35.0', ValidationError, id='manifest_version_greater_than_cdk_package_should_throw_error'), pytest.param('0.29.0', '-1.5.0', ValidationError, id='manifest_version_has_invalid_major_format'), pytest.param('0.29.0', '0.invalid.0', ValidationError, id='manifest_version_has_invalid_minor_format'), pytest.param('0.29.0', '0.29.0.1', ValidationError, id='manifest_version_has_extra_version_parts'), pytest.param('0.29.0', '5.0', ValidationError, id='manifest_version_has_too_few_version_parts'), pytest.param('0.29.0:dev', '0.29.0', ValidationError, id='manifest_version_has_extra_release')])\n@patch('importlib.metadata.version')\ndef test_manifest_versions(self, version, cdk_version, manifest_version, expected_error):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    version.return_value = cdk_version\n    manifest = {'version': manifest_version, 'definitions': {}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    if expected_error:\n        with pytest.raises(expected_error):\n            ManifestDeclarativeSource(source_config=manifest)\n    else:\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_source_with_invalid_stream_config_fails_validation",
        "original": "def test_source_with_invalid_stream_config_fails_validation(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_source_with_invalid_stream_config_fails_validation(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_invalid_stream_config_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_invalid_stream_config_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_invalid_stream_config_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_source_with_invalid_stream_config_fails_validation(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_source_with_no_external_spec_and_no_in_yaml_spec_fails",
        "original": "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)",
        "mutated": [
            "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)",
            "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)",
            "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)",
            "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)",
            "def test_source_with_no_external_spec_and_no_in_yaml_spec_fails(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=manifest)\n    with pytest.raises(FileNotFoundError):\n        source.spec(logger)"
        ]
    },
    {
        "func_name": "test_manifest_without_at_least_one_stream",
        "original": "def test_manifest_without_at_least_one_stream(self):\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
        "mutated": [
            "def test_manifest_without_at_least_one_stream(self):\n    if False:\n        i = 10\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_manifest_without_at_least_one_stream(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_manifest_without_at_least_one_stream(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_manifest_without_at_least_one_stream(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)",
            "def test_manifest_without_at_least_one_stream(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    with pytest.raises(ValidationError):\n        ManifestDeclarativeSource(source_config=manifest)"
        ]
    },
    {
        "func_name": "test_given_debug_when_read_then_set_log_level",
        "original": "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)",
        "mutated": [
            "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    if False:\n        i = 10\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)",
            "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)",
            "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)",
            "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)",
            "@patch('airbyte_cdk.sources.declarative.declarative_source.DeclarativeSource.read')\ndef test_given_debug_when_read_then_set_log_level(self, declarative_source_read):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    any_valid_manifest = {'version': '0.29.3', 'definitions': {'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}'}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '10'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, 'streams': [{'type': 'DeclarativeStream', '$parameters': {'name': 'lists', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'path': '/v3/marketing/lists', 'authenticator': {'type': 'BearerAuthenticator', 'api_token': '{{ config.apikey }}'}, 'request_parameters': {'page_size': '{{ 10 }}'}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}, {'type': 'DeclarativeStream', '$parameters': {'name': 'stream_with_custom_requester', 'primary_key': 'id', 'url_base': 'https://api.sendgrid.com'}, 'schema_loader': {'name': '{{ parameters.stream_name }}', 'file_path': './source_sendgrid/schemas/{{ parameters.name }}.yaml'}, 'retriever': {'paginator': {'type': 'DefaultPaginator', 'page_size': 10, 'page_size_option': {'type': 'RequestOption', 'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 10}}, 'requester': {'type': 'CustomRequester', 'class_name': 'unit_tests.sources.declarative.external_component.SampleCustomComponent', 'path': '/v3/marketing/lists', 'custom_request_parameters': {'page_size': 10}}, 'record_selector': {'extractor': {'field_path': ['result']}}}}], 'check': {'type': 'CheckStream', 'stream_names': ['lists']}}\n    source = ManifestDeclarativeSource(source_config=any_valid_manifest, debug=True)\n    debug_logger = logging.getLogger('logger.debug')\n    list(source.read(debug_logger, {}, {}, {}))\n    assert debug_logger.isEnabledFor(logging.DEBUG)"
        ]
    },
    {
        "func_name": "request_log_message",
        "original": "def request_log_message(request: dict) -> AirbyteMessage:\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))",
        "mutated": [
            "def request_log_message(request: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))",
            "def request_log_message(request: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))",
            "def request_log_message(request: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))",
            "def request_log_message(request: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))",
            "def request_log_message(request: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'request:{json.dumps(request)}'))"
        ]
    },
    {
        "func_name": "response_log_message",
        "original": "def response_log_message(response: dict) -> AirbyteMessage:\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))",
        "mutated": [
            "def response_log_message(response: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))",
            "def response_log_message(response: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))",
            "def response_log_message(response: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))",
            "def response_log_message(response: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))",
            "def response_log_message(response: dict) -> AirbyteMessage:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    return AirbyteMessage(type=Type.LOG, log=AirbyteLogMessage(level=Level.INFO, message=f'response:{json.dumps(response)}'))"
        ]
    },
    {
        "func_name": "_create_request",
        "original": "def _create_request():\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()",
        "mutated": [
            "def _create_request():\n    if False:\n        i = 10\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()",
            "def _create_request():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()",
            "def _create_request():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()",
            "def _create_request():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()",
            "def _create_request():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    url = 'https://example.com/api'\n    headers = {'Content-Type': 'application/json'}\n    return requests.Request('POST', url, headers=headers, json={'key': 'value'}).prepare()"
        ]
    },
    {
        "func_name": "_create_response",
        "original": "def _create_response(body):\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response",
        "mutated": [
            "def _create_response(body):\n    if False:\n        i = 10\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response",
            "def _create_response(body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response",
            "def _create_response(body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response",
            "def _create_response(body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response",
            "def _create_response(body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    response = requests.Response()\n    response.status_code = 200\n    response._content = bytes(json.dumps(body), 'utf-8')\n    response.headers['Content-Type'] = 'application/json'\n    return response"
        ]
    },
    {
        "func_name": "_create_page",
        "original": "def _create_page(response_body):\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response",
        "mutated": [
            "def _create_page(response_body):\n    if False:\n        i = 10\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response",
            "def _create_page(response_body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response",
            "def _create_page(response_body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response",
            "def _create_page(response_body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response",
            "def _create_page(response_body):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    response = _create_response(response_body)\n    response.request = _create_request()\n    return response"
        ]
    },
    {
        "func_name": "test_read_manifest_declarative_source",
        "original": "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)",
        "mutated": [
            "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    if False:\n        i = 10\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)",
            "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)",
            "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)",
            "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)",
            "@pytest.mark.parametrize('test_name, manifest, pages, expected_records, expected_calls', [('test_read_manifest_no_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0}, {'AED': 1}], [call({}, {}, None)]), ('test_read_manifest_with_added_fields', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}}, 'type': 'object'}}, 'transformations': [{'type': 'AddFields', 'fields': [{'type': 'AddedFieldDefinition', 'path': ['added_field_key'], 'value': 'added_field_value'}]}], 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {'next': 'next'}})) * 10, [{'ABC': 0, 'added_field_key': 'added_field_value'}, {'AED': 1, 'added_field_key': 'added_field_value'}], [call({}, {}, None)]), ('test_read_with_pagination_no_partitions', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'USD': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0}, {'AED': 1}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 2}], '_metadata': {}})) * 10, [{'ABC': 0}, {'AED': 1}, {'USD': 2}], [call({}, {}, None), call({}, {}, {'next_page_token': 'next'})]), ('test_no_pagination_with_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'NoPagination'}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {'next': 'next'}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '1'}, None)]), ('test_with_pagination_and_partition_router', {'version': '0.34.2', 'type': 'DeclarativeSource', 'check': {'type': 'CheckStream', 'stream_names': ['Rates']}, 'streams': [{'type': 'DeclarativeStream', 'name': 'Rates', 'primary_key': [], 'schema_loader': {'type': 'InlineSchemaLoader', 'schema': {'$schema': 'http://json-schema.org/schema#', 'properties': {'ABC': {'type': 'number'}, 'AED': {'type': 'number'}, 'partition': {'type': 'number'}}, 'type': 'object'}}, 'retriever': {'type': 'SimpleRetriever', 'requester': {'type': 'HttpRequester', 'url_base': 'https://api.apilayer.com', 'path': '/exchangerates_data/latest', 'http_method': 'GET', 'request_parameters': {}, 'request_headers': {}, 'request_body_json': {}, 'authenticator': {'type': 'ApiKeyAuthenticator', 'header': 'apikey', 'api_token': \"{{ config['api_key'] }}\"}}, 'partition_router': {'type': 'ListPartitionRouter', 'values': ['0', '1'], 'cursor_field': 'partition'}, 'record_selector': {'type': 'RecordSelector', 'extractor': {'type': 'DpathExtractor', 'field_path': ['rates']}}, 'paginator': {'type': 'DefaultPaginator', 'page_size': 2, 'page_size_option': {'inject_into': 'request_parameter', 'field_name': 'page_size'}, 'page_token_option': {'inject_into': 'path', 'type': 'RequestPath'}, 'pagination_strategy': {'type': 'CursorPagination', 'cursor_value': '{{ response._metadata.next }}', 'page_size': 2}}}}], 'spec': {'connection_specification': {'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'required': ['api_key'], 'properties': {'api_key': {'type': 'string', 'title': 'API Key', 'airbyte_secret': True}}, 'additionalProperties': True}, 'documentation_url': 'https://example.org', 'type': 'Spec'}}, (_create_page({'rates': [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}], '_metadata': {'next': 'next'}}), _create_page({'rates': [{'USD': 3, 'partition': 0}], '_metadata': {}}), _create_page({'rates': [{'ABC': 2, 'partition': 1}], '_metadata': {}})), [{'ABC': 0, 'partition': 0}, {'AED': 1, 'partition': 0}, {'USD': 3, 'partition': 0}, {'ABC': 2, 'partition': 1}], [call({}, {'partition': '0'}, None), call({}, {'partition': '0'}, {'next_page_token': 'next'}), call({}, {'partition': '1'}, None)])])\ndef test_read_manifest_declarative_source(test_name, manifest, pages, expected_records, expected_calls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _stream_name = 'Rates'\n    with patch.object(SimpleRetriever, '_fetch_next_page', side_effect=pages) as mock_retriever:\n        output_data = [message.record.data for message in _run_read(manifest, _stream_name) if message.record]\n        assert expected_records == output_data\n        mock_retriever.assert_has_calls(expected_calls)"
        ]
    },
    {
        "func_name": "_run_read",
        "original": "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))",
        "mutated": [
            "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    if False:\n        i = 10\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))",
            "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))",
            "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))",
            "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))",
            "def _run_read(manifest: Mapping[str, Any], stream_name: str) -> List[AirbyteMessage]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    source = ManifestDeclarativeSource(source_config=manifest)\n    catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name=stream_name, json_schema={}, supported_sync_modes=[SyncMode.full_refresh]), sync_mode=SyncMode.full_refresh, destination_sync_mode=DestinationSyncMode.append)])\n    return list(source.read(logger, {}, catalog, {}))"
        ]
    }
]