[
    {
        "func_name": "test_sb",
        "original": "def test_sb(self):\n    \"\"\"Test SB execution\"\"\"\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])",
        "mutated": [
            "def test_sb(self):\n    if False:\n        i = 10\n    'Test SB execution'\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])",
            "def test_sb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test SB execution'\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])",
            "def test_sb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test SB execution'\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])",
            "def test_sb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test SB execution'\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])",
            "def test_sb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test SB execution'\n    exec_instruction('SB R1, (R2)', [(ExprId('R1', 32), ExprInt(40, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 8), ExprInt(40, 8))])\n    exec_instruction('SB R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 8), ExprInt(199, 8))])\n    exec_instruction('SB R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 8), ExprInt(199, 8))])"
        ]
    },
    {
        "func_name": "test_sh",
        "original": "def test_sh(self):\n    \"\"\"Test SH execution\"\"\"\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])",
        "mutated": [
            "def test_sh(self):\n    if False:\n        i = 10\n    'Test SH execution'\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])",
            "def test_sh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test SH execution'\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])",
            "def test_sh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test SH execution'\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])",
            "def test_sh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test SH execution'\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])",
            "def test_sh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test SH execution'\n    exec_instruction('SH R1, (R2)', [(ExprId('R1', 32), ExprInt(10247, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 16), ExprInt(10247, 16))])\n    exec_instruction('SH R1, 0x18(R2)', [(ExprId('R1', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(40, 32), 16), ExprInt(43975, 16))])\n    exec_instruction('SH R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 16), ExprInt(43975, 16))])"
        ]
    },
    {
        "func_name": "test_sw",
        "original": "def test_sw(self):\n    \"\"\"Test SW execution\"\"\"\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])",
        "mutated": [
            "def test_sw(self):\n    if False:\n        i = 10\n    'Test SW execution'\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])",
            "def test_sw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test SW execution'\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])",
            "def test_sw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test SW execution'\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])",
            "def test_sw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test SW execution'\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])",
            "def test_sw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test SW execution'\n    exec_instruction('SW R1, (R2)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(16, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 4(SP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('SP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(20, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R1, 12(TP)', [(ExprId('R1', 32), ExprInt(671551504, 32)), (ExprId('TP', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(28, 32), 32), ExprInt(671551504, 32))])\n    exec_instruction('SW R10, 0xF800(R2)', [(ExprId('R10', 32), ExprInt(43975, 32)), (ExprId('R2', 32), ExprInt(16, 32))], [(ExprMem(ExprInt(4294965264, 32), 32), ExprInt(43975, 32))])\n    exec_instruction('SW R10, (0x1010)', [(ExprId('R10', 32), ExprInt(43975, 32))], [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))])"
        ]
    },
    {
        "func_name": "test_lb",
        "original": "def test_lb(self):\n    \"\"\"Test LB executon\"\"\"\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])",
        "mutated": [
            "def test_lb(self):\n    if False:\n        i = 10\n    'Test LB executon'\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])",
            "def test_lb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test LB executon'\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])",
            "def test_lb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test LB executon'\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])",
            "def test_lb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test LB executon'\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])",
            "def test_lb(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test LB executon'\n    exec_instruction('LB R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(240, 8))], [(ExprId('R1', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R7, 0x3(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(19, 32), 8), ExprInt(240, 8))], [(ExprId('R7', 32), ExprInt(4294967280, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(4, 8))], [(ExprId('R10', 32), ExprInt(4, 32))])\n    exec_instruction('LB R10, 0xF800(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(4294965264, 32), 8), ExprInt(254, 8))], [(ExprId('R10', 32), ExprInt(4294967294, 32))])"
        ]
    },
    {
        "func_name": "test_lh",
        "original": "def test_lh(self):\n    \"\"\"Test lh execution\"\"\"\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])",
        "mutated": [
            "def test_lh(self):\n    if False:\n        i = 10\n    'Test lh execution'\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])",
            "def test_lh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test lh execution'\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])",
            "def test_lh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test lh execution'\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])",
            "def test_lh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test lh execution'\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])",
            "def test_lh(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test lh execution'\n    exec_instruction('LH R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R1, 0x18(R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 16), ExprInt(62743, 16))], [(ExprId('R1', 32), ExprInt(4294964503, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(16, 16))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LH R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(43981, 16))], [(ExprId('R9', 32), ExprInt(4294945741, 32))])"
        ]
    },
    {
        "func_name": "test_lw",
        "original": "def test_lw(self):\n    \"\"\"Test SW execution\"\"\"\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])",
        "mutated": [
            "def test_lw(self):\n    if False:\n        i = 10\n    'Test SW execution'\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])",
            "def test_lw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test SW execution'\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])",
            "def test_lw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test SW execution'\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])",
            "def test_lw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test SW execution'\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])",
            "def test_lw(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test SW execution'\n    exec_instruction('LW R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 32), ExprInt(43981, 32))], [(ExprId('R1', 32), ExprInt(43981, 32))])\n    exec_instruction('LW R1, 0x18(SP)', [(ExprId('SP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(19088743, 32))], [(ExprId('R1', 32), ExprInt(19088743, 32))])\n    exec_instruction('LW R1, 0x18(TP)', [(ExprId('TP', 32), ExprInt(16, 32)), (ExprMem(ExprInt(40, 32), 32), ExprInt(4112, 32))], [(ExprId('R1', 32), ExprInt(4112, 32))])\n    exec_instruction('LW R9, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963264, 32), 32), ExprInt(16, 32))], [(ExprId('R9', 32), ExprInt(16, 32))])\n    exec_instruction('LW R10, (0x1010)', [(ExprMem(ExprInt(4112, 32), 32), ExprInt(43975, 32))], [(ExprId('R10', 32), ExprInt(43975, 32))])"
        ]
    },
    {
        "func_name": "test_lbu",
        "original": "def test_lbu(self):\n    \"\"\"Test LBU execution\"\"\"\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])",
        "mutated": [
            "def test_lbu(self):\n    if False:\n        i = 10\n    'Test LBU execution'\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])",
            "def test_lbu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test LBU execution'\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])",
            "def test_lbu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test LBU execution'\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])",
            "def test_lbu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test LBU execution'\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])",
            "def test_lbu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test LBU execution'\n    exec_instruction('LBU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 8), ExprInt(10, 8))], [(ExprId('R1', 32), ExprInt(10, 32))])\n    exec_instruction('LBU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 32), ExprInt(16, 32))], [(ExprId('R10', 32), ExprInt(16, 32))])"
        ]
    },
    {
        "func_name": "test_lhu",
        "original": "def test_lhu(self):\n    \"\"\"Test LHU execution\"\"\"\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])",
        "mutated": [
            "def test_lhu(self):\n    if False:\n        i = 10\n    'Test LHU execution'\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])",
            "def test_lhu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test LHU execution'\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])",
            "def test_lhu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test LHU execution'\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])",
            "def test_lhu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test LHU execution'\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])",
            "def test_lhu(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test LHU execution'\n    exec_instruction('LHU R1, (R2)', [(ExprId('R2', 32), ExprInt(16, 32)), (ExprMem(ExprInt(16, 32), 16), ExprInt(239, 16))], [(ExprId('R1', 32), ExprInt(239, 32))])\n    exec_instruction('LHU R1, 0x22(R3)', [(ExprId('R3', 32), ExprInt(16, 32)), (ExprMem(ExprInt(50, 32), 16), ExprInt(65244, 16))], [(ExprId('R1', 32), ExprInt(65244, 32))])\n    exec_instruction('LHU R10, 0xF000(R2)', [(ExprId('R2', 32), ExprInt(66, 32)), (ExprMem(ExprInt(4294963266, 32), 16), ExprInt(4660, 16))], [(ExprId('R10', 32), ExprInt(4660, 32))])"
        ]
    }
]