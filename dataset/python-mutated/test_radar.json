[
    {
        "func_name": "test_radar_base",
        "original": "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
        "mutated": [
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    if False:\n        i = 10\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')"
        ]
    },
    {
        "func_name": "test_radar_item_base",
        "original": "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
        "mutated": [
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    if False:\n        i = 10\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_item_base(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    series_names = ['\u9884\u7b97\u5206\u914d', '\u5b9e\u9645\u5f00\u9500']\n    series_data = [[4300, 10000, 28000, 35000, 50000, 19000], [5000, 14000, 28000, 31000, 42000, 21000]]\n    radar_item = [opts.RadarItem(name=d[0], value=d[1]) for d in list(zip(series_names, series_data))]\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)]).add('', radar_item).set_series_opts(label_opts=opts.LabelOpts(is_show=False)).set_global_opts(title_opts=opts.TitleOpts(title='Radar-\u57fa\u672c\u793a\u4f8b'))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_equal(c.theme, 'white')\n    assert_equal(c.renderer, 'canvas')"
        ]
    },
    {
        "func_name": "test_radar_options",
        "original": "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)",
        "mutated": [
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    if False:\n        i = 10\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)",
            "@patch('pyecharts.render.engine.write_utf8_html_file')\ndef test_radar_options(fake_writer):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    c = Radar().add_schema(schema=[opts.RadarIndicatorItem(name='\u9500\u552e', max_=6500), opts.RadarIndicatorItem(name='\u7ba1\u7406', max_=16000), opts.RadarIndicatorItem(name='\u4fe1\u606f\u6280\u672f', max_=30000), opts.RadarIndicatorItem(name='\u5ba2\u670d', max_=38000), opts.RadarIndicatorItem(name='\u7814\u53d1', max_=52000), opts.RadarIndicatorItem(name='\u5e02\u573a', max_=25000)], radiusaxis_opts=opts.RadiusAxisOpts(), angleaxis_opts=opts.AngleAxisOpts(), polar_opts=opts.PolarOpts()).add('\u9884\u7b97\u5206\u914d', v1).add('\u5b9e\u9645\u5f00\u9500', v2).set_series_opts(label_opts=opts.LabelOpts(is_show=False))\n    c.render()\n    (_, content) = fake_writer.call_args[0]\n    assert_in('radiusAxis', content)\n    assert_in('angleAxis', content)\n    assert_in('polar', content)"
        ]
    }
]