from pygments.lexer import RegexLexer, bygroups, words, using, include, combined
from pygments.lexers import BashLexer
from pygments.token import Text, String, Keyword, Name, Operator
from . import options as opt
__all__ = ['HttpPromptLexer']
FLAG_OPTIONS = [name for (name, _) in opt.FLAG_OPTIONS]
VALUE_OPTIONS = [name for (name, _) in opt.VALUE_OPTIONS]
HTTP_METHODS = ('get', 'head', 'post', 'put', 'patch', 'delete', 'options', 'connect')

def string_rules(state):
    if False:
        while True:
            i = 10
    return [('(")((?:[^\\r\\n"\\\\]|(?:\\\\.))+)(")', bygroups(Text, String, Text), state), ('(")((?:[^\\r\\n"\\\\]|(?:\\\\.))+)', bygroups(Text, String), state), ("(')((?:[^\\r\\n'\\\\]|(?:\\\\.))+)(')", bygroups(Text, String, Text), state), ("(')((?:[^\\r\\n'\\\\]|(?:\\\\.))+)", bygroups(Text, String), state), ("([^\\s\\'\\\\]|(\\\\.))+", String, state)]

class HttpPromptLexer(RegexLexer):
    name = 'HttpPrompt'
    aliases = ['http-prompt']
    filenames = ['*.http-prompt']
    tokens = {'root': [('\\s+', Text), ('(cd)(\\s*)', bygroups(Keyword, Text), 'cd'), ('(rm)(\\s*)', bygroups(Keyword, Text), 'rm_option'), ('(httpie|curl)(\\s*)', bygroups(Keyword, Text), 'action'), (words(HTTP_METHODS, prefix='(?i)', suffix='(?!\\S)(\\s*)'), bygroups(Keyword, Text), combined('redir_out', 'urlpath')), ('(clear)(\\s*)', bygroups(Keyword, Text), 'end'), ('(exit)(\\s*)', bygroups(Keyword, Text), 'end'), ('(help)(\\s)*', bygroups(Keyword, Text), 'end'), ('(env)(\\s*)', bygroups(Keyword, Text), combined('redir_out', 'pipe')), ('(source)(\\s*)', bygroups(Keyword, Text), 'file_path'), ('(exec)(\\s*)', bygroups(Keyword, Text), 'file_path'), ('(ls)(\\s*)', bygroups(Keyword, Text), combined('redir_out', 'urlpath')), ('', Text, 'concat_mut')], 'cd': string_rules('end'), 'rm_option': [('(\\-(?:h|o|b|q))(\\s*)', bygroups(Name, Text), 'rm_name'), ('(\\*)(\\s*)', bygroups(Name, Text), 'end')], 'rm_name': string_rules('end'), 'shell_command': [('(`)([^`]*)(`)', bygroups(Text, using(BashLexer), Text))], 'pipe': [('(\\s*)(\\|)(.*)', bygroups(Text, Operator, using(BashLexer)))], 'concat_mut': [('$', Text, 'end'), ('\\s+', Text), (words(FLAG_OPTIONS, suffix='\\b'), Name, 'concat_mut'), (words(VALUE_OPTIONS, suffix='\\b'), Name, combined('shell_command', 'option_op')), include('shell_command'), ('((?:[^\\s\\\'"\\\\=:]|(?:\\\\.))*)(:=|:|==|=)', bygroups(Name, Operator), combined('shell_command', 'unquoted_mut')), ("(')((?:[^\\r\\n'\\\\=:]|(?:\\\\.))+)(:=|:|==|=)", bygroups(Text, Name, Operator), combined('shell_command', 'squoted_mut')), ('(")((?:[^\\r\\n"\\\\=:]|(?:\\\\.))+)(:=|:|==|=)', bygroups(Text, Name, Operator), combined('shell_command', 'dquoted_mut'))], 'option_op': [('(\\s+|=)', Operator, 'option_value')], 'option_value': string_rules('#pop:2'), 'file_path': string_rules('end'), 'redir_out': [('(?i)(>>?)(\\s*)', bygroups(Operator, Text), 'file_path')], 'unquoted_mut': string_rules('#pop'), 'squoted_mut': [("((?:[^\\r\\n'\\\\]|(?:\\\\.))+)(')", bygroups(String, Text), '#pop'), ("([^\\r\\n'\\\\]|(\\\\.))+", String, '#pop')], 'dquoted_mut': [('((?:[^\\r\\n"\\\\]|(?:\\\\.))+)(")', bygroups(String, Text), '#pop'), ('([^\\r\\n"\\\\]|(\\\\.))+', String, '#pop')], 'action': [(words(HTTP_METHODS, prefix='(?i)', suffix='(\\s*)'), bygroups(Keyword, Text), combined('redir_out', 'pipe', 'urlpath')), ('', Text, combined('redir_out', 'pipe', 'urlpath'))], 'urlpath': [('https?://([^\\s"\\\'\\\\]|(\\\\.))+', String, combined('concat_mut', 'redir_out', 'pipe')), ('(")(https?://(?:[^\\r\\n"\\\\]|(?:\\\\.))+)(")', bygroups(Text, String, Text), combined('concat_mut', 'redir_out', 'pipe')), ('(")(https?://(?:[^\\r\\n"\\\\]|(?:\\\\.))+)', bygroups(Text, String)), ("(')(https?://(?:[^\\r\\n'\\\\]|(?:\\\\.))+)(')", bygroups(Text, String, Text), combined('concat_mut', 'redir_out', 'pipe')), ("(')(https?://(?:[^\\r\\n'\\\\]|(?:\\\\.))+)", bygroups(Text, String)), ('(")((?:[^\\r\\n"\\\\=:]|(?:\\\\.))+)(")', bygroups(Text, String, Text), combined('concat_mut', 'redir_out', 'pipe')), ('(")((?:[^\\r\\n"\\\\=:]|(?:\\\\.))+)', bygroups(Text, String)), ("(')((?:[^\\r\\n'\\\\=:]|(?:\\\\.))+)(')", bygroups(Text, String, Text), combined('concat_mut', 'redir_out', 'pipe')), ("(')((?:[^\\r\\n'\\\\=:]|(?:\\\\.))+)", bygroups(Text, String)), ('([^\\-](?:[^\\s"\\\'\\\\=:]|(?:\\\\.))+)(\\s+|$)', bygroups(String, Text), combined('concat_mut', 'redir_out', 'pipe')), ('', Text, combined('concat_mut', 'redir_out', 'pipe'))], 'end': [('\\n', Text, 'root')]}