[
    {
        "func_name": "test_auto_bin_count_single_step",
        "original": "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
        "mutated": [
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})"
        ]
    },
    {
        "func_name": "test_auto_bin_count_single_step_duplicate_events",
        "original": "def test_auto_bin_count_single_step_duplicate_events(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
        "mutated": [
            "def test_auto_bin_count_single_step_duplicate_events(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "def test_auto_bin_count_single_step_duplicate_events(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "def test_auto_bin_count_single_step_duplicate_events(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "def test_auto_bin_count_single_step_duplicate_events(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "def test_auto_bin_count_single_step_duplicate_events(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step one', 'order': 1}, {'id': 'step one', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})"
        ]
    },
    {
        "func_name": "test_custom_bin_count_single_step",
        "original": "def test_custom_bin_count_single_step(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})",
        "mutated": [
            "def test_custom_bin_count_single_step(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})",
            "def test_custom_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})",
            "def test_custom_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})",
            "def test_custom_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})",
            "def test_custom_bin_count_single_step(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'bin_count': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (13732.0, 0), (25244.0, 0), (36756.0, 0), (48268.0, 0), (59780.0, 0), (71292.0, 1), (82804.0, 0)], 'average_conversion_time': 29540})"
        ]
    },
    {
        "func_name": "test_auto_bin_count_total",
        "original": "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)",
        "mutated": [
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)",
            "@snapshot_clickhouse_queries\ndef test_auto_bin_count_total(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_window_days': 7, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(10800.0, 1), (10860.0, 0)], 'average_conversion_time': 10800.0})\n    funnel_trends_steps_specified = ClickhouseFunnelTimeToConvert(Filter(data={**filter._data, 'funnel_from_step': 0, 'funnel_to_step': 2}), self.team)\n    results_steps_specified = funnel_trends_steps_specified.run()\n    self.assertEqual(results, results_steps_specified)"
        ]
    },
    {
        "func_name": "test_basic_unordered",
        "original": "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
        "mutated": [
            "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_unordered(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.UNORDERED, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})"
        ]
    },
    {
        "func_name": "test_basic_strict",
        "original": "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
        "mutated": [
            "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    if False:\n        i = 10\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})",
            "@snapshot_clickhouse_queries\ndef test_basic_strict(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _create_person(distinct_ids=['user a'], team=self.team)\n    _create_person(distinct_ids=['user b'], team=self.team)\n    _create_person(distinct_ids=['user c'], team=self.team)\n    _create_person(distinct_ids=['user d'], team=self.team)\n    _create_event(event='step one', distinct_id='user a', team=self.team, timestamp='2021-06-08 18:00:00')\n    _create_event(event='step two', distinct_id='user a', team=self.team, timestamp='2021-06-08 19:00:00')\n    _create_event(event='step three', distinct_id='user a', team=self.team, timestamp='2021-06-08 21:00:00')\n    _create_event(event='step one', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:00:00')\n    _create_event(event='step two', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:37:00')\n    _create_event(event='blah', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:38:00')\n    _create_event(event='step three', distinct_id='user b', team=self.team, timestamp='2021-06-09 13:39:00')\n    _create_event(event='step one', distinct_id='user c', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='step two', distinct_id='user c', team=self.team, timestamp='2021-06-12 06:00:00')\n    _create_event(event='step one', distinct_id='user d', team=self.team, timestamp='2021-06-11 07:00:00')\n    _create_event(event='blah', distinct_id='user d', team=self.team, timestamp='2021-06-12 07:00:00')\n    _create_event(event='step two', distinct_id='user d', team=self.team, timestamp='2021-06-12 09:00:00')\n    filter = Filter(data={'insight': INSIGHT_FUNNELS, 'display': TRENDS_LINEAR, 'interval': 'day', 'date_from': '2021-06-07 00:00:00', 'date_to': '2021-06-13 23:59:59', 'funnel_from_step': 0, 'funnel_to_step': 1, 'funnel_window_days': 7, 'funnel_order_type': FunnelOrderType.STRICT, 'events': [{'id': 'step one', 'order': 0}, {'id': 'step two', 'order': 1}, {'id': 'step three', 'order': 2}]})\n    funnel_trends = ClickhouseFunnelTimeToConvert(filter, self.team)\n    results = funnel_trends.run()\n    self.assertEqual(results, {'bins': [(2220.0, 2), (42510.0, 0), (82800.0, 1)], 'average_conversion_time': 29540})"
        ]
    }
]