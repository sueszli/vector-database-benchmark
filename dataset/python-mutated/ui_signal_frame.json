[
    {
        "func_name": "setupUi",
        "original": "def setupUi(self, SignalFrame):\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)",
        "mutated": [
            "def setupUi(self, SignalFrame):\n    if False:\n        i = 10\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)",
            "def setupUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)",
            "def setupUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)",
            "def setupUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)",
            "def setupUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    SignalFrame.setObjectName('SignalFrame')\n    SignalFrame.resize(1057, 652)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(SignalFrame.sizePolicy().hasHeightForWidth())\n    SignalFrame.setSizePolicy(sizePolicy)\n    SignalFrame.setMinimumSize(QtCore.QSize(0, 0))\n    SignalFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    SignalFrame.setSizeIncrement(QtCore.QSize(0, 0))\n    SignalFrame.setBaseSize(QtCore.QSize(0, 0))\n    SignalFrame.setMouseTracking(False)\n    SignalFrame.setAcceptDrops(True)\n    SignalFrame.setAutoFillBackground(False)\n    SignalFrame.setStyleSheet('')\n    SignalFrame.setFrameShape(QtWidgets.QFrame.NoFrame)\n    SignalFrame.setFrameShadow(QtWidgets.QFrame.Raised)\n    SignalFrame.setLineWidth(1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout(SignalFrame)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.gridLayout_2 = QtWidgets.QGridLayout()\n    self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.lSignalViewText = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalViewText.sizePolicy().hasHeightForWidth())\n    self.lSignalViewText.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setUnderline(False)\n    self.lSignalViewText.setFont(font)\n    self.lSignalViewText.setObjectName('lSignalViewText')\n    self.gridLayout_2.addWidget(self.lSignalViewText, 17, 0, 1, 1)\n    self.spinBoxBitsPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxBitsPerSymbol.setMinimum(1)\n    self.spinBoxBitsPerSymbol.setMaximum(10)\n    self.spinBoxBitsPerSymbol.setObjectName('spinBoxBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxBitsPerSymbol, 11, 1, 1, 1)\n    self.gridLayout = QtWidgets.QGridLayout()\n    self.gridLayout.setObjectName('gridLayout')\n    self.btnSaveSignal = QtWidgets.QToolButton(SignalFrame)\n    self.btnSaveSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnSaveSignal.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSaveSignal.setIcon(icon)\n    self.btnSaveSignal.setObjectName('btnSaveSignal')\n    self.gridLayout.addWidget(self.btnSaveSignal, 0, 3, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)\n    self.btnCloseSignal = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnCloseSignal.sizePolicy().hasHeightForWidth())\n    self.btnCloseSignal.setSizePolicy(sizePolicy)\n    self.btnCloseSignal.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnCloseSignal.setStyleSheet('color:red;')\n    icon = QtGui.QIcon.fromTheme('window-close')\n    self.btnCloseSignal.setIcon(icon)\n    self.btnCloseSignal.setObjectName('btnCloseSignal')\n    self.gridLayout.addWidget(self.btnCloseSignal, 0, 9, 1, 1)\n    self.lSignalTyp = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalTyp.sizePolicy().hasHeightForWidth())\n    self.lSignalTyp.setSizePolicy(sizePolicy)\n    self.lSignalTyp.setObjectName('lSignalTyp')\n    self.gridLayout.addWidget(self.lSignalTyp, 0, 1, 1, 1)\n    self.lSignalNr = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSignalNr.sizePolicy().hasHeightForWidth())\n    self.lSignalNr.setSizePolicy(sizePolicy)\n    self.lSignalNr.setWordWrap(False)\n    self.lSignalNr.setIndent(-1)\n    self.lSignalNr.setObjectName('lSignalNr')\n    self.gridLayout.addWidget(self.lSignalNr, 0, 0, 1, 1)\n    self.btnInfo = QtWidgets.QToolButton(SignalFrame)\n    self.btnInfo.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnInfo.setMaximumSize(QtCore.QSize(24, 24))\n    icon = QtGui.QIcon.fromTheme('dialog-information')\n    self.btnInfo.setIcon(icon)\n    self.btnInfo.setObjectName('btnInfo')\n    self.gridLayout.addWidget(self.btnInfo, 0, 6, 1, 1)\n    self.btnReplay = QtWidgets.QToolButton(SignalFrame)\n    self.btnReplay.setMinimumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setMaximumSize(QtCore.QSize(24, 24))\n    self.btnReplay.setText('')\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnReplay.setIcon(icon)\n    self.btnReplay.setObjectName('btnReplay')\n    self.gridLayout.addWidget(self.btnReplay, 0, 5, 1, 1)\n    self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 2)\n    self.cbProtoView = QtWidgets.QComboBox(SignalFrame)\n    self.cbProtoView.setObjectName('cbProtoView')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.cbProtoView.addItem('')\n    self.gridLayout_2.addWidget(self.cbProtoView, 23, 1, 1, 1)\n    self.lCenterSpacing = QtWidgets.QLabel(SignalFrame)\n    self.lCenterSpacing.setObjectName('lCenterSpacing')\n    self.gridLayout_2.addWidget(self.lCenterSpacing, 4, 0, 1, 1)\n    self.spinBoxTolerance = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxTolerance.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxTolerance.setMaximum(9999)\n    self.spinBoxTolerance.setObjectName('spinBoxTolerance')\n    self.gridLayout_2.addWidget(self.spinBoxTolerance, 8, 1, 1, 1)\n    self.lSamplesPerSymbol = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lSamplesPerSymbol.sizePolicy().hasHeightForWidth())\n    self.lSamplesPerSymbol.setSizePolicy(sizePolicy)\n    self.lSamplesPerSymbol.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)\n    self.lSamplesPerSymbol.setObjectName('lSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.lSamplesPerSymbol, 5, 0, 1, 1)\n    self.lErrorTolerance = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lErrorTolerance.sizePolicy().hasHeightForWidth())\n    self.lErrorTolerance.setSizePolicy(sizePolicy)\n    self.lErrorTolerance.setMinimumSize(QtCore.QSize(0, 0))\n    self.lErrorTolerance.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lErrorTolerance.setObjectName('lErrorTolerance')\n    self.gridLayout_2.addWidget(self.lErrorTolerance, 8, 0, 1, 1)\n    self.lCenterOffset = QtWidgets.QLabel(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lCenterOffset.sizePolicy().hasHeightForWidth())\n    self.lCenterOffset.setSizePolicy(sizePolicy)\n    self.lCenterOffset.setMinimumSize(QtCore.QSize(0, 0))\n    self.lCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lCenterOffset.setWhatsThis('')\n    self.lCenterOffset.setObjectName('lCenterOffset')\n    self.gridLayout_2.addWidget(self.lCenterOffset, 3, 0, 1, 1)\n    self.labelModulation = QtWidgets.QLabel(SignalFrame)\n    self.labelModulation.setObjectName('labelModulation')\n    self.gridLayout_2.addWidget(self.labelModulation, 10, 0, 1, 1)\n    self.cbSignalView = QtWidgets.QComboBox(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.cbSignalView.sizePolicy().hasHeightForWidth())\n    self.cbSignalView.setSizePolicy(sizePolicy)\n    self.cbSignalView.setObjectName('cbSignalView')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.cbSignalView.addItem('')\n    self.gridLayout_2.addWidget(self.cbSignalView, 17, 1, 1, 1)\n    self.spinBoxNoiseTreshold = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxNoiseTreshold.setSuffix('')\n    self.spinBoxNoiseTreshold.setDecimals(4)\n    self.spinBoxNoiseTreshold.setMaximum(1.0)\n    self.spinBoxNoiseTreshold.setSingleStep(0.0001)\n    self.spinBoxNoiseTreshold.setObjectName('spinBoxNoiseTreshold')\n    self.gridLayout_2.addWidget(self.spinBoxNoiseTreshold, 2, 1, 1, 1)\n    self.spinBoxCenterSpacing = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterSpacing.setDecimals(4)\n    self.spinBoxCenterSpacing.setMinimum(0.0001)\n    self.spinBoxCenterSpacing.setMaximum(5.0)\n    self.spinBoxCenterSpacing.setSingleStep(0.0001)\n    self.spinBoxCenterSpacing.setProperty('value', 1.0)\n    self.spinBoxCenterSpacing.setObjectName('spinBoxCenterSpacing')\n    self.gridLayout_2.addWidget(self.spinBoxCenterSpacing, 4, 1, 1, 1)\n    self.lineEditSignalName = QtWidgets.QLineEdit(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lineEditSignalName.sizePolicy().hasHeightForWidth())\n    self.lineEditSignalName.setSizePolicy(sizePolicy)\n    self.lineEditSignalName.setMinimumSize(QtCore.QSize(214, 0))\n    self.lineEditSignalName.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.lineEditSignalName.setAcceptDrops(False)\n    self.lineEditSignalName.setObjectName('lineEditSignalName')\n    self.gridLayout_2.addWidget(self.lineEditSignalName, 1, 0, 1, 2)\n    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_5.setSpacing(7)\n    self.horizontalLayout_5.setObjectName('horizontalLayout_5')\n    self.cbModulationType = QtWidgets.QComboBox(SignalFrame)\n    self.cbModulationType.setObjectName('cbModulationType')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.cbModulationType.addItem('')\n    self.horizontalLayout_5.addWidget(self.cbModulationType)\n    self.btnAdvancedModulationSettings = QtWidgets.QToolButton(SignalFrame)\n    icon = QtGui.QIcon.fromTheme('configure')\n    self.btnAdvancedModulationSettings.setIcon(icon)\n    self.btnAdvancedModulationSettings.setIconSize(QtCore.QSize(16, 16))\n    self.btnAdvancedModulationSettings.setObjectName('btnAdvancedModulationSettings')\n    self.horizontalLayout_5.addWidget(self.btnAdvancedModulationSettings)\n    self.gridLayout_2.addLayout(self.horizontalLayout_5, 10, 1, 1, 1)\n    self.chkBoxSyncSelection = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxSyncSelection.setChecked(True)\n    self.chkBoxSyncSelection.setObjectName('chkBoxSyncSelection')\n    self.gridLayout_2.addWidget(self.chkBoxSyncSelection, 24, 0, 1, 1)\n    self.labelSpectrogramMin = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMin.setObjectName('labelSpectrogramMin')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMin, 21, 0, 1, 1)\n    self.labelSpectrogramMax = QtWidgets.QLabel(SignalFrame)\n    self.labelSpectrogramMax.setObjectName('labelSpectrogramMax')\n    self.gridLayout_2.addWidget(self.labelSpectrogramMax, 22, 0, 1, 1)\n    self.chkBoxShowProtocol = QtWidgets.QCheckBox(SignalFrame)\n    self.chkBoxShowProtocol.setObjectName('chkBoxShowProtocol')\n    self.gridLayout_2.addWidget(self.chkBoxShowProtocol, 23, 0, 1, 1)\n    self.spinBoxSamplesPerSymbol = QtWidgets.QSpinBox(SignalFrame)\n    self.spinBoxSamplesPerSymbol.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxSamplesPerSymbol.setMinimum(1)\n    self.spinBoxSamplesPerSymbol.setMaximum(999999999)\n    self.spinBoxSamplesPerSymbol.setObjectName('spinBoxSamplesPerSymbol')\n    self.gridLayout_2.addWidget(self.spinBoxSamplesPerSymbol, 5, 1, 1, 1)\n    self.btnAutoDetect = QtWidgets.QToolButton(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnAutoDetect.sizePolicy().hasHeightForWidth())\n    self.btnAutoDetect.setSizePolicy(sizePolicy)\n    self.btnAutoDetect.setIconSize(QtCore.QSize(16, 16))\n    self.btnAutoDetect.setCheckable(False)\n    self.btnAutoDetect.setChecked(False)\n    self.btnAutoDetect.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnAutoDetect.setArrowType(QtCore.Qt.NoArrow)\n    self.btnAutoDetect.setObjectName('btnAutoDetect')\n    self.gridLayout_2.addWidget(self.btnAutoDetect, 13, 0, 1, 2)\n    self.line = QtWidgets.QFrame(SignalFrame)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_2.addWidget(self.line, 15, 0, 1, 2)\n    self.sliderSpectrogramMin = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMin.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMin.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMin.setMinimum(-150)\n    self.sliderSpectrogramMin.setMaximum(10)\n    self.sliderSpectrogramMin.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMin.setObjectName('sliderSpectrogramMin')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMin, 21, 1, 1, 1)\n    self.labelFFTWindowSize = QtWidgets.QLabel(SignalFrame)\n    self.labelFFTWindowSize.setObjectName('labelFFTWindowSize')\n    self.gridLayout_2.addWidget(self.labelFFTWindowSize, 20, 0, 1, 1)\n    self.sliderSpectrogramMax = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderSpectrogramMax.sizePolicy().hasHeightForWidth())\n    self.sliderSpectrogramMax.setSizePolicy(sizePolicy)\n    self.sliderSpectrogramMax.setMinimum(-150)\n    self.sliderSpectrogramMax.setMaximum(10)\n    self.sliderSpectrogramMax.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderSpectrogramMax.setObjectName('sliderSpectrogramMax')\n    self.gridLayout_2.addWidget(self.sliderSpectrogramMax, 22, 1, 1, 1)\n    self.spinBoxCenterOffset = QtWidgets.QDoubleSpinBox(SignalFrame)\n    self.spinBoxCenterOffset.setMinimumSize(QtCore.QSize(100, 0))\n    self.spinBoxCenterOffset.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.spinBoxCenterOffset.setDecimals(4)\n    self.spinBoxCenterOffset.setMinimum(-3.15)\n    self.spinBoxCenterOffset.setMaximum(6.28)\n    self.spinBoxCenterOffset.setSingleStep(0.0001)\n    self.spinBoxCenterOffset.setObjectName('spinBoxCenterOffset')\n    self.gridLayout_2.addWidget(self.spinBoxCenterOffset, 3, 1, 1, 1)\n    self.labelNoise = QtWidgets.QLabel(SignalFrame)\n    self.labelNoise.setObjectName('labelNoise')\n    self.gridLayout_2.addWidget(self.labelNoise, 2, 0, 1, 1)\n    spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)\n    self.gridLayout_2.addItem(spacerItem1, 14, 0, 1, 1)\n    self.sliderFFTWindowSize = QtWidgets.QSlider(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.sliderFFTWindowSize.sizePolicy().hasHeightForWidth())\n    self.sliderFFTWindowSize.setSizePolicy(sizePolicy)\n    self.sliderFFTWindowSize.setMinimum(6)\n    self.sliderFFTWindowSize.setMaximum(15)\n    self.sliderFFTWindowSize.setOrientation(QtCore.Qt.Horizontal)\n    self.sliderFFTWindowSize.setObjectName('sliderFFTWindowSize')\n    self.gridLayout_2.addWidget(self.sliderFFTWindowSize, 20, 1, 1, 1)\n    self.lBitsPerSymbol = QtWidgets.QLabel(SignalFrame)\n    self.lBitsPerSymbol.setObjectName('lBitsPerSymbol')\n    self.gridLayout_2.addWidget(self.lBitsPerSymbol, 11, 0, 1, 1)\n    self.horizontalLayout.addLayout(self.gridLayout_2)\n    self.splitter = QtWidgets.QSplitter(SignalFrame)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())\n    self.splitter.setSizePolicy(sizePolicy)\n    self.splitter.setStyleSheet('QSplitter::handle:vertical {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\n    image: url(:/icons/icons/splitter_handle_horizontal.svg);\\n}')\n    self.splitter.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.splitter.setLineWidth(1)\n    self.splitter.setOrientation(QtCore.Qt.Vertical)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setChildrenCollapsible(False)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)\n    self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)\n    self.verticalLayout.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.horizontalLayout_2 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_2.setObjectName('horizontalLayout_2')\n    self.stackedWidget = QtWidgets.QStackedWidget(self.layoutWidget)\n    self.stackedWidget.setLineWidth(0)\n    self.stackedWidget.setObjectName('stackedWidget')\n    self.pageSignal = QtWidgets.QWidget()\n    self.pageSignal.setObjectName('pageSignal')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.pageSignal)\n    self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_6.setSpacing(0)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.gvSignal = EpicGraphicView(self.pageSignal)\n    self.gvSignal.setEnabled(True)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.gvSignal.sizePolicy().hasHeightForWidth())\n    self.gvSignal.setSizePolicy(sizePolicy)\n    self.gvSignal.setMinimumSize(QtCore.QSize(0, 150))\n    self.gvSignal.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.gvSignal.setMouseTracking(True)\n    self.gvSignal.setFocusPolicy(QtCore.Qt.WheelFocus)\n    self.gvSignal.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.gvSignal.setAutoFillBackground(False)\n    self.gvSignal.setStyleSheet('')\n    self.gvSignal.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSignal.setFrameShadow(QtWidgets.QFrame.Raised)\n    self.gvSignal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)\n    self.gvSignal.setInteractive(False)\n    self.gvSignal.setRenderHints(QtGui.QPainter.Antialiasing | QtGui.QPainter.TextAntialiasing)\n    self.gvSignal.setDragMode(QtWidgets.QGraphicsView.NoDrag)\n    self.gvSignal.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSignal.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSignal.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSignal.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)\n    self.gvSignal.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSignal.setObjectName('gvSignal')\n    self.horizontalLayout_6.addWidget(self.gvSignal)\n    self.stackedWidget.addWidget(self.pageSignal)\n    self.pageSpectrogram = QtWidgets.QWidget()\n    self.pageSpectrogram.setObjectName('pageSpectrogram')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageSpectrogram)\n    self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.horizontalLayout_4.setSpacing(0)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.gvSpectrogram = SpectrogramGraphicView(self.pageSpectrogram)\n    self.gvSpectrogram.setMouseTracking(True)\n    self.gvSpectrogram.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.gvSpectrogram.setInteractive(False)\n    self.gvSpectrogram.setRenderHints(QtGui.QPainter.TextAntialiasing)\n    self.gvSpectrogram.setCacheMode(QtWidgets.QGraphicsView.CacheNone)\n    self.gvSpectrogram.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)\n    self.gvSpectrogram.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)\n    self.gvSpectrogram.setOptimizationFlags(QtWidgets.QGraphicsView.DontClipPainter | QtWidgets.QGraphicsView.DontSavePainterState)\n    self.gvSpectrogram.setObjectName('gvSpectrogram')\n    self.horizontalLayout_4.addWidget(self.gvSpectrogram)\n    self.stackedWidget.addWidget(self.pageSpectrogram)\n    self.pageLoading = QtWidgets.QWidget()\n    self.pageLoading.setObjectName('pageLoading')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.pageLoading)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.labelLoadingAutoInterpretation = QtWidgets.QLabel(self.pageLoading)\n    font = QtGui.QFont()\n    font.setPointSize(12)\n    self.labelLoadingAutoInterpretation.setFont(font)\n    self.labelLoadingAutoInterpretation.setWordWrap(True)\n    self.labelLoadingAutoInterpretation.setObjectName('labelLoadingAutoInterpretation')\n    self.verticalLayout_2.addWidget(self.labelLoadingAutoInterpretation)\n    self.stackedWidget.addWidget(self.pageLoading)\n    self.horizontalLayout_2.addWidget(self.stackedWidget)\n    self.verticalLayout_5 = QtWidgets.QVBoxLayout()\n    self.verticalLayout_5.setObjectName('verticalLayout_5')\n    self.lYScale = QtWidgets.QLabel(self.layoutWidget)\n    self.lYScale.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))\n    self.lYScale.setObjectName('lYScale')\n    self.verticalLayout_5.addWidget(self.lYScale)\n    self.sliderYScale = QtWidgets.QSlider(self.layoutWidget)\n    self.sliderYScale.setMinimum(1)\n    self.sliderYScale.setMaximum(100)\n    self.sliderYScale.setOrientation(QtCore.Qt.Vertical)\n    self.sliderYScale.setTickPosition(QtWidgets.QSlider.TicksBelow)\n    self.sliderYScale.setObjectName('sliderYScale')\n    self.verticalLayout_5.addWidget(self.sliderYScale)\n    self.horizontalLayout_2.addLayout(self.verticalLayout_5)\n    self.verticalLayout.addLayout(self.horizontalLayout_2)\n    self.horizontalLayout_3 = QtWidgets.QHBoxLayout()\n    self.horizontalLayout_3.setObjectName('horizontalLayout_3')\n    self.btnShowHideStartEnd = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnShowHideStartEnd.sizePolicy().hasHeightForWidth())\n    self.btnShowHideStartEnd.setSizePolicy(sizePolicy)\n    self.btnShowHideStartEnd.setAutoFillBackground(False)\n    self.btnShowHideStartEnd.setStyleSheet('')\n    icon = QtGui.QIcon.fromTheme('arrow-down-double')\n    self.btnShowHideStartEnd.setIcon(icon)\n    self.btnShowHideStartEnd.setCheckable(True)\n    self.btnShowHideStartEnd.setObjectName('btnShowHideStartEnd')\n    self.horizontalLayout_3.addWidget(self.btnShowHideStartEnd)\n    self.lNumSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lNumSelectedSamples.setObjectName('lNumSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lNumSelectedSamples)\n    self.lTextSelectedSamples = QtWidgets.QLabel(self.layoutWidget)\n    self.lTextSelectedSamples.setObjectName('lTextSelectedSamples')\n    self.horizontalLayout_3.addWidget(self.lTextSelectedSamples)\n    self.line_3 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_3.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_3.setObjectName('line_3')\n    self.horizontalLayout_3.addWidget(self.line_3)\n    self.lDuration = QtWidgets.QLabel(self.layoutWidget)\n    self.lDuration.setToolTip('')\n    self.lDuration.setObjectName('lDuration')\n    self.horizontalLayout_3.addWidget(self.lDuration)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget)\n    self.line_2.setFrameShape(QtWidgets.QFrame.VLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.horizontalLayout_3.addWidget(self.line_2)\n    self.labelRSSI = QtWidgets.QLabel(self.layoutWidget)\n    self.labelRSSI.setObjectName('labelRSSI')\n    self.horizontalLayout_3.addWidget(self.labelRSSI)\n    spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.horizontalLayout_3.addItem(spacerItem2)\n    self.btnFilter = QtWidgets.QToolButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('view-filter')\n    self.btnFilter.setIcon(icon)\n    self.btnFilter.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)\n    self.btnFilter.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)\n    self.btnFilter.setArrowType(QtCore.Qt.NoArrow)\n    self.btnFilter.setObjectName('btnFilter')\n    self.horizontalLayout_3.addWidget(self.btnFilter)\n    self.verticalLayout.addLayout(self.horizontalLayout_3)\n    self.additionalInfos = QtWidgets.QHBoxLayout()\n    self.additionalInfos.setSpacing(6)\n    self.additionalInfos.setObjectName('additionalInfos')\n    self.lStart = QtWidgets.QLabel(self.layoutWidget)\n    self.lStart.setObjectName('lStart')\n    self.additionalInfos.addWidget(self.lStart)\n    self.spinBoxSelectionStart = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionStart.setReadOnly(False)\n    self.spinBoxSelectionStart.setMaximum(99999999)\n    self.spinBoxSelectionStart.setObjectName('spinBoxSelectionStart')\n    self.additionalInfos.addWidget(self.spinBoxSelectionStart)\n    self.lEnd = QtWidgets.QLabel(self.layoutWidget)\n    self.lEnd.setObjectName('lEnd')\n    self.additionalInfos.addWidget(self.lEnd)\n    self.spinBoxSelectionEnd = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxSelectionEnd.setMaximum(99999999)\n    self.spinBoxSelectionEnd.setObjectName('spinBoxSelectionEnd')\n    self.additionalInfos.addWidget(self.spinBoxSelectionEnd)\n    spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem3)\n    self.lZoomText = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lZoomText.sizePolicy().hasHeightForWidth())\n    self.lZoomText.setSizePolicy(sizePolicy)\n    self.lZoomText.setMinimumSize(QtCore.QSize(0, 0))\n    self.lZoomText.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    font = QtGui.QFont()\n    font.setItalic(False)\n    font.setUnderline(False)\n    self.lZoomText.setFont(font)\n    self.lZoomText.setTextFormat(QtCore.Qt.PlainText)\n    self.lZoomText.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)\n    self.lZoomText.setObjectName('lZoomText')\n    self.additionalInfos.addWidget(self.lZoomText)\n    self.spinBoxXZoom = QtWidgets.QSpinBox(self.layoutWidget)\n    self.spinBoxXZoom.setMinimum(100)\n    self.spinBoxXZoom.setMaximum(999999999)\n    self.spinBoxXZoom.setObjectName('spinBoxXZoom')\n    self.additionalInfos.addWidget(self.spinBoxXZoom)\n    spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.additionalInfos.addItem(spacerItem4)\n    self.lSamplesInView = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesInView.setObjectName('lSamplesInView')\n    self.additionalInfos.addWidget(self.lSamplesInView)\n    self.lStrich = QtWidgets.QLabel(self.layoutWidget)\n    self.lStrich.setObjectName('lStrich')\n    self.additionalInfos.addWidget(self.lStrich)\n    self.lSamplesTotal = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesTotal.setObjectName('lSamplesTotal')\n    self.additionalInfos.addWidget(self.lSamplesTotal)\n    self.lSamplesViewText = QtWidgets.QLabel(self.layoutWidget)\n    self.lSamplesViewText.setObjectName('lSamplesViewText')\n    self.additionalInfos.addWidget(self.lSamplesViewText)\n    self.verticalLayout.addLayout(self.additionalInfos)\n    self.txtEdProto = TextEditProtocolView(self.splitter)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.txtEdProto.sizePolicy().hasHeightForWidth())\n    self.txtEdProto.setSizePolicy(sizePolicy)\n    self.txtEdProto.setMinimumSize(QtCore.QSize(0, 80))\n    self.txtEdProto.setMaximumSize(QtCore.QSize(16777215, 16777215))\n    self.txtEdProto.setBaseSize(QtCore.QSize(0, 0))\n    self.txtEdProto.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)\n    self.txtEdProto.setAcceptDrops(False)\n    self.txtEdProto.setObjectName('txtEdProto')\n    self.horizontalLayout.addWidget(self.splitter)\n    self.retranslateUi(SignalFrame)\n    self.stackedWidget.setCurrentIndex(0)\n    SignalFrame.setTabOrder(self.btnSaveSignal, self.btnReplay)\n    SignalFrame.setTabOrder(self.btnReplay, self.btnInfo)\n    SignalFrame.setTabOrder(self.btnInfo, self.btnCloseSignal)\n    SignalFrame.setTabOrder(self.btnCloseSignal, self.gvSignal)\n    SignalFrame.setTabOrder(self.gvSignal, self.lineEditSignalName)\n    SignalFrame.setTabOrder(self.lineEditSignalName, self.spinBoxNoiseTreshold)\n    SignalFrame.setTabOrder(self.spinBoxNoiseTreshold, self.spinBoxCenterOffset)\n    SignalFrame.setTabOrder(self.spinBoxCenterOffset, self.spinBoxCenterSpacing)\n    SignalFrame.setTabOrder(self.spinBoxCenterSpacing, self.spinBoxSamplesPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxSamplesPerSymbol, self.spinBoxTolerance)\n    SignalFrame.setTabOrder(self.spinBoxTolerance, self.cbModulationType)\n    SignalFrame.setTabOrder(self.cbModulationType, self.spinBoxBitsPerSymbol)\n    SignalFrame.setTabOrder(self.spinBoxBitsPerSymbol, self.btnAdvancedModulationSettings)\n    SignalFrame.setTabOrder(self.btnAdvancedModulationSettings, self.btnShowHideStartEnd)\n    SignalFrame.setTabOrder(self.btnShowHideStartEnd, self.btnAutoDetect)\n    SignalFrame.setTabOrder(self.btnAutoDetect, self.txtEdProto)\n    SignalFrame.setTabOrder(self.txtEdProto, self.cbSignalView)\n    SignalFrame.setTabOrder(self.cbSignalView, self.sliderFFTWindowSize)\n    SignalFrame.setTabOrder(self.sliderFFTWindowSize, self.sliderSpectrogramMin)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMin, self.sliderSpectrogramMax)\n    SignalFrame.setTabOrder(self.sliderSpectrogramMax, self.cbProtoView)\n    SignalFrame.setTabOrder(self.cbProtoView, self.chkBoxShowProtocol)\n    SignalFrame.setTabOrder(self.chkBoxShowProtocol, self.chkBoxSyncSelection)\n    SignalFrame.setTabOrder(self.chkBoxSyncSelection, self.sliderYScale)\n    SignalFrame.setTabOrder(self.sliderYScale, self.btnFilter)\n    SignalFrame.setTabOrder(self.btnFilter, self.spinBoxSelectionStart)\n    SignalFrame.setTabOrder(self.spinBoxSelectionStart, self.spinBoxSelectionEnd)\n    SignalFrame.setTabOrder(self.spinBoxSelectionEnd, self.spinBoxXZoom)\n    SignalFrame.setTabOrder(self.spinBoxXZoom, self.gvSpectrogram)"
        ]
    },
    {
        "func_name": "retranslateUi",
        "original": "def retranslateUi(self, SignalFrame):\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))",
        "mutated": [
            "def retranslateUi(self, SignalFrame):\n    if False:\n        i = 10\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))",
            "def retranslateUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))",
            "def retranslateUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))",
            "def retranslateUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))",
            "def retranslateUi(self, SignalFrame):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _translate = QtCore.QCoreApplication.translate\n    SignalFrame.setWindowTitle(_translate('SignalFrame', 'Frame'))\n    self.lSignalViewText.setText(_translate('SignalFrame', 'Signal view:'))\n    self.spinBoxBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.btnSaveSignal.setText(_translate('SignalFrame', '...'))\n    self.btnCloseSignal.setText(_translate('SignalFrame', 'X'))\n    self.lSignalTyp.setText(_translate('SignalFrame', '<Signaltyp>'))\n    self.lSignalNr.setText(_translate('SignalFrame', '1:'))\n    self.btnInfo.setText(_translate('SignalFrame', '...'))\n    self.btnReplay.setToolTip(_translate('SignalFrame', 'Replay signal'))\n    self.cbProtoView.setItemText(0, _translate('SignalFrame', 'Bits'))\n    self.cbProtoView.setItemText(1, _translate('SignalFrame', 'Hex'))\n    self.cbProtoView.setItemText(2, _translate('SignalFrame', 'ASCII'))\n    self.lCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lCenterSpacing.setText(_translate('SignalFrame', 'Center spacing:'))\n    self.spinBoxTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.lSamplesPerSymbol.setText(_translate('SignalFrame', 'Samples/Symbol:'))\n    self.lErrorTolerance.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the error tolerance for determining the <span style=\" font-weight:600;\">pulse lengths</span> in the demodulated signal.</p><p><span style=\" font-weight:400; font-style:italic;\">Example:</span> Say, we are reading a ones pulse and the tolerance value was set to 5. Then 5 errors (which must follow sequentially) are accepted.</p><p>Tune this value if you have <span style=\" font-weight:600;\">spiky data</span> after demodulation.</p></body></html>'))\n    self.lErrorTolerance.setText(_translate('SignalFrame', 'Error tolerance:'))\n    self.lCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View.</span></p></body></html>'))\n    self.lCenterOffset.setText(_translate('SignalFrame', 'Center:'))\n    self.labelModulation.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.labelModulation.setText(_translate('SignalFrame', 'Modulation:'))\n    self.cbSignalView.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose the view of your signal. Analog, Demodulated, Spectrogram or I/Q view.</p><p>The quadrature demodulation uses a <span style=\" font-weight:600;\">threshold of magnitudes,</span> to <span style=\" font-weight:600;\">suppress noise</span>. All samples with a magnitude lower than this threshold will be eliminated after demodulation.</p><p>Tune this value by selecting a <span style=\" font-style:italic;\">noisy area</span> and mark it as noise using <span style=\" font-weight:600;\">context menu</span>.</p><p><span style=\" font-weight:600;\">Signal colors</span>:<br/>I =&gt; <span style=\" font-weight:600; color:#3232e1;\">blue</span><br/>Q =&gt; <span style=\" font-weight:600;\">black</span></p></body></html>'))\n    self.cbSignalView.setItemText(0, _translate('SignalFrame', 'Analog'))\n    self.cbSignalView.setItemText(1, _translate('SignalFrame', 'Demodulated'))\n    self.cbSignalView.setItemText(2, _translate('SignalFrame', 'Spectrogram'))\n    self.cbSignalView.setItemText(3, _translate('SignalFrame', 'I/Q view'))\n    self.spinBoxNoiseTreshold.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.spinBoxCenterSpacing.setToolTip(_translate('SignalFrame', '<html><head/><body><p>For <span style=\" font-weight:600;\">higher order</span> modulations (&gt; 1 Bits/Symbol), there are <span style=\" font-weight:600;\">multiple</span> centers. We assume that the <span style=\" font-weight:600;\">spacing</span> between all possible symbols is <span style=\" font-weight:600;\">constant</span>. Therefore you configure the spacing between centers.</p></body></html>'))\n    self.lineEditSignalName.setText(_translate('SignalFrame', 'SignalName'))\n    self.cbModulationType.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Choose signals modulation:</p><ul><li>Amplitude Shift Keying (ASK)</li><li>Frequency Shift Keying (FSK)</li><li>Phase Shift Keying (PSK)</li></ul></body></html>'))\n    self.cbModulationType.setItemText(0, _translate('SignalFrame', 'ASK'))\n    self.cbModulationType.setItemText(1, _translate('SignalFrame', 'FSK'))\n    self.cbModulationType.setItemText(2, _translate('SignalFrame', 'PSK'))\n    self.btnAdvancedModulationSettings.setText(_translate('SignalFrame', '...'))\n    self.chkBoxSyncSelection.setToolTip(_translate('SignalFrame', 'If this is set to true, your selected protocol bits will show up in the signal view, and vice versa.'))\n    self.chkBoxSyncSelection.setText(_translate('SignalFrame', 'Sync selection'))\n    self.labelSpectrogramMin.setText(_translate('SignalFrame', 'Data<sub>min</sub>:'))\n    self.labelSpectrogramMax.setText(_translate('SignalFrame', 'Data<sub>max</sub>:'))\n    self.chkBoxShowProtocol.setToolTip(_translate('SignalFrame', 'Show the extracted protocol based on the parameters InfoLen, PauseLen and ZeroTreshold (in QuadratureDemod-View).\\n\\nIf you want your protocol to be better separated, edit the PauseLen using right-click menu from a selection in SignalView or ProtocolView.'))\n    self.chkBoxShowProtocol.setText(_translate('SignalFrame', 'Show data as'))\n    self.spinBoxSamplesPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the length of one symbol <span style=\" font-weight:600;\">in samples</span>. For <span style=\" font-weight:600;\">binary modulations </span>(default) this is the <span style=\" font-weight:600;\">bit length</span>.</p></body></html>'))\n    self.btnAutoDetect.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Automatically detect <span style=\" font-weight:600;\">center</span>, <span style=\" font-weight:600;\">bit length</span> and <span style=\" font-weight:600;\">tolerance</span>. You can also choose to additionally detect the <span style=\" font-weight:600;\">noise</span> and <span style=\" font-weight:600;\">modulation</span> when clicking this button.</p></body></html>'))\n    self.btnAutoDetect.setText(_translate('SignalFrame', 'Autodetect parameters'))\n    self.labelFFTWindowSize.setText(_translate('SignalFrame', 'FFT window size:'))\n    self.spinBoxCenterOffset.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the threshold used for determining if a <span style=\" font-weight:600;\">bit is one or zero</span>. You can set it here or grab the middle of the area in <span style=\" font-style:italic;\">Quadrature Demod View</span>.</p></body></html>'))\n    self.labelNoise.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Set the <span style=\" font-weight:600;\">noise magnitude</span> of your signal. You can tune this value to mute noise in your signal and reveal the true data.</p></body></html>'))\n    self.labelNoise.setText(_translate('SignalFrame', 'Noise:'))\n    self.lBitsPerSymbol.setToolTip(_translate('SignalFrame', '<html><head/><body><p><span style=\" font-weight:600;\">Higher order</span> modulations can carry <span style=\" font-weight:600;\">multiple</span> bits with <span style=\" font-weight:600;\">each</span> symbol. Configure <span style=\" font-weight:600;\">how many</span> bits are represented by a symbol. (Default = Binary modulation with one bit per symbol)</p></body></html>'))\n    self.lBitsPerSymbol.setText(_translate('SignalFrame', 'Bits/Symbol:'))\n    self.labelLoadingAutoInterpretation.setText(_translate('SignalFrame', '<html><head/><body><p>Running automatic detecting of demodulation parameters.</p><p>You can disable this behaviour for newly loaded signals by unchecking <span style=\" font-weight:600;\">Edit</span> -&gt; <span style=\" font-weight:600;\">Auto detect signals on loading</span>.</p></body></html>'))\n    self.lYScale.setText(_translate('SignalFrame', 'Y-Scale'))\n    self.btnShowHideStartEnd.setText(_translate('SignalFrame', '-'))\n    self.lNumSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lNumSelectedSamples.setText(_translate('SignalFrame', '0'))\n    self.lTextSelectedSamples.setToolTip(_translate('SignalFrame', 'Number of currently selected samples.'))\n    self.lTextSelectedSamples.setText(_translate('SignalFrame', 'selected'))\n    self.lDuration.setText(_translate('SignalFrame', '42 \u00b5s'))\n    self.labelRSSI.setToolTip(_translate('SignalFrame', '<html><head/><body><p>This is the average signal power of the selection. The closer this value is to zero, the stronger the selected signal is.</p></body></html>'))\n    self.labelRSSI.setText(_translate('SignalFrame', '0,434 dBm'))\n    self.btnFilter.setText(_translate('SignalFrame', 'Filter (moving average)'))\n    self.lStart.setText(_translate('SignalFrame', 'Start:'))\n    self.lEnd.setText(_translate('SignalFrame', 'End:'))\n    self.lZoomText.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.lZoomText.setText(_translate('SignalFrame', 'X-Zoom:'))\n    self.spinBoxXZoom.setToolTip(_translate('SignalFrame', '<html><head/><body><p>Current (relative) Zoom. Standard is 100%, if you zoom in, this factor increases. You can directly set a value in the spinbox or use the <span style=\" font-weight:600;\">mousewheel to zoom</span>.</p></body></html>'))\n    self.spinBoxXZoom.setSuffix(_translate('SignalFrame', '%'))\n    self.lSamplesInView.setText(_translate('SignalFrame', '0'))\n    self.lStrich.setText(_translate('SignalFrame', '/'))\n    self.lSamplesTotal.setText(_translate('SignalFrame', '0'))\n    self.lSamplesViewText.setText(_translate('SignalFrame', 'Samples in view'))"
        ]
    }
]