[
    {
        "func_name": "apply",
        "original": "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    \"\"\"\n        \u7533\u8bf7\u9000\u6b3e\n\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\n        \"\"\"\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)",
        "mutated": [
            "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    if False:\n        i = 10\n    '\\n        \u7533\u8bf7\u9000\u6b3e\\n\\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)",
            "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        \u7533\u8bf7\u9000\u6b3e\\n\\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)",
            "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        \u7533\u8bf7\u9000\u6b3e\\n\\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)",
            "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        \u7533\u8bf7\u9000\u6b3e\\n\\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)",
            "def apply(self, total_fee, refund_fee, out_refund_no, transaction_id=None, out_trade_no=None, fee_type='CNY', op_user_id=None, device_info=None, refund_account='REFUND_SOURCE_UNSETTLED_FUNDS', refund_desc=None, notify_url=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        \u7533\u8bf7\u9000\u6b3e\\n\\n        :param total_fee: \u8ba2\u5355\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param refund_fee: \u9000\u6b3e\u603b\u91d1\u989d\uff0c\u5355\u4f4d\u4e3a\u5206\\n        :param out_refund_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u9000\u6b3e\u5355\u53f7\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u552f\u4e00\uff0c\u540c\u4e00\u9000\u6b3e\u5355\u53f7\u591a\u6b21\u8bf7\u6c42\u53ea\u9000\u4e00\u7b14\\n        :param transaction_id: \u53ef\u9009\uff0c\u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u53ef\u9009\uff0c\u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\uff0c\u4e0e transaction_id \u4e8c\u9009\u4e00\\n        :param fee_type: \u53ef\u9009\uff0c\u8d27\u5e01\u7c7b\u578b\uff0c\u7b26\u5408ISO 4217\u6807\u51c6\u7684\u4e09\u4f4d\u5b57\u6bcd\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4eba\u6c11\u5e01\uff1aCNY\\n        :param op_user_id: \u53ef\u9009\uff0c\u64cd\u4f5c\u5458\u5e10\u53f7, \u9ed8\u8ba4\u4e3a\u5546\u6237\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :param refund_desc: \u53ef\u9009\uff0c\u9000\u6b3e\u539f\u56e0\\n        :param refund_account: \u53ef\u9009\uff0c\u9000\u6b3e\u8d44\u91d1\u6765\u6e90\uff0c\u4ec5\u9488\u5bf9\u8001\u8d44\u91d1\u6d41\u5546\u6237\u4f7f\u7528\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672a\u7ed3\u7b97\u8d44\u91d1\u9000\u6b3e\\n        :param notify_url: \u53ef\u9009\uff0c\u5f02\u6b65\u63a5\u6536\u5fae\u4fe1\u652f\u4ed8\u9000\u6b3e\u7ed3\u679c\u901a\u77e5\u7684\u56de\u8c03\u5730\u5740\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'total_fee': total_fee, 'refund_fee': refund_fee, 'refund_fee_type': fee_type, 'op_user_id': op_user_id if op_user_id else self.mch_id, 'refund_account': refund_account, 'refund_desc': refund_desc, 'notify_url': notify_url}\n    return self._post('secapi/pay/refund', data=data)"
        ]
    },
    {
        "func_name": "query",
        "original": "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    \"\"\"\n        \u67e5\u8be2\u9000\u6b3e\n\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\n        \"\"\"\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)",
        "mutated": [
            "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    if False:\n        i = 10\n    '\\n        \u67e5\u8be2\u9000\u6b3e\\n\\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)",
            "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        \u67e5\u8be2\u9000\u6b3e\\n\\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)",
            "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        \u67e5\u8be2\u9000\u6b3e\\n\\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)",
            "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        \u67e5\u8be2\u9000\u6b3e\\n\\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)",
            "def query(self, refund_id=None, out_refund_no=None, transaction_id=None, out_trade_no=None, device_info=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        \u67e5\u8be2\u9000\u6b3e\\n\\n        :param refund_id: \u5fae\u4fe1\u9000\u6b3e\u5355\u53f7\\n        :param out_refund_no: \u5546\u6237\u9000\u6b3e\u5355\u53f7\\n        :param transaction_id: \u5fae\u4fe1\u8ba2\u5355\u53f7\\n        :param out_trade_no: \u5546\u6237\u7cfb\u7edf\u5185\u90e8\u7684\u8ba2\u5355\u53f7\\n        :param device_info: \u53ef\u9009\uff0c\u7ec8\u7aef\u8bbe\u5907\u53f7\\n        :return: \u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\\n        '\n    data = {'appid': self.appid, 'device_info': device_info, 'transaction_id': transaction_id, 'out_trade_no': out_trade_no, 'out_refund_no': out_refund_no, 'refund_id': refund_id}\n    return self._post('pay/refundquery', data=data)"
        ]
    }
]