[
    {
        "func_name": "test_filter_dagster_events_from_cli_logs",
        "original": "def test_filter_dagster_events_from_cli_logs():\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)",
        "mutated": [
            "def test_filter_dagster_events_from_cli_logs():\n    if False:\n        i = 10\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    sameple_output = '\\n    2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_something\".\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Started execution of step \\\\\"do_something.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_something\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_something\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_something\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.93123900000015}\\n                 pid = 2467\\n               solid = \"do_something\"\\n    solid_definition = \"do_something\"\\n            step_key = \"do_something\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.93123900000015}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_something\", \"solid_definition\": \"do_something\", \"step_key\": \"do_something\"}, \"message\": \"Finished execution of step \\\\\"do_something.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_something\", \"parent\": null}, \"step_key\": \"do_something\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_START - Started execution of step \"do_input\".\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": null, \"event_type_value\": \"STEP_START\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Started execution of step \\\\\"do_input.compute\\\\\".\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_INPUT - Got input \"x\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"input_name\": \"x\", \"type_check_data\": [true, \"x\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepInputData\", \"input_name\": \"x\", \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"x\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_INPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Got input \\\\\"x\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_OUTPUT - Yielded output \"result\" of type \"Any\". (Type check passed).\\n event_specific_data = {\"step_output_handle\": [\"do_input\", \"result\"], \"type_check_data\": [true, \"result\", null, []]}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepOutputData\", \"step_output_handle\": {\"__class__\": \"StepOutputHandle\", \"output_name\": \"result\", \"step_key\": \"do_input\"}, \"type_check_data\": {\"__class__\": \"TypeCheckData\", \"description\": null, \"label\": \"result\", \"metadata_entries\": [], \"success\": true}}, \"event_type_value\": \"STEP_OUTPUT\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Yielded output \\\\\"result\\\\\" of type \\\\\"Any\\\\\". (Type check passed).\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n2020-07-17 11:31:58 - dagster - DEBUG - foo - new_run - STEP_SUCCESS - Finished execution of step \"do_input\" in 13ms.\\n event_specific_data = {\"duration_ms\": 13.923579000000075}\\n                 pid = 2467\\n               solid = \"do_input\"\\n    solid_definition = \"do_input\"\\n            step_key = \"do_input\"\\n{\"__class__\": \"DagsterEvent\", \"event_specific_data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_type_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"solid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n'.split('\\n')\n    res = filter_dagster_events_from_cli_logs(sameple_output)\n    assert len(res) == 7\n    last_event = res[-1]\n    check.inst(last_event, DagsterEvent)\n    check.inst(last_event.event_specific_data, StepSuccessData)"
        ]
    },
    {
        "func_name": "test_filter_dagster_events_from_cli_logs_coalesce",
        "original": "def test_filter_dagster_events_from_cli_logs_coalesce():\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)",
        "mutated": [
            "def test_filter_dagster_events_from_cli_logs_coalesce():\n    if False:\n        i = 10\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs_coalesce():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs_coalesce():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs_coalesce():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)",
            "def test_filter_dagster_events_from_cli_logs_coalesce():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    logs = '\\n    {\"__class__\": \"DagsterEvent\", \"event_specific\\n    _data\": {\"__class__\": \"StepSuccessData\", \"duration_ms\": 13.923579000000075}, \"event_typ\\n    e_value\": \"STEP_SUCCESS\", \"logging_tags\": {\"pipeline\": \"foo\", \"so\\n    lid\": \"do_input\", \"solid_definition\": \"do_input\", \"step_key\": \"do_input\"}, \"message\": \"Finished execution of step \\\\\"do_input.compute\\\\\" in 13ms.\", \"pid\": 2467, \"pipeline_name\": \"foo\", \"solid_handle\": {\"__class__\": \"SolidHandle\", \"name\": \"do_input\", \"parent\": null}, \"step_key\": \"do_input\", \"step_kind_value\": \"COMPUTE\"}\\n    '.split('\\n')\n    res = filter_dagster_events_from_cli_logs(logs)\n    assert len(res) == 1\n    event = res[0]\n    check.inst(event, DagsterEvent)\n    check.inst(event.event_specific_data, StepSuccessData)"
        ]
    },
    {
        "func_name": "test_filter_dagster_events_from_cli_logs_user_json",
        "original": "def test_filter_dagster_events_from_cli_logs_user_json():\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []",
        "mutated": [
            "def test_filter_dagster_events_from_cli_logs_user_json():\n    if False:\n        i = 10\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []",
            "def test_filter_dagster_events_from_cli_logs_user_json():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []",
            "def test_filter_dagster_events_from_cli_logs_user_json():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []",
            "def test_filter_dagster_events_from_cli_logs_user_json():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []",
            "def test_filter_dagster_events_from_cli_logs_user_json():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    logs = '\\n    {}\\n    '.split('\\n')\n    assert filter_dagster_events_from_cli_logs(logs) == []"
        ]
    }
]