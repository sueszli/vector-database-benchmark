[
    {
        "func_name": "escribir",
        "original": "def escribir(nombre_txt, tipo):\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()",
        "mutated": [
            "def escribir(nombre_txt, tipo):\n    if False:\n        i = 10\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()",
            "def escribir(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()",
            "def escribir(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()",
            "def escribir(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()",
            "def escribir(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    with open(nombre_txt, tipo) as f:\n        print('escribe lo que quieras presiona enterpara saltar de linea y ME QUIERO IR para salir: ')\n        while True:\n            nueva_linea = input()\n            if nueva_linea == 'ME QUIERO IR':\n                break\n            else:\n                f.write(f'{nueva_linea} \\n')\n    f.close()"
        ]
    },
    {
        "func_name": "leer",
        "original": "def leer(nombre_txt, tipo):\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)",
        "mutated": [
            "def leer(nombre_txt, tipo):\n    if False:\n        i = 10\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)",
            "def leer(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)",
            "def leer(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)",
            "def leer(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)",
            "def leer(nombre_txt, tipo):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print('continua donde te quedaste \\n')\n    with open(nombre_txt, 'r') as f:\n        while True:\n            line = f.readline()\n            if not line:\n                break\n            print(line.strip())\n    f.close\n    escribir(nombre_txt, tipo)"
        ]
    }
]