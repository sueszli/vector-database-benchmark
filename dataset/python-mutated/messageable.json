[
    {
        "func_name": "message",
        "original": "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    \"\"\"Send a message to a :class:`.Redditor` or a :class:`.Subreddit`'s moderators (modmail).\n\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\n            message from. When provided, messages are sent from the subreddit rather\n            than from the authenticated user.\n\n            .. note::\n\n                The authenticated user must be a moderator of the subreddit and have the\n                ``mail`` moderator permission.\n\n        :param message: The message content.\n        :param subject: The subject of the message.\n\n        For example, to send a private message to u/spez, try:\n\n        .. code-block:: python\n\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\n\n        To send a message to u/spez from the moderators of r/test try:\n\n        .. code-block:: python\n\n            reddit.redditor(\"spez\").message(\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\n            )\n\n        To send a message to the moderators of r/test, try:\n\n        .. code-block:: python\n\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\n\n        \"\"\"\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)",
        "mutated": [
            "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    if False:\n        i = 10\n    'Send a message to a :class:`.Redditor` or a :class:`.Subreddit`\\'s moderators (modmail).\\n\\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\\n            message from. When provided, messages are sent from the subreddit rather\\n            than from the authenticated user.\\n\\n            .. note::\\n\\n                The authenticated user must be a moderator of the subreddit and have the\\n                ``mail`` moderator permission.\\n\\n        :param message: The message content.\\n        :param subject: The subject of the message.\\n\\n        For example, to send a private message to u/spez, try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\\n\\n        To send a message to u/spez from the moderators of r/test try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(\\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\\n            )\\n\\n        To send a message to the moderators of r/test, try:\\n\\n        .. code-block:: python\\n\\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\\n\\n        '\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)",
            "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Send a message to a :class:`.Redditor` or a :class:`.Subreddit`\\'s moderators (modmail).\\n\\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\\n            message from. When provided, messages are sent from the subreddit rather\\n            than from the authenticated user.\\n\\n            .. note::\\n\\n                The authenticated user must be a moderator of the subreddit and have the\\n                ``mail`` moderator permission.\\n\\n        :param message: The message content.\\n        :param subject: The subject of the message.\\n\\n        For example, to send a private message to u/spez, try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\\n\\n        To send a message to u/spez from the moderators of r/test try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(\\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\\n            )\\n\\n        To send a message to the moderators of r/test, try:\\n\\n        .. code-block:: python\\n\\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\\n\\n        '\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)",
            "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Send a message to a :class:`.Redditor` or a :class:`.Subreddit`\\'s moderators (modmail).\\n\\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\\n            message from. When provided, messages are sent from the subreddit rather\\n            than from the authenticated user.\\n\\n            .. note::\\n\\n                The authenticated user must be a moderator of the subreddit and have the\\n                ``mail`` moderator permission.\\n\\n        :param message: The message content.\\n        :param subject: The subject of the message.\\n\\n        For example, to send a private message to u/spez, try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\\n\\n        To send a message to u/spez from the moderators of r/test try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(\\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\\n            )\\n\\n        To send a message to the moderators of r/test, try:\\n\\n        .. code-block:: python\\n\\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\\n\\n        '\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)",
            "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Send a message to a :class:`.Redditor` or a :class:`.Subreddit`\\'s moderators (modmail).\\n\\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\\n            message from. When provided, messages are sent from the subreddit rather\\n            than from the authenticated user.\\n\\n            .. note::\\n\\n                The authenticated user must be a moderator of the subreddit and have the\\n                ``mail`` moderator permission.\\n\\n        :param message: The message content.\\n        :param subject: The subject of the message.\\n\\n        For example, to send a private message to u/spez, try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\\n\\n        To send a message to u/spez from the moderators of r/test try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(\\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\\n            )\\n\\n        To send a message to the moderators of r/test, try:\\n\\n        .. code-block:: python\\n\\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\\n\\n        '\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)",
            "@_deprecate_args('subject', 'message', 'from_subreddit')\ndef message(self, *, from_subreddit: praw.models.Subreddit | str | None=None, message: str, subject: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Send a message to a :class:`.Redditor` or a :class:`.Subreddit`\\'s moderators (modmail).\\n\\n        :param from_subreddit: A :class:`.Subreddit` instance or string to send the\\n            message from. When provided, messages are sent from the subreddit rather\\n            than from the authenticated user.\\n\\n            .. note::\\n\\n                The authenticated user must be a moderator of the subreddit and have the\\n                ``mail`` moderator permission.\\n\\n        :param message: The message content.\\n        :param subject: The subject of the message.\\n\\n        For example, to send a private message to u/spez, try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(subject=\"TEST\", message=\"test message from PRAW\")\\n\\n        To send a message to u/spez from the moderators of r/test try:\\n\\n        .. code-block:: python\\n\\n            reddit.redditor(\"spez\").message(\\n                subject=\"TEST\", message=\"test message from r/test\", from_subreddit=\"test\"\\n            )\\n\\n        To send a message to the moderators of r/test, try:\\n\\n        .. code-block:: python\\n\\n            reddit.subreddit(\"test\").message(subject=\"TEST\", message=\"test PM from PRAW\")\\n\\n        '\n    data = {'subject': subject, 'text': message, 'to': f\"{getattr(self.__class__, 'MESSAGE_PREFIX', '')}{self}\"}\n    if from_subreddit:\n        data['from_sr'] = str(from_subreddit)\n    self._reddit.post(API_PATH['compose'], data=data)"
        ]
    }
]