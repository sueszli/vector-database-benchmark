"""Binary to upload benchmark generated by BenchmarkLogger to remote repo.

This library require google cloud bigquery lib as dependency, which can be
installed with:
  > pip install --upgrade google-cloud-bigquery
"""
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
import os
import sys
import uuid
from absl import app as absl_app
from absl import flags
from official.benchmark import benchmark_uploader
from official.utils.flags import core as flags_core
from official.utils.logs import logger

def main(_):
    if False:
        i = 10
        return i + 15
    if not flags.FLAGS.benchmark_log_dir:
        print('Usage: benchmark_uploader.py --benchmark_log_dir=/some/dir')
        sys.exit(1)
    uploader = benchmark_uploader.BigQueryUploader(gcp_project=flags.FLAGS.gcp_project)
    run_id = str(uuid.uuid4())
    run_json_file = os.path.join(flags.FLAGS.benchmark_log_dir, logger.BENCHMARK_RUN_LOG_FILE_NAME)
    metric_json_file = os.path.join(flags.FLAGS.benchmark_log_dir, logger.METRIC_LOG_FILE_NAME)
    uploader.upload_benchmark_run_file(flags.FLAGS.bigquery_data_set, flags.FLAGS.bigquery_run_table, run_id, run_json_file)
    uploader.upload_metric_file(flags.FLAGS.bigquery_data_set, flags.FLAGS.bigquery_metric_table, run_id, metric_json_file)
    uploader.insert_run_status(flags.FLAGS.bigquery_data_set, flags.FLAGS.bigquery_run_status_table, run_id, logger.RUN_STATUS_SUCCESS)
if __name__ == '__main__':
    flags_core.define_benchmark()
    flags.adopt_module_key_flags(flags_core)
    absl_app.run(main=main)