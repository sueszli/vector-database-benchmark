[
    {
        "func_name": "test_multiple_conditions",
        "original": "def test_multiple_conditions():\n    \"\"\"Basic tests for properties conditioned on multiple other properties.\"\"\"\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()",
        "mutated": [
            "def test_multiple_conditions():\n    if False:\n        i = 10\n    'Basic tests for properties conditioned on multiple other properties.'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()",
            "def test_multiple_conditions():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Basic tests for properties conditioned on multiple other properties.'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()",
            "def test_multiple_conditions():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Basic tests for properties conditioned on multiple other properties.'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()",
            "def test_multiple_conditions():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Basic tests for properties conditioned on multiple other properties.'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()",
            "def test_multiple_conditions():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Basic tests for properties conditioned on multiple other properties.'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config', 'toolset=testToolset'], pass_toolset=False, use_test_config=False)\n    t.write('testToolset.jam', 'import feature ;\\nfeature.extend toolset : testToolset ;\\nrule init ( ) { }\\n')\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"testToolset\"])\\ndef init ( ): pass\\n')\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 1 0 : incidental ;\\nfeature.feature bbb : 1 0 : incidental ;\\nfeature.feature ccc : 1 0 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <description>d\\n    <aaa>0:<description>a0\\n    <aaa>1:<description>a1\\n    <aaa>0,<bbb>0:<description>a0-b0\\n    <aaa>0,<bbb>1:<description>a0-b1\\n    <aaa>1,<bbb>0:<description>a1-b0\\n    <aaa>1,<bbb>1:<description>a1-b1\\n    <aaa>0,<bbb>0,<ccc>0:<description>a0-b0-c0\\n    <aaa>0,<bbb>0,<ccc>1:<description>a0-b0-c1\\n    <aaa>0,<bbb>1,<ccc>1:<description>a0-b1-c1\\n    <aaa>1,<bbb>0,<ccc>1:<description>a1-b0-c1\\n    <aaa>1,<bbb>1,<ccc>0:<description>a1-b1-c0\\n    <aaa>1,<bbb>1,<ccc>1:<description>a1-b1-c1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/', False)\n    t.expect_output_lines('description: /a1/')\n    t.expect_output_lines('description: /a0-b0/', False)\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/')\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/')\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=1'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/', False)\n    t.expect_output_lines('description: /a0-b0-c1/')\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.run_build_system(['aaa=0', 'bbb=0', 'ccc=0'])\n    t.expect_output_lines('description: /d/')\n    t.expect_output_lines('description: /a0/')\n    t.expect_output_lines('description: /a1/', False)\n    t.expect_output_lines('description: /a0-b0/')\n    t.expect_output_lines('description: /a0-b1/', False)\n    t.expect_output_lines('description: /a1-b0/', False)\n    t.expect_output_lines('description: /a1-b1/', False)\n    t.expect_output_lines('description: /a0-b0-c0/')\n    t.expect_output_lines('description: /a0-b0-c1/', False)\n    t.expect_output_lines('description: /a0-b1-c1/', False)\n    t.expect_output_lines('description: /a1-b0-c1/', False)\n    t.expect_output_lines('description: /a1-b1-c0/', False)\n    t.expect_output_lines('description: /a1-b1-c1/', False)\n    t.cleanup()"
        ]
    },
    {
        "func_name": "test_multiple_conditions_with_toolset_version",
        "original": "def test_multiple_conditions_with_toolset_version():\n    \"\"\"\n      Regression tests for properties conditioned on the toolset version\n    subfeature and some additional properties.\n\n    \"\"\"\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()",
        "mutated": [
            "def test_multiple_conditions_with_toolset_version():\n    if False:\n        i = 10\n    '\\n      Regression tests for properties conditioned on the toolset version\\n    subfeature and some additional properties.\\n\\n    '\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()",
            "def test_multiple_conditions_with_toolset_version():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n      Regression tests for properties conditioned on the toolset version\\n    subfeature and some additional properties.\\n\\n    '\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()",
            "def test_multiple_conditions_with_toolset_version():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n      Regression tests for properties conditioned on the toolset version\\n    subfeature and some additional properties.\\n\\n    '\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()",
            "def test_multiple_conditions_with_toolset_version():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n      Regression tests for properties conditioned on the toolset version\\n    subfeature and some additional properties.\\n\\n    '\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()",
            "def test_multiple_conditions_with_toolset_version():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n      Regression tests for properties conditioned on the toolset version\\n    subfeature and some additional properties.\\n\\n    '\n    toolset = 'testToolset'\n    t = BoostBuild.Tester(['--user-config=', '--ignore-site-config'], pass_toolset=False, use_test_config=False)\n    t.write(toolset + '.jam', 'import feature ;\\nfeature.extend toolset : %(toolset)s ;\\nfeature.subfeature toolset %(toolset)s : version : 0 1 ;\\nrule init ( version ? ) { }\\n' % {'toolset': toolset})\n    t.write('testToolset.py', 'from b2.build import feature\\nfeature.extend(\\'toolset\\', [\"%(toolset)s\"])\\nfeature.subfeature(\\'toolset\\', \"%(toolset)s\", \"version\", [\\'0\\',\\'1\\'])\\ndef init (version=\\'\\'): pass\\n' % {'toolset': toolset})\n    t.write('jamroot.jam', 'import feature ;\\nimport notfile ;\\nimport toolset ;\\n\\ntoolset.using testToolset ;\\n\\nfeature.feature description : : free incidental ;\\nfeature.feature aaa : 0 1 : incidental ;\\nfeature.feature bbb : 0 1 : incidental ;\\nfeature.feature ccc : 0 1 : incidental ;\\n\\nrule buildRule ( name : targets ? : properties * )\\n{\\n    local ttt = [ feature.get-values toolset                     : $(properties) ] ;\\n    local vvv = [ feature.get-values \"toolset-testToolset:version\" : $(properties) ] ;\\n    local aaa = [ feature.get-values aaa                         : $(properties) ] ;\\n    local bbb = [ feature.get-values bbb                         : $(properties) ] ;\\n    local ccc = [ feature.get-values ccc                         : $(properties) ] ;\\n    ECHO \"toolset:\" /$(ttt)/ \"version:\" /$(vvv)/ \"aaa/bbb/ccc:\" /$(aaa)/$(bbb)/$(ccc)/ ;\\n    for local description in [ feature.get-values description : $(properties) ]\\n    {\\n        ECHO \"description:\" /$(description)/ ;\\n    }\\n}\\n\\nnotfile testTarget1 : @buildRule : :\\n    <toolset>testToolset,<aaa>0:<description>t-a0\\n    <toolset>testToolset,<aaa>1:<description>t-a1\\n\\n    <toolset>testToolset-0,<aaa>0:<description>t0-a0\\n    <toolset>testToolset-0,<aaa>1:<description>t0-a1\\n    <toolset>testToolset-1,<aaa>0:<description>t1-a0\\n    <toolset>testToolset-1,<aaa>1:<description>t1-a1\\n\\n    <toolset>testToolset,<aaa>0,<bbb>0:<description>t-a0-b0\\n    <toolset>testToolset,<aaa>0,<bbb>1:<description>t-a0-b1\\n    <toolset>testToolset,<aaa>1,<bbb>0:<description>t-a1-b0\\n    <toolset>testToolset,<aaa>1,<bbb>1:<description>t-a1-b1\\n\\n    <aaa>0,<toolset>testToolset,<bbb>0:<description>a0-t-b0\\n    <aaa>0,<toolset>testToolset,<bbb>1:<description>a0-t-b1\\n    <aaa>1,<toolset>testToolset,<bbb>0:<description>a1-t-b0\\n    <aaa>1,<toolset>testToolset,<bbb>1:<description>a1-t-b1\\n\\n    <aaa>0,<bbb>0,<toolset>testToolset:<description>a0-b0-t\\n    <aaa>0,<bbb>1,<toolset>testToolset:<description>a0-b1-t\\n    <aaa>1,<bbb>0,<toolset>testToolset:<description>a1-b0-t\\n    <aaa>1,<bbb>1,<toolset>testToolset:<description>a1-b1-t\\n\\n    <toolset>testToolset-0,<aaa>0,<bbb>0:<description>t0-a0-b0\\n    <toolset>testToolset-0,<aaa>0,<bbb>1:<description>t0-a0-b1\\n    <toolset>testToolset-0,<aaa>1,<bbb>0:<description>t0-a1-b0\\n    <toolset>testToolset-0,<aaa>1,<bbb>1:<description>t0-a1-b1\\n    <toolset>testToolset-1,<aaa>0,<bbb>0:<description>t1-a0-b0\\n    <toolset>testToolset-1,<aaa>0,<bbb>1:<description>t1-a0-b1\\n    <toolset>testToolset-1,<aaa>1,<bbb>0:<description>t1-a1-b0\\n    <toolset>testToolset-1,<aaa>1,<bbb>1:<description>t1-a1-b1\\n\\n    <aaa>0,<toolset>testToolset-1,<bbb>0:<description>a0-t1-b0\\n    <aaa>0,<toolset>testToolset-1,<bbb>1:<description>a0-t1-b1\\n    <aaa>1,<toolset>testToolset-0,<bbb>0:<description>a1-t0-b0\\n    <aaa>1,<toolset>testToolset-0,<bbb>1:<description>a1-t0-b1\\n\\n    <bbb>0,<aaa>1,<toolset>testToolset-0:<description>b0-a1-t0\\n    <bbb>0,<aaa>0,<toolset>testToolset-1:<description>b0-a0-t1\\n    <bbb>0,<aaa>1,<toolset>testToolset-1:<description>b0-a1-t1\\n    <bbb>1,<aaa>0,<toolset>testToolset-1:<description>b1-a0-t1\\n    <bbb>1,<aaa>1,<toolset>testToolset-0:<description>b1-a1-t0\\n    <bbb>1,<aaa>1,<toolset>testToolset-1:<description>b1-a1-t1 ;\\n')\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-0' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/')\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/', False)\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/')\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/', False)\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/')\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/')\n    t.expect_output_lines('description: /b1-a1-t1/', False)\n    t.run_build_system(['aaa=1', 'bbb=1', 'ccc=1', 'toolset=%s-1' % toolset])\n    t.expect_output_lines('description: /t-a0/', False)\n    t.expect_output_lines('description: /t-a1/')\n    t.expect_output_lines('description: /t0-a0/', False)\n    t.expect_output_lines('description: /t0-a1/', False)\n    t.expect_output_lines('description: /t1-a0/', False)\n    t.expect_output_lines('description: /t1-a1/')\n    t.expect_output_lines('description: /t-a0-b0/', False)\n    t.expect_output_lines('description: /t-a0-b1/', False)\n    t.expect_output_lines('description: /t-a1-b0/', False)\n    t.expect_output_lines('description: /t-a1-b1/')\n    t.expect_output_lines('description: /a0-t-b0/', False)\n    t.expect_output_lines('description: /a0-t-b1/', False)\n    t.expect_output_lines('description: /a1-t-b0/', False)\n    t.expect_output_lines('description: /a1-t-b1/')\n    t.expect_output_lines('description: /a0-b0-t/', False)\n    t.expect_output_lines('description: /a0-b1-t/', False)\n    t.expect_output_lines('description: /a1-b0-t/', False)\n    t.expect_output_lines('description: /a1-b1-t/')\n    t.expect_output_lines('description: /t0-a0-b0/', False)\n    t.expect_output_lines('description: /t0-a0-b1/', False)\n    t.expect_output_lines('description: /t0-a1-b0/', False)\n    t.expect_output_lines('description: /t0-a1-b1/', False)\n    t.expect_output_lines('description: /t1-a0-b0/', False)\n    t.expect_output_lines('description: /t1-a0-b1/', False)\n    t.expect_output_lines('description: /t1-a1-b0/', False)\n    t.expect_output_lines('description: /t1-a1-b1/')\n    t.expect_output_lines('description: /a0-t1-b0/', False)\n    t.expect_output_lines('description: /a0-t1-b1/', False)\n    t.expect_output_lines('description: /a1-t0-b0/', False)\n    t.expect_output_lines('description: /a1-t0-b1/', False)\n    t.expect_output_lines('description: /b0-a1-t0/', False)\n    t.expect_output_lines('description: /b0-a0-t1/', False)\n    t.expect_output_lines('description: /b0-a1-t1/', False)\n    t.expect_output_lines('description: /b1-a0-t1/', False)\n    t.expect_output_lines('description: /b1-a1-t0/', False)\n    t.expect_output_lines('description: /b1-a1-t1/')\n    t.cleanup()"
        ]
    }
]