import numpy as np
from . import draw

def polygon2mask(image_shape, polygon):
    if False:
        print('Hello World!')
    "Create a binary mask from a polygon.\n\n    Parameters\n    ----------\n    image_shape : tuple of size 2\n        The shape of the mask.\n    polygon : (N, 2) array_like\n        The polygon coordinates of shape (N, 2) where N is\n        the number of points. The coordinates are (row, column).\n\n    Returns\n    -------\n    mask : 2-D ndarray of type 'bool'\n        The binary mask that corresponds to the input polygon.\n\n    See Also\n    --------\n    polygon:\n        Generate coordinates of pixels inside a polygon.\n\n    Notes\n    -----\n    This function does not do any border checking. Parts of the polygon that\n    are outside the coordinate space defined by `image_shape` are not drawn.\n\n    Examples\n    --------\n    >>> import skimage as ski\n    >>> image_shape = (10, 10)\n    >>> polygon = np.array([[1, 1], [2, 7], [8, 4]])\n    >>> mask = ski.draw.polygon2mask(image_shape, polygon)\n    >>> mask.astype(int)\n    array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n           [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],\n           [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n           [0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\n           [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n           [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])\n\n    If vertices / points of the `polygon` are outside the coordinate space\n    defined by `image_shape`, only a part (or none at all) of the polygon is\n    drawn in the mask.\n\n    >>> offset = np.array([[2, -4]])\n    >>> ski.draw.polygon2mask(image_shape, polygon - offset).astype(int)\n    array([[0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n           [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])\n    "
    polygon = np.asarray(polygon)
    (vertex_row_coords, vertex_col_coords) = polygon.T
    (fill_row_coords, fill_col_coords) = draw.polygon(vertex_row_coords, vertex_col_coords, image_shape)
    mask = np.zeros(image_shape, dtype=bool)
    mask[fill_row_coords, fill_col_coords] = True
    return mask