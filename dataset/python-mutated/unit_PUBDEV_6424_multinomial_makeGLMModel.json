[
    {
        "func_name": "test_glm_multinomial_makeGLMModel",
        "original": "def test_glm_multinomial_makeGLMModel():\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')",
        "mutated": [
            "def test_glm_multinomial_makeGLMModel():\n    if False:\n        i = 10\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')",
            "def test_glm_multinomial_makeGLMModel():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')",
            "def test_glm_multinomial_makeGLMModel():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')",
            "def test_glm_multinomial_makeGLMModel():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')",
            "def test_glm_multinomial_makeGLMModel():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    d = h2o.import_file(path=pyunit_utils.locate('smalldata/covtype/covtype.20k.data'))\n    mL = glm(family='multinomial', alpha=[0.1], Lambda=[0.9])\n    d[54] = d[54].asfactor()\n    mL.train(training_frame=d, x=list(range(0, 54)), y=54)\n    r = glm.getGLMRegularizationPath(mL)\n    m2 = glm.makeGLMModel(model=mL, coefs=r['coefficients'][0])\n    f1 = mL.predict(d)\n    f2 = m2.predict(d)\n    pyunit_utils.compare_frames_local(f1, f2, prob=1)\n    coefs = r['coefficients'][0]\n    coefs['wendy_dreams'] = 0.123\n    try:\n        glm.makeGLMModel(model=mL, coefs=coefs)\n        assert False, 'Should have thrown an exception!'\n    except Exception as ex:\n        print(ex)\n        temp = str(ex)\n        assert 'Server error java.lang.IllegalArgumentException:' in temp and 'model coefficient length 371 is different from coefficient provided by user' in temp, 'Wrong exception was received.'\n        print('glm Multinomial makeGLMModel test completed!')"
        ]
    }
]