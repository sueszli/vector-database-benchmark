[
    {
        "func_name": "__init__",
        "original": "def __init__(self, rid):\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']",
        "mutated": [
            "def __init__(self, rid):\n    if False:\n        i = 10\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']",
            "def __init__(self, rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']",
            "def __init__(self, rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']",
            "def __init__(self, rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']",
            "def __init__(self, rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    var = dict(parse_qsl(urlsplit(rid).query))\n    mid = var.get('mid')\n    with requests.Session() as self.s:\n        res = requests.get(f'https://matchweb.sports.qq.com/kbs/matchDetail?mid={mid}').json()\n        self.vid = res['data']['liveId']\n        self.livepid = res['data']['programId']"
        ]
    },
    {
        "func_name": "get_real_url",
        "original": "def get_real_url(self):\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl",
        "mutated": [
            "def get_real_url(self):\n    if False:\n        i = 10\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl",
            "def get_real_url(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl",
            "def get_real_url(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl",
            "def get_real_url(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl",
            "def get_real_url(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    tt = int(time.time())\n    week = int(time.strftime('%w'))\n    s = ('06fc1464', '4244ce1b', '77de31c5', 'e0149fa2', '60394ced', '2da639f0', 'c2f0cf9f')\n    ha = f'{s[week - 1]}{self.vid}{tt}*#06#40201'\n    ckey = hashlib.md5(ha.encode('utf-8')).hexdigest()\n    params = {'cmd': 2, 'cnlid': self.vid, 'pla': 0, 'stream': 2, 'system': 0, 'appVer': '3.0.0.142', 'encryptVer': f'7.{(7 if week == 0 else week)}', 'qq': 0, 'device': 'PC', 'guid': 'f56776a1fa52e9c8c4987bfecfbf0503', 'defn': 'shd', 'host': 'qq.com', 'livepid': self.livepid, 'logintype': 1, 'vip_status': 1, 'livequeue': 1, 'fntick': tt, 'tm': tt, 'sdtfrom': 1107, 'platform': 40201, 'cKey': ckey, 'queueStatus': 0, 'sphttps': 1, 'authext': '{}', 'auth_ext': '{}', 'auth_from': 40001}\n    res = self.s.get('https://infozb6.video.qq.com/', params=params).json()\n    playurl = res.get('playurl', 0)\n    if res['errinfo']:\n        raise Exception('errinfo')\n    else:\n        return playurl"
        ]
    },
    {
        "func_name": "get_real_url",
        "original": "def get_real_url(rid):\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False",
        "mutated": [
            "def get_real_url(rid):\n    if False:\n        i = 10\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False",
            "def get_real_url(rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False",
            "def get_real_url(rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False",
            "def get_real_url(rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False",
            "def get_real_url(rid):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    try:\n        kbs = KBS(rid)\n        return kbs.get_real_url()\n    except Exception as e:\n        print('Exception\uff1a', e)\n        return False"
        ]
    }
]