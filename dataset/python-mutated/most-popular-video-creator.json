[
    {
        "func_name": "mostPopularCreator",
        "original": "def mostPopularCreator(self, creators, ids, views):\n    \"\"\"\n        :type creators: List[str]\n        :type ids: List[str]\n        :type views: List[int]\n        :rtype: List[List[str]]\n        \"\"\"\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]",
        "mutated": [
            "def mostPopularCreator(self, creators, ids, views):\n    if False:\n        i = 10\n    '\\n        :type creators: List[str]\\n        :type ids: List[str]\\n        :type views: List[int]\\n        :rtype: List[List[str]]\\n        '\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]",
            "def mostPopularCreator(self, creators, ids, views):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        :type creators: List[str]\\n        :type ids: List[str]\\n        :type views: List[int]\\n        :rtype: List[List[str]]\\n        '\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]",
            "def mostPopularCreator(self, creators, ids, views):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        :type creators: List[str]\\n        :type ids: List[str]\\n        :type views: List[int]\\n        :rtype: List[List[str]]\\n        '\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]",
            "def mostPopularCreator(self, creators, ids, views):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        :type creators: List[str]\\n        :type ids: List[str]\\n        :type views: List[int]\\n        :rtype: List[List[str]]\\n        '\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]",
            "def mostPopularCreator(self, creators, ids, views):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        :type creators: List[str]\\n        :type ids: List[str]\\n        :type views: List[int]\\n        :rtype: List[List[str]]\\n        '\n    cnt = collections.Counter()\n    lookup = collections.defaultdict(lambda : (float('inf'), float('inf')))\n    for (c, i, v) in itertools.izip(creators, ids, views):\n        cnt[c] += v\n        lookup[c] = min(lookup[c], (-v, i))\n    mx = max(cnt.itervalues())\n    return [[k, lookup[k][1]] for (k, v) in cnt.iteritems() if v == mx]"
        ]
    }
]