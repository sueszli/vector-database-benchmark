[
    {
        "func_name": "test_resource_controller_plugin_create",
        "original": "def test_resource_controller_plugin_create(self):\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
        "mutated": [
            "def test_resource_controller_plugin_create(self):\n    if False:\n        i = 10\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_create(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_create(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_create(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_create(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_create', package_id=package['id'], name='test-resource', url='http://resource.create/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter"
        ]
    },
    {
        "func_name": "test_resource_controller_plugin_update",
        "original": "def test_resource_controller_plugin_update(self):\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
        "mutated": [
            "def test_resource_controller_plugin_update(self):\n    if False:\n        i = 10\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_update(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_update(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_update(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter",
            "def test_resource_controller_plugin_update(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_update', id=resource['id'], url='http://resource.updated/', apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 1, plugin.counter\n    assert plugin.counter['after_resource_update'] == 1, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter"
        ]
    },
    {
        "func_name": "test_resource_controller_plugin_delete",
        "original": "def test_resource_controller_plugin_delete(self):\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter",
        "mutated": [
            "def test_resource_controller_plugin_delete(self):\n    if False:\n        i = 10\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter",
            "def test_resource_controller_plugin_delete(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter",
            "def test_resource_controller_plugin_delete(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter",
            "def test_resource_controller_plugin_delete(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter",
            "def test_resource_controller_plugin_delete(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    user = factories.Sysadmin()\n    resource = factories.Resource(user=user)\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('resource_delete', id=resource['id'], apikey=user['apikey'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 1, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 1, plugin.counter"
        ]
    },
    {
        "func_name": "test_resource_controller_plugin_show",
        "original": "def test_resource_controller_plugin_show(self):\n    \"\"\"\n        Before show gets called by the other methods but we test it\n        separately here and make sure that it doesn't call the other\n        methods.\n        \"\"\"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter",
        "mutated": [
            "def test_resource_controller_plugin_show(self):\n    if False:\n        i = 10\n    \"\\n        Before show gets called by the other methods but we test it\\n        separately here and make sure that it doesn't call the other\\n        methods.\\n        \"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter",
            "def test_resource_controller_plugin_show(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"\\n        Before show gets called by the other methods but we test it\\n        separately here and make sure that it doesn't call the other\\n        methods.\\n        \"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter",
            "def test_resource_controller_plugin_show(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"\\n        Before show gets called by the other methods but we test it\\n        separately here and make sure that it doesn't call the other\\n        methods.\\n        \"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter",
            "def test_resource_controller_plugin_show(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"\\n        Before show gets called by the other methods but we test it\\n        separately here and make sure that it doesn't call the other\\n        methods.\\n        \"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter",
            "def test_resource_controller_plugin_show(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"\\n        Before show gets called by the other methods but we test it\\n        separately here and make sure that it doesn't call the other\\n        methods.\\n        \"\n    user = factories.Sysadmin()\n    package = factories.Dataset(user=user)\n    factories.Resource(user=user, package_id=package['id'])\n    plugin = ckan.plugins.get_plugin('example_iresourcecontroller')\n    helpers.call_action('package_show', name_or_id=package['id'])\n    assert plugin.counter['before_resource_create'] == 1, plugin.counter\n    assert plugin.counter['after_resource_create'] == 1, plugin.counter\n    assert plugin.counter['before_resource_update'] == 0, plugin.counter\n    assert plugin.counter['after_resource_update'] == 0, plugin.counter\n    assert plugin.counter['before_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['after_resource_delete'] == 0, plugin.counter\n    assert plugin.counter['before_resource_show'] == 4, plugin.counter"
        ]
    }
]