[
    {
        "func_name": "main",
        "original": "def main():\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    logging.captureWarnings(True)\n    print('GET {}'.format(URL))\n    resp = requests.get(URL)\n    contributors = resp.json()\n    lines = []\n    for contributor in contributors:\n        time.sleep(1.0)\n        print('GET {}'.format(contributor['url']))\n        resp = requests.get(contributor['url'])\n        user = resp.json()\n        name = user.get('name') or contributor['login']\n        url = user['html_url']\n        lines.append('* `{} <{}>`_'.format(name, url))\n    print('Writing to {}'.format(FILENAME))\n    text = HEADER + '\\n'.join(lines)\n    text = text.encode('utf-8')\n    with open(FILENAME, 'wb') as fp:\n        fp.write(text)"
        ]
    }
]