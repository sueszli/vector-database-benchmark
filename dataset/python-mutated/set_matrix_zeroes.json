[
    {
        "func_name": "set_matrix_zeroes",
        "original": "def set_matrix_zeroes(matrix):\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0",
        "mutated": [
            "def set_matrix_zeroes(matrix):\n    if False:\n        i = 10\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0",
            "def set_matrix_zeroes(matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0",
            "def set_matrix_zeroes(matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0",
            "def set_matrix_zeroes(matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0",
            "def set_matrix_zeroes(matrix):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    n = len(matrix)\n    if n == 0:\n        return\n    m = len(matrix[0])\n    is_row = False\n    for j in range(m):\n        if matrix[0][j] == 0:\n            is_row = True\n    is_col = False\n    for i in range(n):\n        if matrix[i][0] == 0:\n            is_col = True\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][j] == 0:\n                matrix[i][0] = matrix[0][j] = 0\n    for i in range(1, n):\n        for j in range(1, m):\n            if matrix[i][0] == 0 or matrix[0][j] == 0:\n                matrix[i][j] = 0\n    if is_row:\n        for j in range(m):\n            matrix[0][j] = 0\n    if is_col:\n        for i in range(n):\n            matrix[i][0] = 0"
        ]
    }
]