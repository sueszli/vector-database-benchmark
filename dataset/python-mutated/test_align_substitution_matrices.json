[
    {
        "func_name": "test_basics_vector",
        "original": "def test_basics_vector(self):\n    \"\"\"Test basic vector operations.\"\"\"\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]",
        "mutated": [
            "def test_basics_vector(self):\n    if False:\n        i = 10\n    'Test basic vector operations.'\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]",
            "def test_basics_vector(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test basic vector operations.'\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]",
            "def test_basics_vector(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test basic vector operations.'\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]",
            "def test_basics_vector(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test basic vector operations.'\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]",
            "def test_basics_vector(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test basic vector operations.'\n    counts = substitution_matrices.Array('XYZ')\n    self.assertEqual(str(counts), 'X 0.0\\nY 0.0\\nZ 0.0\\n')\n    self.assertEqual(counts.alphabet, 'XYZ')\n    counts['X'] = -9\n    counts[2] = 5.5\n    self.assertEqual(str(counts), 'X -9.0\\nY  0.0\\nZ  5.5\\n')\n    self.assertAlmostEqual(counts[0], -9)\n    with self.assertRaises(IndexError):\n        counts['U']\n    with self.assertRaises(IndexError):\n        counts['V'] = 3.0\n    with self.assertRaises(IndexError):\n        counts[8]"
        ]
    },
    {
        "func_name": "test_basics_matrix",
        "original": "def test_basics_matrix(self):\n    \"\"\"Test basic matrix operations.\"\"\"\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')",
        "mutated": [
            "def test_basics_matrix(self):\n    if False:\n        i = 10\n    'Test basic matrix operations.'\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')",
            "def test_basics_matrix(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test basic matrix operations.'\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')",
            "def test_basics_matrix(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test basic matrix operations.'\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')",
            "def test_basics_matrix(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test basic matrix operations.'\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')",
            "def test_basics_matrix(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test basic matrix operations.'\n    counts = substitution_matrices.Array('XYZ', dims=2)\n    self.assertEqual(str(counts), '    X   Y   Z\\nX 0.0 0.0 0.0\\nY 0.0 0.0 0.0\\nZ 0.0 0.0 0.0\\n')\n    counts['X', 'Z'] = 12.0\n    counts[2, 1] = 3.0\n    counts['Y', 0] = -2.0\n    counts[0, 'Y'] = 5.0\n    self.assertEqual(str(counts), '     X   Y    Z\\nX  0.0 5.0 12.0\\nY -2.0 0.0  0.0\\nZ  0.0 3.0  0.0\\n')\n    with self.assertRaises(IndexError):\n        counts['U', 1]\n    with self.assertRaises(IndexError):\n        counts['X', 5]\n    self.assertEqual(str(counts['Y']), 'X -2.0\\nY  0.0\\nZ  0.0\\n')\n    self.assertEqual(str(counts[:, 'Z']), 'X 12.0\\nY  0.0\\nZ  0.0\\n')"
        ]
    },
    {
        "func_name": "test_read_write",
        "original": "def test_read_write(self):\n    \"\"\"Test reading and writing substitution matrices.\"\"\"\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')",
        "mutated": [
            "def test_read_write(self):\n    if False:\n        i = 10\n    'Test reading and writing substitution matrices.'\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')",
            "def test_read_write(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test reading and writing substitution matrices.'\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')",
            "def test_read_write(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test reading and writing substitution matrices.'\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')",
            "def test_read_write(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test reading and writing substitution matrices.'\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')",
            "def test_read_write(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test reading and writing substitution matrices.'\n    path = os.path.join('Align', 'hg38.chrom.sizes')\n    sizes = substitution_matrices.read(path, np.int64)\n    self.assertEqual(len(sizes), 455)\n    self.assertEqual(sizes['chr1'], 248956422)\n    self.assertEqual(sizes['chr2'], 242193529)\n    self.assertEqual(sizes['chr3'], 198295559)\n    self.assertEqual(sizes['chr4'], 190214555)\n    self.assertEqual(sizes['chr5'], 181538259)\n    self.assertEqual(sum(sizes), 3209286105)\n    text = str(sizes)\n    lines = text.split('\\n')\n    self.assertEqual(lines[0], 'chr1 248956422')\n    self.assertEqual(lines[1], 'chr2 242193529')\n    self.assertEqual(lines[2], 'chr3 198295559')\n    self.assertEqual(lines[3], 'chr4 190214555')\n    self.assertEqual(lines[4], 'chr5 181538259')"
        ]
    },
    {
        "func_name": "test_nucleotide_freq",
        "original": "def test_nucleotide_freq(self):\n    \"\"\"Test nucleotide frequency calculations.\"\"\"\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)",
        "mutated": [
            "def test_nucleotide_freq(self):\n    if False:\n        i = 10\n    'Test nucleotide frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)",
            "def test_nucleotide_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test nucleotide frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)",
            "def test_nucleotide_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test nucleotide frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)",
            "def test_nucleotide_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test nucleotide frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)",
            "def test_nucleotide_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test nucleotide frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'ecoli.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'ecoli.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.251621271076524)\n    self.assertAlmostEqual(frequencies['C'], 0.228274967574578)\n    self.assertAlmostEqual(frequencies['G'], 0.315175097276264)\n    self.assertAlmostEqual(frequencies['T'], 0.204928664072632)\n    counts = Counter()\n    path = os.path.join('Align', 'bsubtilis.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for nucleotide in record.seq:\n            counts[nucleotide] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, sorted(nucleotide_alphabet))\n    path = os.path.join('Align', 'bsubtilis.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertEqual(frequencies.shape, (len(nucleotide_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, nucleotide_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.2469453376205788)\n    self.assertAlmostEqual(frequencies['C'], 0.2347266881028939)\n    self.assertAlmostEqual(frequencies['G'], 0.3157556270096463)\n    self.assertAlmostEqual(frequencies['T'], 0.202572347266881)"
        ]
    },
    {
        "func_name": "test_protein_freq",
        "original": "def test_protein_freq(self):\n    \"\"\"Test amino acid frequency calculations.\"\"\"\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)",
        "mutated": [
            "def test_protein_freq(self):\n    if False:\n        i = 10\n    'Test amino acid frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)",
            "def test_protein_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test amino acid frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)",
            "def test_protein_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test amino acid frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)",
            "def test_protein_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test amino acid frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)",
            "def test_protein_freq(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test amino acid frequency calculations.'\n    counts = Counter()\n    path = os.path.join('Align', 'cow.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'cow.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.069711538)\n    self.assertAlmostEqual(frequencies['C'], 0.025320513)\n    self.assertAlmostEqual(frequencies['D'], 0.040785256)\n    self.assertAlmostEqual(frequencies['E'], 0.058974359)\n    self.assertAlmostEqual(frequencies['F'], 0.044951923)\n    self.assertAlmostEqual(frequencies['G'], 0.058012821)\n    self.assertAlmostEqual(frequencies['H'], 0.024278846)\n    self.assertAlmostEqual(frequencies['I'], 0.056009615)\n    self.assertAlmostEqual(frequencies['K'], 0.055448718)\n    self.assertAlmostEqual(frequencies['L'], 0.117788462)\n    self.assertAlmostEqual(frequencies['M'], 0.026442308)\n    self.assertAlmostEqual(frequencies['N'], 0.035336538)\n    self.assertAlmostEqual(frequencies['P'], 0.052003205)\n    self.assertAlmostEqual(frequencies['Q'], 0.038621795)\n    self.assertAlmostEqual(frequencies['R'], 0.050961538)\n    self.assertAlmostEqual(frequencies['S'], 0.08036859)\n    self.assertAlmostEqual(frequencies['T'], 0.054887821)\n    self.assertAlmostEqual(frequencies['V'], 0.0625)\n    self.assertAlmostEqual(frequencies['W'], 0.015625)\n    self.assertAlmostEqual(frequencies['Y'], 0.031971154)\n    counts = Counter()\n    path = os.path.join('Align', 'pig.fa')\n    records = SeqIO.parse(path, 'fasta')\n    for record in records:\n        for aminoacid in record.seq:\n            counts[aminoacid] += 1\n    letters = sorted(counts.keys())\n    self.assertEqual(letters, list(protein_alphabet))\n    path = os.path.join('Align', 'pig.txt')\n    frequencies = substitution_matrices.read(path)\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertEqual(frequencies.shape, (len(protein_alphabet),))\n    for letter in letters:\n        self.assertAlmostEqual(frequencies[letter], counts[letter])\n    with open(path) as handle:\n        text = handle.read()\n    self.assertEqual(frequencies.format('%d'), text)\n    total = sum(frequencies)\n    self.assertAlmostEqual(total, sum(counts.values()))\n    frequencies /= total\n    self.assertEqual(frequencies.alphabet, protein_alphabet)\n    self.assertAlmostEqual(frequencies['A'], 0.070987178)\n    self.assertAlmostEqual(frequencies['C'], 0.025490499)\n    self.assertAlmostEqual(frequencies['D'], 0.041325506)\n    self.assertAlmostEqual(frequencies['E'], 0.058550904)\n    self.assertAlmostEqual(frequencies['F'], 0.046037386)\n    self.assertAlmostEqual(frequencies['G'], 0.058164684)\n    self.assertAlmostEqual(frequencies['H'], 0.022941449)\n    self.assertAlmostEqual(frequencies['I'], 0.054534219)\n    self.assertAlmostEqual(frequencies['K'], 0.054843195)\n    self.assertAlmostEqual(frequencies['L'], 0.116020392)\n    self.assertAlmostEqual(frequencies['M'], 0.02688089)\n    self.assertAlmostEqual(frequencies['N'], 0.036613626)\n    self.assertAlmostEqual(frequencies['P'], 0.051058242)\n    self.assertAlmostEqual(frequencies['Q'], 0.040553067)\n    self.assertAlmostEqual(frequencies['R'], 0.051135486)\n    self.assertAlmostEqual(frequencies['S'], 0.079252279)\n    self.assertAlmostEqual(frequencies['T'], 0.054070755)\n    self.assertAlmostEqual(frequencies['V'], 0.064807663)\n    self.assertAlmostEqual(frequencies['W'], 0.015217055)\n    self.assertAlmostEqual(frequencies['Y'], 0.031515526)"
        ]
    },
    {
        "func_name": "test_pickling",
        "original": "def test_pickling(self):\n    \"\"\"Test pickling a substitution matrix.\"\"\"\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])",
        "mutated": [
            "def test_pickling(self):\n    if False:\n        i = 10\n    'Test pickling a substitution matrix.'\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])",
            "def test_pickling(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test pickling a substitution matrix.'\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])",
            "def test_pickling(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test pickling a substitution matrix.'\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])",
            "def test_pickling(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test pickling a substitution matrix.'\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])",
            "def test_pickling(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test pickling a substitution matrix.'\n    matrix = substitution_matrices.load('BLOSUM62')\n    pickled = pickle.dumps(matrix)\n    loaded = pickle.loads(pickled)\n    self.assertEqual(matrix.alphabet, loaded.alphabet)\n    for c1 in matrix.alphabet:\n        for c2 in matrix.alphabet:\n            self.assertAlmostEqual(matrix[c1, c2], loaded[c1, c2])"
        ]
    },
    {
        "func_name": "setUpClass",
        "original": "@classmethod\ndef setUpClass(cls):\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed",
        "mutated": [
            "@classmethod\ndef setUpClass(cls):\n    if False:\n        i = 10\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed",
            "@classmethod\ndef setUpClass(cls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed",
            "@classmethod\ndef setUpClass(cls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed",
            "@classmethod\ndef setUpClass(cls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed",
            "@classmethod\ndef setUpClass(cls):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    from Bio import SeqIO\n    from Bio.Align import PairwiseAligner\n    observed = substitution_matrices.Array(alphabet=protein_alphabet, dims=2)\n    aligner = PairwiseAligner()\n    aligner.mode = 'local'\n    aligner.open_gap_score = -12\n    aligner.extend_gap_score = -1\n    aligner.match = 6\n    aligner.mismatch = -1\n    cow_path = 'Align/cow.fa'\n    pig_path = 'Align/pig.fa'\n    cow_records = SeqIO.parse(cow_path, 'fasta')\n    pig_records = SeqIO.parse(pig_path, 'fasta')\n    for (cow_record, pig_record) in zip(cow_records, pig_records):\n        cow_sequence = cow_record.seq\n        pig_sequence = pig_record.seq\n        alignments = aligner.align(cow_sequence, pig_sequence)\n        assert len(alignments) == 1\n        alignment = alignments[0]\n        (cow_aligned, pig_aligned) = alignment.aligned\n        for (cow_segment, pig_segment) in zip(cow_aligned, pig_aligned):\n            (cow_start, cow_end) = cow_segment\n            (pig_start, pig_end) = pig_segment\n            cow_subsequence = cow_sequence[cow_start:cow_end]\n            pig_subsequence = pig_sequence[pig_start:pig_end]\n            for (c1, c2) in zip(cow_subsequence, pig_subsequence):\n                observed[c1, c2] += 1\n    cls.observed = observed"
        ]
    },
    {
        "func_name": "test1_observed_frequencies",
        "original": "def test1_observed_frequencies(self):\n    \"\"\"Test calculating substitution frequencies.\"\"\"\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)",
        "mutated": [
            "def test1_observed_frequencies(self):\n    if False:\n        i = 10\n    'Test calculating substitution frequencies.'\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)",
            "def test1_observed_frequencies(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating substitution frequencies.'\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)",
            "def test1_observed_frequencies(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating substitution frequencies.'\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)",
            "def test1_observed_frequencies(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating substitution frequencies.'\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)",
            "def test1_observed_frequencies(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating substitution frequencies.'\n    observed = self.observed\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 706)\n    self.assertAlmostEqual(observed['A', 'C'], 1)\n    self.assertAlmostEqual(observed['A', 'D'], 3)\n    self.assertAlmostEqual(observed['A', 'E'], 11)\n    self.assertAlmostEqual(observed['A', 'F'], 1)\n    self.assertAlmostEqual(observed['A', 'G'], 14)\n    self.assertAlmostEqual(observed['A', 'H'], 1)\n    self.assertAlmostEqual(observed['A', 'I'], 4)\n    self.assertAlmostEqual(observed['A', 'K'], 1)\n    self.assertAlmostEqual(observed['A', 'L'], 5)\n    self.assertAlmostEqual(observed['A', 'M'], 5)\n    self.assertAlmostEqual(observed['A', 'N'], 1)\n    self.assertAlmostEqual(observed['A', 'P'], 5)\n    self.assertAlmostEqual(observed['A', 'Q'], 0)\n    self.assertAlmostEqual(observed['A', 'R'], 1)\n    self.assertAlmostEqual(observed['A', 'S'], 22)\n    self.assertAlmostEqual(observed['A', 'T'], 37)\n    self.assertAlmostEqual(observed['A', 'V'], 35)\n    self.assertAlmostEqual(observed['A', 'W'], 0)\n    self.assertAlmostEqual(observed['A', 'Y'], 1)\n    self.assertAlmostEqual(observed['C', 'A'], 0)\n    self.assertAlmostEqual(observed['C', 'C'], 279)\n    self.assertAlmostEqual(observed['C', 'D'], 0)\n    self.assertAlmostEqual(observed['C', 'E'], 1)\n    self.assertAlmostEqual(observed['C', 'F'], 3)\n    self.assertAlmostEqual(observed['C', 'G'], 2)\n    self.assertAlmostEqual(observed['C', 'H'], 0)\n    self.assertAlmostEqual(observed['C', 'I'], 1)\n    self.assertAlmostEqual(observed['C', 'K'], 0)\n    self.assertAlmostEqual(observed['C', 'L'], 1)\n    self.assertAlmostEqual(observed['C', 'M'], 0)\n    self.assertAlmostEqual(observed['C', 'N'], 1)\n    self.assertAlmostEqual(observed['C', 'P'], 2)\n    self.assertAlmostEqual(observed['C', 'Q'], 0)\n    self.assertAlmostEqual(observed['C', 'R'], 6)\n    self.assertAlmostEqual(observed['C', 'S'], 6)\n    self.assertAlmostEqual(observed['C', 'T'], 0)\n    self.assertAlmostEqual(observed['C', 'V'], 1)\n    self.assertAlmostEqual(observed['C', 'W'], 1)\n    self.assertAlmostEqual(observed['C', 'Y'], 6)\n    self.assertAlmostEqual(observed['D', 'A'], 7)\n    self.assertAlmostEqual(observed['D', 'C'], 1)\n    self.assertAlmostEqual(observed['D', 'D'], 427)\n    self.assertAlmostEqual(observed['D', 'E'], 25)\n    self.assertAlmostEqual(observed['D', 'F'], 0)\n    self.assertAlmostEqual(observed['D', 'G'], 8)\n    self.assertAlmostEqual(observed['D', 'H'], 0)\n    self.assertAlmostEqual(observed['D', 'I'], 0)\n    self.assertAlmostEqual(observed['D', 'K'], 1)\n    self.assertAlmostEqual(observed['D', 'L'], 2)\n    self.assertAlmostEqual(observed['D', 'M'], 0)\n    self.assertAlmostEqual(observed['D', 'N'], 19)\n    self.assertAlmostEqual(observed['D', 'P'], 0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0)\n    self.assertAlmostEqual(observed['D', 'R'], 3)\n    self.assertAlmostEqual(observed['D', 'S'], 3)\n    self.assertAlmostEqual(observed['D', 'T'], 1)\n    self.assertAlmostEqual(observed['D', 'V'], 1)\n    self.assertAlmostEqual(observed['D', 'W'], 1)\n    self.assertAlmostEqual(observed['D', 'Y'], 1)\n    self.assertAlmostEqual(observed['E', 'A'], 9)\n    self.assertAlmostEqual(observed['E', 'C'], 0)\n    self.assertAlmostEqual(observed['E', 'D'], 30)\n    self.assertAlmostEqual(observed['E', 'E'], 629)\n    self.assertAlmostEqual(observed['E', 'F'], 1)\n    self.assertAlmostEqual(observed['E', 'G'], 19)\n    self.assertAlmostEqual(observed['E', 'H'], 3)\n    self.assertAlmostEqual(observed['E', 'I'], 1)\n    self.assertAlmostEqual(observed['E', 'K'], 12)\n    self.assertAlmostEqual(observed['E', 'L'], 1)\n    self.assertAlmostEqual(observed['E', 'M'], 1)\n    self.assertAlmostEqual(observed['E', 'N'], 1)\n    self.assertAlmostEqual(observed['E', 'P'], 1)\n    self.assertAlmostEqual(observed['E', 'Q'], 12)\n    self.assertAlmostEqual(observed['E', 'R'], 5)\n    self.assertAlmostEqual(observed['E', 'S'], 3)\n    self.assertAlmostEqual(observed['E', 'T'], 1)\n    self.assertAlmostEqual(observed['E', 'V'], 1)\n    self.assertAlmostEqual(observed['E', 'W'], 0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0)\n    self.assertAlmostEqual(observed['F', 'A'], 0)\n    self.assertAlmostEqual(observed['F', 'C'], 2)\n    self.assertAlmostEqual(observed['F', 'D'], 1)\n    self.assertAlmostEqual(observed['F', 'E'], 0)\n    self.assertAlmostEqual(observed['F', 'F'], 497)\n    self.assertAlmostEqual(observed['F', 'G'], 1)\n    self.assertAlmostEqual(observed['F', 'H'], 1)\n    self.assertAlmostEqual(observed['F', 'I'], 1)\n    self.assertAlmostEqual(observed['F', 'K'], 1)\n    self.assertAlmostEqual(observed['F', 'L'], 26)\n    self.assertAlmostEqual(observed['F', 'M'], 1)\n    self.assertAlmostEqual(observed['F', 'N'], 0)\n    self.assertAlmostEqual(observed['F', 'P'], 0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0)\n    self.assertAlmostEqual(observed['F', 'R'], 0)\n    self.assertAlmostEqual(observed['F', 'S'], 6)\n    self.assertAlmostEqual(observed['F', 'T'], 3)\n    self.assertAlmostEqual(observed['F', 'V'], 4)\n    self.assertAlmostEqual(observed['F', 'W'], 1)\n    self.assertAlmostEqual(observed['F', 'Y'], 12)\n    self.assertAlmostEqual(observed['G', 'A'], 12)\n    self.assertAlmostEqual(observed['G', 'C'], 2)\n    self.assertAlmostEqual(observed['G', 'D'], 10)\n    self.assertAlmostEqual(observed['G', 'E'], 14)\n    self.assertAlmostEqual(observed['G', 'F'], 0)\n    self.assertAlmostEqual(observed['G', 'G'], 612)\n    self.assertAlmostEqual(observed['G', 'H'], 0)\n    self.assertAlmostEqual(observed['G', 'I'], 1)\n    self.assertAlmostEqual(observed['G', 'K'], 1)\n    self.assertAlmostEqual(observed['G', 'L'], 1)\n    self.assertAlmostEqual(observed['G', 'M'], 1)\n    self.assertAlmostEqual(observed['G', 'N'], 2)\n    self.assertAlmostEqual(observed['G', 'P'], 1)\n    self.assertAlmostEqual(observed['G', 'Q'], 1)\n    self.assertAlmostEqual(observed['G', 'R'], 13)\n    self.assertAlmostEqual(observed['G', 'S'], 22)\n    self.assertAlmostEqual(observed['G', 'T'], 1)\n    self.assertAlmostEqual(observed['G', 'V'], 8)\n    self.assertAlmostEqual(observed['G', 'W'], 2)\n    self.assertAlmostEqual(observed['G', 'Y'], 1)\n    self.assertAlmostEqual(observed['H', 'A'], 1)\n    self.assertAlmostEqual(observed['H', 'C'], 1)\n    self.assertAlmostEqual(observed['H', 'D'], 4)\n    self.assertAlmostEqual(observed['H', 'E'], 1)\n    self.assertAlmostEqual(observed['H', 'F'], 1)\n    self.assertAlmostEqual(observed['H', 'G'], 2)\n    self.assertAlmostEqual(observed['H', 'H'], 227)\n    self.assertAlmostEqual(observed['H', 'I'], 0)\n    self.assertAlmostEqual(observed['H', 'K'], 1)\n    self.assertAlmostEqual(observed['H', 'L'], 1)\n    self.assertAlmostEqual(observed['H', 'M'], 0)\n    self.assertAlmostEqual(observed['H', 'N'], 7)\n    self.assertAlmostEqual(observed['H', 'P'], 2)\n    self.assertAlmostEqual(observed['H', 'Q'], 14)\n    self.assertAlmostEqual(observed['H', 'R'], 20)\n    self.assertAlmostEqual(observed['H', 'S'], 3)\n    self.assertAlmostEqual(observed['H', 'T'], 0)\n    self.assertAlmostEqual(observed['H', 'V'], 1)\n    self.assertAlmostEqual(observed['H', 'W'], 0)\n    self.assertAlmostEqual(observed['H', 'Y'], 7)\n    self.assertAlmostEqual(observed['I', 'A'], 5)\n    self.assertAlmostEqual(observed['I', 'C'], 0)\n    self.assertAlmostEqual(observed['I', 'D'], 1)\n    self.assertAlmostEqual(observed['I', 'E'], 2)\n    self.assertAlmostEqual(observed['I', 'F'], 5)\n    self.assertAlmostEqual(observed['I', 'G'], 0)\n    self.assertAlmostEqual(observed['I', 'H'], 1)\n    self.assertAlmostEqual(observed['I', 'I'], 558)\n    self.assertAlmostEqual(observed['I', 'K'], 1)\n    self.assertAlmostEqual(observed['I', 'L'], 22)\n    self.assertAlmostEqual(observed['I', 'M'], 11)\n    self.assertAlmostEqual(observed['I', 'N'], 3)\n    self.assertAlmostEqual(observed['I', 'P'], 1)\n    self.assertAlmostEqual(observed['I', 'Q'], 0)\n    self.assertAlmostEqual(observed['I', 'R'], 1)\n    self.assertAlmostEqual(observed['I', 'S'], 2)\n    self.assertAlmostEqual(observed['I', 'T'], 18)\n    self.assertAlmostEqual(observed['I', 'V'], 61)\n    self.assertAlmostEqual(observed['I', 'W'], 0)\n    self.assertAlmostEqual(observed['I', 'Y'], 1)\n    self.assertAlmostEqual(observed['K', 'A'], 3)\n    self.assertAlmostEqual(observed['K', 'C'], 1)\n    self.assertAlmostEqual(observed['K', 'D'], 1)\n    self.assertAlmostEqual(observed['K', 'E'], 17)\n    self.assertAlmostEqual(observed['K', 'F'], 0)\n    self.assertAlmostEqual(observed['K', 'G'], 2)\n    self.assertAlmostEqual(observed['K', 'H'], 2)\n    self.assertAlmostEqual(observed['K', 'I'], 2)\n    self.assertAlmostEqual(observed['K', 'K'], 573)\n    self.assertAlmostEqual(observed['K', 'L'], 0)\n    self.assertAlmostEqual(observed['K', 'M'], 2)\n    self.assertAlmostEqual(observed['K', 'N'], 11)\n    self.assertAlmostEqual(observed['K', 'P'], 1)\n    self.assertAlmostEqual(observed['K', 'Q'], 13)\n    self.assertAlmostEqual(observed['K', 'R'], 46)\n    self.assertAlmostEqual(observed['K', 'S'], 0)\n    self.assertAlmostEqual(observed['K', 'T'], 9)\n    self.assertAlmostEqual(observed['K', 'V'], 1)\n    self.assertAlmostEqual(observed['K', 'W'], 0)\n    self.assertAlmostEqual(observed['K', 'Y'], 1)\n    self.assertAlmostEqual(observed['L', 'A'], 7)\n    self.assertAlmostEqual(observed['L', 'C'], 1)\n    self.assertAlmostEqual(observed['L', 'D'], 0)\n    self.assertAlmostEqual(observed['L', 'E'], 1)\n    self.assertAlmostEqual(observed['L', 'F'], 26)\n    self.assertAlmostEqual(observed['L', 'G'], 2)\n    self.assertAlmostEqual(observed['L', 'H'], 1)\n    self.assertAlmostEqual(observed['L', 'I'], 21)\n    self.assertAlmostEqual(observed['L', 'K'], 1)\n    self.assertAlmostEqual(observed['L', 'L'], 1300)\n    self.assertAlmostEqual(observed['L', 'M'], 19)\n    self.assertAlmostEqual(observed['L', 'N'], 1)\n    self.assertAlmostEqual(observed['L', 'P'], 17)\n    self.assertAlmostEqual(observed['L', 'Q'], 4)\n    self.assertAlmostEqual(observed['L', 'R'], 3)\n    self.assertAlmostEqual(observed['L', 'S'], 9)\n    self.assertAlmostEqual(observed['L', 'T'], 4)\n    self.assertAlmostEqual(observed['L', 'V'], 37)\n    self.assertAlmostEqual(observed['L', 'W'], 2)\n    self.assertAlmostEqual(observed['L', 'Y'], 0)\n    self.assertAlmostEqual(observed['M', 'A'], 0)\n    self.assertAlmostEqual(observed['M', 'C'], 1)\n    self.assertAlmostEqual(observed['M', 'D'], 1)\n    self.assertAlmostEqual(observed['M', 'E'], 0)\n    self.assertAlmostEqual(observed['M', 'F'], 1)\n    self.assertAlmostEqual(observed['M', 'G'], 2)\n    self.assertAlmostEqual(observed['M', 'H'], 1)\n    self.assertAlmostEqual(observed['M', 'I'], 14)\n    self.assertAlmostEqual(observed['M', 'K'], 3)\n    self.assertAlmostEqual(observed['M', 'L'], 18)\n    self.assertAlmostEqual(observed['M', 'M'], 263)\n    self.assertAlmostEqual(observed['M', 'N'], 0)\n    self.assertAlmostEqual(observed['M', 'P'], 1)\n    self.assertAlmostEqual(observed['M', 'Q'], 0)\n    self.assertAlmostEqual(observed['M', 'R'], 1)\n    self.assertAlmostEqual(observed['M', 'S'], 2)\n    self.assertAlmostEqual(observed['M', 'T'], 7)\n    self.assertAlmostEqual(observed['M', 'V'], 6)\n    self.assertAlmostEqual(observed['M', 'W'], 0)\n    self.assertAlmostEqual(observed['M', 'Y'], 1)\n    self.assertAlmostEqual(observed['N', 'A'], 2)\n    self.assertAlmostEqual(observed['N', 'C'], 0)\n    self.assertAlmostEqual(observed['N', 'D'], 21)\n    self.assertAlmostEqual(observed['N', 'E'], 1)\n    self.assertAlmostEqual(observed['N', 'F'], 2)\n    self.assertAlmostEqual(observed['N', 'G'], 5)\n    self.assertAlmostEqual(observed['N', 'H'], 4)\n    self.assertAlmostEqual(observed['N', 'I'], 2)\n    self.assertAlmostEqual(observed['N', 'K'], 8)\n    self.assertAlmostEqual(observed['N', 'L'], 2)\n    self.assertAlmostEqual(observed['N', 'M'], 1)\n    self.assertAlmostEqual(observed['N', 'N'], 360)\n    self.assertAlmostEqual(observed['N', 'P'], 0)\n    self.assertAlmostEqual(observed['N', 'Q'], 3)\n    self.assertAlmostEqual(observed['N', 'R'], 1)\n    self.assertAlmostEqual(observed['N', 'S'], 15)\n    self.assertAlmostEqual(observed['N', 'T'], 8)\n    self.assertAlmostEqual(observed['N', 'V'], 0)\n    self.assertAlmostEqual(observed['N', 'W'], 0)\n    self.assertAlmostEqual(observed['N', 'Y'], 2)\n    self.assertAlmostEqual(observed['P', 'A'], 14)\n    self.assertAlmostEqual(observed['P', 'C'], 0)\n    self.assertAlmostEqual(observed['P', 'D'], 1)\n    self.assertAlmostEqual(observed['P', 'E'], 0)\n    self.assertAlmostEqual(observed['P', 'F'], 1)\n    self.assertAlmostEqual(observed['P', 'G'], 0)\n    self.assertAlmostEqual(observed['P', 'H'], 5)\n    self.assertAlmostEqual(observed['P', 'I'], 0)\n    self.assertAlmostEqual(observed['P', 'K'], 0)\n    self.assertAlmostEqual(observed['P', 'L'], 16)\n    self.assertAlmostEqual(observed['P', 'M'], 0)\n    self.assertAlmostEqual(observed['P', 'N'], 1)\n    self.assertAlmostEqual(observed['P', 'P'], 551)\n    self.assertAlmostEqual(observed['P', 'Q'], 3)\n    self.assertAlmostEqual(observed['P', 'R'], 2)\n    self.assertAlmostEqual(observed['P', 'S'], 24)\n    self.assertAlmostEqual(observed['P', 'T'], 7)\n    self.assertAlmostEqual(observed['P', 'V'], 2)\n    self.assertAlmostEqual(observed['P', 'W'], 1)\n    self.assertAlmostEqual(observed['P', 'Y'], 0)\n    self.assertAlmostEqual(observed['Q', 'A'], 1)\n    self.assertAlmostEqual(observed['Q', 'C'], 1)\n    self.assertAlmostEqual(observed['Q', 'D'], 1)\n    self.assertAlmostEqual(observed['Q', 'E'], 10)\n    self.assertAlmostEqual(observed['Q', 'F'], 1)\n    self.assertAlmostEqual(observed['Q', 'G'], 0)\n    self.assertAlmostEqual(observed['Q', 'H'], 6)\n    self.assertAlmostEqual(observed['Q', 'I'], 1)\n    self.assertAlmostEqual(observed['Q', 'K'], 13)\n    self.assertAlmostEqual(observed['Q', 'L'], 5)\n    self.assertAlmostEqual(observed['Q', 'M'], 1)\n    self.assertAlmostEqual(observed['Q', 'N'], 2)\n    self.assertAlmostEqual(observed['Q', 'P'], 1)\n    self.assertAlmostEqual(observed['Q', 'Q'], 409)\n    self.assertAlmostEqual(observed['Q', 'R'], 18)\n    self.assertAlmostEqual(observed['Q', 'S'], 1)\n    self.assertAlmostEqual(observed['Q', 'T'], 0)\n    self.assertAlmostEqual(observed['Q', 'V'], 1)\n    self.assertAlmostEqual(observed['Q', 'W'], 0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0)\n    self.assertAlmostEqual(observed['R', 'A'], 3)\n    self.assertAlmostEqual(observed['R', 'C'], 3)\n    self.assertAlmostEqual(observed['R', 'D'], 0)\n    self.assertAlmostEqual(observed['R', 'E'], 2)\n    self.assertAlmostEqual(observed['R', 'F'], 1)\n    self.assertAlmostEqual(observed['R', 'G'], 13)\n    self.assertAlmostEqual(observed['R', 'H'], 6)\n    self.assertAlmostEqual(observed['R', 'I'], 0)\n    self.assertAlmostEqual(observed['R', 'K'], 40)\n    self.assertAlmostEqual(observed['R', 'L'], 5)\n    self.assertAlmostEqual(observed['R', 'M'], 2)\n    self.assertAlmostEqual(observed['R', 'N'], 4)\n    self.assertAlmostEqual(observed['R', 'P'], 5)\n    self.assertAlmostEqual(observed['R', 'Q'], 29)\n    self.assertAlmostEqual(observed['R', 'R'], 492)\n    self.assertAlmostEqual(observed['R', 'S'], 9)\n    self.assertAlmostEqual(observed['R', 'T'], 3)\n    self.assertAlmostEqual(observed['R', 'V'], 2)\n    self.assertAlmostEqual(observed['R', 'W'], 1)\n    self.assertAlmostEqual(observed['R', 'Y'], 0)\n    self.assertAlmostEqual(observed['S', 'A'], 34)\n    self.assertAlmostEqual(observed['S', 'C'], 3)\n    self.assertAlmostEqual(observed['S', 'D'], 3)\n    self.assertAlmostEqual(observed['S', 'E'], 3)\n    self.assertAlmostEqual(observed['S', 'F'], 9)\n    self.assertAlmostEqual(observed['S', 'G'], 18)\n    self.assertAlmostEqual(observed['S', 'H'], 2)\n    self.assertAlmostEqual(observed['S', 'I'], 4)\n    self.assertAlmostEqual(observed['S', 'K'], 4)\n    self.assertAlmostEqual(observed['S', 'L'], 3)\n    self.assertAlmostEqual(observed['S', 'M'], 0)\n    self.assertAlmostEqual(observed['S', 'N'], 25)\n    self.assertAlmostEqual(observed['S', 'P'], 19)\n    self.assertAlmostEqual(observed['S', 'Q'], 2)\n    self.assertAlmostEqual(observed['S', 'R'], 11)\n    self.assertAlmostEqual(observed['S', 'S'], 803)\n    self.assertAlmostEqual(observed['S', 'T'], 26)\n    self.assertAlmostEqual(observed['S', 'V'], 3)\n    self.assertAlmostEqual(observed['S', 'W'], 2)\n    self.assertAlmostEqual(observed['S', 'Y'], 6)\n    self.assertAlmostEqual(observed['T', 'A'], 43)\n    self.assertAlmostEqual(observed['T', 'C'], 1)\n    self.assertAlmostEqual(observed['T', 'D'], 4)\n    self.assertAlmostEqual(observed['T', 'E'], 1)\n    self.assertAlmostEqual(observed['T', 'F'], 0)\n    self.assertAlmostEqual(observed['T', 'G'], 2)\n    self.assertAlmostEqual(observed['T', 'H'], 1)\n    self.assertAlmostEqual(observed['T', 'I'], 18)\n    self.assertAlmostEqual(observed['T', 'K'], 4)\n    self.assertAlmostEqual(observed['T', 'L'], 4)\n    self.assertAlmostEqual(observed['T', 'M'], 16)\n    self.assertAlmostEqual(observed['T', 'N'], 8)\n    self.assertAlmostEqual(observed['T', 'P'], 9)\n    self.assertAlmostEqual(observed['T', 'Q'], 2)\n    self.assertAlmostEqual(observed['T', 'R'], 2)\n    self.assertAlmostEqual(observed['T', 'S'], 27)\n    self.assertAlmostEqual(observed['T', 'T'], 526)\n    self.assertAlmostEqual(observed['T', 'V'], 6)\n    self.assertAlmostEqual(observed['T', 'W'], 1)\n    self.assertAlmostEqual(observed['T', 'Y'], 1)\n    self.assertAlmostEqual(observed['V', 'A'], 25)\n    self.assertAlmostEqual(observed['V', 'C'], 1)\n    self.assertAlmostEqual(observed['V', 'D'], 3)\n    self.assertAlmostEqual(observed['V', 'E'], 2)\n    self.assertAlmostEqual(observed['V', 'F'], 6)\n    self.assertAlmostEqual(observed['V', 'G'], 9)\n    self.assertAlmostEqual(observed['V', 'H'], 0)\n    self.assertAlmostEqual(observed['V', 'I'], 48)\n    self.assertAlmostEqual(observed['V', 'K'], 1)\n    self.assertAlmostEqual(observed['V', 'L'], 21)\n    self.assertAlmostEqual(observed['V', 'M'], 8)\n    self.assertAlmostEqual(observed['V', 'N'], 1)\n    self.assertAlmostEqual(observed['V', 'P'], 2)\n    self.assertAlmostEqual(observed['V', 'Q'], 1)\n    self.assertAlmostEqual(observed['V', 'R'], 3)\n    self.assertAlmostEqual(observed['V', 'S'], 3)\n    self.assertAlmostEqual(observed['V', 'T'], 13)\n    self.assertAlmostEqual(observed['V', 'V'], 623)\n    self.assertAlmostEqual(observed['V', 'W'], 1)\n    self.assertAlmostEqual(observed['V', 'Y'], 0)\n    self.assertAlmostEqual(observed['W', 'A'], 2)\n    self.assertAlmostEqual(observed['W', 'C'], 1)\n    self.assertAlmostEqual(observed['W', 'D'], 0)\n    self.assertAlmostEqual(observed['W', 'E'], 1)\n    self.assertAlmostEqual(observed['W', 'F'], 0)\n    self.assertAlmostEqual(observed['W', 'G'], 4)\n    self.assertAlmostEqual(observed['W', 'H'], 1)\n    self.assertAlmostEqual(observed['W', 'I'], 1)\n    self.assertAlmostEqual(observed['W', 'K'], 1)\n    self.assertAlmostEqual(observed['W', 'L'], 2)\n    self.assertAlmostEqual(observed['W', 'M'], 1)\n    self.assertAlmostEqual(observed['W', 'N'], 1)\n    self.assertAlmostEqual(observed['W', 'P'], 0)\n    self.assertAlmostEqual(observed['W', 'Q'], 1)\n    self.assertAlmostEqual(observed['W', 'R'], 7)\n    self.assertAlmostEqual(observed['W', 'S'], 0)\n    self.assertAlmostEqual(observed['W', 'T'], 1)\n    self.assertAlmostEqual(observed['W', 'V'], 0)\n    self.assertAlmostEqual(observed['W', 'W'], 170)\n    self.assertAlmostEqual(observed['W', 'Y'], 0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0)\n    self.assertAlmostEqual(observed['Y', 'C'], 4)\n    self.assertAlmostEqual(observed['Y', 'D'], 1)\n    self.assertAlmostEqual(observed['Y', 'E'], 1)\n    self.assertAlmostEqual(observed['Y', 'F'], 13)\n    self.assertAlmostEqual(observed['Y', 'G'], 0)\n    self.assertAlmostEqual(observed['Y', 'H'], 15)\n    self.assertAlmostEqual(observed['Y', 'I'], 0)\n    self.assertAlmostEqual(observed['Y', 'K'], 1)\n    self.assertAlmostEqual(observed['Y', 'L'], 2)\n    self.assertAlmostEqual(observed['Y', 'M'], 0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0)\n    self.assertAlmostEqual(observed['Y', 'P'], 1)\n    self.assertAlmostEqual(observed['Y', 'Q'], 2)\n    self.assertAlmostEqual(observed['Y', 'R'], 1)\n    self.assertAlmostEqual(observed['Y', 'S'], 2)\n    self.assertAlmostEqual(observed['Y', 'T'], 0)\n    self.assertAlmostEqual(observed['Y', 'V'], 1)\n    self.assertAlmostEqual(observed['Y', 'W'], 1)\n    self.assertAlmostEqual(observed['Y', 'Y'], 352)"
        ]
    },
    {
        "func_name": "test2_observed_probabilities",
        "original": "def test2_observed_probabilities(self):\n    \"\"\"Test calculating substitution probabilities.\"\"\"\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
        "mutated": [
            "def test2_observed_probabilities(self):\n    if False:\n        i = 10\n    'Test calculating substitution probabilities.'\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test2_observed_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating substitution probabilities.'\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test2_observed_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating substitution probabilities.'\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test2_observed_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating substitution probabilities.'\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test2_observed_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating substitution probabilities.'\n    observed = self.observed\n    total = observed.sum()\n    observed[:, :] /= total\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['A', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001140065)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['A', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['A', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003013029)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002850163)\n    self.assertAlmostEqual(observed['A', 'W'], 0.0)\n    self.assertAlmostEqual(observed['A', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 0.0)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 0.0)\n    self.assertAlmostEqual(observed['C', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 0.0)\n    self.assertAlmostEqual(observed['C', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 0.0)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 0.0)\n    self.assertAlmostEqual(observed['C', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['C', 'R'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['C', 'T'], 0.0)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['D', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002035831)\n    self.assertAlmostEqual(observed['D', 'F'], 0.0)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000651466)\n    self.assertAlmostEqual(observed['D', 'H'], 0.0)\n    self.assertAlmostEqual(observed['D', 'I'], 0.0)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'M'], 0.0)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001547231)\n    self.assertAlmostEqual(observed['D', 'P'], 0.0)\n    self.assertAlmostEqual(observed['D', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['D', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000732899)\n    self.assertAlmostEqual(observed['E', 'C'], 0.0)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002442997)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001547231)\n    self.assertAlmostEqual(observed['E', 'H'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'K'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000977199)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000407166)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'W'], 0.0)\n    self.assertAlmostEqual(observed['E', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['F', 'A'], 0.0)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['F', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 0.0)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 0.0)\n    self.assertAlmostEqual(observed['F', 'P'], 0.0)\n    self.assertAlmostEqual(observed['F', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['F', 'R'], 0.0)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['F', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000325733)\n    self.assertAlmostEqual(observed['F', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'A'], 0.000977199)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000814332)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001140065)\n    self.assertAlmostEqual(observed['G', 'F'], 0.0)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 0.0)\n    self.assertAlmostEqual(observed['G', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001791531)\n    self.assertAlmostEqual(observed['G', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000651466)\n    self.assertAlmostEqual(observed['G', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['H', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 0.0)\n    self.assertAlmostEqual(observed['H', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 0.0)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000570033)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.001140065)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001628664)\n    self.assertAlmostEqual(observed['H', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['H', 'T'], 0.0)\n    self.assertAlmostEqual(observed['H', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 0.0)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000570033)\n    self.assertAlmostEqual(observed['I', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'C'], 0.0)\n    self.assertAlmostEqual(observed['I', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['I', 'G'], 0.0)\n    self.assertAlmostEqual(observed['I', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001791531)\n    self.assertAlmostEqual(observed['I', 'M'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'N'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['I', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004967427)\n    self.assertAlmostEqual(observed['I', 'W'], 0.0)\n    self.assertAlmostEqual(observed['I', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['K', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001384365)\n    self.assertAlmostEqual(observed['K', 'F'], 0.0)\n    self.assertAlmostEqual(observed['K', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 0.0)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000895765)\n    self.assertAlmostEqual(observed['K', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003745928)\n    self.assertAlmostEqual(observed['K', 'S'], 0.0)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000732899)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 0.0)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000570033)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 0.0)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001710098)\n    self.assertAlmostEqual(observed['L', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001547231)\n    self.assertAlmostEqual(observed['L', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001384365)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.003013029)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['M', 'A'], 0.0)\n    self.assertAlmostEqual(observed['M', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 0.0)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001140065)\n    self.assertAlmostEqual(observed['M', 'K'], 0.0002443)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001465798)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 0.0)\n    self.assertAlmostEqual(observed['M', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 0.0)\n    self.assertAlmostEqual(observed['M', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['M', 'W'], 0.0)\n    self.assertAlmostEqual(observed['M', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'C'], 0.0)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001710098)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000407166)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000325733)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['N', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['N', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001221498)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 0.0)\n    self.assertAlmostEqual(observed['N', 'W'], 0.0)\n    self.assertAlmostEqual(observed['N', 'Y'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'A'], 0.001140065)\n    self.assertAlmostEqual(observed['P', 'C'], 0.0)\n    self.assertAlmostEqual(observed['P', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 0.0)\n    self.assertAlmostEqual(observed['P', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 0.0)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000407166)\n    self.assertAlmostEqual(observed['P', 'I'], 0.0)\n    self.assertAlmostEqual(observed['P', 'K'], 0.0)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001302932)\n    self.assertAlmostEqual(observed['P', 'M'], 0.0)\n    self.assertAlmostEqual(observed['P', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.0002443)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001954397)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000570033)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['Q', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['Q', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001465798)\n    self.assertAlmostEqual(observed['Q', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 0.0)\n    self.assertAlmostEqual(observed['Q', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['R', 'A'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'D'], 0.0)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.000488599)\n    self.assertAlmostEqual(observed['R', 'I'], 0.0)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003257329)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'M'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000407166)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.002361564)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000732899)\n    self.assertAlmostEqual(observed['R', 'T'], 0.0002443)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00276873)\n    self.assertAlmostEqual(observed['S', 'C'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000732899)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001465798)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'I'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['S', 'L'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'M'], 0.0)\n    self.assertAlmostEqual(observed['S', 'N'], 0.002035831)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001547231)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000895765)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.002117264)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003501629)\n    self.assertAlmostEqual(observed['T', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.0)\n    self.assertAlmostEqual(observed['T', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.001302932)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000732899)\n    self.assertAlmostEqual(observed['T', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['T', 'S'], 0.002198697)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000488599)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002035831)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000488599)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['V', 'H'], 0.0)\n    self.assertAlmostEqual(observed['V', 'I'], 0.003908795)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.001710098)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000651466)\n    self.assertAlmostEqual(observed['V', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.001058632)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['W', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 0.0)\n    self.assertAlmostEqual(observed['W', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 0.0)\n    self.assertAlmostEqual(observed['W', 'G'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 0.0)\n    self.assertAlmostEqual(observed['W', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000570033)\n    self.assertAlmostEqual(observed['W', 'S'], 0.0)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 0.0)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'A'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001058632)\n    self.assertAlmostEqual(observed['Y', 'G'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.001221498)\n    self.assertAlmostEqual(observed['Y', 'I'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'M'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'N'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'R'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['Y', 'T'], 0.0)\n    self.assertAlmostEqual(observed['Y', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)"
        ]
    },
    {
        "func_name": "test3_observed_symmetric_probabilities",
        "original": "def test3_observed_symmetric_probabilities(self):\n    \"\"\"Test symmetrizing substitution probabilities.\"\"\"\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
        "mutated": [
            "def test3_observed_symmetric_probabilities(self):\n    if False:\n        i = 10\n    'Test symmetrizing substitution probabilities.'\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test3_observed_symmetric_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test symmetrizing substitution probabilities.'\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test3_observed_symmetric_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test symmetrizing substitution probabilities.'\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test3_observed_symmetric_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test symmetrizing substitution probabilities.'\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)",
            "def test3_observed_symmetric_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test symmetrizing substitution probabilities.'\n    observed = self.observed\n    observed[:, :] = 0.5 * (observed + observed.transpose())\n    self.assertEqual(observed.alphabet, protein_alphabet)\n    self.assertEqual(observed.shape, (20, 20))\n    self.assertAlmostEqual(observed['A', 'A'], 0.057491857)\n    self.assertAlmostEqual(observed['A', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'D'], 0.000407166)\n    self.assertAlmostEqual(observed['A', 'E'], 0.000814332)\n    self.assertAlmostEqual(observed['A', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['A', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'I'], 0.00036645)\n    self.assertAlmostEqual(observed['A', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['A', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['A', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['A', 'P'], 0.000773616)\n    self.assertAlmostEqual(observed['A', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['A', 'R'], 0.000162866)\n    self.assertAlmostEqual(observed['A', 'S'], 0.00228013)\n    self.assertAlmostEqual(observed['A', 'T'], 0.003257329)\n    self.assertAlmostEqual(observed['A', 'V'], 0.002442997)\n    self.assertAlmostEqual(observed['A', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['A', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'C'], 0.02271987)\n    self.assertAlmostEqual(observed['C', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'F'], 0.000203583)\n    self.assertAlmostEqual(observed['C', 'G'], 0.000162866)\n    self.assertAlmostEqual(observed['C', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'P'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'R'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'S'], 0.00036645)\n    self.assertAlmostEqual(observed['C', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['C', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['C', 'Y'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'A'], 0.000407166)\n    self.assertAlmostEqual(observed['D', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'D'], 0.034771987)\n    self.assertAlmostEqual(observed['D', 'E'], 0.002239414)\n    self.assertAlmostEqual(observed['D', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'G'], 0.000732899)\n    self.assertAlmostEqual(observed['D', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['D', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['D', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['D', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['D', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['D', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['D', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['D', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'A'], 0.000814332)\n    self.assertAlmostEqual(observed['E', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'D'], 0.002239414)\n    self.assertAlmostEqual(observed['E', 'E'], 0.051221498)\n    self.assertAlmostEqual(observed['E', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'G'], 0.001343648)\n    self.assertAlmostEqual(observed['E', 'H'], 0.000162866)\n    self.assertAlmostEqual(observed['E', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'K'], 0.001180782)\n    self.assertAlmostEqual(observed['E', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Q'], 0.000895765)\n    self.assertAlmostEqual(observed['E', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['E', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['E', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['E', 'V'], 0.00012215)\n    self.assertAlmostEqual(observed['E', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['E', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'C'], 0.000203583)\n    self.assertAlmostEqual(observed['F', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'F'], 0.040472313)\n    self.assertAlmostEqual(observed['F', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['F', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'L'], 0.002117264)\n    self.assertAlmostEqual(observed['F', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['F', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'S'], 0.000610749)\n    self.assertAlmostEqual(observed['F', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['F', 'V'], 0.000407166)\n    self.assertAlmostEqual(observed['F', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['F', 'Y'], 0.001017915)\n    self.assertAlmostEqual(observed['G', 'A'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'C'], 0.000162866)\n    self.assertAlmostEqual(observed['G', 'D'], 0.000732899)\n    self.assertAlmostEqual(observed['G', 'E'], 0.001343648)\n    self.assertAlmostEqual(observed['G', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'G'], 0.049837134)\n    self.assertAlmostEqual(observed['G', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['G', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'N'], 0.000285016)\n    self.assertAlmostEqual(observed['G', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['G', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['G', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['G', 'T'], 0.00012215)\n    self.assertAlmostEqual(observed['G', 'V'], 0.000692182)\n    self.assertAlmostEqual(observed['G', 'W'], 0.0002443)\n    self.assertAlmostEqual(observed['G', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'E'], 0.000162866)\n    self.assertAlmostEqual(observed['H', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'G'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'H'], 0.018485342)\n    self.assertAlmostEqual(observed['H', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['H', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['H', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'N'], 0.000447883)\n    self.assertAlmostEqual(observed['H', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['H', 'Q'], 0.000814332)\n    self.assertAlmostEqual(observed['H', 'R'], 0.001058632)\n    self.assertAlmostEqual(observed['H', 'S'], 0.000203583)\n    self.assertAlmostEqual(observed['H', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['H', 'Y'], 0.000895765)\n    self.assertAlmostEqual(observed['I', 'A'], 0.00036645)\n    self.assertAlmostEqual(observed['I', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'F'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'I'], 0.045439739)\n    self.assertAlmostEqual(observed['I', 'K'], 0.00012215)\n    self.assertAlmostEqual(observed['I', 'L'], 0.001750814)\n    self.assertAlmostEqual(observed['I', 'M'], 0.001017915)\n    self.assertAlmostEqual(observed['I', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['I', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['I', 'T'], 0.001465798)\n    self.assertAlmostEqual(observed['I', 'V'], 0.004438111)\n    self.assertAlmostEqual(observed['I', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['I', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'E'], 0.001180782)\n    self.assertAlmostEqual(observed['K', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'H'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'I'], 0.00012215)\n    self.assertAlmostEqual(observed['K', 'K'], 0.046661238)\n    self.assertAlmostEqual(observed['K', 'L'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'M'], 0.000203583)\n    self.assertAlmostEqual(observed['K', 'N'], 0.000773616)\n    self.assertAlmostEqual(observed['K', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Q'], 0.001058632)\n    self.assertAlmostEqual(observed['K', 'R'], 0.003501629)\n    self.assertAlmostEqual(observed['K', 'S'], 0.000162866)\n    self.assertAlmostEqual(observed['K', 'T'], 0.000529316)\n    self.assertAlmostEqual(observed['K', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['K', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['K', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'A'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'F'], 0.002117264)\n    self.assertAlmostEqual(observed['L', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'H'], 8.1433e-05)\n    self.assertAlmostEqual(observed['L', 'I'], 0.001750814)\n    self.assertAlmostEqual(observed['L', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['L', 'L'], 0.105863192)\n    self.assertAlmostEqual(observed['L', 'M'], 0.001506515)\n    self.assertAlmostEqual(observed['L', 'N'], 0.00012215)\n    self.assertAlmostEqual(observed['L', 'P'], 0.001343648)\n    self.assertAlmostEqual(observed['L', 'Q'], 0.00036645)\n    self.assertAlmostEqual(observed['L', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'S'], 0.000488599)\n    self.assertAlmostEqual(observed['L', 'T'], 0.000325733)\n    self.assertAlmostEqual(observed['L', 'V'], 0.002361564)\n    self.assertAlmostEqual(observed['L', 'W'], 0.000162866)\n    self.assertAlmostEqual(observed['L', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'A'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'I'], 0.001017915)\n    self.assertAlmostEqual(observed['M', 'K'], 0.000203583)\n    self.assertAlmostEqual(observed['M', 'L'], 0.001506515)\n    self.assertAlmostEqual(observed['M', 'M'], 0.021416938)\n    self.assertAlmostEqual(observed['M', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'R'], 0.00012215)\n    self.assertAlmostEqual(observed['M', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['M', 'T'], 0.000936482)\n    self.assertAlmostEqual(observed['M', 'V'], 0.000570033)\n    self.assertAlmostEqual(observed['M', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['M', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'A'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'D'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'F'], 8.1433e-05)\n    self.assertAlmostEqual(observed['N', 'G'], 0.000285016)\n    self.assertAlmostEqual(observed['N', 'H'], 0.000447883)\n    self.assertAlmostEqual(observed['N', 'I'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'K'], 0.000773616)\n    self.assertAlmostEqual(observed['N', 'L'], 0.00012215)\n    self.assertAlmostEqual(observed['N', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'N'], 0.029315961)\n    self.assertAlmostEqual(observed['N', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Q'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['N', 'S'], 0.001628664)\n    self.assertAlmostEqual(observed['N', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['N', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['N', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'A'], 0.000773616)\n    self.assertAlmostEqual(observed['P', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['P', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'H'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'L'], 0.001343648)\n    self.assertAlmostEqual(observed['P', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'P'], 0.044869707)\n    self.assertAlmostEqual(observed['P', 'Q'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'R'], 0.000285016)\n    self.assertAlmostEqual(observed['P', 'S'], 0.001750814)\n    self.assertAlmostEqual(observed['P', 'T'], 0.000651466)\n    self.assertAlmostEqual(observed['P', 'V'], 0.000162866)\n    self.assertAlmostEqual(observed['P', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['P', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'E'], 0.000895765)\n    self.assertAlmostEqual(observed['Q', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'H'], 0.000814332)\n    self.assertAlmostEqual(observed['Q', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'K'], 0.001058632)\n    self.assertAlmostEqual(observed['Q', 'L'], 0.00036645)\n    self.assertAlmostEqual(observed['Q', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['Q', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['Q', 'Q'], 0.033306189)\n    self.assertAlmostEqual(observed['Q', 'R'], 0.001913681)\n    self.assertAlmostEqual(observed['Q', 'S'], 0.00012215)\n    self.assertAlmostEqual(observed['Q', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'V'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Q', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Q', 'Y'], 8.1433e-05)\n    self.assertAlmostEqual(observed['R', 'A'], 0.000162866)\n    self.assertAlmostEqual(observed['R', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['R', 'D'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'E'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'G'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'H'], 0.001058632)\n    self.assertAlmostEqual(observed['R', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['R', 'K'], 0.003501629)\n    self.assertAlmostEqual(observed['R', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'M'], 0.00012215)\n    self.assertAlmostEqual(observed['R', 'N'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'P'], 0.000285016)\n    self.assertAlmostEqual(observed['R', 'Q'], 0.001913681)\n    self.assertAlmostEqual(observed['R', 'R'], 0.040065147)\n    self.assertAlmostEqual(observed['R', 'S'], 0.000814332)\n    self.assertAlmostEqual(observed['R', 'T'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'V'], 0.000203583)\n    self.assertAlmostEqual(observed['R', 'W'], 0.000325733)\n    self.assertAlmostEqual(observed['R', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['S', 'A'], 0.00228013)\n    self.assertAlmostEqual(observed['S', 'C'], 0.00036645)\n    self.assertAlmostEqual(observed['S', 'D'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'E'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'F'], 0.000610749)\n    self.assertAlmostEqual(observed['S', 'G'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'H'], 0.000203583)\n    self.assertAlmostEqual(observed['S', 'I'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'K'], 0.000162866)\n    self.assertAlmostEqual(observed['S', 'L'], 0.000488599)\n    self.assertAlmostEqual(observed['S', 'M'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'N'], 0.001628664)\n    self.assertAlmostEqual(observed['S', 'P'], 0.001750814)\n    self.assertAlmostEqual(observed['S', 'Q'], 0.00012215)\n    self.assertAlmostEqual(observed['S', 'R'], 0.000814332)\n    self.assertAlmostEqual(observed['S', 'S'], 0.065390879)\n    self.assertAlmostEqual(observed['S', 'T'], 0.00215798)\n    self.assertAlmostEqual(observed['S', 'V'], 0.0002443)\n    self.assertAlmostEqual(observed['S', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['S', 'Y'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'A'], 0.003257329)\n    self.assertAlmostEqual(observed['T', 'C'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'D'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'E'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'F'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'G'], 0.00012215)\n    self.assertAlmostEqual(observed['T', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['T', 'I'], 0.001465798)\n    self.assertAlmostEqual(observed['T', 'K'], 0.000529316)\n    self.assertAlmostEqual(observed['T', 'L'], 0.000325733)\n    self.assertAlmostEqual(observed['T', 'M'], 0.000936482)\n    self.assertAlmostEqual(observed['T', 'N'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'P'], 0.000651466)\n    self.assertAlmostEqual(observed['T', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['T', 'S'], 0.00215798)\n    self.assertAlmostEqual(observed['T', 'T'], 0.042833876)\n    self.assertAlmostEqual(observed['T', 'V'], 0.000773616)\n    self.assertAlmostEqual(observed['T', 'W'], 8.1433e-05)\n    self.assertAlmostEqual(observed['T', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'A'], 0.002442997)\n    self.assertAlmostEqual(observed['V', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'D'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'E'], 0.00012215)\n    self.assertAlmostEqual(observed['V', 'F'], 0.000407166)\n    self.assertAlmostEqual(observed['V', 'G'], 0.000692182)\n    self.assertAlmostEqual(observed['V', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'I'], 0.004438111)\n    self.assertAlmostEqual(observed['V', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'L'], 0.002361564)\n    self.assertAlmostEqual(observed['V', 'M'], 0.000570033)\n    self.assertAlmostEqual(observed['V', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'P'], 0.000162866)\n    self.assertAlmostEqual(observed['V', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['V', 'R'], 0.000203583)\n    self.assertAlmostEqual(observed['V', 'S'], 0.0002443)\n    self.assertAlmostEqual(observed['V', 'T'], 0.000773616)\n    self.assertAlmostEqual(observed['V', 'V'], 0.050732899)\n    self.assertAlmostEqual(observed['V', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['V', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'A'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'C'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'D'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'F'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'G'], 0.0002443)\n    self.assertAlmostEqual(observed['W', 'H'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'K'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'L'], 0.000162866)\n    self.assertAlmostEqual(observed['W', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'N'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'Q'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'R'], 0.000325733)\n    self.assertAlmostEqual(observed['W', 'S'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'T'], 8.1433e-05)\n    self.assertAlmostEqual(observed['W', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['W', 'W'], 0.013843648)\n    self.assertAlmostEqual(observed['W', 'Y'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'A'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'C'], 0.000407166)\n    self.assertAlmostEqual(observed['Y', 'D'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'E'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'F'], 0.001017915)\n    self.assertAlmostEqual(observed['Y', 'G'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'H'], 0.000895765)\n    self.assertAlmostEqual(observed['Y', 'I'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'K'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'L'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'M'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'N'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'P'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Q'], 8.1433e-05)\n    self.assertAlmostEqual(observed['Y', 'R'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'S'], 0.000325733)\n    self.assertAlmostEqual(observed['Y', 'T'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'V'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'W'], 4.0717e-05)\n    self.assertAlmostEqual(observed['Y', 'Y'], 0.028664495)"
        ]
    },
    {
        "func_name": "test4_aminoacid_probabilities",
        "original": "def test4_aminoacid_probabilities(self):\n    \"\"\"Test calculating expected amino acid probabilities.\"\"\"\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities",
        "mutated": [
            "def test4_aminoacid_probabilities(self):\n    if False:\n        i = 10\n    'Test calculating expected amino acid probabilities.'\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities",
            "def test4_aminoacid_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating expected amino acid probabilities.'\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities",
            "def test4_aminoacid_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating expected amino acid probabilities.'\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities",
            "def test4_aminoacid_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating expected amino acid probabilities.'\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities",
            "def test4_aminoacid_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating expected amino acid probabilities.'\n    observed = self.observed\n    probabilities = np.sum(observed, 0)\n    self.assertEqual(probabilities.shape, (20,))\n    self.assertAlmostEqual(probabilities['A'], 0.070358306)\n    self.assertAlmostEqual(probabilities['C'], 0.024959283)\n    self.assertAlmostEqual(probabilities['D'], 0.041205212)\n    self.assertAlmostEqual(probabilities['E'], 0.059120521)\n    self.assertAlmostEqual(probabilities['F'], 0.045806189)\n    self.assertAlmostEqual(probabilities['G'], 0.05781759)\n    self.assertAlmostEqual(probabilities['H'], 0.023208469)\n    self.assertAlmostEqual(probabilities['I'], 0.055781759)\n    self.assertAlmostEqual(probabilities['K'], 0.05504886)\n    self.assertAlmostEqual(probabilities['L'], 0.11779316)\n    self.assertAlmostEqual(probabilities['M'], 0.026628664)\n    self.assertAlmostEqual(probabilities['N'], 0.036034202)\n    self.assertAlmostEqual(probabilities['P'], 0.050773616)\n    self.assertAlmostEqual(probabilities['Q'], 0.039413681)\n    self.assertAlmostEqual(probabilities['R'], 0.051140065)\n    self.assertAlmostEqual(probabilities['S'], 0.079071661)\n    self.assertAlmostEqual(probabilities['T'], 0.054600977)\n    self.assertAlmostEqual(probabilities['V'], 0.063721498)\n    self.assertAlmostEqual(probabilities['W'], 0.015390879)\n    self.assertAlmostEqual(probabilities['Y'], 0.032125407)\n    TestScoringMatrices.probabilities = probabilities"
        ]
    },
    {
        "func_name": "test5_expected_probabilities",
        "original": "def test5_expected_probabilities(self):\n    \"\"\"Test calculating expected amino acid substitution probabilities.\"\"\"\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected",
        "mutated": [
            "def test5_expected_probabilities(self):\n    if False:\n        i = 10\n    'Test calculating expected amino acid substitution probabilities.'\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected",
            "def test5_expected_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating expected amino acid substitution probabilities.'\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected",
            "def test5_expected_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating expected amino acid substitution probabilities.'\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected",
            "def test5_expected_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating expected amino acid substitution probabilities.'\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected",
            "def test5_expected_probabilities(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating expected amino acid substitution probabilities.'\n    probabilities = self.probabilities\n    expected = np.dot(probabilities[:, None], probabilities[None, :])\n    self.assertEqual(expected.alphabet, protein_alphabet)\n    self.assertEqual(expected.shape, (20, 20))\n    self.assertAlmostEqual(expected['A', 'A'], 0.004950291)\n    self.assertAlmostEqual(expected['A', 'C'], 0.001756093)\n    self.assertAlmostEqual(expected['A', 'D'], 0.002899129)\n    self.assertAlmostEqual(expected['A', 'E'], 0.00415962)\n    self.assertAlmostEqual(expected['A', 'F'], 0.003222846)\n    self.assertAlmostEqual(expected['A', 'G'], 0.004067948)\n    self.assertAlmostEqual(expected['A', 'H'], 0.001632909)\n    self.assertAlmostEqual(expected['A', 'I'], 0.00392471)\n    self.assertAlmostEqual(expected['A', 'K'], 0.003873145)\n    self.assertAlmostEqual(expected['A', 'L'], 0.008287727)\n    self.assertAlmostEqual(expected['A', 'M'], 0.001873548)\n    self.assertAlmostEqual(expected['A', 'N'], 0.002535305)\n    self.assertAlmostEqual(expected['A', 'P'], 0.003572346)\n    self.assertAlmostEqual(expected['A', 'Q'], 0.00277308)\n    self.assertAlmostEqual(expected['A', 'R'], 0.003598128)\n    self.assertAlmostEqual(expected['A', 'S'], 0.005563348)\n    self.assertAlmostEqual(expected['A', 'T'], 0.003841632)\n    self.assertAlmostEqual(expected['A', 'V'], 0.004483337)\n    self.assertAlmostEqual(expected['A', 'W'], 0.001082876)\n    self.assertAlmostEqual(expected['A', 'Y'], 0.002260289)\n    self.assertAlmostEqual(expected['C', 'A'], 0.001756093)\n    self.assertAlmostEqual(expected['C', 'C'], 0.000622966)\n    self.assertAlmostEqual(expected['C', 'D'], 0.001028453)\n    self.assertAlmostEqual(expected['C', 'E'], 0.001475606)\n    self.assertAlmostEqual(expected['C', 'F'], 0.00114329)\n    self.assertAlmostEqual(expected['C', 'G'], 0.001443086)\n    self.assertAlmostEqual(expected['C', 'H'], 0.000579267)\n    self.assertAlmostEqual(expected['C', 'I'], 0.001392273)\n    self.assertAlmostEqual(expected['C', 'K'], 0.00137398)\n    self.assertAlmostEqual(expected['C', 'L'], 0.002940033)\n    self.assertAlmostEqual(expected['C', 'M'], 0.000664632)\n    self.assertAlmostEqual(expected['C', 'N'], 0.000899388)\n    self.assertAlmostEqual(expected['C', 'P'], 0.001267273)\n    self.assertAlmostEqual(expected['C', 'Q'], 0.000983737)\n    self.assertAlmostEqual(expected['C', 'R'], 0.001276419)\n    self.assertAlmostEqual(expected['C', 'S'], 0.001973572)\n    self.assertAlmostEqual(expected['C', 'T'], 0.001362801)\n    self.assertAlmostEqual(expected['C', 'V'], 0.001590443)\n    self.assertAlmostEqual(expected['C', 'W'], 0.000384145)\n    self.assertAlmostEqual(expected['C', 'Y'], 0.000801827)\n    self.assertAlmostEqual(expected['D', 'A'], 0.002899129)\n    self.assertAlmostEqual(expected['D', 'C'], 0.001028453)\n    self.assertAlmostEqual(expected['D', 'D'], 0.001697869)\n    self.assertAlmostEqual(expected['D', 'E'], 0.002436074)\n    self.assertAlmostEqual(expected['D', 'F'], 0.001887454)\n    self.assertAlmostEqual(expected['D', 'G'], 0.002382386)\n    self.assertAlmostEqual(expected['D', 'H'], 0.00095631)\n    self.assertAlmostEqual(expected['D', 'I'], 0.002298499)\n    self.assertAlmostEqual(expected['D', 'K'], 0.0022683)\n    self.assertAlmostEqual(expected['D', 'L'], 0.004853692)\n    self.assertAlmostEqual(expected['D', 'M'], 0.00109724)\n    self.assertAlmostEqual(expected['D', 'N'], 0.001484797)\n    self.assertAlmostEqual(expected['D', 'P'], 0.002092138)\n    self.assertAlmostEqual(expected['D', 'Q'], 0.001624049)\n    self.assertAlmostEqual(expected['D', 'R'], 0.002107237)\n    self.assertAlmostEqual(expected['D', 'S'], 0.003258165)\n    self.assertAlmostEqual(expected['D', 'T'], 0.002249845)\n    self.assertAlmostEqual(expected['D', 'V'], 0.002625658)\n    self.assertAlmostEqual(expected['D', 'W'], 0.000634184)\n    self.assertAlmostEqual(expected['D', 'Y'], 0.001323734)\n    self.assertAlmostEqual(expected['E', 'A'], 0.00415962)\n    self.assertAlmostEqual(expected['E', 'C'], 0.001475606)\n    self.assertAlmostEqual(expected['E', 'D'], 0.002436074)\n    self.assertAlmostEqual(expected['E', 'E'], 0.003495236)\n    self.assertAlmostEqual(expected['E', 'F'], 0.002708086)\n    self.assertAlmostEqual(expected['E', 'G'], 0.003418206)\n    self.assertAlmostEqual(expected['E', 'H'], 0.001372097)\n    self.assertAlmostEqual(expected['E', 'I'], 0.003297847)\n    self.assertAlmostEqual(expected['E', 'K'], 0.003254517)\n    self.assertAlmostEqual(expected['E', 'L'], 0.006963993)\n    self.assertAlmostEqual(expected['E', 'M'], 0.001574301)\n    self.assertAlmostEqual(expected['E', 'N'], 0.002130361)\n    self.assertAlmostEqual(expected['E', 'P'], 0.003001763)\n    self.assertAlmostEqual(expected['E', 'Q'], 0.002330157)\n    self.assertAlmostEqual(expected['E', 'R'], 0.003023427)\n    self.assertAlmostEqual(expected['E', 'S'], 0.004674758)\n    self.assertAlmostEqual(expected['E', 'T'], 0.003228038)\n    self.assertAlmostEqual(expected['E', 'V'], 0.003767248)\n    self.assertAlmostEqual(expected['E', 'W'], 0.000909917)\n    self.assertAlmostEqual(expected['E', 'Y'], 0.001899271)\n    self.assertAlmostEqual(expected['F', 'A'], 0.003222846)\n    self.assertAlmostEqual(expected['F', 'C'], 0.00114329)\n    self.assertAlmostEqual(expected['F', 'D'], 0.001887454)\n    self.assertAlmostEqual(expected['F', 'E'], 0.002708086)\n    self.assertAlmostEqual(expected['F', 'F'], 0.002098207)\n    self.assertAlmostEqual(expected['F', 'G'], 0.002648403)\n    self.assertAlmostEqual(expected['F', 'H'], 0.001063092)\n    self.assertAlmostEqual(expected['F', 'I'], 0.00255515)\n    self.assertAlmostEqual(expected['F', 'K'], 0.002521578)\n    self.assertAlmostEqual(expected['F', 'L'], 0.005395656)\n    self.assertAlmostEqual(expected['F', 'M'], 0.001219758)\n    self.assertAlmostEqual(expected['F', 'N'], 0.001650589)\n    self.assertAlmostEqual(expected['F', 'P'], 0.002325746)\n    self.assertAlmostEqual(expected['F', 'Q'], 0.001805391)\n    self.assertAlmostEqual(expected['F', 'R'], 0.002342531)\n    self.assertAlmostEqual(expected['F', 'S'], 0.003621971)\n    self.assertAlmostEqual(expected['F', 'T'], 0.002501063)\n    self.assertAlmostEqual(expected['F', 'V'], 0.002918839)\n    self.assertAlmostEqual(expected['F', 'W'], 0.000704998)\n    self.assertAlmostEqual(expected['F', 'Y'], 0.001471542)\n    self.assertAlmostEqual(expected['G', 'A'], 0.004067948)\n    self.assertAlmostEqual(expected['G', 'C'], 0.001443086)\n    self.assertAlmostEqual(expected['G', 'D'], 0.002382386)\n    self.assertAlmostEqual(expected['G', 'E'], 0.003418206)\n    self.assertAlmostEqual(expected['G', 'F'], 0.002648403)\n    self.assertAlmostEqual(expected['G', 'G'], 0.003342874)\n    self.assertAlmostEqual(expected['G', 'H'], 0.001341858)\n    self.assertAlmostEqual(expected['G', 'I'], 0.003225167)\n    self.assertAlmostEqual(expected['G', 'K'], 0.003182792)\n    self.assertAlmostEqual(expected['G', 'L'], 0.006810517)\n    self.assertAlmostEqual(expected['G', 'M'], 0.001539605)\n    self.assertAlmostEqual(expected['G', 'N'], 0.002083411)\n    self.assertAlmostEqual(expected['G', 'P'], 0.002935608)\n    self.assertAlmostEqual(expected['G', 'Q'], 0.002278804)\n    self.assertAlmostEqual(expected['G', 'R'], 0.002956795)\n    self.assertAlmostEqual(expected['G', 'S'], 0.004571733)\n    self.assertAlmostEqual(expected['G', 'T'], 0.003156897)\n    self.assertAlmostEqual(expected['G', 'V'], 0.003684223)\n    self.assertAlmostEqual(expected['G', 'W'], 0.000889864)\n    self.assertAlmostEqual(expected['G', 'Y'], 0.001857414)\n    self.assertAlmostEqual(expected['H', 'A'], 0.001632909)\n    self.assertAlmostEqual(expected['H', 'C'], 0.000579267)\n    self.assertAlmostEqual(expected['H', 'D'], 0.00095631)\n    self.assertAlmostEqual(expected['H', 'E'], 0.001372097)\n    self.assertAlmostEqual(expected['H', 'F'], 0.001063092)\n    self.assertAlmostEqual(expected['H', 'G'], 0.001341858)\n    self.assertAlmostEqual(expected['H', 'H'], 0.000538633)\n    self.assertAlmostEqual(expected['H', 'I'], 0.001294609)\n    self.assertAlmostEqual(expected['H', 'K'], 0.0012776)\n    self.assertAlmostEqual(expected['H', 'L'], 0.002733799)\n    self.assertAlmostEqual(expected['H', 'M'], 0.000618011)\n    self.assertAlmostEqual(expected['H', 'N'], 0.000836299)\n    self.assertAlmostEqual(expected['H', 'P'], 0.001178378)\n    self.assertAlmostEqual(expected['H', 'Q'], 0.000914731)\n    self.assertAlmostEqual(expected['H', 'R'], 0.001186883)\n    self.assertAlmostEqual(expected['H', 'S'], 0.001835132)\n    self.assertAlmostEqual(expected['H', 'T'], 0.001267205)\n    self.assertAlmostEqual(expected['H', 'V'], 0.001478878)\n    self.assertAlmostEqual(expected['H', 'W'], 0.000357199)\n    self.assertAlmostEqual(expected['H', 'Y'], 0.000745582)\n    self.assertAlmostEqual(expected['I', 'A'], 0.00392471)\n    self.assertAlmostEqual(expected['I', 'C'], 0.001392273)\n    self.assertAlmostEqual(expected['I', 'D'], 0.002298499)\n    self.assertAlmostEqual(expected['I', 'E'], 0.003297847)\n    self.assertAlmostEqual(expected['I', 'F'], 0.00255515)\n    self.assertAlmostEqual(expected['I', 'G'], 0.003225167)\n    self.assertAlmostEqual(expected['I', 'H'], 0.001294609)\n    self.assertAlmostEqual(expected['I', 'I'], 0.003111605)\n    self.assertAlmostEqual(expected['I', 'K'], 0.003070722)\n    self.assertAlmostEqual(expected['I', 'L'], 0.00657071)\n    self.assertAlmostEqual(expected['I', 'M'], 0.001485394)\n    self.assertAlmostEqual(expected['I', 'N'], 0.002010051)\n    self.assertAlmostEqual(expected['I', 'P'], 0.002832242)\n    self.assertAlmostEqual(expected['I', 'Q'], 0.002198564)\n    self.assertAlmostEqual(expected['I', 'R'], 0.002852683)\n    self.assertAlmostEqual(expected['I', 'S'], 0.004410756)\n    self.assertAlmostEqual(expected['I', 'T'], 0.003045739)\n    self.assertAlmostEqual(expected['I', 'V'], 0.003554497)\n    self.assertAlmostEqual(expected['I', 'W'], 0.00085853)\n    self.assertAlmostEqual(expected['I', 'Y'], 0.001792012)\n    self.assertAlmostEqual(expected['K', 'A'], 0.003873145)\n    self.assertAlmostEqual(expected['K', 'C'], 0.00137398)\n    self.assertAlmostEqual(expected['K', 'D'], 0.0022683)\n    self.assertAlmostEqual(expected['K', 'E'], 0.003254517)\n    self.assertAlmostEqual(expected['K', 'F'], 0.002521578)\n    self.assertAlmostEqual(expected['K', 'G'], 0.003182792)\n    self.assertAlmostEqual(expected['K', 'H'], 0.0012776)\n    self.assertAlmostEqual(expected['K', 'I'], 0.003070722)\n    self.assertAlmostEqual(expected['K', 'K'], 0.003030377)\n    self.assertAlmostEqual(expected['K', 'L'], 0.006484379)\n    self.assertAlmostEqual(expected['K', 'M'], 0.001465878)\n    self.assertAlmostEqual(expected['K', 'N'], 0.001983642)\n    self.assertAlmostEqual(expected['K', 'P'], 0.00279503)\n    self.assertAlmostEqual(expected['K', 'Q'], 0.002169678)\n    self.assertAlmostEqual(expected['K', 'R'], 0.002815202)\n    self.assertAlmostEqual(expected['K', 'S'], 0.004352805)\n    self.assertAlmostEqual(expected['K', 'T'], 0.003005722)\n    self.assertAlmostEqual(expected['K', 'V'], 0.003507796)\n    self.assertAlmostEqual(expected['K', 'W'], 0.00084725)\n    self.assertAlmostEqual(expected['K', 'Y'], 0.001768467)\n    self.assertAlmostEqual(expected['L', 'A'], 0.008287727)\n    self.assertAlmostEqual(expected['L', 'C'], 0.002940033)\n    self.assertAlmostEqual(expected['L', 'D'], 0.004853692)\n    self.assertAlmostEqual(expected['L', 'E'], 0.006963993)\n    self.assertAlmostEqual(expected['L', 'F'], 0.005395656)\n    self.assertAlmostEqual(expected['L', 'G'], 0.006810517)\n    self.assertAlmostEqual(expected['L', 'H'], 0.002733799)\n    self.assertAlmostEqual(expected['L', 'I'], 0.00657071)\n    self.assertAlmostEqual(expected['L', 'K'], 0.006484379)\n    self.assertAlmostEqual(expected['L', 'L'], 0.013875228)\n    self.assertAlmostEqual(expected['L', 'M'], 0.003136675)\n    self.assertAlmostEqual(expected['L', 'N'], 0.004244583)\n    self.assertAlmostEqual(expected['L', 'P'], 0.005980785)\n    self.assertAlmostEqual(expected['L', 'Q'], 0.004642662)\n    self.assertAlmostEqual(expected['L', 'R'], 0.00602395)\n    self.assertAlmostEqual(expected['L', 'S'], 0.009314101)\n    self.assertAlmostEqual(expected['L', 'T'], 0.006431622)\n    self.assertAlmostEqual(expected['L', 'V'], 0.007505957)\n    self.assertAlmostEqual(expected['L', 'W'], 0.00181294)\n    self.assertAlmostEqual(expected['L', 'Y'], 0.003784153)\n    self.assertAlmostEqual(expected['M', 'A'], 0.001873548)\n    self.assertAlmostEqual(expected['M', 'C'], 0.000664632)\n    self.assertAlmostEqual(expected['M', 'D'], 0.00109724)\n    self.assertAlmostEqual(expected['M', 'E'], 0.001574301)\n    self.assertAlmostEqual(expected['M', 'F'], 0.001219758)\n    self.assertAlmostEqual(expected['M', 'G'], 0.001539605)\n    self.assertAlmostEqual(expected['M', 'H'], 0.000618011)\n    self.assertAlmostEqual(expected['M', 'I'], 0.001485394)\n    self.assertAlmostEqual(expected['M', 'K'], 0.001465878)\n    self.assertAlmostEqual(expected['M', 'L'], 0.003136675)\n    self.assertAlmostEqual(expected['M', 'M'], 0.000709086)\n    self.assertAlmostEqual(expected['M', 'N'], 0.000959543)\n    self.assertAlmostEqual(expected['M', 'P'], 0.001352034)\n    self.assertAlmostEqual(expected['M', 'Q'], 0.001049534)\n    self.assertAlmostEqual(expected['M', 'R'], 0.001361792)\n    self.assertAlmostEqual(expected['M', 'S'], 0.002105573)\n    self.assertAlmostEqual(expected['M', 'T'], 0.001453951)\n    self.assertAlmostEqual(expected['M', 'V'], 0.001696818)\n    self.assertAlmostEqual(expected['M', 'W'], 0.000409839)\n    self.assertAlmostEqual(expected['M', 'Y'], 0.000855457)\n    self.assertAlmostEqual(expected['N', 'A'], 0.002535305)\n    self.assertAlmostEqual(expected['N', 'C'], 0.000899388)\n    self.assertAlmostEqual(expected['N', 'D'], 0.001484797)\n    self.assertAlmostEqual(expected['N', 'E'], 0.002130361)\n    self.assertAlmostEqual(expected['N', 'F'], 0.001650589)\n    self.assertAlmostEqual(expected['N', 'G'], 0.002083411)\n    self.assertAlmostEqual(expected['N', 'H'], 0.000836299)\n    self.assertAlmostEqual(expected['N', 'I'], 0.002010051)\n    self.assertAlmostEqual(expected['N', 'K'], 0.001983642)\n    self.assertAlmostEqual(expected['N', 'L'], 0.004244583)\n    self.assertAlmostEqual(expected['N', 'M'], 0.000959543)\n    self.assertAlmostEqual(expected['N', 'N'], 0.001298464)\n    self.assertAlmostEqual(expected['N', 'P'], 0.001829587)\n    self.assertAlmostEqual(expected['N', 'Q'], 0.001420241)\n    self.assertAlmostEqual(expected['N', 'R'], 0.001842791)\n    self.assertAlmostEqual(expected['N', 'S'], 0.002849284)\n    self.assertAlmostEqual(expected['N', 'T'], 0.001967503)\n    self.assertAlmostEqual(expected['N', 'V'], 0.002296153)\n    self.assertAlmostEqual(expected['N', 'W'], 0.000554598)\n    self.assertAlmostEqual(expected['N', 'Y'], 0.001157613)\n    self.assertAlmostEqual(expected['P', 'A'], 0.003572346)\n    self.assertAlmostEqual(expected['P', 'C'], 0.001267273)\n    self.assertAlmostEqual(expected['P', 'D'], 0.002092138)\n    self.assertAlmostEqual(expected['P', 'E'], 0.003001763)\n    self.assertAlmostEqual(expected['P', 'F'], 0.002325746)\n    self.assertAlmostEqual(expected['P', 'G'], 0.002935608)\n    self.assertAlmostEqual(expected['P', 'H'], 0.001178378)\n    self.assertAlmostEqual(expected['P', 'I'], 0.002832242)\n    self.assertAlmostEqual(expected['P', 'K'], 0.00279503)\n    self.assertAlmostEqual(expected['P', 'L'], 0.005980785)\n    self.assertAlmostEqual(expected['P', 'M'], 0.001352034)\n    self.assertAlmostEqual(expected['P', 'N'], 0.001829587)\n    self.assertAlmostEqual(expected['P', 'P'], 0.00257796)\n    self.assertAlmostEqual(expected['P', 'Q'], 0.002001175)\n    self.assertAlmostEqual(expected['P', 'R'], 0.002596566)\n    self.assertAlmostEqual(expected['P', 'S'], 0.004014754)\n    self.assertAlmostEqual(expected['P', 'T'], 0.002772289)\n    self.assertAlmostEqual(expected['P', 'V'], 0.003235371)\n    self.assertAlmostEqual(expected['P', 'W'], 0.000781451)\n    self.assertAlmostEqual(expected['P', 'Y'], 0.001631123)\n    self.assertAlmostEqual(expected['Q', 'A'], 0.00277308)\n    self.assertAlmostEqual(expected['Q', 'C'], 0.000983737)\n    self.assertAlmostEqual(expected['Q', 'D'], 0.001624049)\n    self.assertAlmostEqual(expected['Q', 'E'], 0.002330157)\n    self.assertAlmostEqual(expected['Q', 'F'], 0.001805391)\n    self.assertAlmostEqual(expected['Q', 'G'], 0.002278804)\n    self.assertAlmostEqual(expected['Q', 'H'], 0.000914731)\n    self.assertAlmostEqual(expected['Q', 'I'], 0.002198564)\n    self.assertAlmostEqual(expected['Q', 'K'], 0.002169678)\n    self.assertAlmostEqual(expected['Q', 'L'], 0.004642662)\n    self.assertAlmostEqual(expected['Q', 'M'], 0.001049534)\n    self.assertAlmostEqual(expected['Q', 'N'], 0.001420241)\n    self.assertAlmostEqual(expected['Q', 'P'], 0.002001175)\n    self.assertAlmostEqual(expected['Q', 'Q'], 0.001553438)\n    self.assertAlmostEqual(expected['Q', 'R'], 0.002015618)\n    self.assertAlmostEqual(expected['Q', 'S'], 0.003116505)\n    self.assertAlmostEqual(expected['Q', 'T'], 0.002152025)\n    self.assertAlmostEqual(expected['Q', 'V'], 0.002511499)\n    self.assertAlmostEqual(expected['Q', 'W'], 0.000606611)\n    self.assertAlmostEqual(expected['Q', 'Y'], 0.001266181)\n    self.assertAlmostEqual(expected['R', 'A'], 0.003598128)\n    self.assertAlmostEqual(expected['R', 'C'], 0.001276419)\n    self.assertAlmostEqual(expected['R', 'D'], 0.002107237)\n    self.assertAlmostEqual(expected['R', 'E'], 0.003023427)\n    self.assertAlmostEqual(expected['R', 'F'], 0.002342531)\n    self.assertAlmostEqual(expected['R', 'G'], 0.002956795)\n    self.assertAlmostEqual(expected['R', 'H'], 0.001186883)\n    self.assertAlmostEqual(expected['R', 'I'], 0.002852683)\n    self.assertAlmostEqual(expected['R', 'K'], 0.002815202)\n    self.assertAlmostEqual(expected['R', 'L'], 0.00602395)\n    self.assertAlmostEqual(expected['R', 'M'], 0.001361792)\n    self.assertAlmostEqual(expected['R', 'N'], 0.001842791)\n    self.assertAlmostEqual(expected['R', 'P'], 0.002596566)\n    self.assertAlmostEqual(expected['R', 'Q'], 0.002015618)\n    self.assertAlmostEqual(expected['R', 'R'], 0.002615306)\n    self.assertAlmostEqual(expected['R', 'S'], 0.00404373)\n    self.assertAlmostEqual(expected['R', 'T'], 0.002792298)\n    self.assertAlmostEqual(expected['R', 'V'], 0.003258722)\n    self.assertAlmostEqual(expected['R', 'W'], 0.000787091)\n    self.assertAlmostEqual(expected['R', 'Y'], 0.001642895)\n    self.assertAlmostEqual(expected['S', 'A'], 0.005563348)\n    self.assertAlmostEqual(expected['S', 'C'], 0.001973572)\n    self.assertAlmostEqual(expected['S', 'D'], 0.003258165)\n    self.assertAlmostEqual(expected['S', 'E'], 0.004674758)\n    self.assertAlmostEqual(expected['S', 'F'], 0.003621971)\n    self.assertAlmostEqual(expected['S', 'G'], 0.004571733)\n    self.assertAlmostEqual(expected['S', 'H'], 0.001835132)\n    self.assertAlmostEqual(expected['S', 'I'], 0.004410756)\n    self.assertAlmostEqual(expected['S', 'K'], 0.004352805)\n    self.assertAlmostEqual(expected['S', 'L'], 0.009314101)\n    self.assertAlmostEqual(expected['S', 'M'], 0.002105573)\n    self.assertAlmostEqual(expected['S', 'N'], 0.002849284)\n    self.assertAlmostEqual(expected['S', 'P'], 0.004014754)\n    self.assertAlmostEqual(expected['S', 'Q'], 0.003116505)\n    self.assertAlmostEqual(expected['S', 'R'], 0.00404373)\n    self.assertAlmostEqual(expected['S', 'S'], 0.006252328)\n    self.assertAlmostEqual(expected['S', 'T'], 0.00431739)\n    self.assertAlmostEqual(expected['S', 'V'], 0.005038565)\n    self.assertAlmostEqual(expected['S', 'W'], 0.001216982)\n    self.assertAlmostEqual(expected['S', 'Y'], 0.002540209)\n    self.assertAlmostEqual(expected['T', 'A'], 0.003841632)\n    self.assertAlmostEqual(expected['T', 'C'], 0.001362801)\n    self.assertAlmostEqual(expected['T', 'D'], 0.002249845)\n    self.assertAlmostEqual(expected['T', 'E'], 0.003228038)\n    self.assertAlmostEqual(expected['T', 'F'], 0.002501063)\n    self.assertAlmostEqual(expected['T', 'G'], 0.003156897)\n    self.assertAlmostEqual(expected['T', 'H'], 0.001267205)\n    self.assertAlmostEqual(expected['T', 'I'], 0.003045739)\n    self.assertAlmostEqual(expected['T', 'K'], 0.003005722)\n    self.assertAlmostEqual(expected['T', 'L'], 0.006431622)\n    self.assertAlmostEqual(expected['T', 'M'], 0.001453951)\n    self.assertAlmostEqual(expected['T', 'N'], 0.001967503)\n    self.assertAlmostEqual(expected['T', 'P'], 0.002772289)\n    self.assertAlmostEqual(expected['T', 'Q'], 0.002152025)\n    self.assertAlmostEqual(expected['T', 'R'], 0.002792298)\n    self.assertAlmostEqual(expected['T', 'S'], 0.00431739)\n    self.assertAlmostEqual(expected['T', 'T'], 0.002981267)\n    self.assertAlmostEqual(expected['T', 'V'], 0.003479256)\n    self.assertAlmostEqual(expected['T', 'W'], 0.000840357)\n    self.assertAlmostEqual(expected['T', 'Y'], 0.001754079)\n    self.assertAlmostEqual(expected['V', 'A'], 0.004483337)\n    self.assertAlmostEqual(expected['V', 'C'], 0.001590443)\n    self.assertAlmostEqual(expected['V', 'D'], 0.002625658)\n    self.assertAlmostEqual(expected['V', 'E'], 0.003767248)\n    self.assertAlmostEqual(expected['V', 'F'], 0.002918839)\n    self.assertAlmostEqual(expected['V', 'G'], 0.003684223)\n    self.assertAlmostEqual(expected['V', 'H'], 0.001478878)\n    self.assertAlmostEqual(expected['V', 'I'], 0.003554497)\n    self.assertAlmostEqual(expected['V', 'K'], 0.003507796)\n    self.assertAlmostEqual(expected['V', 'L'], 0.007505957)\n    self.assertAlmostEqual(expected['V', 'M'], 0.001696818)\n    self.assertAlmostEqual(expected['V', 'N'], 0.002296153)\n    self.assertAlmostEqual(expected['V', 'P'], 0.003235371)\n    self.assertAlmostEqual(expected['V', 'Q'], 0.002511499)\n    self.assertAlmostEqual(expected['V', 'R'], 0.003258722)\n    self.assertAlmostEqual(expected['V', 'S'], 0.005038565)\n    self.assertAlmostEqual(expected['V', 'T'], 0.003479256)\n    self.assertAlmostEqual(expected['V', 'V'], 0.004060429)\n    self.assertAlmostEqual(expected['V', 'W'], 0.00098073)\n    self.assertAlmostEqual(expected['V', 'Y'], 0.002047079)\n    self.assertAlmostEqual(expected['W', 'A'], 0.001082876)\n    self.assertAlmostEqual(expected['W', 'C'], 0.000384145)\n    self.assertAlmostEqual(expected['W', 'D'], 0.000634184)\n    self.assertAlmostEqual(expected['W', 'E'], 0.000909917)\n    self.assertAlmostEqual(expected['W', 'F'], 0.000704998)\n    self.assertAlmostEqual(expected['W', 'G'], 0.000889864)\n    self.assertAlmostEqual(expected['W', 'H'], 0.000357199)\n    self.assertAlmostEqual(expected['W', 'I'], 0.00085853)\n    self.assertAlmostEqual(expected['W', 'K'], 0.00084725)\n    self.assertAlmostEqual(expected['W', 'L'], 0.00181294)\n    self.assertAlmostEqual(expected['W', 'M'], 0.000409839)\n    self.assertAlmostEqual(expected['W', 'N'], 0.000554598)\n    self.assertAlmostEqual(expected['W', 'P'], 0.000781451)\n    self.assertAlmostEqual(expected['W', 'Q'], 0.000606611)\n    self.assertAlmostEqual(expected['W', 'R'], 0.000787091)\n    self.assertAlmostEqual(expected['W', 'S'], 0.001216982)\n    self.assertAlmostEqual(expected['W', 'T'], 0.000840357)\n    self.assertAlmostEqual(expected['W', 'V'], 0.00098073)\n    self.assertAlmostEqual(expected['W', 'W'], 0.000236879)\n    self.assertAlmostEqual(expected['W', 'Y'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'A'], 0.002260289)\n    self.assertAlmostEqual(expected['Y', 'C'], 0.000801827)\n    self.assertAlmostEqual(expected['Y', 'D'], 0.001323734)\n    self.assertAlmostEqual(expected['Y', 'E'], 0.001899271)\n    self.assertAlmostEqual(expected['Y', 'F'], 0.001471542)\n    self.assertAlmostEqual(expected['Y', 'G'], 0.001857414)\n    self.assertAlmostEqual(expected['Y', 'H'], 0.000745582)\n    self.assertAlmostEqual(expected['Y', 'I'], 0.001792012)\n    self.assertAlmostEqual(expected['Y', 'K'], 0.001768467)\n    self.assertAlmostEqual(expected['Y', 'L'], 0.003784153)\n    self.assertAlmostEqual(expected['Y', 'M'], 0.000855457)\n    self.assertAlmostEqual(expected['Y', 'N'], 0.001157613)\n    self.assertAlmostEqual(expected['Y', 'P'], 0.001631123)\n    self.assertAlmostEqual(expected['Y', 'Q'], 0.001266181)\n    self.assertAlmostEqual(expected['Y', 'R'], 0.001642895)\n    self.assertAlmostEqual(expected['Y', 'S'], 0.002540209)\n    self.assertAlmostEqual(expected['Y', 'T'], 0.001754079)\n    self.assertAlmostEqual(expected['Y', 'V'], 0.002047079)\n    self.assertAlmostEqual(expected['Y', 'W'], 0.000494438)\n    self.assertAlmostEqual(expected['Y', 'Y'], 0.001032042)\n    TestScoringMatrices.expected = expected"
        ]
    },
    {
        "func_name": "test6_scores",
        "original": "def test6_scores(self):\n    \"\"\"Test calculating amino acid substitution log-ratios.\"\"\"\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)",
        "mutated": [
            "def test6_scores(self):\n    if False:\n        i = 10\n    'Test calculating amino acid substitution log-ratios.'\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)",
            "def test6_scores(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating amino acid substitution log-ratios.'\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)",
            "def test6_scores(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating amino acid substitution log-ratios.'\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)",
            "def test6_scores(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating amino acid substitution log-ratios.'\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)",
            "def test6_scores(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating amino acid substitution log-ratios.'\n    observed = self.observed\n    expected = self.expected\n    scores = np.log2(observed / expected)\n    self.assertEqual(scores.alphabet, protein_alphabet)\n    self.assertEqual(scores.shape, (20, 20))\n    self.assertAlmostEqual(scores['A', 'A'], 3.537772309)\n    self.assertAlmostEqual(scores['A', 'C'], -5.430607826)\n    self.assertAlmostEqual(scores['A', 'D'], -2.831930042)\n    self.assertAlmostEqual(scores['A', 'E'], -2.352762205)\n    self.assertAlmostEqual(scores['A', 'F'], -6.306573848)\n    self.assertAlmostEqual(scores['A', 'G'], -1.942100058)\n    self.assertAlmostEqual(scores['A', 'H'], -4.325682671)\n    self.assertAlmostEqual(scores['A', 'I'], -3.420899738)\n    self.assertAlmostEqual(scores['A', 'K'], -4.571743998)\n    self.assertAlmostEqual(scores['A', 'L'], -4.084252669)\n    self.assertAlmostEqual(scores['A', 'M'], -3.202083293)\n    self.assertAlmostEqual(scores['A', 'N'], -4.375435706)\n    self.assertAlmostEqual(scores['A', 'P'], -2.207182798)\n    self.assertAlmostEqual(scores['A', 'Q'], -6.089727799)\n    self.assertAlmostEqual(scores['A', 'R'], -4.465485311)\n    self.assertAlmostEqual(scores['A', 'S'], -1.286837125)\n    self.assertAlmostEqual(scores['A', 'T'], -0.238029989)\n    self.assertAlmostEqual(scores['A', 'V'], -0.875920908)\n    self.assertAlmostEqual(scores['A', 'W'], -3.733106986)\n    self.assertAlmostEqual(scores['A', 'Y'], -5.794746052)\n    self.assertAlmostEqual(scores['C', 'A'], -5.430607826)\n    self.assertAlmostEqual(scores['C', 'C'], 5.188657725)\n    self.assertAlmostEqual(scores['C', 'D'], -4.658713898)\n    self.assertAlmostEqual(scores['C', 'E'], -5.179546061)\n    self.assertAlmostEqual(scores['C', 'F'], -2.489501515)\n    self.assertAlmostEqual(scores['C', 'G'], -3.147395538)\n    self.assertAlmostEqual(scores['C', 'H'], -3.830538432)\n    self.assertAlmostEqual(scores['C', 'I'], -5.095680501)\n    self.assertAlmostEqual(scores['C', 'K'], -5.07659976)\n    self.assertAlmostEqual(scores['C', 'L'], -5.174070931)\n    self.assertAlmostEqual(scores['C', 'M'], -4.028867149)\n    self.assertAlmostEqual(scores['C', 'N'], -4.465253968)\n    self.assertAlmostEqual(scores['C', 'P'], -3.959966073)\n    self.assertAlmostEqual(scores['C', 'Q'], -4.594583561)\n    self.assertAlmostEqual(scores['C', 'R'], -1.800416071)\n    self.assertAlmostEqual(scores['C', 'S'], -2.429122807)\n    self.assertAlmostEqual(scores['C', 'T'], -5.064813845)\n    self.assertAlmostEqual(scores['C', 'V'], -4.287667265)\n    self.assertAlmostEqual(scores['C', 'W'], -2.237962748)\n    self.assertAlmostEqual(scores['C', 'Y'], -0.977673719)\n    self.assertAlmostEqual(scores['D', 'A'], -2.831930042)\n    self.assertAlmostEqual(scores['D', 'C'], -4.658713898)\n    self.assertAlmostEqual(scores['D', 'D'], 4.35612805)\n    self.assertAlmostEqual(scores['D', 'E'], -0.121436659)\n    self.assertAlmostEqual(scores['D', 'F'], -5.534679921)\n    self.assertAlmostEqual(scores['D', 'G'], -1.700720847)\n    self.assertAlmostEqual(scores['D', 'H'], -2.553788743)\n    self.assertAlmostEqual(scores['D', 'I'], -5.818930812)\n    self.assertAlmostEqual(scores['D', 'K'], -4.799850071)\n    self.assertAlmostEqual(scores['D', 'L'], -5.897321242)\n    self.assertAlmostEqual(scores['D', 'M'], -4.75211746)\n    self.assertAlmostEqual(scores['D', 'N'], 0.133423815)\n    self.assertAlmostEqual(scores['D', 'P'], -5.683216384)\n    self.assertAlmostEqual(scores['D', 'Q'], -5.317833872)\n    self.assertAlmostEqual(scores['D', 'R'], -4.108628883)\n    self.assertAlmostEqual(scores['D', 'S'], -3.737335619)\n    self.assertAlmostEqual(scores['D', 'T'], -3.466136061)\n    self.assertAlmostEqual(scores['D', 'V'], -4.010917576)\n    self.assertAlmostEqual(scores['D', 'W'], -3.961213059)\n    self.assertAlmostEqual(scores['D', 'Y'], -4.022852124)\n    self.assertAlmostEqual(scores['E', 'A'], -2.352762205)\n    self.assertAlmostEqual(scores['E', 'C'], -5.179546061)\n    self.assertAlmostEqual(scores['E', 'D'], -0.121436659)\n    self.assertAlmostEqual(scores['E', 'E'], 3.873287671)\n    self.assertAlmostEqual(scores['E', 'F'], -6.055512084)\n    self.assertAlmostEqual(scores['E', 'G'], -1.347083893)\n    self.assertAlmostEqual(scores['E', 'H'], -3.074620907)\n    self.assertAlmostEqual(scores['E', 'I'], -4.754800475)\n    self.assertAlmostEqual(scores['E', 'K'], -1.462701239)\n    self.assertAlmostEqual(scores['E', 'L'], -6.418153406)\n    self.assertAlmostEqual(scores['E', 'M'], -5.272949623)\n    self.assertAlmostEqual(scores['E', 'N'], -4.709336443)\n    self.assertAlmostEqual(scores['E', 'P'], -6.204048548)\n    self.assertAlmostEqual(scores['E', 'Q'], -1.379234416)\n    self.assertAlmostEqual(scores['E', 'R'], -3.407068625)\n    self.assertAlmostEqual(scores['E', 'S'], -4.258167782)\n    self.assertAlmostEqual(scores['E', 'T'], -5.30889632)\n    self.assertAlmostEqual(scores['E', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['E', 'W'], -4.482045222)\n    self.assertAlmostEqual(scores['E', 'Y'], -5.543684288)\n    self.assertAlmostEqual(scores['F', 'A'], -6.306573848)\n    self.assertAlmostEqual(scores['F', 'C'], -2.489501515)\n    self.assertAlmostEqual(scores['F', 'D'], -5.534679921)\n    self.assertAlmostEqual(scores['F', 'E'], -6.055512084)\n    self.assertAlmostEqual(scores['F', 'F'], 4.26970641)\n    self.assertAlmostEqual(scores['F', 'G'], -6.02336156)\n    self.assertAlmostEqual(scores['F', 'H'], -3.706504455)\n    self.assertAlmostEqual(scores['F', 'I'], -3.386684023)\n    self.assertAlmostEqual(scores['F', 'K'], -5.952565782)\n    self.assertAlmostEqual(scores['F', 'L'], -1.349597236)\n    self.assertAlmostEqual(scores['F', 'M'], -3.904833171)\n    self.assertAlmostEqual(scores['F', 'N'], -4.341219991)\n    self.assertAlmostEqual(scores['F', 'P'], -5.835932096)\n    self.assertAlmostEqual(scores['F', 'Q'], -5.470549583)\n    self.assertAlmostEqual(scores['F', 'R'], -5.846307095)\n    self.assertAlmostEqual(scores['F', 'S'], -2.568123236)\n    self.assertAlmostEqual(scores['F', 'T'], -4.355817367)\n    self.assertAlmostEqual(scores['F', 'V'], -2.841705193)\n    self.assertAlmostEqual(scores['F', 'W'], -4.11392877)\n    self.assertAlmostEqual(scores['F', 'Y'], -0.531711646)\n    self.assertAlmostEqual(scores['G', 'A'], -1.942100058)\n    self.assertAlmostEqual(scores['G', 'C'], -3.147395538)\n    self.assertAlmostEqual(scores['G', 'D'], -1.700720847)\n    self.assertAlmostEqual(scores['G', 'E'], -1.347083893)\n    self.assertAlmostEqual(scores['G', 'F'], -6.02336156)\n    self.assertAlmostEqual(scores['G', 'G'], 3.898060354)\n    self.assertAlmostEqual(scores['G', 'H'], -4.042470383)\n    self.assertAlmostEqual(scores['G', 'I'], -6.307612452)\n    self.assertAlmostEqual(scores['G', 'K'], -4.70356921)\n    self.assertAlmostEqual(scores['G', 'L'], -5.801040381)\n    self.assertAlmostEqual(scores['G', 'M'], -3.655836599)\n    self.assertAlmostEqual(scores['G', 'N'], -2.869830997)\n    self.assertAlmostEqual(scores['G', 'P'], -6.171898024)\n    self.assertAlmostEqual(scores['G', 'Q'], -5.806515511)\n    self.assertAlmostEqual(scores['G', 'R'], -1.481833305)\n    self.assertAlmostEqual(scores['G', 'S'], -1.489051665)\n    self.assertAlmostEqual(scores['G', 'T'], -4.691783295)\n    self.assertAlmostEqual(scores['G', 'V'], -2.412136375)\n    self.assertAlmostEqual(scores['G', 'W'], -1.864932198)\n    self.assertAlmostEqual(scores['G', 'Y'], -5.511533764)\n    self.assertAlmostEqual(scores['H', 'A'], -4.325682671)\n    self.assertAlmostEqual(scores['H', 'C'], -3.830538432)\n    self.assertAlmostEqual(scores['H', 'D'], -2.553788743)\n    self.assertAlmostEqual(scores['H', 'E'], -3.074620907)\n    self.assertAlmostEqual(scores['H', 'F'], -3.706504455)\n    self.assertAlmostEqual(scores['H', 'G'], -4.042470383)\n    self.assertAlmostEqual(scores['H', 'H'], 5.100935209)\n    self.assertAlmostEqual(scores['H', 'I'], -4.990755347)\n    self.assertAlmostEqual(scores['H', 'K'], -3.386712104)\n    self.assertAlmostEqual(scores['H', 'L'], -5.069145777)\n    self.assertAlmostEqual(scores['H', 'M'], -3.923941994)\n    self.assertAlmostEqual(scores['H', 'N'], -0.900897195)\n    self.assertAlmostEqual(scores['H', 'P'], -2.047685997)\n    self.assertAlmostEqual(scores['H', 'Q'], -0.167730311)\n    self.assertAlmostEqual(scores['H', 'R'], -0.1649762)\n    self.assertAlmostEqual(scores['H', 'S'], -3.172194559)\n    self.assertAlmostEqual(scores['H', 'T'], -4.959888691)\n    self.assertAlmostEqual(scores['H', 'V'], -5.182742111)\n    self.assertAlmostEqual(scores['H', 'W'], -3.133037593)\n    self.assertAlmostEqual(scores['H', 'Y'], 0.26475496)\n    self.assertAlmostEqual(scores['I', 'A'], -3.420899738)\n    self.assertAlmostEqual(scores['I', 'C'], -5.095680501)\n    self.assertAlmostEqual(scores['I', 'D'], -5.818930812)\n    self.assertAlmostEqual(scores['I', 'E'], -4.754800475)\n    self.assertAlmostEqual(scores['I', 'F'], -3.386684023)\n    self.assertAlmostEqual(scores['I', 'G'], -6.307612452)\n    self.assertAlmostEqual(scores['I', 'H'], -4.990755347)\n    self.assertAlmostEqual(scores['I', 'I'], 3.868223896)\n    self.assertAlmostEqual(scores['I', 'K'], -4.651854173)\n    self.assertAlmostEqual(scores['I', 'L'], -1.908023091)\n    self.assertAlmostEqual(scores['I', 'M'], -0.545227873)\n    self.assertAlmostEqual(scores['I', 'N'], -3.303542788)\n    self.assertAlmostEqual(scores['I', 'P'], -6.120182987)\n    self.assertAlmostEqual(scores['I', 'Q'], -5.754800475)\n    self.assertAlmostEqual(scores['I', 'R'], -6.130557986)\n    self.assertAlmostEqual(scores['I', 'S'], -4.174302222)\n    self.assertAlmostEqual(scores['I', 'T'], -1.055105758)\n    self.assertAlmostEqual(scores['I', 'V'], 0.320300145)\n    self.assertAlmostEqual(scores['I', 'W'], -4.398179662)\n    self.assertAlmostEqual(scores['I', 'Y'], -5.459818728)\n    self.assertAlmostEqual(scores['K', 'A'], -4.571743998)\n    self.assertAlmostEqual(scores['K', 'C'], -5.07659976)\n    self.assertAlmostEqual(scores['K', 'D'], -4.799850071)\n    self.assertAlmostEqual(scores['K', 'E'], -1.462701239)\n    self.assertAlmostEqual(scores['K', 'F'], -5.952565782)\n    self.assertAlmostEqual(scores['K', 'G'], -4.70356921)\n    self.assertAlmostEqual(scores['K', 'H'], -3.386712104)\n    self.assertAlmostEqual(scores['K', 'I'], -4.651854173)\n    self.assertAlmostEqual(scores['K', 'K'], 3.944655396)\n    self.assertAlmostEqual(scores['K', 'L'], -7.315207104)\n    self.assertAlmostEqual(scores['K', 'M'], -2.848075227)\n    self.assertAlmostEqual(scores['K', 'N'], -1.358462628)\n    self.assertAlmostEqual(scores['K', 'P'], -6.101102246)\n    self.assertAlmostEqual(scores['K', 'Q'], -1.035280015)\n    self.assertAlmostEqual(scores['K', 'R'], 0.31478751)\n    self.assertAlmostEqual(scores['K', 'S'], -4.740183981)\n    self.assertAlmostEqual(scores['K', 'T'], -2.5055103)\n    self.assertAlmostEqual(scores['K', 'V'], -5.428803438)\n    self.assertAlmostEqual(scores['K', 'W'], -4.37909892)\n    self.assertAlmostEqual(scores['K', 'Y'], -4.440737986)\n    self.assertAlmostEqual(scores['L', 'A'], -4.084252669)\n    self.assertAlmostEqual(scores['L', 'C'], -5.174070931)\n    self.assertAlmostEqual(scores['L', 'D'], -5.897321242)\n    self.assertAlmostEqual(scores['L', 'E'], -6.418153406)\n    self.assertAlmostEqual(scores['L', 'F'], -1.349597236)\n    self.assertAlmostEqual(scores['L', 'G'], -5.801040381)\n    self.assertAlmostEqual(scores['L', 'H'], -5.069145777)\n    self.assertAlmostEqual(scores['L', 'I'], -1.908023091)\n    self.assertAlmostEqual(scores['L', 'K'], -7.315207104)\n    self.assertAlmostEqual(scores['L', 'L'], 2.931617632)\n    self.assertAlmostEqual(scores['L', 'M'], -1.058021128)\n    self.assertAlmostEqual(scores['L', 'N'], -5.118898812)\n    self.assertAlmostEqual(scores['L', 'P'], -2.154179298)\n    self.assertAlmostEqual(scores['L', 'Q'], -3.663265904)\n    self.assertAlmostEqual(scores['L', 'R'], -4.208948417)\n    self.assertAlmostEqual(scores['L', 'S'], -4.252692652)\n    self.assertAlmostEqual(scores['L', 'T'], -4.30342119)\n    self.assertAlmostEqual(scores['L', 'V'], -1.668293614)\n    self.assertAlmostEqual(scores['L', 'W'], -3.476570092)\n    self.assertAlmostEqual(scores['L', 'Y'], -5.538209158)\n    self.assertAlmostEqual(scores['M', 'A'], -3.202083293)\n    self.assertAlmostEqual(scores['M', 'C'], -4.028867149)\n    self.assertAlmostEqual(scores['M', 'D'], -4.75211746)\n    self.assertAlmostEqual(scores['M', 'E'], -5.272949623)\n    self.assertAlmostEqual(scores['M', 'F'], -3.904833171)\n    self.assertAlmostEqual(scores['M', 'G'], -3.655836599)\n    self.assertAlmostEqual(scores['M', 'H'], -3.923941994)\n    self.assertAlmostEqual(scores['M', 'I'], -0.545227873)\n    self.assertAlmostEqual(scores['M', 'K'], -2.848075227)\n    self.assertAlmostEqual(scores['M', 'L'], -1.058021128)\n    self.assertAlmostEqual(scores['M', 'M'], 4.916648279)\n    self.assertAlmostEqual(scores['M', 'N'], -4.55865753)\n    self.assertAlmostEqual(scores['M', 'P'], -5.053369635)\n    self.assertAlmostEqual(scores['M', 'Q'], -4.687987123)\n    self.assertAlmostEqual(scores['M', 'R'], -3.478782133)\n    self.assertAlmostEqual(scores['M', 'S'], -4.692451371)\n    self.assertAlmostEqual(scores['M', 'T'], -0.634655451)\n    self.assertAlmostEqual(scores['M', 'V'], -1.573715905)\n    self.assertAlmostEqual(scores['M', 'W'], -3.331366309)\n    self.assertAlmostEqual(scores['M', 'Y'], -4.393005375)\n    self.assertAlmostEqual(scores['N', 'A'], -4.375435706)\n    self.assertAlmostEqual(scores['N', 'C'], -4.465253968)\n    self.assertAlmostEqual(scores['N', 'D'], 0.133423815)\n    self.assertAlmostEqual(scores['N', 'E'], -4.709336443)\n    self.assertAlmostEqual(scores['N', 'F'], -4.341219991)\n    self.assertAlmostEqual(scores['N', 'G'], -2.869830997)\n    self.assertAlmostEqual(scores['N', 'H'], -0.900897195)\n    self.assertAlmostEqual(scores['N', 'I'], -3.303542788)\n    self.assertAlmostEqual(scores['N', 'K'], -1.358462628)\n    self.assertAlmostEqual(scores['N', 'L'], -5.118898812)\n    self.assertAlmostEqual(scores['N', 'M'], -4.55865753)\n    self.assertAlmostEqual(scores['N', 'N'], 4.496808747)\n    self.assertAlmostEqual(scores['N', 'P'], -5.489756455)\n    self.assertAlmostEqual(scores['N', 'Q'], -2.802445847)\n    self.assertAlmostEqual(scores['N', 'R'], -3.178203359)\n    self.assertAlmostEqual(scores['N', 'S'], -0.806910095)\n    self.assertAlmostEqual(scores['N', 'T'], -1.594604227)\n    self.assertAlmostEqual(scores['N', 'V'], -5.817457647)\n    self.assertAlmostEqual(scores['N', 'W'], -3.767753129)\n    self.assertAlmostEqual(scores['N', 'Y'], -3.829392195)\n    self.assertAlmostEqual(scores['P', 'A'], -2.207182798)\n    self.assertAlmostEqual(scores['P', 'C'], -3.959966073)\n    self.assertAlmostEqual(scores['P', 'D'], -5.683216384)\n    self.assertAlmostEqual(scores['P', 'E'], -6.204048548)\n    self.assertAlmostEqual(scores['P', 'F'], -5.835932096)\n    self.assertAlmostEqual(scores['P', 'G'], -6.171898024)\n    self.assertAlmostEqual(scores['P', 'H'], -2.047685997)\n    self.assertAlmostEqual(scores['P', 'I'], -6.120182987)\n    self.assertAlmostEqual(scores['P', 'K'], -6.101102246)\n    self.assertAlmostEqual(scores['P', 'L'], -2.154179298)\n    self.assertAlmostEqual(scores['P', 'M'], -5.053369635)\n    self.assertAlmostEqual(scores['P', 'N'], -5.489756455)\n    self.assertAlmostEqual(scores['P', 'P'], 4.121439949)\n    self.assertAlmostEqual(scores['P', 'Q'], -3.619086047)\n    self.assertAlmostEqual(scores['P', 'R'], -3.187488636)\n    self.assertAlmostEqual(scores['P', 'S'], -1.19728554)\n    self.assertAlmostEqual(scores['P', 'T'], -2.089316331)\n    self.assertAlmostEqual(scores['P', 'V'], -4.312169751)\n    self.assertAlmostEqual(scores['P', 'W'], -4.262465234)\n    self.assertAlmostEqual(scores['P', 'Y'], -5.3241043)\n    self.assertAlmostEqual(scores['Q', 'A'], -6.089727799)\n    self.assertAlmostEqual(scores['Q', 'C'], -4.594583561)\n    self.assertAlmostEqual(scores['Q', 'D'], -5.317833872)\n    self.assertAlmostEqual(scores['Q', 'E'], -1.379234416)\n    self.assertAlmostEqual(scores['Q', 'F'], -5.470549583)\n    self.assertAlmostEqual(scores['Q', 'G'], -5.806515511)\n    self.assertAlmostEqual(scores['Q', 'H'], -0.167730311)\n    self.assertAlmostEqual(scores['Q', 'I'], -5.754800475)\n    self.assertAlmostEqual(scores['Q', 'K'], -1.035280015)\n    self.assertAlmostEqual(scores['Q', 'L'], -3.663265904)\n    self.assertAlmostEqual(scores['Q', 'M'], -4.687987123)\n    self.assertAlmostEqual(scores['Q', 'N'], -2.802445847)\n    self.assertAlmostEqual(scores['Q', 'P'], -3.619086047)\n    self.assertAlmostEqual(scores['Q', 'Q'], 4.422253499)\n    self.assertAlmostEqual(scores['Q', 'R'], -0.074872194)\n    self.assertAlmostEqual(scores['Q', 'S'], -4.673205282)\n    self.assertAlmostEqual(scores['Q', 'T'], -4.723933819)\n    self.assertAlmostEqual(scores['Q', 'V'], -4.946787239)\n    self.assertAlmostEqual(scores['Q', 'W'], -3.897082721)\n    self.assertAlmostEqual(scores['Q', 'Y'], -3.958721787)\n    self.assertAlmostEqual(scores['R', 'A'], -4.465485311)\n    self.assertAlmostEqual(scores['R', 'C'], -1.800416071)\n    self.assertAlmostEqual(scores['R', 'D'], -4.108628883)\n    self.assertAlmostEqual(scores['R', 'E'], -3.407068625)\n    self.assertAlmostEqual(scores['R', 'F'], -5.846307095)\n    self.assertAlmostEqual(scores['R', 'G'], -1.481833305)\n    self.assertAlmostEqual(scores['R', 'H'], -0.1649762)\n    self.assertAlmostEqual(scores['R', 'I'], -6.130557986)\n    self.assertAlmostEqual(scores['R', 'K'], 0.31478751)\n    self.assertAlmostEqual(scores['R', 'L'], -4.208948417)\n    self.assertAlmostEqual(scores['R', 'M'], -3.478782133)\n    self.assertAlmostEqual(scores['R', 'N'], -3.178203359)\n    self.assertAlmostEqual(scores['R', 'P'], -3.187488636)\n    self.assertAlmostEqual(scores['R', 'Q'], -0.074872194)\n    self.assertAlmostEqual(scores['R', 'R'], 3.937295948)\n    self.assertAlmostEqual(scores['R', 'S'], -2.311997199)\n    self.assertAlmostEqual(scores['R', 'T'], -3.777763236)\n    self.assertAlmostEqual(scores['R', 'V'], -4.000616656)\n    self.assertAlmostEqual(scores['R', 'W'], -1.272840233)\n    self.assertAlmostEqual(scores['R', 'Y'], -5.334479299)\n    self.assertAlmostEqual(scores['S', 'A'], -1.286837125)\n    self.assertAlmostEqual(scores['S', 'C'], -2.429122807)\n    self.assertAlmostEqual(scores['S', 'D'], -3.737335619)\n    self.assertAlmostEqual(scores['S', 'E'], -4.258167782)\n    self.assertAlmostEqual(scores['S', 'F'], -2.568123236)\n    self.assertAlmostEqual(scores['S', 'G'], -1.489051665)\n    self.assertAlmostEqual(scores['S', 'H'], -3.172194559)\n    self.assertAlmostEqual(scores['S', 'I'], -4.174302222)\n    self.assertAlmostEqual(scores['S', 'K'], -4.740183981)\n    self.assertAlmostEqual(scores['S', 'L'], -4.252692652)\n    self.assertAlmostEqual(scores['S', 'M'], -4.692451371)\n    self.assertAlmostEqual(scores['S', 'N'], -0.806910095)\n    self.assertAlmostEqual(scores['S', 'P'], -1.19728554)\n    self.assertAlmostEqual(scores['S', 'Q'], -4.673205282)\n    self.assertAlmostEqual(scores['S', 'R'], -2.311997199)\n    self.assertAlmostEqual(scores['S', 'S'], 3.386624147)\n    self.assertAlmostEqual(scores['S', 'T'], -1.000477613)\n    self.assertAlmostEqual(scores['S', 'V'], -4.366288986)\n    self.assertAlmostEqual(scores['S', 'W'], -3.901546969)\n    self.assertAlmostEqual(scores['S', 'Y'], -2.963186035)\n    self.assertAlmostEqual(scores['T', 'A'], -0.238029989)\n    self.assertAlmostEqual(scores['T', 'C'], -5.064813845)\n    self.assertAlmostEqual(scores['T', 'D'], -3.466136061)\n    self.assertAlmostEqual(scores['T', 'E'], -5.30889632)\n    self.assertAlmostEqual(scores['T', 'F'], -4.355817367)\n    self.assertAlmostEqual(scores['T', 'G'], -4.691783295)\n    self.assertAlmostEqual(scores['T', 'H'], -4.959888691)\n    self.assertAlmostEqual(scores['T', 'I'], -1.055105758)\n    self.assertAlmostEqual(scores['T', 'K'], -2.5055103)\n    self.assertAlmostEqual(scores['T', 'L'], -4.30342119)\n    self.assertAlmostEqual(scores['T', 'M'], -0.634655451)\n    self.assertAlmostEqual(scores['T', 'N'], -1.594604227)\n    self.assertAlmostEqual(scores['T', 'P'], -2.089316331)\n    self.assertAlmostEqual(scores['T', 'Q'], -4.723933819)\n    self.assertAlmostEqual(scores['T', 'R'], -3.777763236)\n    self.assertAlmostEqual(scores['T', 'S'], -1.000477613)\n    self.assertAlmostEqual(scores['T', 'T'], 3.844754886)\n    self.assertAlmostEqual(scores['T', 'V'], -2.16909001)\n    self.assertAlmostEqual(scores['T', 'W'], -3.367313006)\n    self.assertAlmostEqual(scores['T', 'Y'], -5.428952072)\n    self.assertAlmostEqual(scores['V', 'A'], -0.875920908)\n    self.assertAlmostEqual(scores['V', 'C'], -4.287667265)\n    self.assertAlmostEqual(scores['V', 'D'], -4.010917576)\n    self.assertAlmostEqual(scores['V', 'E'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'F'], -2.841705193)\n    self.assertAlmostEqual(scores['V', 'G'], -2.412136375)\n    self.assertAlmostEqual(scores['V', 'H'], -5.182742111)\n    self.assertAlmostEqual(scores['V', 'I'], 0.320300145)\n    self.assertAlmostEqual(scores['V', 'K'], -5.428803438)\n    self.assertAlmostEqual(scores['V', 'L'], -1.668293614)\n    self.assertAlmostEqual(scores['V', 'M'], -1.573715905)\n    self.assertAlmostEqual(scores['V', 'N'], -5.817457647)\n    self.assertAlmostEqual(scores['V', 'P'], -4.312169751)\n    self.assertAlmostEqual(scores['V', 'Q'], -4.946787239)\n    self.assertAlmostEqual(scores['V', 'R'], -4.000616656)\n    self.assertAlmostEqual(scores['V', 'S'], -4.366288986)\n    self.assertAlmostEqual(scores['V', 'T'], -2.16909001)\n    self.assertAlmostEqual(scores['V', 'V'], 3.64321741)\n    self.assertAlmostEqual(scores['V', 'W'], -4.590166426)\n    self.assertAlmostEqual(scores['V', 'Y'], -5.651805492)\n    self.assertAlmostEqual(scores['W', 'A'], -3.733106986)\n    self.assertAlmostEqual(scores['W', 'C'], -2.237962748)\n    self.assertAlmostEqual(scores['W', 'D'], -3.961213059)\n    self.assertAlmostEqual(scores['W', 'E'], -4.482045222)\n    self.assertAlmostEqual(scores['W', 'F'], -4.11392877)\n    self.assertAlmostEqual(scores['W', 'G'], -1.864932198)\n    self.assertAlmostEqual(scores['W', 'H'], -3.133037593)\n    self.assertAlmostEqual(scores['W', 'I'], -4.398179662)\n    self.assertAlmostEqual(scores['W', 'K'], -4.37909892)\n    self.assertAlmostEqual(scores['W', 'L'], -3.476570092)\n    self.assertAlmostEqual(scores['W', 'M'], -3.331366309)\n    self.assertAlmostEqual(scores['W', 'N'], -3.767753129)\n    self.assertAlmostEqual(scores['W', 'P'], -4.262465234)\n    self.assertAlmostEqual(scores['W', 'Q'], -3.897082721)\n    self.assertAlmostEqual(scores['W', 'R'], -1.272840233)\n    self.assertAlmostEqual(scores['W', 'S'], -3.901546969)\n    self.assertAlmostEqual(scores['W', 'T'], -3.367313006)\n    self.assertAlmostEqual(scores['W', 'V'], -4.590166426)\n    self.assertAlmostEqual(scores['W', 'W'], 5.868929028)\n    self.assertAlmostEqual(scores['W', 'Y'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'A'], -5.794746052)\n    self.assertAlmostEqual(scores['Y', 'C'], -0.977673719)\n    self.assertAlmostEqual(scores['Y', 'D'], -4.022852124)\n    self.assertAlmostEqual(scores['Y', 'E'], -5.543684288)\n    self.assertAlmostEqual(scores['Y', 'F'], -0.531711646)\n    self.assertAlmostEqual(scores['Y', 'G'], -5.511533764)\n    self.assertAlmostEqual(scores['Y', 'H'], 0.26475496)\n    self.assertAlmostEqual(scores['Y', 'I'], -5.459818728)\n    self.assertAlmostEqual(scores['Y', 'K'], -4.440737986)\n    self.assertAlmostEqual(scores['Y', 'L'], -5.538209158)\n    self.assertAlmostEqual(scores['Y', 'M'], -4.393005375)\n    self.assertAlmostEqual(scores['Y', 'N'], -3.829392195)\n    self.assertAlmostEqual(scores['Y', 'P'], -5.3241043)\n    self.assertAlmostEqual(scores['Y', 'Q'], -3.958721787)\n    self.assertAlmostEqual(scores['Y', 'R'], -5.334479299)\n    self.assertAlmostEqual(scores['Y', 'S'], -2.963186035)\n    self.assertAlmostEqual(scores['Y', 'T'], -5.428952072)\n    self.assertAlmostEqual(scores['Y', 'V'], -5.651805492)\n    self.assertAlmostEqual(scores['Y', 'W'], -3.602100974)\n    self.assertAlmostEqual(scores['Y', 'Y'], 4.795691579)"
        ]
    },
    {
        "func_name": "test_ident",
        "original": "def test_ident(self):\n    \"\"\"Test calculating the +6/-1 matrix as an approximation of BLOSUM62.\"\"\"\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)",
        "mutated": [
            "def test_ident(self):\n    if False:\n        i = 10\n    'Test calculating the +6/-1 matrix as an approximation of BLOSUM62.'\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)",
            "def test_ident(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test calculating the +6/-1 matrix as an approximation of BLOSUM62.'\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)",
            "def test_ident(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test calculating the +6/-1 matrix as an approximation of BLOSUM62.'\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)",
            "def test_ident(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test calculating the +6/-1 matrix as an approximation of BLOSUM62.'\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)",
            "def test_ident(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test calculating the +6/-1 matrix as an approximation of BLOSUM62.'\n    from Bio.Data.IUPACData import protein_letters as alphabet\n    m = substitution_matrices.load('BLOSUM62')\n    self.assertEqual(alphabet, 'ACDEFGHIKLMNPQRSTVWY')\n    match_score = round(np.mean([m[c, c] for c in alphabet]))\n    mismatch_score = round(np.mean([m[c1, c2] for c1 in alphabet for c2 in alphabet if c1 != c2]))\n    self.assertAlmostEqual(match_score, 6.0)\n    self.assertAlmostEqual(mismatch_score, -1.0)"
        ]
    },
    {
        "func_name": "test_loading",
        "original": "def test_loading(self):\n    \"\"\"Confirm that all provided substitution matrices can be loaded.\"\"\"\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")",
        "mutated": [
            "def test_loading(self):\n    if False:\n        i = 10\n    'Confirm that all provided substitution matrices can be loaded.'\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")",
            "def test_loading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Confirm that all provided substitution matrices can be loaded.'\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")",
            "def test_loading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Confirm that all provided substitution matrices can be loaded.'\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")",
            "def test_loading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Confirm that all provided substitution matrices can be loaded.'\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")",
            "def test_loading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Confirm that all provided substitution matrices can be loaded.'\n    names = substitution_matrices.load()\n    for name in names:\n        try:\n            m = substitution_matrices.load(name)\n        except Exception:\n            self.fail(f\"Failed to load subsitution matrix '{name}'\")"
        ]
    },
    {
        "func_name": "test_reading",
        "original": "def test_reading(self):\n    \"\"\"Confirm matrix reading works with filename or handle.\"\"\"\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)",
        "mutated": [
            "def test_reading(self):\n    if False:\n        i = 10\n    'Confirm matrix reading works with filename or handle.'\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)",
            "def test_reading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Confirm matrix reading works with filename or handle.'\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)",
            "def test_reading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Confirm matrix reading works with filename or handle.'\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)",
            "def test_reading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Confirm matrix reading works with filename or handle.'\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)",
            "def test_reading(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Confirm matrix reading works with filename or handle.'\n    matrix_name = 'BLOSUM62'\n    test_path = os.path.dirname(__file__)\n    parent_dir = os.path.dirname(test_path)\n    sub_mx_dir = os.path.join(parent_dir, 'Bio', 'Align', 'substitution_matrices', 'data')\n    matrix_path = os.path.join(sub_mx_dir, matrix_name)\n    fname_matrix = substitution_matrices.read(matrix_path)\n    self.assertAlmostEqual(fname_matrix['A']['A'], 4.0)\n    self.assertEqual(len(fname_matrix), 24)\n    self.assertEqual(len(fname_matrix[0]), 24)\n    with open(matrix_path, 'r') as handle:\n        handle_matrix = substitution_matrices.read(handle)\n        self.assertFalse(handle.closed)\n    self.assertTrue(handle.closed)\n    self.assertAlmostEqual(handle_matrix['A']['A'], 4.0)\n    self.assertEqual(len(handle_matrix), 24)\n    self.assertEqual(len(handle_matrix[0]), 24)"
        ]
    }
]