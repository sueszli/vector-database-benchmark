[
    {
        "func_name": "test_jupyter_book_options_to_rmarkdown",
        "original": "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    \"\"\"By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337\"\"\"\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
        "mutated": [
            "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n    'By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337'\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337'\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337'\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337'\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('tags=[\"remove_cell\"]', 'include=FALSE'), ('tags=[\"remove_output\"]', \"results='hide'\"), ('tags=[\"remove_output\"]', 'results=\"hide\"'), ('tags=[\"remove_input\"]', 'echo=FALSE')])\ndef test_jupyter_book_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'By default, Jupyter Book tags are mapped to R Markdown options, and vice versa #337'\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, 'Rmd')\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)"
        ]
    },
    {
        "func_name": "test_runtools_options_to_rmarkdown",
        "original": "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    \"\"\"Options set by the runtools extension are mapped to the corresponding R Markdown options\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\n    \"\"\"\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
        "mutated": [
            "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n    'Options set by the runtools extension are mapped to the corresponding R Markdown options\\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\\n    '\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Options set by the runtools extension are mapped to the corresponding R Markdown options\\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\\n    '\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Options set by the runtools extension are mapped to the corresponding R Markdown options\\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\\n    '\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Options set by the runtools extension are mapped to the corresponding R Markdown options\\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\\n    '\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)",
            "@pytest.mark.parametrize('md,rmd', [('hide_input=true hide_output=true', 'include=FALSE'), ('hide_output=true', \"results='hide'\"), ('hide_output=true', 'results=\"hide\"'), ('hide_input=true', 'echo=FALSE')])\ndef test_runtools_options_to_rmarkdown(md, rmd):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Options set by the runtools extension are mapped to the corresponding R Markdown options\\n    https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html\\n    '\n    md = '```python ' + md + '\\n1 + 1\\n```\\n'\n    rmd = '```{python ' + rmd + '}\\n1 + 1\\n```\\n'\n    nb_md = jupytext.reads(md, 'md')\n    nb_rmd = jupytext.reads(rmd, fmt={'extension': '.Rmd', 'use_runtools': True})\n    compare_notebooks(nb_rmd, nb_md)\n    md2 = jupytext.writes(nb_rmd, 'md')\n    compare(md2, md)\n    rmd = rmd.replace('\"hide\"', \"'hide'\")\n    rmd2 = jupytext.writes(nb_md, 'Rmd')\n    compare(rmd2, rmd)"
        ]
    }
]