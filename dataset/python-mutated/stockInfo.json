[
    {
        "func_name": "create_tb",
        "original": "def create_tb(conn):\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False",
        "mutated": [
            "def create_tb(conn):\n    if False:\n        i = 10\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False",
            "def create_tb(conn):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False",
            "def create_tb(conn):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False",
            "def create_tb(conn):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False",
            "def create_tb(conn):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    cur = conn.cursor()\n    cmd = 'CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False"
        ]
    },
    {
        "func_name": "getinfo",
        "original": "def getinfo(days=-30):\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()",
        "mutated": [
            "def getinfo(days=-30):\n    if False:\n        i = 10\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()",
            "def getinfo(days=-30):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()",
            "def getinfo(days=-30):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()",
            "def getinfo(days=-30):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()",
            "def getinfo(days=-30):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n    url = 'http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0'\n    page = 1\n    temp_time = time.strftime('[%Y-%m-%d]-[%H-%M]', time.localtime())\n    store_filename = 'StockNews-%s.log' % temp_time\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n    conn = get_mysql_conn(db_name, local='local')\n    cur = conn.cursor()\n    run_flag = True\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx', 'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'}\n        retry = 3\n        response = None\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info('error code %d' % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info('error reason %s ' % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\\\((.*?)\\\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n        except Exception as e:\n            logger.error(e)\n            return None\n        content = js_data.get('data', {}).get('item', {})\n        if content is None:\n            continue\n        for item in content:\n            title = item.get('title')\n            if '\u665a\u95f4\u91cd\u8981\u516c\u544a\u96c6\u9526' in title or '\u505c\u590d\u724c\u6c47\u603b' in title:\n                continue\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n            if pubdate_dtype < last_day:\n                run_flag = False\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n            sub_content = None\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                else:\n                    if sub_content.status_code == 200:\n                        break\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n            try:\n                pubdate_dtype = pubdate_dtype.strftime('%Y-%m-%dT%H:%M:%S')\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n                es.index(index='cnstock', doc_type='doc', body=body)\n            except Exception as e:\n                logger.error(e)\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n        page += 1\n    f_open.close()"
        ]
    }
]