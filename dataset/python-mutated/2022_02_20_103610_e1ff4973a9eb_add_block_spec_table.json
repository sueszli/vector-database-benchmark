[
    {
        "func_name": "upgrade",
        "original": "def upgrade():\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])",
        "mutated": [
            "def upgrade():\n    if False:\n        i = 10\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])",
            "def upgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    op.create_table('block_spec', sa.Column('id', prefect.server.utilities.database.UUID(), server_default=sa.text(\"(\\n    (\\n        lower(hex(randomblob(4))) \\n        || '-' \\n        || lower(hex(randomblob(2))) \\n        || '-4' \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || substr('89ab',abs(random()) % 4 + 1, 1) \\n        || substr(lower(hex(randomblob(2))),2) \\n        || '-' \\n        || lower(hex(randomblob(6)))\\n    )\\n    )\"), nullable=False), sa.Column('created', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('updated', prefect.server.utilities.database.Timestamp(timezone=True), server_default=sa.text(\"(strftime('%Y-%m-%d %H:%M:%f000', 'now'))\"), nullable=False), sa.Column('name', sa.String(), nullable=False), sa.Column('version', sa.String(), nullable=False), sa.Column('type', sa.String(), nullable=True), sa.Column('fields', prefect.server.utilities.database.JSON(astext_type=sa.Text()), server_default='{}', nullable=False), sa.PrimaryKeyConstraint('id', name=op.f('pk_block_spec')))\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.create_index(batch_op.f('ix_block_spec__updated'), ['updated'], unique=False)\n        batch_op.create_index('uq_block_spec__name_version', ['name', 'version'], unique=True)\n        batch_op.create_index(batch_op.f('ix_block_spec__type'), ['type'], unique=False)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_index('ix_block_data__name')\n        batch_op.drop_index('ix_block_data__updated')\n        batch_op.create_index(batch_op.f('ix_block__name'), ['name'], unique=False)\n        batch_op.create_index(batch_op.f('ix_block__updated'), ['updated'], unique=False)\n        batch_op.create_unique_constraint(batch_op.f('uq_block__name'), ['name'])"
        ]
    },
    {
        "func_name": "downgrade",
        "original": "def downgrade():\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')",
        "mutated": [
            "def downgrade():\n    if False:\n        i = 10\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')",
            "def downgrade():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    with op.batch_alter_table('block', schema=None) as batch_op:\n        batch_op.drop_constraint(batch_op.f('uq_block__name'), type_='unique')\n        batch_op.drop_index(batch_op.f('ix_block__updated'))\n        batch_op.drop_index(batch_op.f('ix_block__name'))\n        batch_op.create_index('ix_block_data__updated', ['updated'], unique=False)\n        batch_op.create_index('ix_block_data__name', ['name'], unique=False)\n    with op.batch_alter_table('block_spec', schema=None) as batch_op:\n        batch_op.drop_index('uq_block_spec__name_version')\n        batch_op.drop_index(batch_op.f('ix_block_spec__updated'))\n        batch_op.drop_index(batch_op.f('ix_block_spec__type'))\n    op.drop_table('block_spec')"
        ]
    }
]