[
    {
        "func_name": "test_hd612",
        "original": "def test_hd612():\n    \"\"\"Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.\"\"\"\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names",
        "mutated": [
            "def test_hd612():\n    if False:\n        i = 10\n    'Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.'\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names",
            "def test_hd612():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.'\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names",
            "def test_hd612():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.'\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names",
            "def test_hd612():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.'\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names",
            "def test_hd612():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test whether explicitly providing ``column_names`` to ``H2OFrame.from_python()`` produces an extra row.'\n    data = np.array([i for i in range(40)]).reshape(10, 4)\n    df = h2o.H2OFrame.from_python(data)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == ['C1', 'C2', 'C3', 'C4']\n    names = ['spam', 'egg', 'ham', 'milk']\n    df = h2o.H2OFrame.from_python(data, column_names=names)\n    assert df.nrow == 10\n    assert df.ncol == 4\n    assert df.names == names"
        ]
    }
]