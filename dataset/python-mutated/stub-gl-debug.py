from __future__ import print_function
a = 'cdef void   glActiveTexture (cgl.GLenum texture)\ncdef void   glAttachShader (cgl.GLuint program, cgl.GLuint shader)\ncdef void   glBindAttribLocation (cgl.GLuint program, cgl.GLuint index,  cgl.GLchar* name)\ncdef void   glBindBuffer (cgl.GLenum target, cgl.GLuint buffer)\ncdef void   glBindFramebuffer (cgl.GLenum target, cgl.GLuint framebuffer)\ncdef void   glBindRenderbuffer (cgl.GLenum target, cgl.GLuint renderbuffer)\ncdef void   glBindTexture (cgl.GLenum target, cgl.GLuint texture)\ncdef void   glBlendColor (cgl.GLclampf red, cgl.GLclampf green, cgl.GLclampf blue, cgl.GLclampf alpha)\ncdef void   glBlendEquation (cgl.GLenum mode)\ncdef void   glBlendEquationSeparate (cgl.GLenum modeRGB, cgl.GLenum modeAlpha)\ncdef void   glBlendFunc (cgl.GLenum sfactor, cgl.GLenum dfactor)\ncdef void   glBlendFuncSeparate (cgl.GLenum srcRGB, cgl.GLenum dstRGB, cgl.GLenum srcAlpha, cgl.GLenum dstAlpha)\ncdef void   glBufferData (cgl.GLenum target, cgl.GLsizeiptr size,  cgl.GLvoid* data, cgl.GLenum usage)\ncdef void   glBufferSubData (cgl.GLenum target, cgl.GLintptr offset, cgl.GLsizeiptr size,  cgl.GLvoid* data)\ncdef cgl.GLenum glCheckFramebufferStatus (cgl.GLenum target)\ncdef void   glClear (cgl.GLbitfield mask)\ncdef void   glClearColor (cgl.GLclampf red, cgl.GLclampf green, cgl.GLclampf blue, cgl.GLclampf alpha)\ncdef void   glClearDepthf (cgl.GLclampf depth)\ncdef void   glClearStencil (cgl.GLint s)\ncdef void   glColorMask (cgl.GLboolean red, cgl.GLboolean green, cgl.GLboolean blue, cgl.GLboolean alpha)\ncdef void   glCompileShader (cgl.GLuint shader)\ncdef void   glCompressedTexImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLenum internalformat, cgl.GLsizei width, cgl.GLsizei height, cgl.GLint border, cgl.GLsizei imageSize,  cgl.GLvoid* data)\ncdef void   glCompressedTexSubImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLint xoffset, cgl.GLint yoffset, cgl.GLsizei width, cgl.GLsizei height, cgl.GLenum format, cgl.GLsizei imageSize,  cgl.GLvoid* data)\ncdef void   glCopyTexImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLenum internalformat, cgl.GLint x, cgl.GLint y, cgl.GLsizei width, cgl.GLsizei height, cgl.GLint border)\ncdef void   glCopyTexSubImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLint xoffset, cgl.GLint yoffset, cgl.GLint x, cgl.GLint y, cgl.GLsizei width, cgl.GLsizei height)\ncdef cgl.GLuint glCreateProgram ()\ncdef cgl.GLuint glCreateShader (cgl.GLenum type)\ncdef void   glCullFace (cgl.GLenum mode)\ncdef void   glDeleteBuffers (cgl.GLsizei n,  cgl.GLuint* buffers)\ncdef void   glDeleteFramebuffers (cgl.GLsizei n,  cgl.GLuint* framebuffers)\ncdef void   glDeleteProgram (cgl.GLuint program)\ncdef void   glDeleteRenderbuffers (cgl.GLsizei n,  cgl.GLuint* renderbuffers)\ncdef void   glDeleteShader (cgl.GLuint shader)\ncdef void   glDeleteTextures (cgl.GLsizei n,  cgl.GLuint* textures)\ncdef void   glDepthFunc (cgl.GLenum func)\ncdef void   glDepthMask (cgl.GLboolean flag)\ncdef void   glDepthRangef (cgl.GLclampf zNear, cgl.GLclampf zFar)\ncdef void   glDetachShader (cgl.GLuint program, cgl.GLuint shader)\ncdef void   glDisable (cgl.GLenum cap)\ncdef void   glDisableVertexAttribArray (cgl.GLuint index)\ncdef void   glDrawArrays (cgl.GLenum mode, cgl.GLint first, cgl.GLsizei count)\ncdef void   glDrawElements (cgl.GLenum mode, cgl.GLsizei count, cgl.GLenum type,  cgl.GLvoid* indices)\ncdef void   glEnable (cgl.GLenum cap)\ncdef void   glEnableVertexAttribArray (cgl.GLuint index)\ncdef void   glFinish ()\ncdef void   glFlush ()\ncdef void   glFramebufferRenderbuffer (cgl.GLenum target, cgl.GLenum attachment, cgl.GLenum renderbuffertarget, cgl.GLuint renderbuffer)\ncdef void   glFramebufferTexture2D (cgl.GLenum target, cgl.GLenum attachment, cgl.GLenum textarget, cgl.GLuint texture, cgl.GLint level)\ncdef void   glFrontFace (cgl.GLenum mode)\ncdef void   glGenBuffers (cgl.GLsizei n, cgl.GLuint* buffers)\ncdef void   glGenerateMipmap (cgl.GLenum target)\ncdef void   glGenFramebuffers (cgl.GLsizei n, cgl.GLuint* framebuffers)\ncdef void   glGenRenderbuffers (cgl.GLsizei n, cgl.GLuint* renderbuffers)\ncdef void   glGenTextures (cgl.GLsizei n, cgl.GLuint* textures)\ncdef void   glGetActiveAttrib (cgl.GLuint program, cgl.GLuint index, cgl.GLsizei bufsize, cgl.GLsizei* length, cgl.GLint* size, cgl.GLenum* type, cgl.GLchar* name)\ncdef void   glGetActiveUniform (cgl.GLuint program, cgl.GLuint index, cgl.GLsizei bufsize, cgl.GLsizei* length, cgl.GLint* size, cgl.GLenum* type, cgl.GLchar* name)\ncdef void   glGetAttachedShaders (cgl.GLuint program, cgl.GLsizei maxcount, cgl.GLsizei* count, cgl.GLuint* shaders)\ncdef int    glGetAttribLocation (cgl.GLuint program,  cgl.GLchar* name)\ncdef void   glGetBooleanv (cgl.GLenum pname, cgl.GLboolean* params)\ncdef void   glGetBufferParameteriv (cgl.GLenum target, cgl.GLenum pname, cgl.GLint* params)\ncdef cgl.GLenum glGetError ()\ncdef void   glGetFloatv (cgl.GLenum pname, cgl.GLfloat* params)\ncdef void   glGetFramebufferAttachmentParameteriv (cgl.GLenum target, cgl.GLenum attachment, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetIntegerv (cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetProgramiv (cgl.GLuint program, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetProgramInfoLog (cgl.GLuint program, cgl.GLsizei bufsize, cgl.GLsizei* length, cgl.GLchar* infolog)\ncdef void   glGetRenderbufferParameteriv (cgl.GLenum target, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetShaderiv (cgl.GLuint shader, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetShaderInfoLog (cgl.GLuint shader, cgl.GLsizei bufsize, cgl.GLsizei* length, cgl.GLchar* infolog)\n#cdef void   glGetShaderPrecisionFormat (cgl.GLenum shadertype, cgl.GLenum precisiontype, cgl.GLint* range, cgl.GLint* precision)\ncdef void   glGetShaderSource (cgl.GLuint shader, cgl.GLsizei bufsize, cgl.GLsizei* length, cgl.GLchar* source)\ncdef   cgl.GLubyte*  glGetString (cgl.GLenum name)\ncdef void   glGetTexParameterfv (cgl.GLenum target, cgl.GLenum pname, cgl.GLfloat* params)\ncdef void   glGetTexParameteriv (cgl.GLenum target, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetUniformfv (cgl.GLuint program, cgl.GLint location, cgl.GLfloat* params)\ncdef void   glGetUniformiv (cgl.GLuint program, cgl.GLint location, cgl.GLint* params)\ncdef int    glGetUniformLocation (cgl.GLuint program,  cgl.GLchar* name)\ncdef void   glGetVertexAttribfv (cgl.GLuint index, cgl.GLenum pname, cgl.GLfloat* params)\ncdef void   glGetVertexAttribiv (cgl.GLuint index, cgl.GLenum pname, cgl.GLint* params)\ncdef void   glGetVertexAttribPointerv (cgl.GLuint index, cgl.GLenum pname, cgl.GLvoid** pointer)\ncdef void   glHint (cgl.GLenum target, cgl.GLenum mode)\ncdef cgl.GLboolean  glIsBuffer (cgl.GLuint buffer)\ncdef cgl.GLboolean  glIsEnabled (cgl.GLenum cap)\ncdef cgl.GLboolean  glIsFramebuffer (cgl.GLuint framebuffer)\ncdef cgl.GLboolean  glIsProgram (cgl.GLuint program)\ncdef cgl.GLboolean  glIsRenderbuffer (cgl.GLuint renderbuffer)\ncdef cgl.GLboolean  glIsShader (cgl.GLuint shader)\ncdef cgl.GLboolean  glIsTexture (cgl.GLuint texture)\ncdef void  glLineWidth (cgl.GLfloat width)\ncdef void  glLinkProgram (cgl.GLuint program)\ncdef void  glPixelStorei (cgl.GLenum pname, cgl.GLint param)\ncdef void  glPolygonOffset (cgl.GLfloat factor, cgl.GLfloat units)\ncdef void  glReadPixels (cgl.GLint x, cgl.GLint y, cgl.GLsizei width, cgl.GLsizei height, cgl.GLenum format, cgl.GLenum type, cgl.GLvoid* pixels)\n#cdef void  glReleaseShaderCompiler ()\ncdef void  glRenderbufferStorage (cgl.GLenum target, cgl.GLenum internalformat, cgl.GLsizei width, cgl.GLsizei height)\ncdef void  glSampleCoverage (cgl.GLclampf value, cgl.GLboolean invert)\ncdef void  glScissor (cgl.GLint x, cgl.GLint y, cgl.GLsizei width, cgl.GLsizei height)\n#cdef void  glShaderBinary (cgl.GLsizei n,  cgl.GLuint* shaders, cgl.GLenum binaryformat,  cgl.GLvoid* binary, cgl.GLsizei length)\ncdef void  glShaderSource (cgl.GLuint shader, cgl.GLsizei count,  cgl.GLchar** string,  cgl.GLint* length)\ncdef void  glStencilFunc (cgl.GLenum func, cgl.GLint ref, cgl.GLuint mask)\ncdef void  glStencilFuncSeparate (cgl.GLenum face, cgl.GLenum func, cgl.GLint ref, cgl.GLuint mask)\ncdef void  glStencilMask (cgl.GLuint mask)\ncdef void  glStencilMaskSeparate (cgl.GLenum face, cgl.GLuint mask)\ncdef void  glStencilOp (cgl.GLenum fail, cgl.GLenum zfail, cgl.GLenum zpass)\ncdef void  glStencilOpSeparate (cgl.GLenum face, cgl.GLenum fail, cgl.GLenum zfail, cgl.GLenum zpass)\ncdef void  glTexImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLint internalformat, cgl.GLsizei width, cgl.GLsizei height, cgl.GLint border, cgl.GLenum format, cgl.GLenum type,  cgl.GLvoid* pixels)\ncdef void  glTexParameterf (cgl.GLenum target, cgl.GLenum pname, cgl.GLfloat param)\ncdef void  glTexParameterfv (cgl.GLenum target, cgl.GLenum pname,  cgl.GLfloat* params)\ncdef void  glTexParameteri (cgl.GLenum target, cgl.GLenum pname, cgl.GLint param)\ncdef void  glTexParameteriv (cgl.GLenum target, cgl.GLenum pname,  cgl.GLint* params)\ncdef void  glTexSubImage2D (cgl.GLenum target, cgl.GLint level, cgl.GLint xoffset, cgl.GLint yoffset, cgl.GLsizei width, cgl.GLsizei height, cgl.GLenum format, cgl.GLenum type,  cgl.GLvoid* pixels)\ncdef void  glUniform1f (cgl.GLint location, cgl.GLfloat x)\ncdef void  glUniform1fv (cgl.GLint location, cgl.GLsizei count,  cgl.GLfloat* v)\ncdef void  glUniform1i (cgl.GLint location, cgl.GLint x)\ncdef void  glUniform1iv (cgl.GLint location, cgl.GLsizei count,  cgl.GLint* v)\ncdef void  glUniform2f (cgl.GLint location, cgl.GLfloat x, cgl.GLfloat y)\ncdef void  glUniform2fv (cgl.GLint location, cgl.GLsizei count,  cgl.GLfloat* v)\ncdef void  glUniform2i (cgl.GLint location, cgl.GLint x, cgl.GLint y)\ncdef void  glUniform2iv (cgl.GLint location, cgl.GLsizei count,  cgl.GLint* v)\ncdef void  glUniform3f (cgl.GLint location, cgl.GLfloat x, cgl.GLfloat y, cgl.GLfloat z)\ncdef void  glUniform3fv (cgl.GLint location, cgl.GLsizei count,  cgl.GLfloat* v)\ncdef void  glUniform3i (cgl.GLint location, cgl.GLint x, cgl.GLint y, cgl.GLint z)\ncdef void  glUniform3iv (cgl.GLint location, cgl.GLsizei count,  cgl.GLint* v)\ncdef void  glUniform4f (cgl.GLint location, cgl.GLfloat x, cgl.GLfloat y, cgl.GLfloat z, cgl.GLfloat w)\ncdef void  glUniform4fv (cgl.GLint location, cgl.GLsizei count,  cgl.GLfloat* v)\ncdef void  glUniform4i (cgl.GLint location, cgl.GLint x, cgl.GLint y, cgl.GLint z, cgl.GLint w)\ncdef void  glUniform4iv (cgl.GLint location, cgl.GLsizei count,  cgl.GLint* v)\ncdef void  glUniformMatrix2fv (cgl.GLint location, cgl.GLsizei count, cgl.GLboolean transpose,  cgl.GLfloat* value)\ncdef void  glUniformMatrix3fv (cgl.GLint location, cgl.GLsizei count, cgl.GLboolean transpose,  cgl.GLfloat* value)\ncdef void  glUniformMatrix4fv (cgl.GLint location, cgl.GLsizei count, cgl.GLboolean transpose,  cgl.GLfloat* value)\ncdef void  glUseProgram (cgl.GLuint program)\ncdef void  glValidateProgram (cgl.GLuint program)\ncdef void  glVertexAttrib1f (cgl.GLuint indx, cgl.GLfloat x)\ncdef void  glVertexAttrib1fv (cgl.GLuint indx,  cgl.GLfloat* values)\ncdef void  glVertexAttrib2f (cgl.GLuint indx, cgl.GLfloat x, cgl.GLfloat y)\ncdef void  glVertexAttrib2fv (cgl.GLuint indx,  cgl.GLfloat* values)\ncdef void  glVertexAttrib3f (cgl.GLuint indx, cgl.GLfloat x, cgl.GLfloat y, cgl.GLfloat z)\ncdef void  glVertexAttrib3fv (cgl.GLuint indx,  cgl.GLfloat* values)\ncdef void  glVertexAttrib4f (cgl.GLuint indx, cgl.GLfloat x, cgl.GLfloat y, cgl.GLfloat z, cgl.GLfloat w)\ncdef void  glVertexAttrib4fv (cgl.GLuint indx,  cgl.GLfloat* values)\ncdef void  glVertexAttribPointer (cgl.GLuint indx, cgl.GLint size, cgl.GLenum type, cgl.GLboolean normalized, cgl.GLsizei stride,  cgl.GLvoid* ptr)\ncdef void  glViewport (cgl.GLint x, cgl.GLint y, cgl.GLsizei width, cgl.GLsizei height)'

def replace(s):
    if False:
        for i in range(10):
            print('nop')
    item = s.split(' ')
    rettype = item[1]
    item = item[2:]
    for x in item:
        x = x.strip()
        if not x or x.startswith('GL'):
            continue
        if x.startswith('(GL'):
            yield '('
            continue
        if x.startswith('gl'):
            prefix = ''
            if rettype != 'void':
                prefix = 'return '
            yield ('%scgl.%s' % (prefix, x))
            continue
        yield x
print('\n# This file was automatically generated with kivy/tools/stub-gl-debug.py\ncimport c_opengl as cgl\n\n')
lines = a.splitlines()
for x in lines:
    if x.startswith('#'):
        print('# Skipping generation of: "%s"' % x)
        continue
    x = x.replace('cgl.', '')
    y = ' '.join(replace(x))
    print('%s with gil:' % x)
    s = x.split()
    print('    print("GL %s(' % s[2], end=' ')
    pointer = 0
    for arg in s[3:]:
        arg = arg.strip()
        arg = arg.replace(',', '').replace(')', '')
        if 'GL' in arg or arg == '(':
            pointer = arg.count('*')
            continue
        pointer = '*' * pointer
        if pointer:
            print('%s%s=", repr(hex(<long> %s)), ",' % (arg, pointer, arg), end=' ')
        else:
            print('%s = ", %s, ",' % (arg, arg), end=' ')
        pointer = 0
    print(')")')
    print('    %s' % y)
    print('    ret = glGetError()')
    print('    if ret: print("ERR {} / {}".format(ret, ret))')