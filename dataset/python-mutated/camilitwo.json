[
    {
        "func_name": "esPrimo",
        "original": "def esPrimo(num):\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True",
        "mutated": [
            "def esPrimo(num):\n    if False:\n        i = 10\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True",
            "def esPrimo(num):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True",
            "def esPrimo(num):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True",
            "def esPrimo(num):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True",
            "def esPrimo(num):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    for i in range(2, num):\n        if num % i == 0:\n            return False\n    return True"
        ]
    },
    {
        "func_name": "esGemelo",
        "original": "def esGemelo(num1, num2):\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False",
        "mutated": [
            "def esGemelo(num1, num2):\n    if False:\n        i = 10\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False",
            "def esGemelo(num1, num2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False",
            "def esGemelo(num1, num2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False",
            "def esGemelo(num1, num2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False",
            "def esGemelo(num1, num2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if num1 - num2 == 2 or num2 - num1 == 2:\n        return True\n    return False"
        ]
    },
    {
        "func_name": "main",
        "original": "def main():\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    rango = int(input('Ingrese el rango: '))\n    for i in range(2, rango):\n        if esPrimo(i) and esPrimo(i + 2):\n            if esGemelo(i, i + 2):\n                print(f'({i}, {i + 2})')"
        ]
    }
]