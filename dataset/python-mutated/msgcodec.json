[
    {
        "func_name": "__init__",
        "original": "def __init__(self, msg_selector: List[int]=list()):\n    self.msg_selector = msg_selector",
        "mutated": [
            "def __init__(self, msg_selector: List[int]=list()):\n    if False:\n        i = 10\n    self.msg_selector = msg_selector",
            "def __init__(self, msg_selector: List[int]=list()):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    self.msg_selector = msg_selector",
            "def __init__(self, msg_selector: List[int]=list()):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    self.msg_selector = msg_selector",
            "def __init__(self, msg_selector: List[int]=list()):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    self.msg_selector = msg_selector",
            "def __init__(self, msg_selector: List[int]=list()):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    self.msg_selector = msg_selector"
        ]
    },
    {
        "func_name": "read_message_id",
        "original": "def read_message_id(self, reader: io.BytesIO) -> int:\n    \"\"\"\n        Read and return the first byte where the message id is encoded\n        \"\"\"\n    id_ = self.read_uint(reader)\n    return id_",
        "mutated": [
            "def read_message_id(self, reader: io.BytesIO) -> int:\n    if False:\n        i = 10\n    '\\n        Read and return the first byte where the message id is encoded\\n        '\n    id_ = self.read_uint(reader)\n    return id_",
            "def read_message_id(self, reader: io.BytesIO) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        Read and return the first byte where the message id is encoded\\n        '\n    id_ = self.read_uint(reader)\n    return id_",
            "def read_message_id(self, reader: io.BytesIO) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        Read and return the first byte where the message id is encoded\\n        '\n    id_ = self.read_uint(reader)\n    return id_",
            "def read_message_id(self, reader: io.BytesIO) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        Read and return the first byte where the message id is encoded\\n        '\n    id_ = self.read_uint(reader)\n    return id_",
            "def read_message_id(self, reader: io.BytesIO) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        Read and return the first byte where the message id is encoded\\n        '\n    id_ = self.read_uint(reader)\n    return id_"
        ]
    },
    {
        "func_name": "encode",
        "original": "def encode(self, m: Message) -> bytes:\n    ...",
        "mutated": [
            "def encode(self, m: Message) -> bytes:\n    if False:\n        i = 10\n    ...",
            "def encode(self, m: Message) -> bytes:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    ...",
            "def encode(self, m: Message) -> bytes:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    ...",
            "def encode(self, m: Message) -> bytes:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    ...",
            "def encode(self, m: Message) -> bytes:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    ..."
        ]
    },
    {
        "func_name": "decode",
        "original": "def decode(self, b: bytes) -> Message:\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)",
        "mutated": [
            "def decode(self, b: bytes) -> Message:\n    if False:\n        i = 10\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)",
            "def decode(self, b: bytes) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)",
            "def decode(self, b: bytes) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)",
            "def decode(self, b: bytes) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)",
            "def decode(self, b: bytes) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    reader = io.BytesIO(b)\n    return self.read_head_message(reader)"
        ]
    },
    {
        "func_name": "check_message_id",
        "original": "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    \"\"\"\n        todo: make it static and without reader. It's just the first byte\n        Read and return the first byte where the message id is encoded\n        \"\"\"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_",
        "mutated": [
            "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    if False:\n        i = 10\n    \"\\n        todo: make it static and without reader. It's just the first byte\\n        Read and return the first byte where the message id is encoded\\n        \"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_",
            "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"\\n        todo: make it static and without reader. It's just the first byte\\n        Read and return the first byte where the message id is encoded\\n        \"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_",
            "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"\\n        todo: make it static and without reader. It's just the first byte\\n        Read and return the first byte where the message id is encoded\\n        \"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_",
            "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"\\n        todo: make it static and without reader. It's just the first byte\\n        Read and return the first byte where the message id is encoded\\n        \"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_",
            "@staticmethod\ndef check_message_id(b: bytes) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"\\n        todo: make it static and without reader. It's just the first byte\\n        Read and return the first byte where the message id is encoded\\n        \"\n    reader = io.BytesIO(b)\n    id_ = Codec.read_uint(reader)\n    return id_"
        ]
    },
    {
        "func_name": "decode_key",
        "original": "@staticmethod\ndef decode_key(b) -> int:\n    \"\"\"\n        Decode the message key (encoded with little endian)\n        \"\"\"\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded",
        "mutated": [
            "@staticmethod\ndef decode_key(b) -> int:\n    if False:\n        i = 10\n    '\\n        Decode the message key (encoded with little endian)\\n        '\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded",
            "@staticmethod\ndef decode_key(b) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        Decode the message key (encoded with little endian)\\n        '\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded",
            "@staticmethod\ndef decode_key(b) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        Decode the message key (encoded with little endian)\\n        '\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded",
            "@staticmethod\ndef decode_key(b) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        Decode the message key (encoded with little endian)\\n        '\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded",
            "@staticmethod\ndef decode_key(b) -> int:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        Decode the message key (encoded with little endian)\\n        '\n    try:\n        decoded = int.from_bytes(b, 'little', signed=False)\n    except Exception as e:\n        raise UnicodeDecodeError(f'Error while decoding message key (SessionID) from {b}\\n{e}')\n    return decoded"
        ]
    },
    {
        "func_name": "decode_detailed",
        "original": "def decode_detailed(self, b: bytes) -> List[Message]:\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list",
        "mutated": [
            "def decode_detailed(self, b: bytes) -> List[Message]:\n    if False:\n        i = 10\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list",
            "def decode_detailed(self, b: bytes) -> List[Message]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list",
            "def decode_detailed(self, b: bytes) -> List[Message]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list",
            "def decode_detailed(self, b: bytes) -> List[Message]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list",
            "def decode_detailed(self, b: bytes) -> List[Message]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    reader = io.BytesIO(b)\n    messages_list = list()\n    try:\n        messages_list.append(self.handler(reader, 0))\n    except IndexError:\n        print('[WARN] Broken batch')\n        return list()\n    if isinstance(messages_list[0], BatchMeta):\n        mode = 0\n    elif isinstance(messages_list[0], BatchMetadata):\n        if messages_list[0].version == 0:\n            mode = 0\n        else:\n            mode = 1\n    else:\n        return messages_list\n    while True:\n        try:\n            msg_decoded = self.handler(reader, mode)\n            if msg_decoded is not None:\n                messages_list.append(msg_decoded)\n        except IndexError:\n            break\n    return messages_list"
        ]
    },
    {
        "func_name": "handler",
        "original": "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()",
        "mutated": [
            "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    if False:\n        i = 10\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()",
            "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()",
            "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()",
            "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()",
            "def handler(self, reader: io.BytesIO, mode=0) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    message_id = self.read_message_id(reader)\n    if mode == 1:\n        r_size = self.read_size(reader)\n        if message_id not in self.msg_selector:\n            reader.read(r_size)\n            return None\n        return self.read_head_message(reader, message_id)\n    elif mode == 0:\n        return self.read_head_message(reader, message_id)\n    else:\n        raise IOError()"
        ]
    },
    {
        "func_name": "read_head_message",
        "original": "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))",
        "mutated": [
            "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if False:\n        i = 10\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))",
            "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))",
            "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))",
            "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))",
            "def read_head_message(self, reader: io.BytesIO, message_id) -> Message:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if message_id == 0:\n        return Timestamp(timestamp=self.read_uint(reader))\n    if message_id == 1:\n        return SessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_agent=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_browser=self.read_string(reader), user_browser_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_device_memory_size=self.read_uint(reader), user_device_heap_size=self.read_uint(reader), user_country=self.read_string(reader), user_id=self.read_string(reader))\n    if message_id == 3:\n        return SessionEndDeprecated(timestamp=self.read_uint(reader))\n    if message_id == 4:\n        return SetPageLocation(url=self.read_string(reader), referrer=self.read_string(reader), navigation_start=self.read_uint(reader))\n    if message_id == 5:\n        return SetViewportSize(width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 6:\n        return SetViewportScroll(x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 7:\n        return CreateDocument()\n    if message_id == 8:\n        return CreateElementNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader), tag=self.read_string(reader), svg=self.read_boolean(reader))\n    if message_id == 9:\n        return CreateTextNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 10:\n        return MoveNode(id=self.read_uint(reader), parent_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 11:\n        return RemoveNode(id=self.read_uint(reader))\n    if message_id == 12:\n        return SetNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 13:\n        return RemoveNodeAttribute(id=self.read_uint(reader), name=self.read_string(reader))\n    if message_id == 14:\n        return SetNodeData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 15:\n        return SetCSSData(id=self.read_uint(reader), data=self.read_string(reader))\n    if message_id == 16:\n        return SetNodeScroll(id=self.read_uint(reader), x=self.read_int(reader), y=self.read_int(reader))\n    if message_id == 17:\n        return SetInputTarget(id=self.read_uint(reader), label=self.read_string(reader))\n    if message_id == 18:\n        return SetInputValue(id=self.read_uint(reader), value=self.read_string(reader), mask=self.read_int(reader))\n    if message_id == 19:\n        return SetInputChecked(id=self.read_uint(reader), checked=self.read_boolean(reader))\n    if message_id == 20:\n        return MouseMove(x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 21:\n        return NetworkRequestDeprecated(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 22:\n        return ConsoleLog(level=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 23:\n        return PageLoadTiming(request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader))\n    if message_id == 24:\n        return PageRenderTiming(speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 25:\n        return JSExceptionDeprecated(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 26:\n        return IntegrationEvent(timestamp=self.read_uint(reader), source=self.read_string(reader), name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 27:\n        return CustomEvent(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 28:\n        return UserID(id=self.read_string(reader))\n    if message_id == 29:\n        return UserAnonymousID(id=self.read_string(reader))\n    if message_id == 30:\n        return Metadata(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 31:\n        return PageEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), url=self.read_string(reader), referrer=self.read_string(reader), loaded=self.read_boolean(reader), request_start=self.read_uint(reader), response_start=self.read_uint(reader), response_end=self.read_uint(reader), dom_content_loaded_event_start=self.read_uint(reader), dom_content_loaded_event_end=self.read_uint(reader), load_event_start=self.read_uint(reader), load_event_end=self.read_uint(reader), first_paint=self.read_uint(reader), first_contentful_paint=self.read_uint(reader), speed_index=self.read_uint(reader), visually_complete=self.read_uint(reader), time_to_interactive=self.read_uint(reader))\n    if message_id == 32:\n        return InputEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 37:\n        return CSSInsertRule(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 38:\n        return CSSDeleteRule(id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 39:\n        return Fetch(method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 40:\n        return Profiler(name=self.read_string(reader), duration=self.read_uint(reader), args=self.read_string(reader), result=self.read_string(reader))\n    if message_id == 41:\n        return OTable(key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 42:\n        return StateAction(type=self.read_string(reader))\n    if message_id == 44:\n        return Redux(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 45:\n        return Vuex(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 46:\n        return MobX(type=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 47:\n        return NgRx(action=self.read_string(reader), state=self.read_string(reader), duration=self.read_uint(reader))\n    if message_id == 48:\n        return GraphQL(operation_kind=self.read_string(reader), operation_name=self.read_string(reader), variables=self.read_string(reader), response=self.read_string(reader))\n    if message_id == 49:\n        return PerformanceTrack(frames=self.read_int(reader), ticks=self.read_int(reader), total_js_heap_size=self.read_uint(reader), used_js_heap_size=self.read_uint(reader))\n    if message_id == 50:\n        return StringDict(key=self.read_uint(reader), value=self.read_string(reader))\n    if message_id == 51:\n        return SetNodeAttributeDict(id=self.read_uint(reader), name_key=self.read_uint(reader), value_key=self.read_uint(reader))\n    if message_id == 53:\n        return ResourceTimingDeprecated(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader))\n    if message_id == 54:\n        return ConnectionInformation(downlink=self.read_uint(reader), type=self.read_string(reader))\n    if message_id == 55:\n        return SetPageVisibility(hidden=self.read_boolean(reader))\n    if message_id == 56:\n        return PerformanceTrackAggr(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_total_js_heap_size=self.read_uint(reader), avg_total_js_heap_size=self.read_uint(reader), max_total_js_heap_size=self.read_uint(reader), min_used_js_heap_size=self.read_uint(reader), avg_used_js_heap_size=self.read_uint(reader), max_used_js_heap_size=self.read_uint(reader))\n    if message_id == 57:\n        return LoadFontFace(parent_id=self.read_uint(reader), family=self.read_string(reader), source=self.read_string(reader), descriptors=self.read_string(reader))\n    if message_id == 58:\n        return SetNodeFocus(id=self.read_int(reader))\n    if message_id == 59:\n        return LongTask(timestamp=self.read_uint(reader), duration=self.read_uint(reader), context=self.read_uint(reader), container_type=self.read_uint(reader), container_src=self.read_string(reader), container_id=self.read_string(reader), container_name=self.read_string(reader))\n    if message_id == 60:\n        return SetNodeAttributeURLBased(id=self.read_uint(reader), name=self.read_string(reader), value=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 61:\n        return SetCSSDataURLBased(id=self.read_uint(reader), data=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 62:\n        return IssueEventDeprecated(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 63:\n        return TechnicalInfo(type=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 64:\n        return CustomIssue(name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 66:\n        return AssetCache(url=self.read_string(reader))\n    if message_id == 67:\n        return CSSInsertRuleURLBased(id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 69:\n        return MouseClick(id=self.read_uint(reader), hesitation_time=self.read_uint(reader), label=self.read_string(reader), selector=self.read_string(reader))\n    if message_id == 70:\n        return CreateIFrameDocument(frame_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 71:\n        return AdoptedSSReplaceURLBased(sheet_id=self.read_uint(reader), text=self.read_string(reader), base_url=self.read_string(reader))\n    if message_id == 72:\n        return AdoptedSSReplace(sheet_id=self.read_uint(reader), text=self.read_string(reader))\n    if message_id == 73:\n        return AdoptedSSInsertRuleURLBased(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader), base_url=self.read_string(reader))\n    if message_id == 74:\n        return AdoptedSSInsertRule(sheet_id=self.read_uint(reader), rule=self.read_string(reader), index=self.read_uint(reader))\n    if message_id == 75:\n        return AdoptedSSDeleteRule(sheet_id=self.read_uint(reader), index=self.read_uint(reader))\n    if message_id == 76:\n        return AdoptedSSAddOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 77:\n        return AdoptedSSRemoveOwner(sheet_id=self.read_uint(reader), id=self.read_uint(reader))\n    if message_id == 78:\n        return JSException(name=self.read_string(reader), message=self.read_string(reader), payload=self.read_string(reader), metadata=self.read_string(reader))\n    if message_id == 79:\n        return Zustand(mutation=self.read_string(reader), state=self.read_string(reader))\n    if message_id == 80:\n        return BatchMeta(page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader))\n    if message_id == 81:\n        return BatchMetadata(version=self.read_uint(reader), page_no=self.read_uint(reader), first_index=self.read_uint(reader), timestamp=self.read_int(reader), location=self.read_string(reader))\n    if message_id == 82:\n        return PartitionedMessage(part_no=self.read_uint(reader), part_total=self.read_uint(reader))\n    if message_id == 83:\n        return NetworkRequest(type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), timestamp=self.read_uint(reader), duration=self.read_uint(reader), transferred_body_size=self.read_uint(reader))\n    if message_id == 112:\n        return InputChange(id=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader), hesitation_time=self.read_int(reader), input_duration=self.read_int(reader))\n    if message_id == 113:\n        return SelectionChange(selection_start=self.read_uint(reader), selection_end=self.read_uint(reader), selection=self.read_string(reader))\n    if message_id == 114:\n        return MouseThrashing(timestamp=self.read_uint(reader))\n    if message_id == 115:\n        return UnbindNodes(total_removed_percent=self.read_uint(reader))\n    if message_id == 116:\n        return ResourceTiming(timestamp=self.read_uint(reader), duration=self.read_uint(reader), ttfb=self.read_uint(reader), header_size=self.read_uint(reader), encoded_body_size=self.read_uint(reader), decoded_body_size=self.read_uint(reader), url=self.read_string(reader), initiator=self.read_string(reader), transferred_size=self.read_uint(reader), cached=self.read_boolean(reader))\n    if message_id == 117:\n        return TabChange(tab_id=self.read_string(reader))\n    if message_id == 118:\n        return TabData(tab_id=self.read_string(reader))\n    if message_id == 125:\n        return IssueEvent(message_id=self.read_uint(reader), timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader), url=self.read_string(reader))\n    if message_id == 126:\n        return SessionEnd(timestamp=self.read_uint(reader), encryption_key=self.read_string(reader))\n    if message_id == 127:\n        return SessionSearch(timestamp=self.read_uint(reader), partition=self.read_uint(reader))\n    if message_id == 90:\n        return IOSSessionStart(timestamp=self.read_uint(reader), project_id=self.read_uint(reader), tracker_version=self.read_string(reader), rev_id=self.read_string(reader), user_uuid=self.read_string(reader), user_os=self.read_string(reader), user_os_version=self.read_string(reader), user_device=self.read_string(reader), user_device_type=self.read_string(reader), user_country=self.read_string(reader))\n    if message_id == 91:\n        return IOSSessionEnd(timestamp=self.read_uint(reader))\n    if message_id == 92:\n        return IOSMetadata(timestamp=self.read_uint(reader), length=self.read_uint(reader), key=self.read_string(reader), value=self.read_string(reader))\n    if message_id == 93:\n        return IOSEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), payload=self.read_string(reader))\n    if message_id == 94:\n        return IOSUserID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 95:\n        return IOSUserAnonymousID(timestamp=self.read_uint(reader), length=self.read_uint(reader), id=self.read_string(reader))\n    if message_id == 96:\n        return IOSScreenChanges(timestamp=self.read_uint(reader), length=self.read_uint(reader), x=self.read_uint(reader), y=self.read_uint(reader), width=self.read_uint(reader), height=self.read_uint(reader))\n    if message_id == 97:\n        return IOSCrash(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), reason=self.read_string(reader), stacktrace=self.read_string(reader))\n    if message_id == 98:\n        return IOSViewComponentEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), screen_name=self.read_string(reader), view_name=self.read_string(reader), visible=self.read_boolean(reader))\n    if message_id == 100:\n        return IOSClickEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader))\n    if message_id == 101:\n        return IOSInputEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), value=self.read_string(reader), value_masked=self.read_boolean(reader), label=self.read_string(reader))\n    if message_id == 102:\n        return IOSPerformanceEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), name=self.read_string(reader), value=self.read_uint(reader))\n    if message_id == 103:\n        return IOSLog(timestamp=self.read_uint(reader), length=self.read_uint(reader), severity=self.read_string(reader), content=self.read_string(reader))\n    if message_id == 104:\n        return IOSInternalError(timestamp=self.read_uint(reader), length=self.read_uint(reader), content=self.read_string(reader))\n    if message_id == 105:\n        return IOSNetworkCall(timestamp=self.read_uint(reader), length=self.read_uint(reader), type=self.read_string(reader), method=self.read_string(reader), url=self.read_string(reader), request=self.read_string(reader), response=self.read_string(reader), status=self.read_uint(reader), duration=self.read_uint(reader))\n    if message_id == 106:\n        return IOSSwipeEvent(timestamp=self.read_uint(reader), length=self.read_uint(reader), label=self.read_string(reader), x=self.read_uint(reader), y=self.read_uint(reader), direction=self.read_string(reader))\n    if message_id == 107:\n        return IOSBatchMeta(timestamp=self.read_uint(reader), length=self.read_uint(reader), first_index=self.read_uint(reader))\n    if message_id == 110:\n        return IOSPerformanceAggregated(timestamp_start=self.read_uint(reader), timestamp_end=self.read_uint(reader), min_fps=self.read_uint(reader), avg_fps=self.read_uint(reader), max_fps=self.read_uint(reader), min_cpu=self.read_uint(reader), avg_cpu=self.read_uint(reader), max_cpu=self.read_uint(reader), min_memory=self.read_uint(reader), avg_memory=self.read_uint(reader), max_memory=self.read_uint(reader), min_battery=self.read_uint(reader), avg_battery=self.read_uint(reader), max_battery=self.read_uint(reader))\n    if message_id == 111:\n        return IOSIssueEvent(timestamp=self.read_uint(reader), type=self.read_string(reader), context_string=self.read_string(reader), context=self.read_string(reader), payload=self.read_string(reader))"
        ]
    }
]