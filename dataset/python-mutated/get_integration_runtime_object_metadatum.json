[
    {
        "func_name": "__init__",
        "original": "def __init__(__self__, next_link=None, value=None):\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)",
        "mutated": [
            "def __init__(__self__, next_link=None, value=None):\n    if False:\n        i = 10\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)",
            "def __init__(__self__, next_link=None, value=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)",
            "def __init__(__self__, next_link=None, value=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)",
            "def __init__(__self__, next_link=None, value=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)",
            "def __init__(__self__, next_link=None, value=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if next_link and (not isinstance(next_link, str)):\n        raise TypeError(\"Expected argument 'next_link' to be a str\")\n    pulumi.set(__self__, 'next_link', next_link)\n    if value and (not isinstance(value, list)):\n        raise TypeError(\"Expected argument 'value' to be a list\")\n    pulumi.set(__self__, 'value', value)"
        ]
    },
    {
        "func_name": "next_link",
        "original": "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    \"\"\"\n        The link to the next page of results, if any remaining results exist.\n        \"\"\"\n    return pulumi.get(self, 'next_link')",
        "mutated": [
            "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    if False:\n        i = 10\n    '\\n        The link to the next page of results, if any remaining results exist.\\n        '\n    return pulumi.get(self, 'next_link')",
            "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        The link to the next page of results, if any remaining results exist.\\n        '\n    return pulumi.get(self, 'next_link')",
            "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        The link to the next page of results, if any remaining results exist.\\n        '\n    return pulumi.get(self, 'next_link')",
            "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        The link to the next page of results, if any remaining results exist.\\n        '\n    return pulumi.get(self, 'next_link')",
            "@property\n@pulumi.getter(name='nextLink')\ndef next_link(self) -> Optional[str]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        The link to the next page of results, if any remaining results exist.\\n        '\n    return pulumi.get(self, 'next_link')"
        ]
    },
    {
        "func_name": "value",
        "original": "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    \"\"\"\n        List of SSIS object metadata.\n        \"\"\"\n    return pulumi.get(self, 'value')",
        "mutated": [
            "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    if False:\n        i = 10\n    '\\n        List of SSIS object metadata.\\n        '\n    return pulumi.get(self, 'value')",
            "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n        List of SSIS object metadata.\\n        '\n    return pulumi.get(self, 'value')",
            "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n        List of SSIS object metadata.\\n        '\n    return pulumi.get(self, 'value')",
            "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n        List of SSIS object metadata.\\n        '\n    return pulumi.get(self, 'value')",
            "@property\n@pulumi.getter\ndef value(self) -> Optional[Sequence[Any]]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n        List of SSIS object metadata.\\n        '\n    return pulumi.get(self, 'value')"
        ]
    },
    {
        "func_name": "__await__",
        "original": "def __await__(self):\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)",
        "mutated": [
            "def __await__(self):\n    if False:\n        i = 10\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)",
            "def __await__(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)",
            "def __await__(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)",
            "def __await__(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)",
            "def __await__(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if False:\n        yield self\n    return GetIntegrationRuntimeObjectMetadatumResult(next_link=self.next_link, value=self.value)"
        ]
    },
    {
        "func_name": "get_integration_runtime_object_metadatum",
        "original": "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    \"\"\"\n    Another failing example. A list of SSIS object metadata.\n    API Version: 2018-06-01.\n\n\n    :param str factory_name: The factory name.\n    :param str integration_runtime_name: The integration runtime name.\n    :param str metadata_path: Metadata path.\n    :param str resource_group_name: The resource group name.\n    \"\"\"\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))",
        "mutated": [
            "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    if False:\n        i = 10\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))",
            "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))",
            "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))",
            "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))",
            "def get_integration_runtime_object_metadatum(factory_name: Optional[str]=None, integration_runtime_name: Optional[str]=None, metadata_path: Optional[str]=None, resource_group_name: Optional[str]=None, opts: Optional[pulumi.InvokeOptions]=None) -> AwaitableGetIntegrationRuntimeObjectMetadatumResult:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    __args__ = dict()\n    __args__['factoryName'] = factory_name\n    __args__['integrationRuntimeName'] = integration_runtime_name\n    __args__['metadataPath'] = metadata_path\n    __args__['resourceGroupName'] = resource_group_name\n    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)\n    __ret__ = pulumi.runtime.invoke('mypkg::getIntegrationRuntimeObjectMetadatum', __args__, opts=opts, typ=GetIntegrationRuntimeObjectMetadatumResult).value\n    return AwaitableGetIntegrationRuntimeObjectMetadatumResult(next_link=pulumi.get(__ret__, 'next_link'), value=pulumi.get(__ret__, 'value'))"
        ]
    },
    {
        "func_name": "get_integration_runtime_object_metadatum_output",
        "original": "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    \"\"\"\n    Another failing example. A list of SSIS object metadata.\n    API Version: 2018-06-01.\n\n\n    :param str factory_name: The factory name.\n    :param str integration_runtime_name: The integration runtime name.\n    :param str metadata_path: Metadata path.\n    :param str resource_group_name: The resource group name.\n    \"\"\"\n    ...",
        "mutated": [
            "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    if False:\n        i = 10\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    ...",
            "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    ...",
            "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    ...",
            "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    ...",
            "@_utilities.lift_output_func(get_integration_runtime_object_metadatum)\ndef get_integration_runtime_object_metadatum_output(factory_name: Optional[pulumi.Input[str]]=None, integration_runtime_name: Optional[pulumi.Input[str]]=None, metadata_path: Optional[pulumi.Input[Optional[str]]]=None, resource_group_name: Optional[pulumi.Input[str]]=None, opts: Optional[pulumi.InvokeOptions]=None) -> pulumi.Output[GetIntegrationRuntimeObjectMetadatumResult]:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    Another failing example. A list of SSIS object metadata.\\n    API Version: 2018-06-01.\\n\\n\\n    :param str factory_name: The factory name.\\n    :param str integration_runtime_name: The integration runtime name.\\n    :param str metadata_path: Metadata path.\\n    :param str resource_group_name: The resource group name.\\n    '\n    ..."
        ]
    }
]