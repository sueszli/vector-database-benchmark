[
    {
        "func_name": "record_wave",
        "original": "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    \"\"\"Record audio using the default audio device by PyAudio and Wave\"\"\"\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')",
        "mutated": [
            "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    if False:\n        i = 10\n    'Record audio using the default audio device by PyAudio and Wave'\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')",
            "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Record audio using the default audio device by PyAudio and Wave'\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')",
            "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Record audio using the default audio device by PyAudio and Wave'\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')",
            "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Record audio using the default audio device by PyAudio and Wave'\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')",
            "def record_wave(wavfile, duration=10, channels=1, sampling_rate=16000, sampling_bits=16, chunk_size=1024, keyboard_interrupt='keep_audio'):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Record audio using the default audio device by PyAudio and Wave'\n    format_ = None\n    if sampling_bits == 8:\n        format_ = pyaudio.paInt8\n    if sampling_bits == 16:\n        format_ = pyaudio.paInt16\n    elif sampling_bits == 24:\n        format_ = pyaudio.paInt24\n    elif sampling_bits == 32:\n        format_ = pyaudio.paFloat32\n    else:\n        raise ValueError('Unsupported sampling bits')\n    audio = pyaudio.PyAudio()\n    stream = audio.open(format=format_, channels=channels, rate=sampling_rate, input=True, frames_per_buffer=chunk_size)\n    frames = []\n    print('Start to record with {}-seconds audio\\nType Ctrl-C to get an early stop (a shorter audio)'.format(duration))\n    try:\n        for _ in range(0, int(sampling_rate / chunk_size * duration)):\n            data = stream.read(chunk_size)\n            frames.append(data)\n            print('.', end='', flush=True)\n    except KeyboardInterrupt:\n        if keyboard_interrupt == 'keep_audio':\n            used_seconds = int(len(frames) * chunk_size / sampling_rate)\n            print('\\n-*- Early stop with {} seconds'.format(used_seconds))\n        else:\n            raise\n    print('\\nRecording finished')\n    stream.stop_stream()\n    stream.close()\n    audio.terminate()\n    print('Convert PCM frames to WAV... ', end='')\n    wavfp = wave.open(wavfile, 'wb')\n    wavfp.setnchannels(channels)\n    wavfp.setsampwidth(audio.get_sample_size(format_))\n    wavfp.setframerate(sampling_rate)\n    wavfp.writeframes(b''.join(frames))\n    wavfp.close()\n    print('OK')"
        ]
    }
]