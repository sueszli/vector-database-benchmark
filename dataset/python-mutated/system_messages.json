[
    {
        "func_name": "notify_user_added",
        "original": "def notify_user_added(rel_type, author, user, target):\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)",
        "mutated": [
            "def notify_user_added(rel_type, author, user, target):\n    if False:\n        i = 10\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)",
            "def notify_user_added(rel_type, author, user, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)",
            "def notify_user_added(rel_type, author, user, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)",
            "def notify_user_added(rel_type, author, user, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)",
            "def notify_user_added(rel_type, author, user, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    msgs = user_added_messages.get(rel_type)\n    if not msgs:\n        return\n    srname = target.path.rstrip('/')\n    d = {'url': srname, 'title': '%s: %s' % (srname, target.title), 'author': '/u/' + author.name, 'user': '/u/' + user.name}\n    if 'pm' in msgs and author != user:\n        subject = msgs['pm']['subject'] % d\n        msg = msgs['pm']['msg'] % d\n        if rel_type in ('moderator_invite', 'contributor'):\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, sr=target, from_sr=True, can_send_email=False)\n        else:\n            (item, inbox_rel) = Message._new(author, user, subject, msg, request.ip, can_send_email=False)\n        queries.new_message(item, inbox_rel, update_modmail=False)\n    if 'modmail' in msgs:\n        subject = msgs['modmail']['subject'] % d\n        msg = msgs['modmail']['msg'] % d\n        if rel_type == 'moderator_invite':\n            modmail_author = Account.system_user()\n        else:\n            modmail_author = author\n        (item, inbox_rel) = Message._new(modmail_author, target, subject, msg, request.ip, sr=target)\n        queries.new_message(item, inbox_rel)"
        ]
    },
    {
        "func_name": "send_mod_removal_message",
        "original": "def send_mod_removal_message(subreddit, mod, user):\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)",
        "mutated": [
            "def send_mod_removal_message(subreddit, mod, user):\n    if False:\n        i = 10\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)",
            "def send_mod_removal_message(subreddit, mod, user):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)",
            "def send_mod_removal_message(subreddit, mod, user):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)",
            "def send_mod_removal_message(subreddit, mod, user):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)",
            "def send_mod_removal_message(subreddit, mod, user):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    sr_name = '/r/' + subreddit.name\n    u_name = '/u/' + user.name\n    subject = '%(user)s has been removed as a moderator from %(subreddit)s'\n    message = '%(user)s: You have been removed as a moderator from %(subreddit)s.  If you have a question regarding your removal, you can contact the moderator team for %(subreddit)s by replying to this message.'\n    subject %= {'subreddit': sr_name, 'user': u_name}\n    message %= {'subreddit': sr_name, 'user': user.name}\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=True)"
        ]
    },
    {
        "func_name": "send_ban_message",
        "original": "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)",
        "mutated": [
            "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    if False:\n        i = 10\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)",
            "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)",
            "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)",
            "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)",
            "def send_ban_message(subreddit, mod, user, note=None, days=None, new=True):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    sr_name = '/r/' + subreddit.name\n    if days:\n        subject = \"You've been temporarily banned from participating in %(subreddit)s\"\n        message = 'You have been temporarily banned from participating in %(subreddit)s. This ban will last for %(duration)s days. '\n    else:\n        subject = \"You've been banned from participating in %(subreddit)s\"\n        message = 'You have been banned from participating in %(subreddit)s. '\n    message += \"You can still view and subscribe to %(subreddit)s, but you won't be able to post or comment.\"\n    if not new:\n        subject = 'Your ban from %(subreddit)s has changed'\n    subject %= {'subreddit': sr_name}\n    message %= {'subreddit': sr_name, 'duration': days}\n    if note:\n        message += '\\n\\n' + 'Note from the moderators:'\n        message += '\\n\\n' + blockquote_text(note)\n    message += '\\n\\n' + 'If you have a question regarding your ban, you can contact the moderator team for %(subreddit)s by replying to this message.' % {'subreddit': sr_name}\n    message += '\\n\\n' + '**Reminder from the Reddit staff**: If you use another account to circumvent this subreddit ban, that will be considered a violation of [the Content Policy](/help/contentpolicy#section_prohibited_behavior) and can result in your account being [suspended](https://reddit.zendesk.com/hc/en-us/articles/205687686) from the site as a whole.'\n    (item, inbox_rel) = Message._new(mod, user, subject, message, request.ip, sr=subreddit, from_sr=True, can_send_email=False)\n    queries.new_message(item, inbox_rel, update_modmail=False)"
        ]
    }
]