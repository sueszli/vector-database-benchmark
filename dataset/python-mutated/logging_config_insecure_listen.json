[
    {
        "func_name": "logging_config_insecure_listen",
        "original": "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')",
        "mutated": [
            "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if False:\n        i = 10\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')",
            "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')",
            "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')",
            "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')",
            "@test.checks('Call')\n@test.test_id('B612')\ndef logging_config_insecure_listen(context):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if context.call_function_name_qual == 'logging.config.listen' and 'verify' not in context.call_keywords:\n        return bandit.Issue(severity=bandit.MEDIUM, confidence=bandit.HIGH, cwe=issue.Cwe.CODE_INJECTION, text='Use of insecure logging.config.listen detected.')"
        ]
    }
]