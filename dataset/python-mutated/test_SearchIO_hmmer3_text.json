[
    {
        "func_name": "get_file",
        "original": "def get_file(filename):\n    \"\"\"Return the path of a test file.\"\"\"\n    return os.path.join(TEST_DIR, filename)",
        "mutated": [
            "def get_file(filename):\n    if False:\n        i = 10\n    'Return the path of a test file.'\n    return os.path.join(TEST_DIR, filename)",
            "def get_file(filename):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Return the path of a test file.'\n    return os.path.join(TEST_DIR, filename)",
            "def get_file(filename):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Return the path of a test file.'\n    return os.path.join(TEST_DIR, filename)",
            "def get_file(filename):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Return the path of a test file.'\n    return os.path.join(TEST_DIR, filename)",
            "def get_file(filename):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Return the path of a test file.'\n    return os.path.join(TEST_DIR, filename)"
        ]
    },
    {
        "func_name": "test_31b1_hmmscan_001",
        "original": "def test_31b1_hmmscan_001(self):\n    \"\"\"Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).\"\"\"\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
        "mutated": [
            "def test_31b1_hmmscan_001(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).'\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_31b1_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).'\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_31b1_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).'\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_31b1_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).'\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_31b1_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.1b1 (text_31b1_hmmscan_001).'\n    txt_file = get_file('text_31b1_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(22, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    for qresult in qresults:\n        counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/protdb/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.1b1', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.6e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.5, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.5e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.15, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.28, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_001",
        "original": "def test_30_hmmscan_001(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_001).\"\"\"\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
        "mutated": [
            "def test_30_hmmscan_001(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_001).'\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_30_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_001).'\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_30_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_001).'\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_30_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_001).'\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)",
            "def test_30_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_001).'\n    txt_file = get_file('text_30_hmmscan_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(5, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_002",
        "original": "def test_30_hmmscan_002(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_002).\"\"\"\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_002(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_002).'\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_002).'\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_002).'\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_002).'\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_002).'\n    txt_file = get_file('text_30_hmmscan_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('random_s00', qresult.id)\n    self.assertEqual(32, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_003",
        "original": "def test_30_hmmscan_003(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_003).\"\"\"\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_003(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_003).'\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_003).'\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_003).'\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_003).'\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_003).'\n    txt_file = get_file('text_30_hmmscan_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|4885477|ref|NP_005359.1|', qresult.id)\n    self.assertEqual('myoglobin [Homo sapiens]', qresult.description)\n    self.assertEqual(154, qresult.seq_len)\n    self.assertEqual(1, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Globin', hit.id)\n    self.assertEqual('Globin', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(6e-21, hit.evalue)\n    self.assertEqual(74.6, hit.bitscore)\n    self.assertEqual(0.3, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(74.0, hsp.bitscore)\n    self.assertEqual(0.2, hsp.bias)\n    self.assertEqual(6.7e-25, hsp.evalue_cond)\n    self.assertEqual(9.2e-21, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(107, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(6, hsp.query_start)\n    self.assertEqual(112, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(6, hsp.env_start)\n    self.assertEqual(113, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHCHHHHHHHHHHHHHHHHHSGGGGGGGCCCTTTT.HHHHHTSCHHHHHHHHHHHHHHHHHHCTTSHHHHHHHHHHHHHHHHTT-.--HHHHCCHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qkalvkaswekvkanaeeigaeilkrlfkaypdtkklFkkfgdls.aedlksspkfkahakkvlaaldeavknldnddnlkaalkklgarHakrg.vdpanfklfgeal', hsp.hit.seq)\n    self.assertEqual('EWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKsEDEMKASEDLKKHGATVLTALGGILKK---KGHHEAEIKPLAQSHATKHkIPVKYLEFISECI', hsp.query.seq)\n    self.assertEqual('5789*********************************************************************...6899***********************999998', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_004",
        "original": "def test_30_hmmscan_004(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_004).\"\"\"\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_004(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_004).'\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_004).'\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_004).'\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_004).'\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_004).'\n    txt_file = get_file('text_30_hmmscan_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|126362951:116-221', qresult.id)\n    self.assertEqual('leukocyte immunoglobulin-like receptor subfamily B member 1 isoform 2 precursor [Homo sapiens]', qresult.description)\n    self.assertEqual(106, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Ig_3', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.4e-09, hit.evalue)\n    self.assertEqual(38.2, hit.bitscore)\n    self.assertEqual(0.4, hit.bias)\n    self.assertEqual(1.3, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(37.6, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(3e-13, hsp.evalue_cond)\n    self.assertEqual(2.1e-09, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(73, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(84, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(88, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.94, hsp.acc_avg)\n    self.assertEqual('kPvisvspsptvtsggnvtLtCsaeggpppptisWy.....ietppelqgsegssssestLtissvtsedsgtYtCva', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPSPVVNSGGNVILQCDSQVA--FDGFSLCkegedEHPQCLNSQPHARGSSRAIFSVGPVSPSRRWWYRCYA', hsp.query.seq)\n    self.assertEqual('8************************99..78888888****************************************9', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('Ig_2', hit.id)\n    self.assertEqual('Immunoglobulin domain', hit.description)\n    self.assertEqual(3.5e-05, hit.evalue)\n    self.assertEqual(23.7, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.1, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(23.4, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(6.2e-09, hsp.evalue_cond)\n    self.assertEqual(4.3e-05, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(80, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(8, hsp.query_start)\n    self.assertEqual(104, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(8, hsp.env_start)\n    self.assertEqual(104, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.71, hsp.acc_avg)\n    self.assertEqual('kpvlvapp.svvtegenvtLtCsapgnptprvqwykdg.vels......qsqnq........lfipnvsaedsgtYtCra....rnseggktstsveltv', hsp.hit.seq)\n    self.assertEqual('KPTLSAQPsPVVNSGGNVILQCDSQVA-FDGFSLCKEGeDEHPqclnsqP---HargssraiFSVGPVSPSRRWWYRCYAydsnSPYEWSLPSDLLELLV', hsp.query.seq)\n    self.assertEqual('799998885779*************85.899***9988655554443320...134455543444669************88443344588888888766', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_005",
        "original": "def test_30_hmmscan_005(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_005).\"\"\"\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_005(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_005).'\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_005).'\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_005).'\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_005).'\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_005).'\n    txt_file = get_file('text_30_hmmscan_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_006",
        "original": "def test_30_hmmscan_006(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_006).\"\"\"\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_006(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_006).'\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_006(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_006).'\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_006(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_006).'\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_006(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_006).'\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_006(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_006).'\n    txt_file = get_file('text_30_hmmscan_006.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('eldleeleefakefkqrrikLgltqadvgsalgalyGkefsqttIcrFEalqLslknmckLkpllekWLeeae', hsp.hit.seq)\n    self.assertEqual('KALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFSQTTICRFEALQLSLKNMCKLRPLLEKWVEEAD', hsp.query.seq)\n    self.assertEqual('67899******************************************************************96', hsp.aln_annotation['PP'])\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('SS--SS--HHHHHHHHHHCCTSSS--HHHHHHHHHH----HHHHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('rrkRttftkeqleeLeelFeknrypsaeereeLAkklgLterqVkvWFqNrRakekk', hsp.hit.seq)\n    self.assertEqual('KRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('79****************************************************997', hsp.aln_annotation['PP'])\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    self.assertEqual('aLGarLralReraGLtqeevAerlg......vSastlsrlE', hsp.hit.seq)\n    self.assertEqual('QFAKLLKQKRITLGYTQADVGLTLGvlfgkvFSQTTICRFE', hsp.query.seq)\n    self.assertEqual('6999***********************************99', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('rgrpsaavlaalaralgldpaera', hsp.hit.seq)\n    self.assertEqual('CPKPSLQQITHIANQLGLEKDVVR', hsp.query.seq)\n    self.assertEqual('678**************9988765', hsp.aln_annotation['PP'])\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    self.assertEqual('hnPYPskevkeelakqTglsrkqidnWFiNaRr', hsp.hit.seq)\n    self.assertEqual('KCPKPSLQQITHIANQLGLEKDVVRVWFCNRRQ', hsp.query.seq)\n    self.assertEqual('56779*************************996', hsp.aln_annotation['PP'])\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertEqual('adlaavleelnkakkeevdlvvlGcPhlsleeleelaellkgrkkkvsvelvvttsravlsk', hsp.hit.seq)\n    self.assertEqual('QARKRKRTSIENRVRWSLETMFLKCPKPSLQQITHIANQLGLEK--DVVRVWFCNRRQKGKR', hsp.query.seq)\n    self.assertEqual('345666667778888899************************99..9999999988876554', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_007",
        "original": "def test_30_hmmscan_007(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_007).\"\"\"\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_007(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_007).'\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_007(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_007).'\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_007(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_007).'\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_007(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_007).'\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_007(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_007).'\n    txt_file = get_file('text_30_hmmscan_007.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|125490392|ref|NP_038661.2|', qresult.id)\n    self.assertEqual('POU domain, class 5, transcription factor 1 isoform 1 [Mus musculus]', qresult.description)\n    self.assertEqual(352, qresult.seq_len)\n    self.assertEqual(5, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Pou', hit.id)\n    self.assertEqual('Pou domain - N-terminal to homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7e-37, hit.evalue)\n    self.assertEqual(124.8, hit.bitscore)\n    self.assertEqual(0.5, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(123.9, hsp.bitscore)\n    self.assertEqual(0.3, hsp.bias)\n    self.assertEqual(5e-40, hsp.evalue_cond)\n    self.assertEqual(1.4e-36, hsp.evalue)\n    self.assertEqual(2, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(132, hsp.query_start)\n    self.assertEqual(205, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(130, hsp.env_start)\n    self.assertEqual(205, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[1]\n    self.assertEqual('Homeobox', hit.id)\n    self.assertEqual('Homeobox domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(2.1e-18, hit.evalue)\n    self.assertEqual(65.5, hit.bitscore)\n    self.assertEqual(1.1, hit.bias)\n    self.assertEqual(1.5, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(64.6, hsp.bitscore)\n    self.assertEqual(0.7, hsp.bias)\n    self.assertEqual(1.5e-21, hsp.evalue_cond)\n    self.assertEqual(4.1e-18, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(57, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(223, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(223, hsp.env_start)\n    self.assertEqual(280, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    hit = qresult[2]\n    self.assertEqual('HTH_31', hit.id)\n    self.assertEqual('Helix-turn-helix domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.012, hit.evalue)\n    self.assertEqual(15.6, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.7e-05, hsp.evalue_cond)\n    self.assertEqual(0.16, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(35, hsp.hit_end)\n    self.assertEqual('[.', hsp.hit_endtype)\n    self.assertEqual(140, hsp.query_start)\n    self.assertEqual(181, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(140, hsp.env_start)\n    self.assertEqual(184, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.96, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(0.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.19, hsp.evalue_cond)\n    self.assertEqual(520.0, hsp.evalue)\n    self.assertEqual(38, hsp.hit_start)\n    self.assertEqual(62, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(244, hsp.query_start)\n    self.assertEqual(268, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(242, hsp.env_start)\n    self.assertEqual(270, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    hit = qresult[3]\n    self.assertEqual('Homeobox_KN', hit.id)\n    self.assertEqual('Homeobox KN domain', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.039, hit.evalue)\n    self.assertEqual(13.5, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(1.6, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(3.5e-05, hsp.evalue_cond)\n    self.assertEqual(0.095, hsp.evalue)\n    self.assertEqual(6, hsp.hit_start)\n    self.assertEqual(39, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(243, hsp.query_start)\n    self.assertEqual(276, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(240, hsp.env_start)\n    self.assertEqual(277, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.91, hsp.acc_avg)\n    hit = qresult[4]\n    self.assertEqual('DUF521', hit.id)\n    self.assertEqual('Protein of unknown function (DUF521)', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(0.14, hit.evalue)\n    self.assertEqual(10.5, hit.bitscore)\n    self.assertEqual(0.1, hit.bias)\n    self.assertEqual(1.4, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(9.6, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(9.4e-05, hsp.evalue_cond)\n    self.assertEqual(0.26, hsp.evalue)\n    self.assertEqual(272, hsp.hit_start)\n    self.assertEqual(334, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(220, hsp.query_start)\n    self.assertEqual(280, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(196, hsp.env_start)\n    self.assertEqual(294, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.77, hsp.acc_avg)\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_008",
        "original": "def test_30_hmmscan_008(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_008).\"\"\"\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmscan_008(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_008).'\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_008(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_008).'\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_008(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_008).'\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_008(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_008).'\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmscan_008(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_008).'\n    txt_file = get_file('text_30_hmmscan_008.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmscan', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/Pfam-A.hmm', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('gi|22748937|ref|NP_065801.1|', qresult.id)\n    self.assertEqual('exportin-5 [Homo sapiens]', qresult.description)\n    self.assertEqual(1204, qresult.seq_len)\n    self.assertEqual(2, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('Xpo1', hit.id)\n    self.assertEqual('Exportin 1-like protein', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(7.8e-34, hit.evalue)\n    self.assertEqual(116.6, hit.bitscore)\n    self.assertEqual(7.8, hit.bias)\n    self.assertEqual(2.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(116.1, hsp.bitscore)\n    self.assertEqual(3.4, hsp.bias)\n    self.assertEqual(1.6e-37, hsp.evalue_cond)\n    self.assertEqual(1.1e-33, hsp.evalue)\n    self.assertEqual(1, hsp.hit_start)\n    self.assertEqual(148, hsp.hit_end)\n    self.assertEqual('.]', hsp.hit_endtype)\n    self.assertEqual(109, hsp.query_start)\n    self.assertEqual(271, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(108, hsp.env_start)\n    self.assertEqual(271, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.98, hsp.acc_avg)\n    self.assertEqual('HHHHHHHHHHHHHHHHHHTTTTSTTHHHHHHHHHHG-HHHHHHHHHHHHHHHHHHCCS-TTTS-CCCHHHHHHHCHHHHHHHHHHHHHHHC-TT-..................HHHHHHHHHHHHHHCTTS-CHHCHCS...HHHHHCHHCCSCCCHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('kflrnklaealaelflqeypnqWpsffddllsllssspsglelllriLkvlpeEiadfsrskleqerrnelkdllrsqvqkilelllqileqsvskk...............sselveatLkclsswvswidiglivnsp..llsllfqlLndpelreaAvecL', hsp.hit.seq)\n    self.assertEqual('NHIKDALSRIVVEMIKREWPQHWPDMLIELDTLSKQGETQTELVMFILLRLAEDVVTF--QTLPPQRRRDIQQTLTQNMERIFSFLLNTLQENVNKYqqvktdtsqeskaqaNCRVGVAALNTLAGYIDWVSMSHITAENckLLEILCLLLNEQELQLGAAECL', hsp.query.seq)\n    self.assertEqual('89******************************************************99..79*********************************99*****************************************8889*********************8', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-1.8, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(0.35, hsp.evalue_cond)\n    self.assertEqual(2400.0, hsp.evalue)\n    self.assertEqual(111, hsp.hit_start)\n    self.assertEqual(139, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(498, hsp.query_start)\n    self.assertEqual(525, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(495, hsp.env_start)\n    self.assertEqual(529, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.86, hsp.acc_avg)\n    self.assertEqual('HHCTTS-CHHCHCS.HHHHHCHHCCSCC', hsp.aln_annotation['CS'])\n    self.assertEqual('swvswidiglivnspllsllfqlLndpe', hsp.hit.seq)\n    self.assertEqual('SFVQWEAMTLFLES-VITQMFRTLNREE', hsp.query.seq)\n    self.assertEqual('899*********98.8888899998776', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('IBN_N', hit.id)\n    self.assertEqual('Importin-beta N-terminal domain', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(0.0039, hit.evalue)\n    self.assertEqual(16.9, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.7, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(14.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.8e-06, hsp.evalue_cond)\n    self.assertEqual(0.033, hsp.evalue)\n    self.assertEqual(3, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(35, hsp.query_start)\n    self.assertEqual(98, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(32, hsp.env_start)\n    self.assertEqual(100, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.87, hsp.acc_avg)\n    self.assertEqual('HHHHHHHSCTHHHHHHHHHHHTTTSTHHHHHHHHHHHHHHHHHSCCHHHHHHHHCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qLnqlekqkPgflsallqilanksldlevRqlAalyLknlItkhWkseeaqrqqqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('FCEEFKEKCPICVPCGLRLA-EKTQVAIVRHFGLQILEHVVKFRWN--------GMSRLEKVYLKNSVMELI', hsp.query.seq)\n    self.assertEqual('56788886699*********.6555899******************........999999****99999887', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(-3.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.2, hsp.evalue_cond)\n    self.assertEqual(8000.0, hsp.evalue)\n    self.assertEqual(56, hsp.hit_start)\n    self.assertEqual(75, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(167, hsp.query_start)\n    self.assertEqual(186, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(164, hsp.env_start)\n    self.assertEqual(187, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.85, hsp.acc_avg)\n    self.assertEqual('HCS-HHHHHHHHHHHHHHH', hsp.aln_annotation['CS'])\n    self.assertEqual('qqlpeeekelIrnnllnll', hsp.hit.seq)\n    self.assertEqual('QTLPPQRRRDIQQTLTQNM', hsp.query.seq)\n    self.assertEqual('6899*******99998865', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_009",
        "original": "def test_30_hmmscan_009(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_009).\"\"\"\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)",
        "mutated": [
            "def test_30_hmmscan_009(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_009).'\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)",
            "def test_30_hmmscan_009(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_009).'\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)",
            "def test_30_hmmscan_009(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_009).'\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)",
            "def test_30_hmmscan_009(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_009).'\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)",
            "def test_30_hmmscan_009(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_009).'\n    hmmer_file = get_file('text_30_hmmscan_009.out')\n    qresults = parse(hmmer_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('SCO3574', qresult.id)\n    self.assertEqual(5, len(qresult.hits))\n    self.assertEqual('Esterase', qresult.hits[3].id)"
        ]
    },
    {
        "func_name": "test_30_hmmscan_010",
        "original": "def test_30_hmmscan_010(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_010).\"\"\"\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))",
        "mutated": [
            "def test_30_hmmscan_010(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_010).'\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))",
            "def test_30_hmmscan_010(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_010).'\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))",
            "def test_30_hmmscan_010(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_010).'\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))",
            "def test_30_hmmscan_010(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_010).'\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))",
            "def test_30_hmmscan_010(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_010).'\n    hmmer_file = get_file('text_30_hmmscan_010.out')\n    qresults = list(parse(hmmer_file, FMT))\n    hit = qresults[0][-1]\n    self.assertFalse(hit)\n    self.assertEqual('NRPS-COM_Cterm', hit.id)\n    self.assertEqual('', hit.description)\n    self.assertEqual('bpsA', hit.query_id)\n    self.assertEqual('<unknown description>', hit.query_description)\n    self.assertEqual(4.4e-11, hit.evalue)\n    self.assertEqual(33.6, hit.bitscore)\n    self.assertEqual(10.2, hit.bias)\n    self.assertEqual(2.9, hit.domain_exp_num)\n    self.assertEqual(0, hit.domain_obs_num)\n    self.assertEqual(0, len(hit))"
        ]
    },
    {
        "func_name": "test_30_hmmscan_011",
        "original": "def test_30_hmmscan_011(self):\n    \"\"\"Parsing hmmscan 3.0 (text_30_hmmscan_011).\"\"\"\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target",
        "mutated": [
            "def test_30_hmmscan_011(self):\n    if False:\n        i = 10\n    'Parsing hmmscan 3.0 (text_30_hmmscan_011).'\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target",
            "def test_30_hmmscan_011(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmscan 3.0 (text_30_hmmscan_011).'\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target",
            "def test_30_hmmscan_011(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmscan 3.0 (text_30_hmmscan_011).'\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target",
            "def test_30_hmmscan_011(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmscan 3.0 (text_30_hmmscan_011).'\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target",
            "def test_30_hmmscan_011(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmscan 3.0 (text_30_hmmscan_011).'\n    hmmer_file = get_file('text_30_hmmscan_011.out')\n    qresults = list(parse(hmmer_file, FMT))\n    assert len(qresults) == 2\n    result = qresults[0]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 22.4\n    result = qresults[1]\n    hit = result[-1]\n    assert len(result) == 29\n    assert hit.hsps[0].bitscore == 20.8\n    expected_db_target = 'C:\\\\msys64\\\\scr\\\\byerly\\\\builds\\\\NB\\\\20231025 _\\\\internal\\\\lib\\\\site-packages\\\\anarci\\\\dat\\\\HMMs\\\\ALL.hmm'\n    for (idx, qresult) in enumerate(qresults):\n        assert qresult.program == 'hmmscan', f\"Expected program 'hmmscan' for item at index {idx}, found {qresult.program}\"\n        assert qresult.target == expected_db_target"
        ]
    },
    {
        "func_name": "test_31b2_hmmsearch_001",
        "original": "def test_31b2_hmmsearch_001(self):\n    \"\"\"Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).\"\"\"\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)",
        "mutated": [
            "def test_31b2_hmmsearch_001(self):\n    if False:\n        i = 10\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).'\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)",
            "def test_31b2_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).'\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)",
            "def test_31b2_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).'\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)",
            "def test_31b2_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).'\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)",
            "def test_31b2_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_001).'\n    txt_file = get_file('text_31b2_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 1)\n    self.assertEqual(qresults[0].id, 'infile_sto')\n    self.assertEqual(len(qresults[0].hits), 10)"
        ]
    },
    {
        "func_name": "test_31b2_hmmsearch_002",
        "original": "def test_31b2_hmmsearch_002(self):\n    \"\"\"Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).\"\"\"\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])",
        "mutated": [
            "def test_31b2_hmmsearch_002(self):\n    if False:\n        i = 10\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).'\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])",
            "def test_31b2_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).'\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])",
            "def test_31b2_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).'\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])",
            "def test_31b2_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).'\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])",
            "def test_31b2_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test parsing hmmsearch 3.1b2 (text_31b2_hmmsearch_002).'\n    txt_file = get_file('text_31b2_hmmsearch_002.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(len(qresults), 2)\n    self.assertEqual([x.id for x in qresults], ['infile_sto', 'infile_sto2'])\n    self.assertEqual([len(x.hits) for x in qresults], [10, 10])"
        ]
    },
    {
        "func_name": "test_31b2_hmmscan_001",
        "original": "def test_31b2_hmmscan_001(self):\n    \"\"\"Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).\"\"\"\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)",
        "mutated": [
            "def test_31b2_hmmscan_001(self):\n    if False:\n        i = 10\n    'Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).'\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)",
            "def test_31b2_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).'\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)",
            "def test_31b2_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).'\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)",
            "def test_31b2_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).'\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)",
            "def test_31b2_hmmscan_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test parsing hmmscan 3.1b2 (text_31b2_hmmscan_001).'\n    txt_file = get_file('text_31b2_hmmscan_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(1, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual(108, len(qresult))\n    self.assertEqual('Protein-arginine kinase activator protein OS=Bacillus subtilis (strain 168) GN=mcsA PE=1 SV=1', qresult.description)\n    for hit in qresult:\n        self.assertEqual('', hit.description)"
        ]
    },
    {
        "func_name": "test_31b1_hmmsearch_001",
        "original": "def test_31b1_hmmsearch_001(self):\n    \"\"\"Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).\"\"\"\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])",
        "mutated": [
            "def test_31b1_hmmsearch_001(self):\n    if False:\n        i = 10\n    'Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).'\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])",
            "def test_31b1_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).'\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])",
            "def test_31b1_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).'\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])",
            "def test_31b1_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).'\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])",
            "def test_31b1_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Test parsing hmmsearch 3.1b1 (text_31b1_hmmsearch_001).'\n    txt_file = get_file('text_31b1_hmmsearch_001.out')\n    qresults = list(parse(txt_file, FMT))\n    self.assertEqual(2, len(qresults))\n    qresult = qresults[0]\n    self.assertEqual('Globins', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = qresults[1]\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(4, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=1 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.5e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(2.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])"
        ]
    },
    {
        "func_name": "test_30_hmmsearch_001",
        "original": "def test_30_hmmsearch_001(self):\n    \"\"\"Parsing hmmersearch 3.0 (text_30_hmmsearch_001).\"\"\"\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
        "mutated": [
            "def test_30_hmmsearch_001(self):\n    if False:\n        i = 10\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_001).'\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_001).'\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_001).'\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_001).'\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)",
            "def test_30_hmmsearch_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_001).'\n    txt_file = get_file('text_30_hmmsearch_001.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(1, counter)"
        ]
    },
    {
        "func_name": "test_30_hmmsearch_002",
        "original": "def test_30_hmmsearch_002(self):\n    \"\"\"Parsing hmmersearch 3.0 (text_30_hmmsearch_002).\"\"\"\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
        "mutated": [
            "def test_30_hmmsearch_002(self):\n    if False:\n        i = 10\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_002).'\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_002).'\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_002).'\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_002).'\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_002(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_002).'\n    txt_file = get_file('text_30_hmmsearch_002.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])"
        ]
    },
    {
        "func_name": "test_30_hmmsearch_003",
        "original": "def test_30_hmmsearch_003(self):\n    \"\"\"Parsing hmmersearch 3.0 (text_30_hmmsearch_003).\"\"\"\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)",
        "mutated": [
            "def test_30_hmmsearch_003(self):\n    if False:\n        i = 10\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_003).'\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)",
            "def test_30_hmmsearch_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_003).'\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)",
            "def test_30_hmmsearch_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_003).'\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)",
            "def test_30_hmmsearch_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_003).'\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)",
            "def test_30_hmmsearch_003(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_003).'\n    txt_file = get_file('text_30_hmmsearch_003.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)"
        ]
    },
    {
        "func_name": "test_30_hmmsearch_004",
        "original": "def test_30_hmmsearch_004(self):\n    \"\"\"Parsing hmmersearch 3.0 (text_30_hmmsearch_004).\"\"\"\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
        "mutated": [
            "def test_30_hmmsearch_004(self):\n    if False:\n        i = 10\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_004).'\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_004).'\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_004).'\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_004).'\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])",
            "def test_30_hmmsearch_004(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_004).'\n    txt_file = get_file('text_30_hmmsearch_004.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])"
        ]
    },
    {
        "func_name": "test_30_hmmsearch_005",
        "original": "def test_30_hmmsearch_005(self):\n    \"\"\"Parsing hmmersearch 3.0 (text_30_hmmsearch_005).\"\"\"\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)",
        "mutated": [
            "def test_30_hmmsearch_005(self):\n    if False:\n        i = 10\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_005).'\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)",
            "def test_30_hmmsearch_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_005).'\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)",
            "def test_30_hmmsearch_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_005).'\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)",
            "def test_30_hmmsearch_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_005).'\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)",
            "def test_30_hmmsearch_005(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing hmmersearch 3.0 (text_30_hmmsearch_005).'\n    txt_file = get_file('text_30_hmmsearch_005.out')\n    qresults = parse(txt_file, FMT)\n    counter = 0\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('globins4', qresult.id)\n    self.assertEqual(149, qresult.seq_len)\n    self.assertEqual(0, len(qresult))\n    qresult = next(qresults)\n    counter += 1\n    self.assertEqual('hmmsearch', qresult.program)\n    self.assertEqual('/home/bow/db/hmmer/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.0', qresult.version)\n    self.assertEqual('Pkinase', qresult.id)\n    self.assertEqual('PF00069.17', qresult.accession)\n    self.assertEqual('Protein kinase domain', qresult.description)\n    self.assertEqual(260, qresult.seq_len)\n    self.assertEqual(7, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q9WUT3|KS6A2_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-2 OS=Mus musculus GN=Rps6ka2 PE=2 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(8.4e-147, hit.evalue)\n    self.assertEqual(492.3, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.1, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.2, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(4.6e-75, hsp.evalue_cond)\n    self.assertEqual(3.5e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(58, hsp.hit_start)\n    self.assertEqual(318, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(58, hsp.env_start)\n    self.assertEqual(318, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEE...TTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakk...kktgkkvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSYGKVFLVRKvtgSDAGQLYAMKVLKKATLKVRDRVRSKMERDILAEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHGLGIIYRDLKPENILLDEEGHIKITDFGLSKEATDHDKRAYSFCGTIEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGSLPFQGK---DRKETMALILKAKLGMPQFLS----AEAQSLLRALFKRNPCNRLGagvdgVEEIKRHPFF', hsp.hit.seq)\n    self.assertEqual('67899**********7666611155667*****************99999****************************************************************************************************************************.******************************...999999999999999998866....99******************9999999*****997', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(249.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(1.5e-77, hsp.evalue_cond)\n    self.assertEqual(1.1e-72, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(414, hsp.hit_start)\n    self.assertEqual(672, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(414, hsp.env_start)\n    self.assertEqual(672, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEIKEDIGVGSYSVCKRCVHKATDAEYAVKIIDKSKRDPSE------EIEILLRYgQHPNIITLKDVYDDGKYVYLVMELMRGGELLDRILRQRCFSEREASDVLYTIARTMDYLHSQGVVHRDLKPSNILYMDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDVWSLGILLYTMLAGFTPFANGPDDTPEEILARIGSGKYALSGGNWDSISDAAKDVVSKMLHVDPQQRLTAVQVLKHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************98......9*******99**************************************************************************98544444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    hit = qresult[-1]\n    self.assertEqual('sp|P18654|KS6A3_MOUSE', hit.id)\n    self.assertEqual('Ribosomal protein S6 kinase alpha-3 OS=Mus musculus GN=Rps6ka3 PE=1 SV=2', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(5e-144, hit.evalue)\n    self.assertEqual(483.2, hit.bitscore)\n    self.assertEqual(0.0, hit.bias)\n    self.assertEqual(2.2, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(240.3, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(8.7e-75, hsp.evalue_cond)\n    self.assertEqual(6.6e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(67, hsp.hit_start)\n    self.assertEqual(327, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(67, hsp.env_start)\n    self.assertEqual(327, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.95, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTE...EEEEEEEEHHHCCCCCCHHHHHHHHHHHHHSSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEEEE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTT.....HHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgk...kvAvKilkkeeekskkektavrElkilkklsHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgevkiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRlt.....aeeilkhpwl', hsp.query.seq)\n    self.assertEqual('FELLKVLGQGSFGKVFLVKKISGSDarqLYAMKVLKKATLKVRDRVRTKMERDILVEVNHPFIVKLHYAFQTEGKLYLILDFLRGGDLFTRLSKEVMFTEEDVKFYLAELALALDHLHSLGIIYRDLKPENILLDEEGHIKLTDFGLSKESIDHEKKAYSFCGTVEYMAPEVVN-RRGHTQSADWWSFGVLMFEMLTGTLPFQGK---DRKETMTMILKAKLGMPQFLS----PEAQSLLRMLFKRNPANRLGagpdgVEEIKRHSFF', hsp.hit.seq)\n    self.assertEqual('67899**********8888876655455****************999999****************************************************************************************************9***********************.******************************...999999999999988888866....9******************9888888999999886', hsp.aln_annotation['PP'])\n    hsp = hit.hsps[1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(241.0, hsp.bitscore)\n    self.assertEqual(0.0, hsp.bias)\n    self.assertEqual(5.1e-75, hsp.evalue_cond)\n    self.assertEqual(3.9e-70, hsp.evalue)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(260, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(421, hsp.hit_start)\n    self.assertEqual(679, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(421, hsp.env_start)\n    self.assertEqual(679, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.97, hsp.acc_avg)\n    self.assertEqual('EEEEEEEEEETTEEEEEEEETTTTEEEEEEEEEHHHCCCCCCHHHHHHHHHHHHH.SSSSB--EEEEEEETTEEEEEEE--TS-BHHHHHHHHHST-HHHHHHHHHHHHHHHHHHHHTTEE-S--SGGGEEEETTTEE....EE--GTT.E..EECSS-C-S--S-GGGS-HHHHCCS-CTHHHHHHHHHHHHHHHHHHSS-TTSSSHHCCTHHHHSSHHH......TTS.....HHHHHHHHHHT-SSGGGSTTHHHHHTSGGG', hsp.aln_annotation['CS'])\n    self.assertEqual('yelleklGsGsfGkVykakkkktgkkvAvKilkkeeekskkektavrElkilkkl.sHpnivkllevfetkdelylvleyveggdlfdllkkegklseeeikkialqilegleylHsngiiHrDLKpeNiLldkkgev....kiaDFGlakkleksseklttlvgtreYmAPEvllkakeytkkvDvWslGvilyelltgklpfsgeseedqleliekilkkkleedepkssskseelkdlikkllekdpakRltaeeilkhpwl', hsp.query.seq)\n    self.assertEqual('YEVKEDIGVGSYSVCKRCIHKATNMEFAVKIIDKSKRDPTE------EIEILLRYgQHPNIITLKDVYDDGKYVYVVTELMKGGELLDKILRQKFFSEREASAVLFTITKTVEYLHAQGVVHRDLKPSNILYVDESGNpesiRICDFGFAKQLRAENGLLMTPCYTANFVAPEVLK-RQGYDAACDIWSLGVLLYTMLTGYTPFANGPDDTPEEILARIGSGKFSLSGGYWNSVSDTAKDLVSKMLHVDPHQRLTAALVLRHPWI', hsp.hit.seq)\n    self.assertEqual('7899***********************************88......9*******99**********************************9***************************************98554444888**********************************.***************************************************************************************7', hsp.aln_annotation['PP'])\n    self.assertRaises(StopIteration, next, qresults)\n    self.assertEqual(2, counter)"
        ]
    },
    {
        "func_name": "test_31b2_phmmer_001",
        "original": "def test_31b2_phmmer_001(self):\n    \"\"\"Parsing phmmer 3.1b2 (text_31b2_phmmer_001).\"\"\"\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])",
        "mutated": [
            "def test_31b2_phmmer_001(self):\n    if False:\n        i = 10\n    'Parsing phmmer 3.1b2 (text_31b2_phmmer_001).'\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])",
            "def test_31b2_phmmer_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Parsing phmmer 3.1b2 (text_31b2_phmmer_001).'\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])",
            "def test_31b2_phmmer_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Parsing phmmer 3.1b2 (text_31b2_phmmer_001).'\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])",
            "def test_31b2_phmmer_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Parsing phmmer 3.1b2 (text_31b2_phmmer_001).'\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])",
            "def test_31b2_phmmer_001(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Parsing phmmer 3.1b2 (text_31b2_phmmer_001).'\n    txt_file = get_file('text_31b2_phmmer_001.out')\n    qresults = list(parse(txt_file, FMT))\n    qresult = qresults[0]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', qresult.id)\n    self.assertEqual(256, qresult.seq_len)\n    self.assertEqual(13, len(qresult))\n    hit = qresult[0]\n    self.assertEqual('sp|Q6GZX4|001R_FRG3G', hit.id)\n    self.assertEqual('Putative transcription factor 001R OS=Frog virus 3 (isolate Goorha) GN=FV3-001R PE=4 SV=1', hit.description)\n    self.assertTrue(hit.is_included)\n    self.assertEqual(1.1e-176, hit.evalue)\n    self.assertEqual(590.0, hit.bitscore)\n    self.assertEqual(1.4, hit.bias)\n    self.assertEqual(1.0, hit.domain_exp_num)\n    self.assertEqual(1, hit.domain_obs_num)\n    self.assertEqual(1, len(hit))\n    hsp = hit.hsps[0]\n    self.assertEqual(1, hsp.domain_index)\n    self.assertTrue(hsp.is_included)\n    self.assertEqual(589.9, hsp.bitscore)\n    self.assertEqual(1.4, hsp.bias)\n    self.assertEqual(3e-181, hsp.evalue_cond)\n    self.assertEqual(1.3e-176, hsp.evalue)\n    self.assertEqual(0, hsp.hit_start)\n    self.assertEqual(256, hsp.hit_end)\n    self.assertEqual('[]', hsp.hit_endtype)\n    self.assertEqual(0, hsp.query_start)\n    self.assertEqual(256, hsp.query_end)\n    self.assertEqual('[]', hsp.query_endtype)\n    self.assertEqual(0, hsp.env_start)\n    self.assertEqual(256, hsp.env_end)\n    self.assertEqual('[]', hsp.env_endtype)\n    self.assertEqual(1.0, hsp.acc_avg)\n    self.assertEqual('mafsaedvlkeydrrrrmealllslyypndrklldykewspprvqvecpkapvewnnppsekglivghfsgikykgekaqasevdvnkm', hsp.query.seq[:89])\n    self.assertEqual('MAFSAEDVLKEYDRRRRMEALLLSLYYPNDRKLLDYKEWSPPRVQVECPKAPVEWNNPPSEKGLIVGHFSGIKYKGEKAQASEVDVNKM', hsp.hit.seq[:89])\n    self.assertEqual('89***************************************************************************************', hsp.aln_annotation['PP'][:89])\n    qresult = qresults[-1]\n    self.assertEqual('phmmer', qresult.program)\n    self.assertEqual('/home/bow/devel/sandbox/biopython-sandbox/db/hmmer/protdb/uniprot_sprot.fasta', qresult.target)\n    self.assertEqual('3.1b2', qresult.version)\n    self.assertEqual('sp|Q197F7|003L_IIV3', qresult.id)\n    self.assertEqual(156, qresult.seq_len)\n    self.assertEqual(6, len(qresult))\n    hit = qresult[-1]\n    self.assertEqual('sp|P04060|RNAS1_HYSCR', hit.id)\n    self.assertEqual('Ribonuclease pancreatic OS=Hystrix cristata GN=RNASE1 PE=1 SV=1', hit.description)\n    self.assertFalse(hit.is_included)\n    self.assertEqual(2.1, hit.evalue)\n    self.assertEqual(13.1, hit.bitscore)\n    self.assertEqual(0.7, hit.bias)\n    self.assertEqual(1.8, hit.domain_exp_num)\n    self.assertEqual(2, hit.domain_obs_num)\n    self.assertEqual(2, len(hit))\n    hsp = hit.hsps[-1]\n    self.assertEqual(2, hsp.domain_index)\n    self.assertFalse(hsp.is_included)\n    self.assertEqual(12.1, hsp.bitscore)\n    self.assertEqual(0.1, hsp.bias)\n    self.assertEqual(4.7e-05, hsp.evalue_cond)\n    self.assertEqual(4.2, hsp.evalue)\n    self.assertEqual(91, hsp.hit_start)\n    self.assertEqual(121, hsp.hit_end)\n    self.assertEqual('..', hsp.hit_endtype)\n    self.assertEqual(7, hsp.query_start)\n    self.assertEqual(37, hsp.query_end)\n    self.assertEqual('..', hsp.query_endtype)\n    self.assertEqual(84, hsp.env_start)\n    self.assertEqual(127, hsp.env_end)\n    self.assertEqual('..', hsp.env_endtype)\n    self.assertEqual(0.84, hsp.acc_avg)\n    self.assertEqual('cpqswygspqlereivckmsgaphypnyyp', hsp.query.seq)\n    self.assertEqual('YPDCSYGMSQLERSIVVACEGSPYVPVHFD', hsp.hit.seq)\n    self.assertEqual('68889******************9887764', hsp.aln_annotation['PP'])"
        ]
    }
]