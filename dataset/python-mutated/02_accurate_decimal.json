[
    {
        "func_name": "acc_deciamal",
        "original": "def acc_deciamal():\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))",
        "mutated": [
            "def acc_deciamal():\n    if False:\n        i = 10\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))",
            "def acc_deciamal():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))",
            "def acc_deciamal():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))",
            "def acc_deciamal():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))",
            "def acc_deciamal():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    a = 4.2\n    b = 2.1\n    print(a + b)\n    print(a + b == 6.3)\n    a = Decimal('4.2')\n    b = Decimal('2.1')\n    print(a + b)\n    print(a + b == Decimal('6.3'))\n    a = Decimal('1.3')\n    b = Decimal('1.7')\n    print(a / b)\n    with localcontext() as ctx:\n        ctx.prec = 3\n        print(a / b)\n    nums = [1.23e+18, 1, -1.23e+18]\n    print(sum(nums))\n    print(math.fsum(nums))"
        ]
    }
]