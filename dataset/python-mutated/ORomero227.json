[
    {
        "func_name": "search_infiltred",
        "original": "def search_infiltred(cadena_1=str, cadena_2=str):\n    \"\"\"Funcion para buscar el caracter infiltrado\"\"\"\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'",
        "mutated": [
            "def search_infiltred(cadena_1=str, cadena_2=str):\n    if False:\n        i = 10\n    'Funcion para buscar el caracter infiltrado'\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'",
            "def search_infiltred(cadena_1=str, cadena_2=str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Funcion para buscar el caracter infiltrado'\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'",
            "def search_infiltred(cadena_1=str, cadena_2=str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Funcion para buscar el caracter infiltrado'\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'",
            "def search_infiltred(cadena_1=str, cadena_2=str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Funcion para buscar el caracter infiltrado'\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'",
            "def search_infiltred(cadena_1=str, cadena_2=str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Funcion para buscar el caracter infiltrado'\n    original = list(cadena_1)\n    verificar = list(cadena_2)\n    infiltrados = list()\n    if len(original) == len(verificar):\n        for i in range(1, len(original)):\n            if original[i] != verificar[i]:\n                infiltrados += verificar[i]\n        return infiltrados\n    else:\n        return 'La longitud entre ambas no es la misma!'"
        ]
    }
]