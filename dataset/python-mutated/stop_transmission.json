[
    {
        "func_name": "stop_transmission",
        "original": "def stop_transmission(self):\n    \"\"\"Stop downloading or uploading a file.\n\n        This method must be called inside a progress callback function in order to stop the transmission at the\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\n\n        Example:\n            .. code-block:: python\n\n                # Stop transmission once the upload progress reaches 50%\n                async def progress(current, total, client):\n                    if (current * 100 / total) > 50:\n                        client.stop_transmission()\n\n                async with app:\n                    await app.send_document(\n                        \"me\", \"file.zip\",\n                        progress=progress,\n                        progress_args=(app,))\n        \"\"\"\n    raise pyrogram.StopTransmission",
        "mutated": [
            "def stop_transmission(self):\n    if False:\n        i = 10\n    'Stop downloading or uploading a file.\\n\\n        This method must be called inside a progress callback function in order to stop the transmission at the\\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\\n\\n        Example:\\n            .. code-block:: python\\n\\n                # Stop transmission once the upload progress reaches 50%\\n                async def progress(current, total, client):\\n                    if (current * 100 / total) > 50:\\n                        client.stop_transmission()\\n\\n                async with app:\\n                    await app.send_document(\\n                        \"me\", \"file.zip\",\\n                        progress=progress,\\n                        progress_args=(app,))\\n        '\n    raise pyrogram.StopTransmission",
            "def stop_transmission(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Stop downloading or uploading a file.\\n\\n        This method must be called inside a progress callback function in order to stop the transmission at the\\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\\n\\n        Example:\\n            .. code-block:: python\\n\\n                # Stop transmission once the upload progress reaches 50%\\n                async def progress(current, total, client):\\n                    if (current * 100 / total) > 50:\\n                        client.stop_transmission()\\n\\n                async with app:\\n                    await app.send_document(\\n                        \"me\", \"file.zip\",\\n                        progress=progress,\\n                        progress_args=(app,))\\n        '\n    raise pyrogram.StopTransmission",
            "def stop_transmission(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Stop downloading or uploading a file.\\n\\n        This method must be called inside a progress callback function in order to stop the transmission at the\\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\\n\\n        Example:\\n            .. code-block:: python\\n\\n                # Stop transmission once the upload progress reaches 50%\\n                async def progress(current, total, client):\\n                    if (current * 100 / total) > 50:\\n                        client.stop_transmission()\\n\\n                async with app:\\n                    await app.send_document(\\n                        \"me\", \"file.zip\",\\n                        progress=progress,\\n                        progress_args=(app,))\\n        '\n    raise pyrogram.StopTransmission",
            "def stop_transmission(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Stop downloading or uploading a file.\\n\\n        This method must be called inside a progress callback function in order to stop the transmission at the\\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\\n\\n        Example:\\n            .. code-block:: python\\n\\n                # Stop transmission once the upload progress reaches 50%\\n                async def progress(current, total, client):\\n                    if (current * 100 / total) > 50:\\n                        client.stop_transmission()\\n\\n                async with app:\\n                    await app.send_document(\\n                        \"me\", \"file.zip\",\\n                        progress=progress,\\n                        progress_args=(app,))\\n        '\n    raise pyrogram.StopTransmission",
            "def stop_transmission(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Stop downloading or uploading a file.\\n\\n        This method must be called inside a progress callback function in order to stop the transmission at the\\n        desired time. The progress callback is called every time a file chunk is uploaded/downloaded.\\n\\n        Example:\\n            .. code-block:: python\\n\\n                # Stop transmission once the upload progress reaches 50%\\n                async def progress(current, total, client):\\n                    if (current * 100 / total) > 50:\\n                        client.stop_transmission()\\n\\n                async with app:\\n                    await app.send_document(\\n                        \"me\", \"file.zip\",\\n                        progress=progress,\\n                        progress_args=(app,))\\n        '\n    raise pyrogram.StopTransmission"
        ]
    }
]