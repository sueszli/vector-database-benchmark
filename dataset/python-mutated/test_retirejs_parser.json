[
    {
        "func_name": "test_parse",
        "original": "def test_parse(self):\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)",
        "mutated": [
            "def test_parse(self):\n    if False:\n        i = 10\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)",
            "def test_parse(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)",
            "def test_parse(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)",
            "def test_parse(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)",
            "def test_parse(self):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    testfile = open('unittests/scans/retirejs/latest.json')\n    parser = RetireJsParser()\n    findings = parser.get_findings(testfile, Test())\n    self.assertIsInstance(findings, list)\n    self.assertEqual(23, len(findings))\n    with self.subTest(i=0):\n        finding = findings[0]\n        self.assertEqual('Quoteless attributes in templates can lead to XSS (handlebars, 3.0.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('handlebars', finding.component_name)\n        self.assertEqual('3.0.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-handlebars/handlebars-v3.0.0.js', finding.file_path)\n    with self.subTest(i=10):\n        finding = findings[10]\n        self.assertEqual('XSS in data-container property of tooltip (bootstrap, 3.0.3)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('bootstrap', finding.component_name)\n        self.assertEqual('3.0.3', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/report/scout2-report/inc-bootstrap/js/bootstrap.min.js', finding.file_path)\n    with self.subTest(i=22):\n        finding = findings[22]\n        self.assertEqual('Regex in its jQuery.htmlPrefilter sometimes may introduce XSS (jquery, 1.8.0)', finding.title)\n        self.assertEqual('Medium', finding.severity)\n        self.assertEqual('jquery', finding.component_name)\n        self.assertEqual('1.8.0', finding.component_version)\n        self.assertEqual('/home/damien/dd/.venv/lib/python3.9/site-packages/tastypie_swagger/static/tastypie_swagger/js/lib/jquery-1.8.0.min.js', finding.file_path)"
        ]
    }
]