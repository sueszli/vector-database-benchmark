from google.cloud import talent
from google.cloud.talent import enums

def create_client_event(project_id, tenant_id, request_id, event_id):
    if False:
        return 10
    '\n    Creates a client event\n\n    Args:\n      project_id Your Google Cloud Project ID\n      tenant_id Identifier of the Tenant\n      request_id A unique ID generated in the API responses.\n      Value should be set to the request_id from an API response.\n      event_id A unique identifier, generated by the client application\n    '
    client = talent.EventServiceClient()
    if isinstance(project_id, bytes):
        project_id = project_id.decode('utf-8')
    if isinstance(tenant_id, bytes):
        tenant_id = tenant_id.decode('utf-8')
    if isinstance(request_id, bytes):
        request_id = request_id.decode('utf-8')
    if isinstance(event_id, bytes):
        event_id = event_id.decode('utf-8')
    parent = f'projects/{project_id}/tenants/{tenant_id}'
    seconds = 0
    create_time = {'seconds': seconds}
    type_ = enums.JobEvent.JobEventType.VIEW
    jobs_element = 'projects/[Project ID]/tenants/[Tenant ID]/jobs/[Job ID]'
    jobs_element_2 = 'projects/[Project ID]/tenants/[Tenant ID]/jobs/[Job ID]'
    jobs = [jobs_element, jobs_element_2]
    job_event = {'type': type_, 'jobs': jobs}
    client_event = {'request_id': request_id, 'event_id': event_id, 'create_time': create_time, 'job_event': job_event}
    response = client.create_client_event(parent=parent, client_event=client_event)
    print(response)