from __future__ import annotations
DOCUMENTATION = "\n---\nmodule: randommodule\nshort_description: A random module\ndescription:\n    - A random module.\n    - See O(foo.bar.baz#role:main:foo=bar) for how this is used in the P(foo.bar.baz#role)'s C(main) entrypoint.\n    - See L(the docsite,https://docs.ansible.com/ansible-core/devel/) for more information on ansible-core.\n    - This module is not related to the M(ansible.builtin.copy) module. HORIZONTALLINE You might also be interested\n      in R(ansible_python_interpreter, ansible_python_interpreter).\n    - Sometimes you have M(broken markup) that will result in error messages.\nauthor:\n    - Ansible Core Team\nversion_added: 1.0.0\ndeprecated:\n    alternative: Use some other module\n    why: Test deprecation\n    removed_in: '3.0.0'\noptions:\n    test:\n        description: Some text. Consider not using O(ignore:foo=bar).\n        type: str\n        version_added: 1.2.0\n    sub:\n        description: Suboptions. Contains O(sub.subtest), which can be set to V(123). You can use E(TEST_ENV) to set this.\n        type: dict\n        suboptions:\n            subtest:\n                description: A suboption. Not compatible to O(ansible.builtin.copy#module:path=c:\\\\foo\\(1\\).txt).\n                type: int\n                version_added: 1.1.0\n        # The following is the wrong syntax, and should not get processed\n        # by add_collection_to_versions_and_dates()\n        options:\n            subtest2:\n                description: Another suboption. Useful when P(ansible.builtin.shuffle#filter) is used with value V([a,b,\\),d\\\\]).\n                type: float\n                version_added: 1.1.0\n        # The following is not supported in modules, and should not get processed\n        # by add_collection_to_versions_and_dates()\n        env:\n            - name: TEST_ENV\n              version_added: 1.0.0\n              deprecated:\n                alternative: none\n                why: Test deprecation\n                removed_in: '2.0.0'\n                version: '2.0.0'\nextends_documentation_fragment:\n    - testns.testcol2.module\nseealso:\n    - module: ansible.builtin.ping\n    - module: ansible.builtin.uri\n      description: Use this to fetch an URI\n    - module: testns.testcol.test\n    - module: testns.testcol.fakemodule\n      description: A fake module\n    - link: https://docs.ansible.com\n      name: Ansible docsite\n      description: See also the Ansible docsite.\n    - ref: foo_bar\n      description: Some foo bar.\n"
EXAMPLES = '\n'
RETURN = '\nz_last:\n    description: A last result.\n    type: str\n    returned: success\n    version_added: 1.3.0\n\nm_middle:\n    description:\n        - This should be in the middle.\n        - Has some more data.\n        - Check out RV(m_middle.suboption) and compare it to RV(a_first=foo) and RV(community.general.foo#lookup:value).\n    type: dict\n    returned: success and 1st of month\n    contains:\n        suboption:\n            description: A suboption.\n            type: str\n            choices: [ARF, BARN, c_without_capital_first_letter]\n            version_added: 1.4.0\n\na_first:\n    description: A first result. Use RV(a_first=foo\\(bar\\\\baz\\)bam).\n    type: str\n    returned: success\n'
from ansible.module_utils.basic import AnsibleModule

def main():
    if False:
        for i in range(10):
            print('nop')
    module = AnsibleModule(argument_spec=dict())
    module.exit_json()
if __name__ == '__main__':
    main()