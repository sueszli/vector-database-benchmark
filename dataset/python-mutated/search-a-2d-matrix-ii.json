[
    {
        "func_name": "searchMatrix",
        "original": "def searchMatrix(self, matrix, target):\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False",
        "mutated": [
            "def searchMatrix(self, matrix, target):\n    if False:\n        i = 10\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False",
            "def searchMatrix(self, matrix, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False",
            "def searchMatrix(self, matrix, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False",
            "def searchMatrix(self, matrix, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False",
            "def searchMatrix(self, matrix, target):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    m = len(matrix)\n    if m == 0:\n        return False\n    n = len(matrix[0])\n    if n == 0:\n        return False\n    (i, j) = (0, n - 1)\n    while i < m and j >= 0:\n        if matrix[i][j] == target:\n            return True\n        elif matrix[i][j] > target:\n            j -= 1\n        else:\n            i += 1\n    return False"
        ]
    }
]