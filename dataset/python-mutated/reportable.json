[
    {
        "func_name": "report",
        "original": "def report(self, reason: str):\n    \"\"\"Report this object to the moderators of its subreddit.\n\n        :param reason: The reason for reporting.\n\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\n            characters.\n\n        Example usage:\n\n        .. code-block:: python\n\n            submission = reddit.submission(\"5or86n\")\n            submission.report(\"report reason\")\n\n            comment = reddit.comment(\"dxolpyc\")\n            comment.report(\"report reason\")\n\n        \"\"\"\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})",
        "mutated": [
            "def report(self, reason: str):\n    if False:\n        i = 10\n    'Report this object to the moderators of its subreddit.\\n\\n        :param reason: The reason for reporting.\\n\\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\\n            characters.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.report(\"report reason\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.report(\"report reason\")\\n\\n        '\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})",
            "def report(self, reason: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Report this object to the moderators of its subreddit.\\n\\n        :param reason: The reason for reporting.\\n\\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\\n            characters.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.report(\"report reason\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.report(\"report reason\")\\n\\n        '\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})",
            "def report(self, reason: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Report this object to the moderators of its subreddit.\\n\\n        :param reason: The reason for reporting.\\n\\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\\n            characters.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.report(\"report reason\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.report(\"report reason\")\\n\\n        '\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})",
            "def report(self, reason: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Report this object to the moderators of its subreddit.\\n\\n        :param reason: The reason for reporting.\\n\\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\\n            characters.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.report(\"report reason\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.report(\"report reason\")\\n\\n        '\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})",
            "def report(self, reason: str):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Report this object to the moderators of its subreddit.\\n\\n        :param reason: The reason for reporting.\\n\\n        :raises: :class:`.RedditAPIException` if ``reason`` is longer than 100\\n            characters.\\n\\n        Example usage:\\n\\n        .. code-block:: python\\n\\n            submission = reddit.submission(\"5or86n\")\\n            submission.report(\"report reason\")\\n\\n            comment = reddit.comment(\"dxolpyc\")\\n            comment.report(\"report reason\")\\n\\n        '\n    self._reddit.post(API_PATH['report'], data={'id': self.fullname, 'reason': reason})"
        ]
    }
]