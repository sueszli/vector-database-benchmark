[
    {
        "func_name": "random_str",
        "original": "def random_str():\n    \"\"\"\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str\"\"\"\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r",
        "mutated": [
            "def random_str():\n    if False:\n        i = 10\n    '\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str'\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r",
            "def random_str():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str'\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r",
            "def random_str():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str'\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r",
            "def random_str():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str'\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r",
            "def random_str():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\u5f97\u5230\u968f\u673a\u5b57\u7b26\u4e32nonce_str'\n    str = 'abcdefghijklmnopqrstuvwxyz'\n    r = ''\n    for i in range(15):\n        index = random.randint(0, 25)\n        r += str[index]\n    return r"
        ]
    },
    {
        "func_name": "image",
        "original": "def image(name):\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)",
        "mutated": [
            "def image(name):\n    if False:\n        i = 10\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)",
            "def image(name):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)",
            "def image(name):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)",
            "def image(name):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)",
            "def image(name):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    with open(name, 'rb') as f:\n        content = f.read()\n    return base64.b64encode(content)"
        ]
    },
    {
        "func_name": "get_params",
        "original": "def get_params(img):\n    \"\"\"\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178\"\"\"\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params",
        "mutated": [
            "def get_params(img):\n    if False:\n        i = 10\n    '\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178'\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params",
            "def get_params(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178'\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params",
            "def get_params(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178'\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params",
            "def get_params(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178'\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params",
            "def get_params(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\u7ec4\u7ec7\u63a5\u53e3\u8bf7\u6c42\u7684\u53c2\u6570\u5f62\u5f0f\uff0c\u5e76\u4e14\u8ba1\u7b97sign\u63a5\u53e3\u9274\u6743\u4fe1\u606f\uff0c\\n    \u6700\u7ec8\u8fd4\u56de\u63a5\u53e3\u8bf7\u6c42\u6240\u9700\u8981\u7684\u53c2\u6570\u5b57\u5178'\n    params = {'app_id': '1106860829', 'time_stamp': str(int(time.time())), 'nonce_str': random_str(), 'image': img, 'mode': '0'}\n    sort_dict = sorted(params.items(), key=lambda item: item[0], reverse=False)\n    sort_dict.append(('app_key', 'P8Gt8nxi6k8vLKbS'))\n    rawtext = urlencode(sort_dict).encode()\n    sha = hashlib.md5()\n    sha.update(rawtext)\n    md5text = sha.hexdigest().upper()\n    params['sign'] = md5text\n    return params"
        ]
    },
    {
        "func_name": "access_api",
        "original": "def access_api(img):\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'",
        "mutated": [
            "def access_api(img):\n    if False:\n        i = 10\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'",
            "def access_api(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'",
            "def access_api(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'",
            "def access_api(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'",
            "def access_api(img):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    frame = cv2.imread(img)\n    nparry_encode = cv2.imencode('.jpg', frame)[1]\n    data_encode = np.array(nparry_encode)\n    img_encode = base64.b64encode(data_encode)\n    url = 'https://api.ai.qq.com/fcgi-bin/face/face_detectface'\n    res = requests.post(url, get_params(img_encode)).json()\n    if res['ret'] == 0:\n        pil_img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))\n        draw = ImageDraw.Draw(pil_img)\n        for obj in res['data']['face_list']:\n            img_width = res['data']['image_width']\n            img_height = res['data']['image_height']\n            x = obj['x']\n            y = obj['y']\n            w = obj['width']\n            h = obj['height']\n            if obj['glass'] == 1:\n                glass = '\u6709'\n            else:\n                glass = '\u65e0'\n            if obj['gender'] >= 70:\n                gender = '\u7537'\n            elif 50 <= obj['gender'] < 70:\n                gender = '\u5a18'\n            elif obj['gender'] < 30:\n                gender = '\u5973'\n            else:\n                gender = '\u5973\u6c49\u5b50'\n            if 90 < obj['expression'] <= 100:\n                expression = '\u4e00\u7b11\u503e\u57ce'\n            elif 80 < obj['expression'] <= 90:\n                expression = '\u5fc3\u82b1\u6012\u653e'\n            elif 70 < obj['expression'] <= 80:\n                expression = '\u5174\u9ad8\u91c7\u70c8'\n            elif 60 < obj['expression'] <= 70:\n                expression = '\u7709\u5f00\u773c\u7b11'\n            elif 50 < obj['expression'] <= 60:\n                expression = '\u559c\u4e0a\u7709\u68a2'\n            elif 40 < obj['expression'] <= 50:\n                expression = '\u559c\u6c14\u6d0b\u6d0b'\n            elif 30 < obj['expression'] <= 40:\n                expression = '\u7b11\u9010\u989c\u5f00'\n            elif 20 < obj['expression'] <= 30:\n                expression = '\u4f3c\u7b11\u975e\u7b11'\n            elif 10 < obj['expression'] <= 20:\n                expression = '\u534a\u55d4\u534a\u559c'\n            elif 0 <= obj['expression'] <= 10:\n                expression = '\u9eef\u7136\u4f24\u795e'\n            delt = h // 5\n            if len(res['data']['face_list']) > 1:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            elif img_width - x - w < 170:\n                font = ImageFont.truetype('yahei.ttf', w // 8, encoding='utf-8')\n                draw.text((x + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            else:\n                font = ImageFont.truetype('yahei.ttf', 20, encoding='utf-8')\n                draw.text((x + w + 10, y + 10), '\u6027\u522b :' + gender, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 1), '\u5e74\u9f84 :' + str(obj['age']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 2), '\u8868\u60c5 :' + expression, (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 3), '\u9b45\u529b :' + str(obj['beauty']), (76, 176, 80), font=font)\n                draw.text((x + w + 10, y + 10 + delt * 4), '\u773c\u955c :' + glass, (76, 176, 80), font=font)\n            draw.rectangle((x, y, x + w, y + h), outline='#4CB050')\n            cv2img = cv2.cvtColor(np.array(pil_img), cv2.COLOR_RGB2BGR)\n            cv2.imwrite('faces/{}'.format(os.path.basename(img)), cv2img)\n        return 'success'\n    else:\n        return 'fail'"
        ]
    }
]