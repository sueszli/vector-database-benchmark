[
    {
        "func_name": "setupUi",
        "original": "def setupUi(self, GeneratorTab):\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)",
        "mutated": [
            "def setupUi(self, GeneratorTab):\n    if False:\n        i = 10\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)",
            "def setupUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)",
            "def setupUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)",
            "def setupUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)",
            "def setupUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    GeneratorTab.setObjectName('GeneratorTab')\n    GeneratorTab.resize(1287, 774)\n    self.verticalLayout_3 = QtWidgets.QVBoxLayout(GeneratorTab)\n    self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_3.setSpacing(0)\n    self.verticalLayout_3.setObjectName('verticalLayout_3')\n    self.scrollArea = QtWidgets.QScrollArea(GeneratorTab)\n    self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)\n    self.scrollArea.setWidgetResizable(True)\n    self.scrollArea.setObjectName('scrollArea')\n    self.scrollAreaWidgetContents = QtWidgets.QWidget()\n    self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1287, 774))\n    self.scrollAreaWidgetContents.setObjectName('scrollAreaWidgetContents')\n    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)\n    self.verticalLayout_2.setObjectName('verticalLayout_2')\n    self.splitter = QtWidgets.QSplitter(self.scrollAreaWidgetContents)\n    self.splitter.setStyleSheet('QSplitter::handle:horizontal {\\nmargin: 4px 0px;\\n    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, \\nstop:0 rgba(255, 255, 255, 0), \\nstop:0.5 rgba(100, 100, 100, 100), \\nstop:1 rgba(255, 255, 255, 0));\\nimage: url(:/icons/icons/splitter_handle_vertical.svg);\\n}')\n    self.splitter.setOrientation(QtCore.Qt.Horizontal)\n    self.splitter.setHandleWidth(6)\n    self.splitter.setObjectName('splitter')\n    self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget_2.setObjectName('layoutWidget_2')\n    self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)\n    self.verticalLayout.setContentsMargins(11, 11, 11, 11)\n    self.verticalLayout.setObjectName('verticalLayout')\n    self.tabWidget = QtWidgets.QTabWidget(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())\n    self.tabWidget.setSizePolicy(sizePolicy)\n    self.tabWidget.setStyleSheet('QTabWidget::pane { border: 0; }')\n    self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)\n    self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)\n    self.tabWidget.setObjectName('tabWidget')\n    self.tab_proto = QtWidgets.QWidget()\n    self.tab_proto.setObjectName('tab_proto')\n    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_proto)\n    self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_4.setObjectName('verticalLayout_4')\n    self.treeProtocols = GeneratorTreeView(self.tab_proto)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.treeProtocols.sizePolicy().hasHeightForWidth())\n    self.treeProtocols.setSizePolicy(sizePolicy)\n    self.treeProtocols.setObjectName('treeProtocols')\n    self.treeProtocols.header().setDefaultSectionSize(57)\n    self.verticalLayout_4.addWidget(self.treeProtocols)\n    self.tabWidget.addTab(self.tab_proto, '')\n    self.tab_pauses = QtWidgets.QWidget()\n    self.tab_pauses.setObjectName('tab_pauses')\n    self.gridLayout_5 = QtWidgets.QGridLayout(self.tab_pauses)\n    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)\n    self.gridLayout_5.setObjectName('gridLayout_5')\n    self.lWPauses = GeneratorListWidget(self.tab_pauses)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lWPauses.sizePolicy().hasHeightForWidth())\n    self.lWPauses.setSizePolicy(sizePolicy)\n    self.lWPauses.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked | QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.lWPauses.setProperty('showDropIndicator', False)\n    self.lWPauses.setDragDropMode(QtWidgets.QAbstractItemView.NoDragDrop)\n    self.lWPauses.setObjectName('lWPauses')\n    self.gridLayout_5.addWidget(self.lWPauses, 0, 0, 1, 2)\n    self.tabWidget.addTab(self.tab_pauses, '')\n    self.tab_fuzzing = QtWidgets.QWidget()\n    self.tab_fuzzing.setObjectName('tab_fuzzing')\n    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fuzzing)\n    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)\n    self.verticalLayout_9.setSpacing(6)\n    self.verticalLayout_9.setObjectName('verticalLayout_9')\n    self.listViewProtoLabels = GeneratorListView(self.tab_fuzzing)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.listViewProtoLabels.sizePolicy().hasHeightForWidth())\n    self.listViewProtoLabels.setSizePolicy(sizePolicy)\n    self.listViewProtoLabels.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)\n    self.listViewProtoLabels.setObjectName('listViewProtoLabels')\n    self.verticalLayout_9.addWidget(self.listViewProtoLabels)\n    self.groupBox = QtWidgets.QGroupBox(self.tab_fuzzing)\n    self.groupBox.setObjectName('groupBox')\n    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)\n    self.horizontalLayout_6.setObjectName('horizontalLayout_6')\n    self.stackedWidgetFuzzing = QtWidgets.QStackedWidget(self.groupBox)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.stackedWidgetFuzzing.sizePolicy().hasHeightForWidth())\n    self.stackedWidgetFuzzing.setSizePolicy(sizePolicy)\n    self.stackedWidgetFuzzing.setObjectName('stackedWidgetFuzzing')\n    self.pageFuzzingUI = QtWidgets.QWidget()\n    self.pageFuzzingUI.setObjectName('pageFuzzingUI')\n    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.pageFuzzingUI)\n    self.horizontalLayout_4.setObjectName('horizontalLayout_4')\n    self.btnFuzz = QtWidgets.QPushButton(self.pageFuzzingUI)\n    self.btnFuzz.setObjectName('btnFuzz')\n    self.horizontalLayout_4.addWidget(self.btnFuzz)\n    self.rBSuccessive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBSuccessive.setChecked(True)\n    self.rBSuccessive.setObjectName('rBSuccessive')\n    self.horizontalLayout_4.addWidget(self.rBSuccessive)\n    self.rbConcurrent = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rbConcurrent.setObjectName('rbConcurrent')\n    self.horizontalLayout_4.addWidget(self.rbConcurrent)\n    self.rBExhaustive = QtWidgets.QRadioButton(self.pageFuzzingUI)\n    self.rBExhaustive.setObjectName('rBExhaustive')\n    self.horizontalLayout_4.addWidget(self.rBExhaustive)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingUI)\n    self.pageFuzzingProgressBar = QtWidgets.QWidget()\n    self.pageFuzzingProgressBar.setObjectName('pageFuzzingProgressBar')\n    self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.pageFuzzingProgressBar)\n    self.horizontalLayout_7.setObjectName('horizontalLayout_7')\n    self.progressBarFuzzing = QtWidgets.QProgressBar(self.pageFuzzingProgressBar)\n    self.progressBarFuzzing.setProperty('value', 24)\n    self.progressBarFuzzing.setObjectName('progressBarFuzzing')\n    self.horizontalLayout_7.addWidget(self.progressBarFuzzing)\n    self.stackedWidgetFuzzing.addWidget(self.pageFuzzingProgressBar)\n    self.horizontalLayout_6.addWidget(self.stackedWidgetFuzzing)\n    self.verticalLayout_9.addWidget(self.groupBox)\n    self.tabWidget.addTab(self.tab_fuzzing, '')\n    self.verticalLayout.addWidget(self.tabWidget)\n    self.line_2 = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line_2.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line_2.setObjectName('line_2')\n    self.verticalLayout.addWidget(self.line_2)\n    self.gridLayout_6 = QtWidgets.QGridLayout()\n    self.gridLayout_6.setContentsMargins(0, -1, 0, -1)\n    self.gridLayout_6.setObjectName('gridLayout_6')\n    self.modulationLayout_2 = QtWidgets.QGridLayout()\n    self.modulationLayout_2.setObjectName('modulationLayout_2')\n    self.lCarrierFreqValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFreqValue.setObjectName('lCarrierFreqValue')\n    self.modulationLayout_2.addWidget(self.lCarrierFreqValue, 1, 1, 1, 1)\n    self.lModType = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModType.setObjectName('lModType')\n    self.modulationLayout_2.addWidget(self.lModType, 1, 2, 1, 1)\n    self.lModTypeValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModTypeValue.setObjectName('lModTypeValue')\n    self.modulationLayout_2.addWidget(self.lModTypeValue, 1, 3, 1, 1)\n    self.label_carrier_phase = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label_carrier_phase.setObjectName('label_carrier_phase')\n    self.modulationLayout_2.addWidget(self.label_carrier_phase, 2, 0, 1, 1)\n    self.lCarrierPhaseValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierPhaseValue.setObjectName('lCarrierPhaseValue')\n    self.modulationLayout_2.addWidget(self.lCarrierPhaseValue, 2, 1, 1, 1)\n    self.lBitLength = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLength.setObjectName('lBitLength')\n    self.modulationLayout_2.addWidget(self.lBitLength, 3, 0, 1, 1)\n    self.lBitLenValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lBitLenValue.setObjectName('lBitLenValue')\n    self.modulationLayout_2.addWidget(self.lBitLenValue, 3, 1, 1, 1)\n    self.lEncoding = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lEncoding.setObjectName('lEncoding')\n    self.modulationLayout_2.addWidget(self.lEncoding, 0, 0, 1, 1)\n    self.lEncodingValue = QtWidgets.QLabel(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lEncodingValue.sizePolicy().hasHeightForWidth())\n    self.lEncodingValue.setSizePolicy(sizePolicy)\n    self.lEncodingValue.setObjectName('lEncodingValue')\n    self.modulationLayout_2.addWidget(self.lEncodingValue, 0, 1, 1, 1)\n    self.lSampleRate = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRate.setObjectName('lSampleRate')\n    self.modulationLayout_2.addWidget(self.lSampleRate, 0, 2, 1, 1)\n    self.lSampleRateValue = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lSampleRateValue.setObjectName('lSampleRateValue')\n    self.modulationLayout_2.addWidget(self.lSampleRateValue, 0, 3, 1, 1)\n    self.lCarrierFrequency = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lCarrierFrequency.setObjectName('lCarrierFrequency')\n    self.modulationLayout_2.addWidget(self.lCarrierFrequency, 1, 0, 1, 1)\n    self.labelParameterValues = ElidedLabel(self.layoutWidget_2)\n    self.labelParameterValues.setObjectName('labelParameterValues')\n    self.modulationLayout_2.addWidget(self.labelParameterValues, 3, 3, 1, 1)\n    self.lParamCaption = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lParamCaption.setObjectName('lParamCaption')\n    self.modulationLayout_2.addWidget(self.lParamCaption, 3, 2, 1, 1)\n    self.label = QtWidgets.QLabel(self.layoutWidget_2)\n    self.label.setObjectName('label')\n    self.modulationLayout_2.addWidget(self.label, 2, 2, 1, 1)\n    self.labelBitsPerSymbol = QtWidgets.QLabel(self.layoutWidget_2)\n    self.labelBitsPerSymbol.setObjectName('labelBitsPerSymbol')\n    self.modulationLayout_2.addWidget(self.labelBitsPerSymbol, 2, 3, 1, 1)\n    self.gridLayout_6.addLayout(self.modulationLayout_2, 0, 0, 1, 3)\n    self.line = QtWidgets.QFrame(self.layoutWidget_2)\n    self.line.setFrameShape(QtWidgets.QFrame.HLine)\n    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)\n    self.line.setObjectName('line')\n    self.gridLayout_6.addWidget(self.line, 1, 0, 1, 3)\n    self.cBoxModulations = QtWidgets.QComboBox(self.layoutWidget_2)\n    self.cBoxModulations.setObjectName('cBoxModulations')\n    self.cBoxModulations.addItem('')\n    self.gridLayout_6.addWidget(self.cBoxModulations, 2, 1, 1, 1)\n    self.prBarGeneration = QtWidgets.QProgressBar(self.layoutWidget_2)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.prBarGeneration.sizePolicy().hasHeightForWidth())\n    self.prBarGeneration.setSizePolicy(sizePolicy)\n    self.prBarGeneration.setProperty('value', 0)\n    self.prBarGeneration.setObjectName('prBarGeneration')\n    self.gridLayout_6.addWidget(self.prBarGeneration, 5, 0, 1, 1)\n    self.btnSend = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnSend.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('media-playback-start')\n    self.btnSend.setIcon(icon)\n    self.btnSend.setObjectName('btnSend')\n    self.gridLayout_6.addWidget(self.btnSend, 5, 2, 1, 1)\n    self.btnEditModulation = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnEditModulation.setObjectName('btnEditModulation')\n    self.gridLayout_6.addWidget(self.btnEditModulation, 2, 2, 1, 1)\n    self.lModulation = QtWidgets.QLabel(self.layoutWidget_2)\n    self.lModulation.setObjectName('lModulation')\n    self.gridLayout_6.addWidget(self.lModulation, 2, 0, 1, 1)\n    self.btnGenerate = QtWidgets.QPushButton(self.layoutWidget_2)\n    self.btnGenerate.setEnabled(False)\n    icon = QtGui.QIcon.fromTheme('document-new')\n    self.btnGenerate.setIcon(icon)\n    self.btnGenerate.setObjectName('btnGenerate')\n    self.gridLayout_6.addWidget(self.btnGenerate, 5, 1, 1, 1)\n    self.verticalLayout.addLayout(self.gridLayout_6)\n    self.layoutWidget = QtWidgets.QWidget(self.splitter)\n    self.layoutWidget.setObjectName('layoutWidget')\n    self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)\n    self.gridLayout_2.setContentsMargins(11, 11, 11, 11)\n    self.gridLayout_2.setObjectName('gridLayout_2')\n    self.tableMessages = GeneratorTableView(self.layoutWidget)\n    self.tableMessages.setAcceptDrops(True)\n    self.tableMessages.setFrameShape(QtWidgets.QFrame.StyledPanel)\n    self.tableMessages.setDragEnabled(False)\n    self.tableMessages.setDragDropOverwriteMode(False)\n    self.tableMessages.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)\n    self.tableMessages.setDefaultDropAction(QtCore.Qt.CopyAction)\n    self.tableMessages.setAlternatingRowColors(True)\n    self.tableMessages.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)\n    self.tableMessages.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)\n    self.tableMessages.setShowGrid(False)\n    self.tableMessages.setObjectName('tableMessages')\n    self.tableMessages.horizontalHeader().setHighlightSections(False)\n    self.tableMessages.verticalHeader().setHighlightSections(False)\n    self.gridLayout_2.addWidget(self.tableMessages, 1, 0, 1, 8)\n    self.btnNetworkSDRSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wired')\n    self.btnNetworkSDRSend.setIcon(icon)\n    self.btnNetworkSDRSend.setCheckable(True)\n    self.btnNetworkSDRSend.setObjectName('btnNetworkSDRSend')\n    self.gridLayout_2.addWidget(self.btnNetworkSDRSend, 2, 0, 1, 1)\n    spacerItem = QtWidgets.QSpacerItem(38, 22, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)\n    self.gridLayout_2.addItem(spacerItem, 2, 4, 1, 2)\n    self.cbViewType = QtWidgets.QComboBox(self.layoutWidget)\n    self.cbViewType.setObjectName('cbViewType')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.cbViewType.addItem('')\n    self.gridLayout_2.addWidget(self.cbViewType, 2, 7, 1, 1)\n    self.lViewType = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.lViewType.sizePolicy().hasHeightForWidth())\n    self.lViewType.setSizePolicy(sizePolicy)\n    self.lViewType.setObjectName('lViewType')\n    self.gridLayout_2.addWidget(self.lViewType, 2, 6, 1, 1)\n    self.btnRfCatSend = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('network-wireless')\n    self.btnRfCatSend.setIcon(icon)\n    self.btnRfCatSend.setObjectName('btnRfCatSend')\n    self.gridLayout_2.addWidget(self.btnRfCatSend, 2, 1, 1, 1)\n    self.horizontalLayout = QtWidgets.QHBoxLayout()\n    self.horizontalLayout.setContentsMargins(-1, 0, -1, 0)\n    self.horizontalLayout.setObjectName('horizontalLayout')\n    self.labelGeneratedData = QtWidgets.QLabel(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.labelGeneratedData.sizePolicy().hasHeightForWidth())\n    self.labelGeneratedData.setSizePolicy(sizePolicy)\n    font = QtGui.QFont()\n    font.setBold(True)\n    font.setWeight(75)\n    self.labelGeneratedData.setFont(font)\n    self.labelGeneratedData.setAlignment(QtCore.Qt.AlignCenter)\n    self.labelGeneratedData.setObjectName('labelGeneratedData')\n    self.horizontalLayout.addWidget(self.labelGeneratedData)\n    self.btnSave = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnSave.sizePolicy().hasHeightForWidth())\n    self.btnSave.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-save')\n    self.btnSave.setIcon(icon)\n    self.btnSave.setObjectName('btnSave')\n    self.horizontalLayout.addWidget(self.btnSave)\n    self.btnOpen = QtWidgets.QToolButton(self.layoutWidget)\n    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)\n    sizePolicy.setHorizontalStretch(0)\n    sizePolicy.setVerticalStretch(0)\n    sizePolicy.setHeightForWidth(self.btnOpen.sizePolicy().hasHeightForWidth())\n    self.btnOpen.setSizePolicy(sizePolicy)\n    icon = QtGui.QIcon.fromTheme('document-open')\n    self.btnOpen.setIcon(icon)\n    self.btnOpen.setObjectName('btnOpen')\n    self.horizontalLayout.addWidget(self.btnOpen)\n    self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 8)\n    self.lEstimatedTime = QtWidgets.QLabel(self.layoutWidget)\n    self.lEstimatedTime.setObjectName('lEstimatedTime')\n    self.gridLayout_2.addWidget(self.lEstimatedTime, 2, 3, 1, 1)\n    self.btnFZSave = QtWidgets.QPushButton(self.layoutWidget)\n    icon = QtGui.QIcon.fromTheme('document-save-as')\n    self.btnFZSave.setIcon(icon)\n    self.btnFZSave.setObjectName('btnFZSave')\n    self.gridLayout_2.addWidget(self.btnFZSave, 2, 2, 1, 1)\n    self.verticalLayout_2.addWidget(self.splitter)\n    self.scrollArea.setWidget(self.scrollAreaWidgetContents)\n    self.verticalLayout_3.addWidget(self.scrollArea)\n    self.retranslateUi(GeneratorTab)\n    self.tabWidget.setCurrentIndex(0)\n    self.stackedWidgetFuzzing.setCurrentIndex(0)"
        ]
    },
    {
        "func_name": "retranslateUi",
        "original": "def retranslateUi(self, GeneratorTab):\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))",
        "mutated": [
            "def retranslateUi(self, GeneratorTab):\n    if False:\n        i = 10\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))",
            "def retranslateUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))",
            "def retranslateUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))",
            "def retranslateUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))",
            "def retranslateUi(self, GeneratorTab):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    _translate = QtCore.QCoreApplication.translate\n    GeneratorTab.setWindowTitle(_translate('GeneratorTab', 'Form'))\n    self.treeProtocols.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>Drag&amp;Drop Protocols to the table on the right to fill the generation table.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_proto), _translate('GeneratorTab', 'Protocols'))\n    self.lWPauses.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The pauses will be added automatically when you drag a protocol from the tree above to the table on the right.<br/></p><p>You can see the <span style=\" font-weight:600;\">position</span> of each pause by <span style=\" font-weight:600;\">selecting it</span>. There will be drawn a line in the table indicating the position of the pause.<br/></p><p>Use context menu or double click to <span style=\" font-weight:600;\">edit a pauses\\' length</span>.</p></body></html>'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_pauses), _translate('GeneratorTab', 'Pauses'))\n    self.groupBox.setTitle(_translate('GeneratorTab', 'Add fuzzing values to generated data'))\n    self.btnFuzz.setText(_translate('GeneratorTab', 'Fuzz'))\n    self.rBSuccessive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted <span style=\" font-weight:600;\">one-by-one</span>.</p></body></html>'))\n    self.rBSuccessive.setText(_translate('GeneratorTab', 'S&uccessive'))\n    self.rbConcurrent.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the labels are fuzzed <span style=\" font-weight:600;\">at the same time</span>.</p></body></html>'))\n    self.rbConcurrent.setText(_translate('GeneratorTab', '&Concurrent'))\n    self.rBExhaustive.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>For multiple labels per message the fuzzed values are inserted in <span style=\" font-weight:600;\">all possible combinations</span>.</p></body></html>'))\n    self.rBExhaustive.setText(_translate('GeneratorTab', 'E&xhaustive'))\n    self.progressBarFuzzing.setFormat(_translate('GeneratorTab', '%v/%m'))\n    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fuzzing), _translate('GeneratorTab', 'Fuzzing'))\n    self.lCarrierFreqValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lModType.setText(_translate('GeneratorTab', 'Modulation Type:'))\n    self.lModTypeValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.label_carrier_phase.setText(_translate('GeneratorTab', 'Carrier Phase:'))\n    self.lCarrierPhaseValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lBitLength.setText(_translate('GeneratorTab', 'Symbol Length:'))\n    self.lBitLenValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lEncoding.setText(_translate('GeneratorTab', 'Encoding:'))\n    self.lEncodingValue.setText(_translate('GeneratorTab', '-'))\n    self.lSampleRate.setText(_translate('GeneratorTab', 'Sample Rate:'))\n    self.lSampleRateValue.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.lCarrierFrequency.setText(_translate('GeneratorTab', 'Carrier Frequency:'))\n    self.labelParameterValues.setText(_translate('GeneratorTab', '0/100'))\n    self.lParamCaption.setText(_translate('GeneratorTab', 'Amplitudes:'))\n    self.label.setText(_translate('GeneratorTab', 'Bits per Symbol:'))\n    self.labelBitsPerSymbol.setText(_translate('GeneratorTab', 'TextLabel'))\n    self.cBoxModulations.setItemText(0, _translate('GeneratorTab', 'MyModulation'))\n    self.prBarGeneration.setFormat(_translate('GeneratorTab', 'Modulating %p%'))\n    self.btnSend.setText(_translate('GeneratorTab', 'Send data...'))\n    self.btnEditModulation.setText(_translate('GeneratorTab', 'Edit ...'))\n    self.lModulation.setText(_translate('GeneratorTab', 'Modulation:'))\n    self.btnGenerate.setToolTip(_translate('GeneratorTab', 'Generate the complex file of the modulated signal, after tuning all parameters above.'))\n    self.btnGenerate.setText(_translate('GeneratorTab', 'Generate file...'))\n    self.btnNetworkSDRSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data to your external application via TCP.</span></p></body></html>'))\n    self.btnNetworkSDRSend.setText(_translate('GeneratorTab', 'Send via Network'))\n    self.cbViewType.setItemText(0, _translate('GeneratorTab', 'Bit'))\n    self.cbViewType.setItemText(1, _translate('GeneratorTab', 'Hex'))\n    self.cbViewType.setItemText(2, _translate('GeneratorTab', 'ASCII'))\n    self.lViewType.setText(_translate('GeneratorTab', 'Viewtype:'))\n    self.btnRfCatSend.setToolTip(_translate('GeneratorTab', '<html><head/><body><p><span style=\" font-weight:600;\">Send encoded data via RfCat. </span></p><p><span style=\" font-style:italic;\">Hit again for stopping the sending process. Note that you can set the number of repetitions (from 1 to infinite) in:</span></p><p><span style=\" font-style:italic;\">Edit-&gt;Options-&gt;Device-&gt;\\'Device sending repetitions\\'</span></p></body></html>'))\n    self.btnRfCatSend.setText(_translate('GeneratorTab', 'Send via RfCat'))\n    self.labelGeneratedData.setText(_translate('GeneratorTab', 'Generated Data'))\n    self.btnSave.setToolTip(_translate('GeneratorTab', 'Save current fuzz profile.'))\n    self.btnSave.setText(_translate('GeneratorTab', '...'))\n    self.btnOpen.setToolTip(_translate('GeneratorTab', 'Load a fuzz profile.'))\n    self.btnOpen.setText(_translate('GeneratorTab', '...'))\n    self.lEstimatedTime.setToolTip(_translate('GeneratorTab', '<html><head/><body><p>The estimated average time is based on the average number of bits per message and average sample rate, you set for the modulations.</p></body></html>'))\n    self.lEstimatedTime.setText(_translate('GeneratorTab', 'Estimated Time: '))\n    self.btnFZSave.setText(_translate('GeneratorTab', 'Save as FlipperZero SubGHz'))"
        ]
    }
]