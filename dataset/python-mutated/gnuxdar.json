[
    {
        "func_name": "escalera",
        "original": "def escalera():\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')",
        "mutated": [
            "def escalera():\n    if False:\n        i = 10\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')",
            "def escalera():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')",
            "def escalera():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')",
            "def escalera():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')",
            "def escalera():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    try:\n        ne = int(input('Ingrese la cantidad de escalones: '))\n    except ValueError:\n        print('Ingrese un n\u00famero entero')\n        return\n    if ne > 20 or ne < -20:\n        print('El n\u00famero de escalones ingresado es demasiado grande.')\n    elif ne > 0:\n        print('  ' * ne, '_')\n        for i in range(ne):\n            print('  ' * (ne - 1), '_| ')\n            ne -= 1\n    elif ne < 0:\n        print('_')\n        for i in range(abs(ne)):\n            print('  ' * i, '|_')\n    elif ne == 0:\n        print('__')"
        ]
    }
]