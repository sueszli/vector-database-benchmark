[
    {
        "func_name": "run",
        "original": "def run(self, info):\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)",
        "mutated": [
            "def run(self, info):\n    if False:\n        i = 10\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)",
            "def run(self, info):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)",
            "def run(self, info):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)",
            "def run(self, info):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)",
            "def run(self, info):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    mtime = os.stat(info['filepath']).st_mtime\n    self.to_screen(\"Writing metadata to file's xattrs\")\n    try:\n        for (xattrname, infoname) in self.XATTR_MAPPING.items():\n            value = info.get(infoname)\n            if value:\n                if infoname == 'upload_date':\n                    value = hyphenate_date(value)\n                write_xattr(info['filepath'], xattrname, value.encode())\n    except XAttrUnavailableError as e:\n        raise PostProcessingError(str(e))\n    except XAttrMetadataError as e:\n        if e.reason == 'NO_SPACE':\n            self.report_warning(\"There's no disk space left, disk quota exceeded or filesystem xattr limit exceeded. Some extended attributes are not written\")\n        elif e.reason == 'VALUE_TOO_LONG':\n            self.report_warning('Unable to write extended attributes due to too long values.')\n        else:\n            tip = 'You need to use NTFS' if compat_os_name == 'nt' else 'You may have to enable them in your \"/etc/fstab\"'\n            raise PostProcessingError(f\"This filesystem doesn't support extended attributes. {tip}\")\n    self.try_utime(info['filepath'], mtime, mtime)\n    return ([], info)"
        ]
    }
]