from typing import Any, Optional
from tests.common.query_context_generator import QueryContextGenerator
from tests.integration_tests.base_tests import SupersetTestCase

class QueryContextGeneratorInteg(QueryContextGenerator):

    def get_table(self, name, id_, type_):
        if False:
            print('Hello World!')
        return SupersetTestCase.get_table(name=name)

def get_query_context(query_name: str, add_postprocessing_operations: bool=False, add_time_offsets: bool=False, form_data: Optional[dict[str, Any]]=None) -> dict[str, Any]:
    if False:
        i = 10
        return i + 15
    '\n    Create a request payload for retrieving a QueryContext object via the\n    `api/v1/chart/data` endpoint. By default returns a payload corresponding to one\n    generated by the "Boy Name Cloud" chart in the examples.\n    :param query_name: name of an example query, which is always in the format\n           of `datasource_name[:test_case_name]`, where `:test_case_name` is optional.\n    :param add_postprocessing_operations: Add post-processing operations to QueryObject\n    :param add_time_offsets: Add time offsets to QueryObject(advanced analytics)\n    :param form_data: chart metadata\n    :return: Request payload\n    '
    return QueryContextGeneratorInteg().generate(query_name=query_name, add_postprocessing_operations=add_postprocessing_operations, add_time_offsets=add_time_offsets, form_data=form_data)