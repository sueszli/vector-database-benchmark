"""
Constants for default packages, default pretrains, charlms, etc

Separated from prepare_resources.py so that other modules can use the
same lists / maps without importing the resources script and possibly
causing a circular import
"""
import copy
PACKAGES = 'packages'
default_treebanks = {'af': 'afribooms', 'ar': 'padt', 'be': 'hse', 'bg': 'btb', 'bxr': 'bdt', 'ca': 'ancora', 'cop': 'scriptorium', 'cs': 'pdt', 'cu': 'proiel', 'cy': 'ccg', 'da': 'ddt', 'de': 'gsd', 'el': 'gdt', 'en': 'combined', 'es': 'ancora', 'et': 'edt', 'eu': 'bdt', 'fa': 'perdt', 'fi': 'tdt', 'fo': 'farpahc', 'fr': 'combined', 'fro': 'srcmf', 'ga': 'idt', 'gd': 'arcosg', 'gl': 'ctg', 'got': 'proiel', 'grc': 'proiel', 'gv': 'cadhan', 'hbo': 'ptnk', 'he': 'combined', 'hi': 'hdtb', 'hr': 'set', 'hsb': 'ufal', 'hu': 'szeged', 'hy': 'armtdp', 'hyw': 'armtdp', 'id': 'gsd', 'is': 'icepahc', 'it': 'combined', 'ja': 'gsd', 'kk': 'ktb', 'kmr': 'mg', 'ko': 'kaist', 'ky': 'ktmu', 'la': 'ittb', 'lij': 'glt', 'lt': 'alksnis', 'lv': 'lvtb', 'lzh': 'kyoto', 'mr': 'ufal', 'mt': 'mudt', 'my': 'ucsy', 'myv': 'jr', 'nb': 'bokmaal', 'nl': 'alpino', 'nn': 'nynorsk', 'olo': 'kkpp', 'orv': 'torot', 'pcm': 'nsc', 'pl': 'pdb', 'pt': 'bosque', 'qaf': 'arabizi', 'qpm': 'philotis', 'qtd': 'sagt', 'ro': 'rrt', 'ru': 'syntagrus', 'sa': 'vedic', 'sd': 'isra', 'sk': 'snk', 'sl': 'ssj', 'sme': 'giella', 'sr': 'set', 'sv': 'talbanken', 'swl': 'sslc', 'ta': 'ttb', 'te': 'mtg', 'th': 'orchid', 'tr': 'imst', 'ug': 'udt', 'uk': 'iu', 'ur': 'udtb', 'vi': 'vtb', 'wo': 'wtb', 'zh-hans': 'gsdsimp', 'zh-hant': 'gsd', 'multilingual': 'ud'}
no_pretrain_languages = set(['cop', 'olo', 'orv', 'pcm', 'qaf', 'qpm', 'qtd', 'swl', 'multilingual'])
specific_default_pretrains = {'af': 'fasttextwiki', 'ar': 'conll17', 'be': 'fasttextwiki', 'bg': 'conll17', 'bxr': 'fasttextwiki', 'ca': 'conll17', 'cs': 'conll17', 'cu': 'conll17', 'cy': 'fasttext157', 'da': 'conll17', 'de': 'conll17', 'el': 'conll17', 'en': 'conll17', 'es': 'conll17', 'et': 'conll17', 'eu': 'conll17', 'fa': 'conll17', 'fi': 'conll17', 'fo': 'fasttextwiki', 'fr': 'conll17', 'fro': 'conll17', 'ga': 'conll17', 'gd': 'fasttextwiki', 'gl': 'conll17', 'got': 'fasttextwiki', 'grc': 'conll17', 'gv': 'fasttext157', 'hbo': 'utah', 'he': 'conll17', 'hi': 'conll17', 'hr': 'conll17', 'hsb': 'fasttextwiki', 'hu': 'conll17', 'hy': 'isprasglove', 'hyw': 'isprasglove', 'id': 'conll17', 'is': 'fasttext157', 'it': 'conll17', 'ja': 'conll17', 'kk': 'fasttext157', 'kmr': 'fasttextwiki', 'ko': 'conll17', 'ky': 'fasttext157', 'la': 'conll17', 'lij': 'fasttextwiki', 'lt': 'fasttextwiki', 'lv': 'conll17', 'lzh': 'fasttextwiki', 'mr': 'fasttextwiki', 'mt': 'fasttextwiki', 'my': 'ucsy', 'myv': 'mokha', 'nb': 'conll17', 'nl': 'conll17', 'nn': 'conll17', 'pl': 'conll17', 'pt': 'conll17', 'ro': 'conll17', 'ru': 'conll17', 'sa': 'fasttext157', 'sd': 'isra', 'sk': 'conll17', 'sl': 'conll17', 'sme': 'fasttextwiki', 'sr': 'fasttextwiki', 'sv': 'conll17', 'ta': 'fasttextwiki', 'te': 'fasttextwiki', 'th': 'fasttext157', 'tr': 'conll17', 'ug': 'conll17', 'uk': 'conll17', 'ur': 'conll17', 'vi': 'conll17', 'wo': 'fasttextwiki', 'zh-hans': 'fasttext157', 'zh-hant': 'conll17'}
default_pretrains = dict(default_treebanks)
for lang in no_pretrain_languages:
    default_pretrains.pop(lang, None)
for lang in specific_default_pretrains.keys():
    default_pretrains[lang] = specific_default_pretrains[lang]
pos_pretrains = {'en': {'craft': 'biomed', 'genia': 'biomed', 'mimic': 'mimic'}}
depparse_pretrains = pos_pretrains
ner_pretrains = {'ar': {'aqmar': 'fasttextwiki'}, 'de': {'conll03': 'fasttextwiki', 'germeval2014': 'fasttextwiki'}, 'en': {'anatem': 'biomed', 'bc4chemd': 'biomed', 'bc5cdr': 'biomed', 'bionlp13cg': 'biomed', 'jnlpba': 'biomed', 'linnaeus': 'biomed', 'ncbi_disease': 'biomed', 's800': 'biomed', 'ontonotes': 'fasttextcrawl', 'sample': 'fasttextcrawl', 'conll03': 'glove', 'i2b2': 'mimic', 'radiology': 'mimic'}, 'es': {'ancora': 'fasttextwiki', 'conll02': 'fasttextwiki'}, 'fr': {'wikiner': 'fasttextwiki'}, 'nl': {'conll02': 'fasttextwiki', 'wikiner': 'fasttextwiki'}, 'ru': {'wikiner': 'fasttextwiki'}, 'th': {'lst20': 'fasttext157'}}
default_charlms = {'af': 'oscar', 'ar': 'ccwiki', 'bg': 'conll17', 'da': 'oscar', 'de': 'newswiki', 'en': '1billion', 'es': 'newswiki', 'fa': 'conll17', 'fi': 'conll17', 'fr': 'newswiki', 'he': 'oscar', 'hi': 'oscar', 'id': 'oscar2023', 'it': 'conll17', 'ja': 'conll17', 'kk': 'oscar', 'mr': 'l3cube', 'my': 'oscar', 'nb': 'conll17', 'nl': 'ccwiki', 'pl': 'oscar', 'pt': 'oscar2023', 'ru': 'newswiki', 'sd': 'isra', 'sv': 'conll17', 'te': 'oscar2022', 'th': 'oscar', 'tr': 'conll17', 'uk': 'conll17', 'vi': 'conll17', 'zh-hans': 'gigaword'}
pos_charlms = {'en': {'craft': None, 'genia': None, 'mimic': 'mimic'}, 'tr': {'boun': None}}
depparse_charlms = copy.deepcopy(pos_charlms)
lemma_charlms = copy.deepcopy(pos_charlms)
ner_charlms = {'en': {'conll03': '1billion', 'ontonotes': '1billion', 'anatem': 'pubmed', 'bc4chemd': 'pubmed', 'bc5cdr': 'pubmed', 'bionlp13cg': 'pubmed', 'i2b2': 'mimic', 'jnlpba': 'pubmed', 'linnaeus': 'pubmed', 'ncbi_disease': 'pubmed', 'radiology': 'mimic', 's800': 'pubmed'}, 'hu': {'combined': None}, 'nn': {'norne': None}}
'\ndefault transformers to use for various languages\n\nwe try to document why we choose a particular model in each case\n'
TRANSFORMERS = {'ar': 'aubmindlab/araelectra-base-discriminator', 'da': 'vesteinn/ScandiBERT', 'de': 'dbmdz/bert-base-german-cased', 'en': 'google/electra-large-discriminator', 'es': 'bertin-project/bertin-roberta-base-spanish', 'fa': 'HooshvareLab/bert-base-parsbert-uncased', 'fi': 'TurkuNLP/bert-base-finnish-cased-v1', 'fr': 'camembert/camembert-large', 'he': 'imvladikon/alephbertgimmel-base-512', 'hy': 'xlm-roberta-base', 'id': 'indolem/indobert-base-uncased', 'it': 'dbmdz/electra-base-italian-xxl-cased-discriminator', 'ja': 'rinna/japanese-roberta-base', 'mr': 'l3cube-pune/marathi-roberta', 'pl': 'allegro/herbert-base-cased', 'pt': 'neuralmind/bert-large-portuguese-cased', 'tr': 'dbmdz/bert-base-turkish-128k-cased', 'vi': 'vinai/phobert-large', 'zh-hans': 'hfl/chinese-electra-180g-large-discriminator'}
TRANSFORMER_LAYERS = {'vi': 7}
TRANSFORMER_NICKNAMES = {'asafaya/bert-base-arabic': 'asafaya-bert', 'aubmindlab/araelectra-base-discriminator': 'aubmind-electra', 'aubmindlab/bert-base-arabertv2': 'aubmind-bert', 'vesteinn/ScandiBERT': 'scandibert', 'dbmdz/bert-base-german-cased': 'bert', 'bert-base-multilingual-cased': 'mbert', 'xlm-roberta-large': 'xlm-roberta-large', 'google/electra-large-discriminator': 'electra-large', 'bertin-project/bertin-roberta-base-spanish': 'bertin-roberta', 'HooshvareLab/bert-base-parsbert-uncased': 'parsbert', 'TurkuNLP/bert-base-finnish-cased-v1': 'bert', 'benjamin/roberta-base-wechsel-french': 'wechsel-roberta', 'camembert-base': 'camembert-base', 'camembert/camembert-large': 'camembert-large', 'dbmdz/electra-base-french-europeana-cased-discriminator': 'dbmdz-electra', 'imvladikon/alephbertgimmel-base-512': 'alephbertgimmel', 'xlm-roberta-base': 'roberta', 'indolem/indobert-base-uncased': 'indobert', 'dbmdz/electra-base-italian-xxl-cased-discriminator': 'electra', 'rinna/japanese-roberta-base': 'rinna-roberta', 'l3cube-pune/marathi-roberta': 'l3cube-roberta', 'allegro/herbert-base-cased': 'herbert', 'neuralmind/bert-large-portuguese-cased': 'bertimbau', 'dbmdz/bert-base-turkish-128k-cased': 'bert', 'vinai/phobert-base': 'phobert-base', 'vinai/phobert-large': 'phobert-large', 'hfl/chinese-roberta-wwm-ext': 'roberta', 'hfl/chinese-electra-180g-large-discriminator': 'electra-large'}

def known_nicknames():
    if False:
        return 10
    '\n    Return a set of all the transformer nicknames\n    '
    nicknames = set((value for (key, value) in TRANSFORMER_NICKNAMES.items()))
    nicknames.add('transformer')
    return nicknames