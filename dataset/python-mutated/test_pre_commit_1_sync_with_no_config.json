[
    {
        "func_name": "test_pre_commit_hook_sync_with_no_config",
        "original": "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    \"\"\"In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967\"\"\"\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)",
        "mutated": [
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    if False:\n        i = 10\n    'In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967'\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967'\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967'\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967'\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_sync_with_no_config(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev, notebook_with_outputs):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'In this test we reproduce the setting from https://github.com/mwouts/jupytext/issues/967'\n    pre_commit_config_yaml = f\"\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [\\n      '--sync',\\n      '--set-formats',\\n      'ipynb,py:percent',\\n      '--show-changes',\\n      '--'\\n    ]\\n\"\n    nb = deepcopy(notebook_with_outputs)\n    (tmpdir / 'notebooks').mkdir()\n    cm = TextFileContentsManager()\n    cm.root_dir = str(tmpdir)\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.index.commit('Notebook with outputs')\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks', '-f'])\n    nb.cells.append(new_markdown_cell('New markdown cell'))\n    cm.save(dict(type='notebook', content=nb), 'nb.ipynb')\n    assert not (tmpdir / 'nb.py').exists()\n    tmp_repo.git.add('nb.ipynb')\n    with pytest.raises(HookExecutionError, match='git add nb.py'):\n        tmp_repo.index.commit('failing')\n    assert 'New markdown cell' in tmpdir.join('nb.py').read()\n    tmp_repo.git.add('nb.ipynb')\n    tmp_repo.git.add('nb.py')\n    tmp_repo.index.commit('passing')\n    assert 'nb.ipynb' in tmp_repo.tree()\n    assert 'nb.py' in tmp_repo.tree()\n    nb = jupytext.read(tmpdir / 'nb.ipynb')\n    extra_cell = nb.cells.pop()\n    assert extra_cell.cell_type == 'markdown'\n    assert extra_cell.source == 'New markdown cell'\n    compare_notebooks(nb, notebook_with_outputs, compare_ids=True, compare_outputs=True)"
        ]
    }
]