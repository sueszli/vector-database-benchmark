[
    {
        "func_name": "get_zt_info",
        "original": "def get_zt_info(obj, now):\n    \"\"\"\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\n    \"\"\"\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s",
        "mutated": [
            "def get_zt_info(obj, now):\n    if False:\n        i = 10\n    '\\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\\n    '\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s",
            "def get_zt_info(obj, now):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\\n    '\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s",
            "def get_zt_info(obj, now):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\\n    '\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s",
            "def get_zt_info(obj, now):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\\n    '\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s",
            "def get_zt_info(obj, now):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    \u6570\u636e\u5e93\u83b7\u53d6\u65b0\u80a1\u7684\u6da8\u505c\u4fe1\u606f\\n    '\n    today_str = now.strftime('%Y%m%d')\n    tb_name = today_str + 'zdt'\n    end = str(now.year) + '-' + str(now.month).zfill(2)\n    start = '2015-01'\n    df = obj.get_new_stock(start, end)\n    code_list = df['code'].values\n    engine = DBSelector().get_engine('db_zdt')\n    zt_df = pd.read_sql(tb_name, engine, index_col='index')\n    zt_df['\u6da8\u505c\u5f3a\u5ea6'] = zt_df['\u6da8\u505c\u5f3a\u5ea6'].map(lambda x: round(x, 0))\n    ret_df = zt_df[zt_df['\u4ee3\u7801'].isin(code_list)]\n    s = ''\n    if not ret_df.empty:\n        s = ret_df[['\u4ee3\u7801', '\u540d\u79f0', '\u6da8\u505c\u5f3a\u5ea6', '\u6253\u5f00\u6b21\u6570', '\u7b2c\u4e00\u6b21\u6da8\u505c\u65f6\u95f4', '\u6700\u540e\u4e00\u6b21\u6da8\u505c\u65f6\u95f4']].to_string()\n    save_local = False\n    if save_local:\n        excel_name = today_str + '_\u6b21\u65b0.xls'\n        ret_df.to_excel(excel_name, encoding='gbk')\n    return s"
        ]
    },
    {
        "func_name": "send_zt_report",
        "original": "def send_zt_report(today=None):\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)",
        "mutated": [
            "def send_zt_report(today=None):\n    if False:\n        i = 10\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)",
            "def send_zt_report(today=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)",
            "def send_zt_report(today=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)",
            "def send_zt_report(today=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)",
            "def send_zt_report(today=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    if today is None:\n        now = datetime.datetime.now().strftime('%Y%m%d')\n    else:\n        now = datetime.datetime.strptime(str(today), '%Y%m%d')\n    obj = FilterStock()\n    info = get_zt_info(obj, now)\n    send_from_aliyun(str(today) + '\u6b21\u65b0\u6da8\u505c', info)"
        ]
    }
]