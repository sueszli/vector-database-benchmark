[
    {
        "func_name": "link_functions_tweedie_basic",
        "original": "def link_functions_tweedie_basic():\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)",
        "mutated": [
            "def link_functions_tweedie_basic():\n    if False:\n        i = 10\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)",
            "def link_functions_tweedie_basic():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)",
            "def link_functions_tweedie_basic():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)",
            "def link_functions_tweedie_basic():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)",
            "def link_functions_tweedie_basic():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print('Read in prostate data.')\n    hdf = h2o.upload_file(pyunit_utils.locate('smalldata/prostate/prostate_complete.csv.zip'))\n    print('Testing for family: TWEEDIE')\n    print('Set variables for h2o.')\n    y = 'CAPSULE'\n    x = ['AGE', 'RACE', 'DCAPS', 'PSA', 'VOL', 'DPROS', 'GLEASON']\n    print('Create models with canonical link: TWEEDIE')\n    model_h2o_tweedie = H2OGeneralizedLinearEstimator(family='tweedie', link='tweedie', alpha=0.5, Lambda=0)\n    model_h2o_tweedie.train(x=x, y=y, training_frame=hdf)\n    print('Compare model deviances for link function tweedie (using precomputed values from R)')\n    deviance_h2o_tweedie = old_div(model_h2o_tweedie.residual_deviance(), model_h2o_tweedie.null_deviance())\n    assert 0.721452 - deviance_h2o_tweedie <= 0.01, \"h2o's residual/null deviance is more than 0.01 lower than R's. h2o: {0}, r: {1}\".format(deviance_h2o_tweedie, 0.721452)"
        ]
    }
]