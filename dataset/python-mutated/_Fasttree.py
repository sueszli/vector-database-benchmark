"""Command-line wrapper for tree inference program Fasttree."""
from Bio.Application import _Option, _Switch, _Argument, AbstractCommandline

def _is_int(x):
    if False:
        return 10
    'Test whether the argument can be serialized as an integer (PRIVATE).'
    return isinstance(x, int) or str(x).isdigit()

def _is_numeric(x):
    if False:
        return 10
    'Test whether the argument can be serialized as a number (PRIVATE).'
    try:
        float(str(x))
        return True
    except ValueError:
        return False

class FastTreeCommandline(AbstractCommandline):
    """Command-line wrapper for FastTree.

    Only the ``input`` and ``out`` parameters are mandatory.

    From the terminal command line use ``fasttree.exe -help`` or ``fasttree.exe -expert``
    for more explanation of usage options.

    Homepage: http://www.microbesonline.org/fasttree/

    References
    ----------
    Price, M.N., Dehal, P.S., and Arkin, A.P. (2010) FastTree 2 -- Approximately
    Maximum-Likelihood Trees for Large Alignments. PLoS ONE, 5(3):e9490.
    https://doi.org/10.1371/journal.pone.0009490.

    Examples
    --------
    This is an example on Windows::

        import _Fasttree
        fasttree_exe = r"C:\\FasttreeWin32\\fasttree.exe"
        cmd = _Fasttree.FastTreeCommandline(fasttree_exe,
        ...                                     input=r'C:\\Input\\ExampleAlignment.fsa',
        ...                                     out=r'C:\\Output\\ExampleTree.tree')
        print(cmd)
        out, err = cmd()
        print(out)
        print(err)

    """

    def __init__(self, cmd='fasttree', **kwargs):
        if False:
            while True:
                i = 10
        'Initialize the class.'
        self.parameters = [_Switch(['-nt', 'nt'], 'By default FastTree expects protein alignments, use -nt for nucleotides'), _Option(['-n', 'n'], "-n -- read N multiple alignments in.\n\n                    This only works with phylip interleaved format. For example, you can\n                    use it with the output from phylip's seqboot. If you use -n, FastTree\n                    will write 1 tree per line to standard output.\n                    ", checker_function=_is_int, equate=False), _Switch(['-quote', 'quote'], "-quote -- add quotes to sequence names in output.\n\n                    Quote sequence names in the output and allow spaces, commas,\n                    parentheses, and colons in them but not ' characters (fasta files only).\n                    "), _Option(['-pseudo', 'pseudo'], '-pseudo [weight] -- Pseudocounts are used with sequence distance estimation.\n\n                    Use pseudocounts to estimate distances between sequences with little or no\n                    overlap. (Off by default.) Recommended if analyzing the alignment has\n                    sequences with little or no overlap.\n                    If the weight is not specified, it is 1.0\n                    ', checker_function=_is_numeric, equate=False), _Option(['-boot', 'boot'], 'Specify the number of resamples for support values.\n\n                    Support value options:\n                    By default, FastTree computes local support values by resampling the site\n                    likelihoods 1,000 times and the Shimodaira Hasegawa test. If you specify -nome,\n                    it will compute minimum-evolution bootstrap supports instead\n                    In either case, the support values are proportions ranging from 0 to 1\n\n                    Use -nosupport to turn off support values or -boot 100 to use just 100 resamples.\n                    ', checker_function=_is_int, equate=False), _Switch(['-nosupport', 'nosupport'], 'Turn off support values.\n\n                    Support value options:\n                    By default, FastTree computes local support values by resampling the site\n                    likelihoods 1,000 times and the Shimodaira Hasegawa test. If you specify -nome,\n                    it will compute minimum-evolution bootstrap supports instead\n                    In either case, the support values are proportions ranging from 0 to 1\n\n                    Use -nosupport to turn off support values or -boot 100 to use just 100 resamples.\n                    '), _Option(['-intree', 'intree'], '-intree newickfile -- read the starting tree in from newickfile.\n\n                    Any branch lengths in the starting trees are ignored.\n                    -intree with -n will read a separate starting tree for each alignment.\n                    ', filename=True, equate=False), _Option(['-intree1', 'intree1'], 'intree1 newickfile -- read the same starting tree for each alignment.', filename=True, equate=False), _Switch(['-quiet', 'quiet'], '-quiet -- do not write to standard error during normal operation\n\n                    (no progress indicator, no options summary, no likelihood values, etc.)\n                    '), _Switch(['-nopr', 'nopr'], '-nopr -- do not write the progress indicator to stderr.'), _Option(['-nni', 'nni'], 'Set the rounds of minimum-evolution nearest-neighbor interchanges\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs.\n                    ', checker_function=_is_int, equate=False), _Option(['-spr', 'spr'], 'Set the rounds of subtree-prune-regraft moves\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    ', checker_function=_is_int, equate=False), _Switch(['-noml', 'noml'], 'Deactivate min-evo NNIs and SPRs.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -noml to turn off both min-evo NNIs and SPRs (useful if refining\n                    an approximately maximum-likelihood tree with further NNIs).\n                    '), _Switch(['-mllen', 'mllen'], 'Optimize branch lengths on a fixed topology.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -mllen to optimize branch lengths without ML NNIs\n                    Use -mllen -nome with -intree to optimize branch lengths on a fixed topology.\n                    '), _Switch(['-nome', 'nome'], 'Changes support values calculation to a minimum-evolution bootstrap method.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -mllen to optimize branch lengths without ML NNIs\n                    Use -mllen -nome with -intree to optimize branch lengths on a fixed topology\n\n                    Support value options:\n                    By default, FastTree computes local support values by resampling the site\n                    likelihoods 1,000 times and the Shimodaira Hasegawa test. If you specify -nome,\n                    it will compute minimum-evolution bootstrap supports instead\n                    In either case, the support values are proportions ranging from 0 to 1.\n                    '), _Option(['-mlnni', 'mlnni'], 'Set the number of rounds of maximum-likelihood NNIs.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -mlnni to set the number of rounds of maximum-likelihood NNIs.\n                    ', checker_function=_is_int, equate=False), _Option(['-mlacc', 'mlacc'], 'Option for optimization of branches at each NNI.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -mlacc 2 or -mlacc 3 to always optimize all 5 branches at each NNI,\n                    and to optimize all 5 branches in 2 or 3 rounds.\n                    ', checker_function=_is_int, equate=False), _Switch(['-slownni', 'slownni'], 'Turn off heuristics to avoid constant subtrees with NNIs.\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    Use -slownni to turn off heuristics to avoid constant subtrees\n                    (affects both ML and ME NNIs).\n                    '), _Switch(['-wag', 'wag'], 'Maximum likelihood model options.\n\n                    Whelan-And-Goldman 2001 model instead of (default)\n                    Jones-Taylor-Thorton 1992 model (a.a. only)\n                    '), _Switch(['-gtr', 'gtr'], 'Maximum likelihood model options.\n\n                    Use generalized time-reversible instead of (default)\n                    Jukes-Cantor (nt only)\n                    '), _Option(['-cat', 'cat'], 'Maximum likelihood model options.\n\n                    Specify the number of rate categories of sites (default 20).', checker_function=_is_int, equate=False), _Switch(['-nocat', 'nocat'], 'Maximum likelihood model options: No CAT model (just 1 category)'), _Switch(['-gamma', 'gamma'], 'Report the likelihood under the discrete gamma model.\n\n                    Maximum likelihood model options:\n                    -gamma -- after the final round of optimizing branch lengths with the CAT model,\n                    report the likelihood under the discrete gamma model with the same\n                    number of categories. FastTree uses the same branch lengths but\n                    optimizes the gamma shape parameter and the scale of the lengths.\n                    The final tree will have rescaled lengths. Used with -log, this\n                    also generates per-site likelihoods for use with CONSEL, see\n                    GammaLogToPaup.pl and documentation on the FastTree web site.\n                    '), _Switch(['-slow', 'slow'], "Use an exhaustive search.\n\n                    Searching for the best join:\n                    By default, FastTree combines the 'visible set' of fast neighbor-joining with\n                    local hill-climbing as in relaxed neighbor-joining\n                    -slow -- exhaustive search (like NJ or BIONJ, but different gap handling)\n                    -slow takes half an hour instead of 8 seconds for 1,250 proteins\n                    "), _Switch(['-fastest', 'fastest'], "Search the visible set (the top hit for each node) only.\n\n                    Searching for the best join:\n                    By default, FastTree combines the 'visible set' of fast neighbor-joining with\n                    local hill-climbing as in relaxed neighbor-joining\n                    -fastest -- search the visible set (the top hit for each node) only\n                    Unlike the original fast neighbor-joining, -fastest updates visible(C)\n                    after joining A and B if join(AB,C) is better than join(C,visible(C))\n                    -fastest also updates out-distances in a very lazy way,\n                    -fastest sets -2nd on as well, use -fastest -no2nd to avoid this\n                    "), _Switch(['-2nd', 'second'], 'Turn 2nd-level top hits heuristic on.\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    Use -notop (or -slow) to turn this feature off\n                    and compare all leaves to each other,\n                    and all new joined nodes to each other\n\n                    -2nd or -no2nd to turn 2nd-level top hits heuristic on or off\n                    This reduces memory usage and running time but may lead to\n                    marginal reductions in tree quality.\n                    (By default, -fastest turns on -2nd.)\n                    '), _Switch(['-no2nd', 'no2nd'], 'Turn 2nd-level top hits heuristic off.\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    Use -notop (or -slow) to turn this feature off\n                    and compare all leaves to each other,\n                    and all new joined nodes to each other\n\n                    -2nd or -no2nd to turn 2nd-level top hits heuristic on or off\n                    This reduces memory usage and running time but may lead to\n                    marginal reductions in tree quality.\n                    (By default, -fastest turns on -2nd.)\n                    '), _Option(['-seed', 'seed'], 'Use -seed to initialize the random number generator.\n\n                    Support value options:\n                    By default, FastTree computes local support values by resampling the site\n                    likelihoods 1,000 times and the Shimodaira Hasegawa test. If you specify -nome,\n                    it will compute minimum-evolution bootstrap supports instead\n                    In either case, the support values are proportions ranging from 0 to 1.\n                    ', checker_function=_is_int, equate=False), _Switch(['-top', 'top'], 'Top-hit list to speed up search\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    Use -notop (or -slow) to turn this feature off\n                    and compare all leaves to each other,\n                    and all new joined nodes to each other.\n                    '), _Switch(['-notop', 'notop'], 'Turn off top-hit list to speed up search\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    Use -notop (or -slow) to turn this feature off\n                    and compare all leaves to each other,\n                    and all new joined nodes to each other.\n                    '), _Option(['-topm', 'topm'], "Change the top hits calculation method\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    -topm 1.0 -- set the top-hit list size to parameter*sqrt(N)\n                    FastTree estimates the top m hits of a leaf from the\n                    top 2*m hits of a 'close' neighbor, where close is\n                    defined as d(seed,close) < 0.75 * d(seed, hit of rank 2*m),\n                    and updates the top-hits as joins proceed.\n                    ", checker_function=_is_numeric, equate=False), _Option(['-close', 'close'], 'Modify the close heuristic for the top-hit list\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    -close 0.75 -- modify the close heuristic, lower is more conservative.\n                    ', checker_function=_is_numeric, equate=False), _Option(['-refresh', 'refresh'], 'Parameter for conditions that joined nodes are compared to other nodes\n\n                    Top-hit heuristics:\n                    By default, FastTree uses a top-hit list to speed up search\n                    -refresh 0.8 -- compare a joined node to all other nodes if its\n                    top-hit list is less than 80% of the desired length,\n                    or if the age of the top-hit list is log2(m) or greater.\n                    ', checker_function=_is_numeric, equate=False), _Option(['-matrix', 'matrix'], 'Specify a matrix for nucleotide or amino acid distances\n\n                    Distances:\n                    Default: For protein sequences, log-corrected distances and an\n                    amino acid dissimilarity matrix derived from BLOSUM45\n                    or for nucleotide sequences, Jukes-Cantor distances\n                    To specify a different matrix, use -matrix FilePrefix or -nomatrix\n                    ', filename=True, equate=False), _Switch(['-nomatrix', 'nomatrix'], 'Specify that no matrix should be used for nucleotide or amino acid distances\n\n                    Distances:\n                    Default: For protein sequences, log-corrected distances and an\n                    amino acid dissimilarity matrix derived from BLOSUM45\n                    or for nucleotide sequences, Jukes-Cantor distances\n                    To specify a different matrix, use -matrix FilePrefix or -nomatrix\n                    '), _Switch(['-nj', 'nj'], 'Join options: regular (unweighted) neighbor-joining (default)'), _Switch(['-bionj', 'bionj'], 'Join options: weighted joins as in BIONJ.\n\n                    FastTree will also weight joins during NNIs.\n                    '), _Option(['-gtrrates', 'gtrrates'], '-gtrrates ac ag at cg ct gt', equate=False), _Option(['-gtrfreq', 'gtrfreq'], '-gtrfreq A C G T', equate=False), _Option(['-constraints', 'constraints'], "Specifies an alignment file for use with constrained topology searching\n\n                    Constrained topology search options:\n                    -constraints alignmentfile -- an alignment with values of 0, 1, and -\n                    Not all sequences need be present. A column of 0s and 1s defines a\n                    constrained split. Some constraints may be violated\n                    (see 'violating constraints:' in standard error).\n                    ", filename=True, equate=False), _Option(['-constraintWeight', 'constraintWeight'], 'Weight strength of constraints in topology searching.\n\n                    Constrained topology search options:\n                    -constraintWeight -- how strongly to weight the constraints. A value of 1\n                    means a penalty of 1 in tree length for violating a constraint\n                    Default: 100.0\n                    ', checker_function=_is_numeric, equate=False), _Option(['-log', 'log'], 'Create log files of data such as intermediate trees and per-site rates\n\n                    -log logfile -- save intermediate trees so you can extract\n                    the trees and restart long-running jobs if they crash\n                    -log also reports the per-site rates (1 means slowest category).\n                    ', filename=True, equate=False), _Option(['-makematrix', 'makematrix'], '-makematrix [alignment]', filename=True, equate=False), _Switch(['-rawdist', 'rawdist'], 'Turn off or adjust log-correction in AA or NT distances.\n\n                    Use -rawdist to turn the log-correction off or to use\n                    %different instead of Jukes-Cantor in AA or NT distances\n\n                    Distances:\n                    Default: For protein sequences, log-corrected distances and an\n                    amino acid dissimilarity matrix derived from BLOSUM45\n                    or for nucleotide sequences, Jukes-Cantor distances\n                    To specify a different matrix, use -matrix FilePrefix or -nomatrix\n                    '), _Option(['-sprlength', 'sprlength'], 'Set maximum SPR move length in topology refinement (default 10).\n\n                    Topology refinement:\n                    By default, FastTree tries to improve the tree with up to 4*log2(N)\n                    rounds of minimum-evolution nearest-neighbor interchanges (NNI),\n                    where N is the number of unique sequences, 2 rounds of\n                    subtree-prune-regraft (SPR) moves (also min. evo.), and\n                    up to 2*log(N) rounds of maximum-likelihood NNIs.\n                    Use -nni to set the number of rounds of min. evo. NNIs,\n                    and -spr to set the rounds of SPRs.\n                    ', checker_function=_is_int, equate=False), _Switch(['-help', 'help'], 'Show the help.'), _Switch(['-expert', 'expert'], 'Show the expert level help.'), _Option(['-out', 'out'], 'Enter <output file>\n\n                    The path to a Newick Tree output file needs to be specified.\n                    ', filename=True, equate=False), _Argument(['input'], 'Enter <input file>\n\n                      An input file of sequence alignments in fasta or phylip format\n                      is needed.  By default FastTree expects protein\n                      alignments, use -nt for nucleotides.\n                      ', filename=True, is_required=True)]
        AbstractCommandline.__init__(self, cmd, **kwargs)