import logging
from unittest.mock import MagicMock
import pytest
from freqtrade.data.history import get_timerange
from freqtrade.enums import ExitType, TradingMode
from freqtrade.optimize.backtesting import Backtesting
from freqtrade.persistence.trade_model import LocalTrade
from tests.conftest import EXMS, patch_exchange
from tests.optimize import BTContainer, BTrade, _build_backtest_dataframe, _get_frame_time_from_offset, tests_timeframe
tc0 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5010, 4980, 5010, 6172, 0, 1], [4, 5010, 5011, 4977, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 1}, profit_perc=0.002, use_exit_signal=True, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4)])
tc1 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4600, 4600, 6172, 0, 0], [3, 4975, 5000, 4975, 4977, 6172, 0, 0], [4, 4977, 4995, 4977, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 1}, profit_perc=-0.01, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2)])
tc2 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4962, 4975, 6172, 0, 0], [3, 4975, 5000, 4800, 4962, 6172, 0, 0], [4, 4962, 4987, 4937, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.03, roi={'0': 1}, profit_perc=-0.03, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=3)])
tc3 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4800, 4975, 6172, 0, 0], [3, 4975, 5000, 4950, 4962, 6172, 1, 0], [4, 4975, 5000, 4950, 4962, 6172, 0, 0], [5, 4962, 4987, 4000, 4000, 6172, 0, 0], [6, 4950, 4975, 4950, 4950, 6172, 0, 0]], stop_loss=-0.02, roi={'0': 1}, profit_perc=-0.04, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2), BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=4, close_tick=5)])
tc4 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5750, 4850, 5750, 6172, 0, 0], [3, 4975, 5000, 4950, 4962, 6172, 0, 0], [4, 4962, 4987, 4937, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.02, roi={'0': 0.06}, profit_perc=-0.02, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2)])
tc5 = BTContainer(data=[[0, 5000, 5025, 4980, 4987, 6172, 1, 0], [1, 5000, 5025, 4980, 4987, 6172, 0, 0], [2, 4987, 5025, 4975, 4987, 6172, 0, 0], [3, 4975, 6000, 4975, 6000, 6172, 0, 0], [4, 4962, 4987, 4962, 4972, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.03}, profit_perc=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc6 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4850, 5050, 6172, 0, 0], [3, 4975, 5000, 4950, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.02, roi={'0': 0.05}, profit_perc=-0.02, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2)])
tc7 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5050, 6172, 0, 0], [3, 4975, 5000, 4950, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.02, roi={'0': 0.03}, profit_perc=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=2)])
tc8 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5050, 4950, 5000, 6172, 0, 0], [2, 5000, 5250, 4750, 4850, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.055, trailing_stop=True, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=3)])
tc9 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5050, 4950, 5000, 6172, 0, 0], [2, 5000, 5050, 4950, 5000, 6172, 0, 0], [3, 5000, 5200, 4550, 4850, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.064, trailing_stop=True, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=3)])
tc10 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 5100, 5100, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.1, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.1, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=4)])
tc11 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 5100, 5100, 6172, 0, 0], [3, 5000, 5150, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.019, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=3)])
tc12 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 4650, 5100, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.019, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=2)])
tc13 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 4850, 5100, 6172, 0, 0], [3, 4850, 5050, 4750, 4750, 6172, 0, 0], [4, 4750, 4950, 4750, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.01}, profit_perc=0.01, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=1)])
tc14 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4600, 5100, 6172, 0, 0], [2, 5100, 5251, 4850, 5100, 6172, 0, 0], [3, 4850, 5050, 4750, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.05, roi={'0': 0.1}, profit_perc=-0.05, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=1)])
tc15 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4900, 5100, 6172, 1, 0], [2, 5100, 5251, 4650, 5100, 6172, 0, 0], [3, 4850, 5050, 4750, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.05, roi={'0': 0.01}, profit_perc=-0.04, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=1), BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=2, close_tick=2)])
tc16 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5050, 6172, 0, 0], [3, 4975, 5000, 4940, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '65': -1}, profit_perc=-0.012, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc17 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5050, 6172, 0, 0], [3, 4980, 5000, 4940, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '120': -1}, profit_perc=-0.004, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc18 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5200, 6172, 0, 0], [3, 5200, 5220, 4940, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4950, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '120': 0.01}, profit_perc=0.04, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc19 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5200, 6172, 0, 0], [3, 5000, 5300, 4940, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4550, 4975, 4550, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '120': 0.01}, profit_perc=0.01, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc20 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5300, 4950, 5200, 6172, 0, 0], [3, 5200, 5300, 4940, 4962, 6172, 0, 0], [4, 4962, 4987, 4950, 4950, 6172, 0, 0], [5, 4925, 4975, 4925, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '119': 0.01}, profit_perc=0.01, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc21 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 4650, 5100, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.04}, profit_perc=0.04, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=2)])
tc22 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 5100, 5100, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.04}, profit_perc=0.04, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=2)])
tc23 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5050, 4900, 4900, 6172, 0, 0, 0, 0], [2, 4900, 4900, 4749, 4900, 6172, 0, 0, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0]], stop_loss=-0.1, roi={'0': 0.04}, profit_perc=0.04, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=2, is_short=True)])
tc24 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 5100, 5100, 6172, 0, 0], [3, 4850, 5251, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1, '119': 0.03}, profit_perc=0.03, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc25 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5010, 4855, 5010, 6172, 0, 1], [4, 5010, 5010, 4977, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 1}, profit_perc=-0.01, use_exit_signal=True, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=3)])
tc26 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5010, 4986, 5010, 6172, 0, 1], [4, 5010, 5010, 4855, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 1}, profit_perc=0.002, use_exit_signal=True, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4)])
tc27 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5010, 4986, 5010, 6172, 0, 1], [4, 5010, 5010, 4855, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.05, roi={'0': 1}, profit_perc=0.002 * 5.0, use_exit_signal=True, leverage=5.0, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4)])
tc28 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 0, 0, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0, 0, 0], [3, 5010, 5010, 4986, 5010, 6172, 0, 0, 0, 1], [4, 4990, 5010, 4855, 4995, 6172, 0, 0, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0, 0, 0]], stop_loss=-0.05, roi={'0': 1}, profit_perc=0.002 * 5.0, use_exit_signal=True, leverage=5.0, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4, is_short=True)])
tc29 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5251, 4986, 5010, 6172, 0, 1], [4, 5010, 5010, 4855, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.05}, profit_perc=0.05, use_exit_signal=True, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=3)])
tc30 = BTContainer(data=[[0, 5000, 5025, 4975, 4987, 6172, 1, 0], [1, 5000, 5025, 4975, 4987, 6172, 0, 0], [2, 4987, 5012, 4986, 4986, 6172, 0, 0], [3, 5010, 5012, 4986, 5010, 6172, 0, 1], [4, 5010, 5251, 4855, 4995, 6172, 0, 0], [5, 4995, 4995, 4950, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.05}, profit_perc=0.002, use_exit_signal=True, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4)])
tc31 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5100, 4950, 5100, 6172, 0, 0], [2, 5100, 5251, 5100, 5100, 6172, 0, 0], [3, 4850, 5050, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.03, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=3)])
tc32 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5050, 4890, 4890, 6172, 0, 0, 0, 0], [2, 4890, 4890, 4749, 4890, 6172, 0, 0, 0, 0], [3, 5150, 5350, 4950, 4950, 6172, 0, 0, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.03, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.05, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=3, is_short=True)])
tc33 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5050, 5000, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.02, trailing_stop=True, trailing_stop_positive=0.03, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=2)])
tc34 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4900, 4900, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.01, trailing_stop=True, trailing_stop_positive=0.01, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=1)])
tc35 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4900, 4900, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.01, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.02, trailing_stop_positive=0.01, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=1)])
tc36 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=-0.01, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.02, trailing_stop_positive=0.01, use_custom_stoploss=True, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=1)])
tc37 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0, 0, 0, 'buy_signal_01'], [1, 5000, 5500, 4951, 5000, 6172, 0, 0, 0, 0, None], [2, 4900, 5250, 4500, 5100, 6172, 0, 0, 0, 0, None], [3, 5100, 5100, 4650, 4750, 6172, 0, 0, 0, 0, None], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0, None]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=-0.01, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.02, trailing_stop_positive=0.01, use_custom_stoploss=True, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=1, enter_tag='buy_signal_01')])
tc38 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0, 'short_signal_01'], [1, 5000, 5049, 4500, 5000, 6172, 0, 0, 0, 0, None], [2, 4900, 5250, 4500, 5100, 6172, 0, 0, 0, 0, None], [3, 5100, 5100, 4650, 4750, 6172, 0, 0, 0, 0, None], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0, None]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=-0.01, trailing_stop=True, trailing_only_offset_is_reached=True, trailing_stop_positive_offset=0.02, trailing_stop_positive=0.01, use_custom_stoploss=True, trades=[BTrade(exit_reason=ExitType.TRAILING_STOP_LOSS, open_tick=1, close_tick=1, enter_tag='short_signal_01', is_short=True)])
tc39 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=0.0, custom_entry_price=4200, trades=[])
tc40 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=-0.01, custom_entry_price=7200, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=1)])
tc41 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=-0.01, custom_entry_price=4000, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=1, is_short=True)])
tc42 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 4999, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.01}, profit_perc=0.01, custom_entry_price=4952, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=2)])
tc43 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5400, 5500, 4951, 5100, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.01}, profit_perc=0.01, custom_entry_price=4952, trades=[BTrade(exit_reason=ExitType.ROI, open_tick=1, close_tick=1)])
tc44 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4900, 5100, 6172, 0, 1], [3, 5100, 5100, 4950, 4950, 6172, 0, 0], [4, 5000, 5100, 4950, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=-0.01, use_exit_signal=True, custom_exit_price=4552, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=3)])
tc45 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4950, 5250, 4900, 5100, 6172, 0, 1], [3, 5100, 5100, 4950, 4950, 6172, 0, 0], [4, 5000, 5100, 4950, 4950, 6172, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.0, use_exit_signal=True, custom_exit_price=6052, trades=[BTrade(exit_reason=ExitType.FORCE_EXIT, open_tick=1, close_tick=4)])
tc46 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5000, 4951, 5000, 6172, 0, 0, 0, 0], [2, 4910, 5150, 4910, 5100, 6172, 0, 0, 0, 1], [3, 5100, 5100, 4950, 4950, 6172, 0, 0, 0, 0], [4, 5000, 5100, 4950, 4950, 6172, 0, 0, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.0, use_exit_signal=True, custom_exit_price=4700, trades=[BTrade(exit_reason=ExitType.FORCE_EXIT, open_tick=1, close_tick=4, is_short=True)])
tc47 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0, 0, 0], [2, 4900, 5250, 4900, 5100, 6172, 0, 0, 0, 0], [3, 5100, 5100, 4950, 4950, 6172, 0, 0, 0, 0], [4, 5000, 5100, 4950, 4950, 6172, 0, 0, 0, 0]], stop_loss=-0.1, roi={'0': 0.1}, profit_perc=0.0, use_exit_signal=True, trades=[])
tc48 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 1], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.2, roi={'0': 0.1}, profit_perc=-0.087, use_exit_signal=True, timeout=1000, custom_entry_price=4200, adjust_entry_price=5200, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4, is_short=False)])
tc49 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5200, 4951, 5000, 6172, 0, 0, 0, 0], [2, 4900, 5250, 4900, 5100, 6172, 0, 0, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0, 0, 1], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0]], stop_loss=-0.2, roi={'0': 0.1}, profit_perc=0.05, use_exit_signal=True, timeout=1000, custom_entry_price=5300, adjust_entry_price=5000, trades=[BTrade(exit_reason=ExitType.EXIT_SIGNAL, open_tick=1, close_tick=4, is_short=True)])
tc50 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=0.0, use_exit_signal=True, timeout=1000, custom_entry_price=4200, adjust_entry_price=None, trades=[])
tc51 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.01, roi={'0': 0.1}, profit_perc=0.0, use_exit_signal=True, timeout=60, custom_entry_price=4200, adjust_entry_price=4100, trades=[])
tc52 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 1, 0], [1, 5000, 5500, 4951, 5000, 6172, 0, 0], [2, 4900, 5250, 4500, 5100, 6172, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0], [4, 4750, 4950, 4350, 4750, 6172, 0, 0]], stop_loss=-0.03, roi={}, profit_perc=-0.03, use_exit_signal=True, timeout=1000, custom_entry_price=4200, adjust_entry_price=5200, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2, is_short=False)])
tc53 = BTContainer(data=[[0, 5000, 5050, 4950, 5000, 6172, 0, 0, 1, 0], [1, 5000, 5200, 4951, 5000, 6172, 0, 0, 0, 0], [2, 4900, 5250, 4900, 5100, 6172, 0, 0, 0, 0], [3, 5100, 5100, 4650, 4750, 6172, 0, 0, 0, 1], [4, 4750, 4950, 4350, 4750, 6172, 0, 0, 0, 0]], stop_loss=-0.03, roi={'0': 0.1}, profit_perc=-0.03, use_exit_signal=True, timeout=1000, custom_entry_price=5300, adjust_entry_price=5000, trades=[BTrade(exit_reason=ExitType.STOP_LOSS, open_tick=1, close_tick=2, is_short=True)])
TESTS = [tc0, tc1, tc2, tc3, tc4, tc5, tc6, tc7, tc8, tc9, tc10, tc11, tc12, tc13, tc14, tc15, tc16, tc17, tc18, tc19, tc20, tc21, tc22, tc23, tc24, tc25, tc26, tc27, tc28, tc29, tc30, tc31, tc32, tc33, tc34, tc35, tc36, tc37, tc38, tc39, tc40, tc41, tc42, tc43, tc44, tc45, tc46, tc47, tc48, tc49, tc50, tc51, tc52, tc53]

@pytest.mark.parametrize('data', TESTS)
def test_backtest_results(default_conf, fee, mocker, caplog, data: BTContainer) -> None:
    if False:
        for i in range(10):
            print('nop')
    '\n    run functional tests\n    '
    default_conf['stoploss'] = data.stop_loss
    default_conf['minimal_roi'] = data.roi
    default_conf['timeframe'] = tests_timeframe
    default_conf['trailing_stop'] = data.trailing_stop
    default_conf['trailing_only_offset_is_reached'] = data.trailing_only_offset_is_reached
    if data.timeout:
        default_conf['unfilledtimeout'].update({'entry': data.timeout, 'exit': data.timeout})
    if data.trailing_stop_positive is not None:
        default_conf['trailing_stop_positive'] = data.trailing_stop_positive
    default_conf['trailing_stop_positive_offset'] = data.trailing_stop_positive_offset
    default_conf['use_exit_signal'] = data.use_exit_signal
    default_conf['max_open_trades'] = 10
    mocker.patch(f'{EXMS}.get_fee', return_value=0.0)
    mocker.patch(f'{EXMS}.get_min_pair_stake_amount', return_value=1e-05)
    mocker.patch(f'{EXMS}.get_max_pair_stake_amount', return_value=float('inf'))
    mocker.patch(f'{EXMS}.get_max_leverage', return_value=100)
    mocker.patch(f'{EXMS}.calculate_funding_fees', return_value=0)
    patch_exchange(mocker)
    frame = _build_backtest_dataframe(data.data)
    backtesting = Backtesting(default_conf)
    backtesting.trading_mode = TradingMode.MARGIN
    backtesting._set_strategy(backtesting.strategylist[0])
    backtesting._can_short = True
    backtesting.required_startup = 0
    backtesting.strategy.advise_entry = lambda a, m: frame
    backtesting.strategy.advise_exit = lambda a, m: frame
    if data.custom_entry_price:
        backtesting.strategy.custom_entry_price = MagicMock(return_value=data.custom_entry_price)
    if data.custom_exit_price:
        backtesting.strategy.custom_exit_price = MagicMock(return_value=data.custom_exit_price)
    backtesting.strategy.adjust_entry_price = MagicMock(return_value=data.adjust_entry_price)
    backtesting.strategy.use_custom_stoploss = data.use_custom_stoploss
    backtesting.strategy.leverage = lambda **kwargs: data.leverage
    caplog.set_level(logging.DEBUG)
    pair = 'UNITTEST/BTC'
    data_processed = {pair: frame.copy()}
    (min_date, max_date) = get_timerange({pair: frame})
    result = backtesting.backtest(processed=data_processed, start_date=min_date, end_date=max_date)
    results = result['results']
    assert len(results) == len(data.trades)
    assert round(results['profit_ratio'].sum(), 3) == round(data.profit_perc, 3)
    for (c, trade) in enumerate(data.trades):
        res: BTrade = results.iloc[c]
        assert res.exit_reason == trade.exit_reason.value
        assert res.enter_tag == trade.enter_tag
        assert res.open_date == _get_frame_time_from_offset(trade.open_tick)
        assert res.close_date == _get_frame_time_from_offset(trade.close_tick)
        assert res.is_short == trade.is_short
    assert len(LocalTrade.trades) == len(data.trades)
    assert len(LocalTrade.trades_open) == 0
    backtesting.cleanup()
    del backtesting