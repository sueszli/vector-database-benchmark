[
    {
        "func_name": "test_pre_commit_hook_ipynb_to_py",
        "original": "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    \"\"\"Here we document and test the expected behavior of the pre-commit hook in the\n    directional (--to) mode. Note that here, the ipynb file is always the source for\n    updates - i.e. changes on the .py file will not trigger the hook.\n    \"\"\"\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)",
        "mutated": [
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    if False:\n        i = 10\n    'Here we document and test the expected behavior of the pre-commit hook in the\\n    directional (--to) mode. Note that here, the ipynb file is always the source for\\n    updates - i.e. changes on the .py file will not trigger the hook.\\n    '\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Here we document and test the expected behavior of the pre-commit hook in the\\n    directional (--to) mode. Note that here, the ipynb file is always the source for\\n    updates - i.e. changes on the .py file will not trigger the hook.\\n    '\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Here we document and test the expected behavior of the pre-commit hook in the\\n    directional (--to) mode. Note that here, the ipynb file is always the source for\\n    updates - i.e. changes on the .py file will not trigger the hook.\\n    '\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Here we document and test the expected behavior of the pre-commit hook in the\\n    directional (--to) mode. Note that here, the ipynb file is always the source for\\n    updates - i.e. changes on the .py file will not trigger the hook.\\n    '\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)",
            "@skip_pre_commit_tests_on_windows\n@skip_pre_commit_tests_when_jupytext_folder_is_not_a_git_repo\ndef test_pre_commit_hook_ipynb_to_py(tmpdir, cwd_tmpdir, tmp_repo, jupytext_repo_root, jupytext_repo_rev):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Here we document and test the expected behavior of the pre-commit hook in the\\n    directional (--to) mode. Note that here, the ipynb file is always the source for\\n    updates - i.e. changes on the .py file will not trigger the hook.\\n    '\n    pre_commit_config_yaml = f'\\nrepos:\\n- repo: {jupytext_repo_root}\\n  rev: {jupytext_repo_rev}\\n  hooks:\\n  - id: jupytext\\n    args: [--from, ipynb, --to, \"py:percent\"]\\n'\n    tmpdir.join('.pre-commit-config.yaml').write(pre_commit_config_yaml)\n    tmp_repo.git.add('.pre-commit-config.yaml')\n    pre_commit(['install', '--install-hooks'])\n    nb = new_notebook(cells=[new_markdown_cell('A short notebook')])\n    write(nb, 'test.ipynb')\n    jupytext(['--from', 'ipynb', '--to', 'py:percent', 'test.ipynb'])\n    tmp_repo.git.add('.')\n    tmp_repo.index.commit('test')\n    nb = new_notebook(cells=[new_markdown_cell('Some other text')])\n    write(nb, 'test.ipynb')\n    tmp_repo.git.add('test.ipynb')\n    with pytest.raises(HookExecutionError, match='files were modified by this hook'):\n        tmp_repo.index.commit('fails')\n    with pytest.raises(HookExecutionError, match='git add test.py'):\n        tmp_repo.index.commit('fails again')\n    tmp_repo.git.add('test.py')\n    tmp_repo.index.commit('succeeds')\n    assert 'test.ipynb' in tmp_repo.tree()\n    assert 'test.py' in tmp_repo.tree()\n    nb = new_notebook(cells=[new_markdown_cell('Some updated text')])\n    write(nb, 'test.py', fmt='py:percent')\n    tmp_repo.index.commit('update py version')\n    nb = read('test.ipynb')\n    compare_cells(nb.cells, [new_markdown_cell('Some other text')], compare_ids=False)"
        ]
    }
]