[
    {
        "func_name": "is_friday_thirteen",
        "original": "def is_friday_thirteen(year: int, month: int) -> bool:\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY",
        "mutated": [
            "def is_friday_thirteen(year: int, month: int) -> bool:\n    if False:\n        i = 10\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY",
            "def is_friday_thirteen(year: int, month: int) -> bool:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY",
            "def is_friday_thirteen(year: int, month: int) -> bool:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY",
            "def is_friday_thirteen(year: int, month: int) -> bool:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY",
            "def is_friday_thirteen(year: int, month: int) -> bool:\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    FRIDAY = 4\n    date = datetime.date(year, month, 13)\n    weekday = date.weekday()\n    return weekday == FRIDAY"
        ]
    },
    {
        "func_name": "print_all_friday_thirteens_to_year",
        "original": "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')",
        "mutated": [
            "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    if False:\n        i = 10\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')",
            "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')",
            "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')",
            "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')",
            "def print_all_friday_thirteens_to_year(to_year: int=datetime.date.today().year):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    for year in range(1970, to_year + 1):\n        for month in range(1, 12):\n            if is_friday_thirteen(year, month):\n                print(f'{calendar.month_name[month]} {year} has a Friday 13th!')"
        ]
    },
    {
        "func_name": "main",
        "original": "def main():\n    print_all_friday_thirteens_to_year(2077)",
        "mutated": [
            "def main():\n    if False:\n        i = 10\n    print_all_friday_thirteens_to_year(2077)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    print_all_friday_thirteens_to_year(2077)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    print_all_friday_thirteens_to_year(2077)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    print_all_friday_thirteens_to_year(2077)",
            "def main():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    print_all_friday_thirteens_to_year(2077)"
        ]
    }
]