[
    {
        "func_name": "generador_de_contrase\u00f1a",
        "original": "def generador_de_contrase\u00f1a(number):\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a",
        "mutated": [
            "def generador_de_contrase\u00f1a(number):\n    if False:\n        i = 10\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a",
            "def generador_de_contrase\u00f1a(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a",
            "def generador_de_contrase\u00f1a(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a",
            "def generador_de_contrase\u00f1a(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a",
            "def generador_de_contrase\u00f1a(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    letras = 'qwertyuiopasdfghjkl\u00f1zxcvbnm'\n    letras_mayusculas = 'QWERTYUIOPASDFGHJKL\u00d1ZXCVBNM'\n    numeros = '1234567890'\n    caracteres = '!#$%&/()=,.-_+*;:'\n    contrase\u00f1a = ''\n    i = 0\n    while i < number:\n        q = random.randint(1, 4)\n        if q == 1:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras[n]\n        if q == 2:\n            n = random.randint(0, 9)\n            contrase\u00f1a += numeros[n]\n        if q == 3:\n            n = random.randint(0, 16)\n            contrase\u00f1a += caracteres[n]\n        if q == 4:\n            n = random.randint(0, 26)\n            contrase\u00f1a += letras_mayusculas[n]\n        i += 1\n    posicion_coma = random.randint(1, len(contrase\u00f1a) - 1)\n    contrase\u00f1a = contrase\u00f1a[:posicion_coma] + ',' + contrase\u00f1a[posicion_coma:]\n    return contrase\u00f1a"
        ]
    }
]