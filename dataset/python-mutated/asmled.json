[
    {
        "func_name": "flash_led",
        "original": "@micropython.asm_thumb\ndef flash_led(r0):\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
        "mutated": [
            "@micropython.asm_thumb\ndef flash_led(r0):\n    if False:\n        i = 10\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    movw(r1, stm.GPIOA + stm.GPIO_BSRRL & 65535)\n    movt(r1, stm.GPIOA + stm.GPIO_BSRRL >> 16 & 32767)\n    movw(r2, 1 << 13)\n    movt(r2, 0)\n    movw(r3, 0)\n    movt(r3, 1 << 13)\n    b(loop_entry)\n    label(loop1)\n    str(r2, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    str(r3, [r1, 0])\n    movw(r4, 5599900 & 65535)\n    movt(r4, 5599900 >> 16 & 65535)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)"
        ]
    },
    {
        "func_name": "flash_led_v2",
        "original": "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
        "mutated": [
            "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    if False:\n        i = 10\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)",
            "@micropython.asm_thumb\ndef flash_led_v2(r0):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    movwt(r1, stm.GPIOA)\n    movw(r2, 1 << 14)\n    b(loop_entry)\n    label(loop1)\n    strh(r2, [r1, stm.GPIO_BSRRL])\n    movwt(r4, 5599900)\n    label(delay_on)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_on)\n    strh(r2, [r1, stm.GPIO_BSRRH])\n    movwt(r4, 5599900)\n    label(delay_off)\n    sub(r4, r4, 1)\n    cmp(r4, 0)\n    bgt(delay_off)\n    sub(r0, r0, 1)\n    label(loop_entry)\n    cmp(r0, 0)\n    bgt(loop1)"
        ]
    }
]