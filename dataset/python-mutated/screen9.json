[
    {
        "func_name": "_real_extract",
        "original": "def _real_extract(self, url):\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}",
        "mutated": [
            "def _real_extract(self, url):\n    if False:\n        i = 10\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}",
            "def _real_extract(self, url):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}",
            "def _real_extract(self, url):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}",
            "def _real_extract(self, url):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}",
            "def _real_extract(self, url):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    video_id = self._match_id(url)\n    webpage = self._download_webpage(f'https://api.screen9.com/embed/{video_id}', video_id)\n    config = self._search_json('var\\\\s+config\\\\s*=', webpage, 'config', video_id)\n    (formats, subtitles) = self._extract_m3u8_formats_and_subtitles(traverse_obj(config, ('src', lambda _, v: v['type'] == 'application/x-mpegURL', 'src'), get_all=False), video_id, ext='mp4')\n    formats.append({'url': traverse_obj(config, ('src', lambda _, v: v['type'] == 'video/mp4', 'src'), get_all=False), 'format': 'mp4'})\n    return {'id': video_id, 'title': traverse_obj(config, ('plugins', (('title', 'title'), ('googleAnalytics', 'title'), ('share', 'mediaTitle'))), get_all=False), 'description': traverse_obj(config, ('plugins', 'title', 'description')), 'thumbnail': traverse_obj(config, 'poster'), 'formats': formats, 'subtitles': subtitles}"
        ]
    }
]