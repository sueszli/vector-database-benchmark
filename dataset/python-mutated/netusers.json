[
    {
        "func_name": "__virtual__",
        "original": "def __virtual__():\n    \"\"\"\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\n    \"\"\"\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)",
        "mutated": [
            "def __virtual__():\n    if False:\n        i = 10\n    '\\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\\n    '\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)",
            "def __virtual__():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '\\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\\n    '\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)",
            "def __virtual__():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '\\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\\n    '\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)",
            "def __virtual__():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '\\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\\n    '\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)",
            "def __virtual__():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '\\n    NAPALM library must be installed for this module to work and run in a (proxy) minion.\\n    '\n    return salt.utils.napalm.virtual(__opts__, __virtualname__, __file__)"
        ]
    },
    {
        "func_name": "_retrieve_users",
        "original": "def _retrieve_users():\n    \"\"\"Retrieves configured users\"\"\"\n    return __salt__['users.config']()",
        "mutated": [
            "def _retrieve_users():\n    if False:\n        i = 10\n    'Retrieves configured users'\n    return __salt__['users.config']()",
            "def _retrieve_users():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Retrieves configured users'\n    return __salt__['users.config']()",
            "def _retrieve_users():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Retrieves configured users'\n    return __salt__['users.config']()",
            "def _retrieve_users():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Retrieves configured users'\n    return __salt__['users.config']()",
            "def _retrieve_users():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Retrieves configured users'\n    return __salt__['users.config']()"
        ]
    },
    {
        "func_name": "_ordered_dict_to_dict",
        "original": "def _ordered_dict_to_dict(probes):\n    \"\"\".\"\"\"\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))",
        "mutated": [
            "def _ordered_dict_to_dict(probes):\n    if False:\n        i = 10\n    '.'\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))",
            "def _ordered_dict_to_dict(probes):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    '.'\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))",
            "def _ordered_dict_to_dict(probes):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    '.'\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))",
            "def _ordered_dict_to_dict(probes):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    '.'\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))",
            "def _ordered_dict_to_dict(probes):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    '.'\n    return salt.utils.json.loads(salt.utils.json.dumps(probes))"
        ]
    },
    {
        "func_name": "_expand_users",
        "original": "def _expand_users(device_users, common_users):\n    \"\"\"Creates a longer list of accepted users on the device.\"\"\"\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users",
        "mutated": [
            "def _expand_users(device_users, common_users):\n    if False:\n        i = 10\n    'Creates a longer list of accepted users on the device.'\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users",
            "def _expand_users(device_users, common_users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Creates a longer list of accepted users on the device.'\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users",
            "def _expand_users(device_users, common_users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Creates a longer list of accepted users on the device.'\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users",
            "def _expand_users(device_users, common_users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Creates a longer list of accepted users on the device.'\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users",
            "def _expand_users(device_users, common_users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Creates a longer list of accepted users on the device.'\n    expected_users = copy.deepcopy(common_users)\n    expected_users.update(device_users)\n    return expected_users"
        ]
    },
    {
        "func_name": "_check_users",
        "original": "def _check_users(users):\n    \"\"\"Checks if the input dictionary of users is valid.\"\"\"\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)",
        "mutated": [
            "def _check_users(users):\n    if False:\n        i = 10\n    'Checks if the input dictionary of users is valid.'\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)",
            "def _check_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Checks if the input dictionary of users is valid.'\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)",
            "def _check_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Checks if the input dictionary of users is valid.'\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)",
            "def _check_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Checks if the input dictionary of users is valid.'\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)",
            "def _check_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Checks if the input dictionary of users is valid.'\n    messg = ''\n    valid = True\n    for (user, user_details) in users.items():\n        if not user_details:\n            valid = False\n            messg += 'Please provide details for username {user}.\\n'.format(user=user)\n            continue\n        if not (isinstance(user_details.get('level'), int) or 0 <= user_details.get('level') <= 15):\n            messg += 'Level must be a integer between 0 and 15 for username {user}. Will assume 0.\\n'.format(user=user)\n    return (valid, messg)"
        ]
    },
    {
        "func_name": "_compute_diff",
        "original": "def _compute_diff(configured, expected):\n    \"\"\"Computes the differences between the actual config and the expected config\"\"\"\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff",
        "mutated": [
            "def _compute_diff(configured, expected):\n    if False:\n        i = 10\n    'Computes the differences between the actual config and the expected config'\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff",
            "def _compute_diff(configured, expected):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Computes the differences between the actual config and the expected config'\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff",
            "def _compute_diff(configured, expected):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Computes the differences between the actual config and the expected config'\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff",
            "def _compute_diff(configured, expected):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Computes the differences between the actual config and the expected config'\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff",
            "def _compute_diff(configured, expected):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Computes the differences between the actual config and the expected config'\n    diff = {'add': {}, 'update': {}, 'remove': {}}\n    configured_users = set(configured.keys())\n    expected_users = set(expected.keys())\n    add_usernames = expected_users - configured_users\n    remove_usernames = configured_users - expected_users\n    common_usernames = expected_users & configured_users\n    add = {username: expected.get(username) for username in add_usernames}\n    remove = {username: configured.get(username) for username in remove_usernames}\n    update = {}\n    for username in common_usernames:\n        user_configuration = configured.get(username)\n        user_expected = expected.get(username)\n        if user_configuration == user_expected:\n            continue\n        update[username] = {}\n        for (field, field_value) in user_expected.items():\n            if user_configuration.get(field) != field_value:\n                update[username][field] = field_value\n    diff.update({'add': add, 'update': update, 'remove': remove})\n    return diff"
        ]
    },
    {
        "func_name": "_set_users",
        "original": "def _set_users(users):\n    \"\"\"Calls users.set_users.\"\"\"\n    return __salt__['users.set_users'](users, commit=False)",
        "mutated": [
            "def _set_users(users):\n    if False:\n        i = 10\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _set_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _set_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _set_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _set_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)"
        ]
    },
    {
        "func_name": "_update_users",
        "original": "def _update_users(users):\n    \"\"\"Calls users.set_users.\"\"\"\n    return __salt__['users.set_users'](users, commit=False)",
        "mutated": [
            "def _update_users(users):\n    if False:\n        i = 10\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _update_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _update_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _update_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)",
            "def _update_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Calls users.set_users.'\n    return __salt__['users.set_users'](users, commit=False)"
        ]
    },
    {
        "func_name": "_delete_users",
        "original": "def _delete_users(users):\n    \"\"\"Calls users.delete_users.\"\"\"\n    return __salt__['users.delete_users'](users, commit=False)",
        "mutated": [
            "def _delete_users(users):\n    if False:\n        i = 10\n    'Calls users.delete_users.'\n    return __salt__['users.delete_users'](users, commit=False)",
            "def _delete_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    'Calls users.delete_users.'\n    return __salt__['users.delete_users'](users, commit=False)",
            "def _delete_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    'Calls users.delete_users.'\n    return __salt__['users.delete_users'](users, commit=False)",
            "def _delete_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    'Calls users.delete_users.'\n    return __salt__['users.delete_users'](users, commit=False)",
            "def _delete_users(users):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    'Calls users.delete_users.'\n    return __salt__['users.delete_users'](users, commit=False)"
        ]
    },
    {
        "func_name": "managed",
        "original": "def managed(name, users=None, defaults=None):\n    \"\"\"\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\n    file will be removed whilst users not configured on the device, will be added.\n\n    SLS Example:\n\n    .. code-block:: yaml\n\n        netusers_example:\n            netusers.managed:\n                 - users:\n                    admin:\n                        level: 15\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\n                        sshkeys: []\n                    restricted:\n                        level: 1\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\n                    martin:\n                        level: 15\n                        password: ''\n                        sshkeys:\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\n                    jonathan:\n                        level: 15\n                        password: ''\n                        sshkeys:\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\n                                edb+BAc3aww0naeWpogjSt+We7y2N\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt 'edge01.kix01' state.sls router.users\n\n    Output example (raw python - can be reused in other modules):\n\n    .. code-block:: python\n\n        {\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\n                'comment': 'Configuration updated!',\n                'name': 'netusers_example',\n                'start_time': '10:57:08.678811',\n                '__id__': 'netusers_example',\n                'duration': 1620.982,\n                '__run_num__': 0,\n                'changes': {\n                    'updated': {\n                        'admin': {\n                            'level': 15\n                        },\n                        'restricted': {\n                            'level': 1\n                        },\n                        'martin': {\n                            'sshkeys': [\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\n                            ]\n                        }\n                    },\n                    'added': {\n                        'jonathan': {\n                            'password': '',\n                            'sshkeys': [\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\n                            ],\n                            'level': 15\n                        }\n                    },\n                    'removed': {\n                    }\n                },\n                'result': True\n            }\n        }\n\n    CLI Output:\n\n    .. code-block:: bash\n\n        edge01.kix01:\n            ----------\n                      ID: netusers_example\n                Function: netusers.managed\n                  Result: True\n                 Comment: Configuration updated!\n                 Started: 11:03:31.957725\n                Duration: 1220.435 ms\n                 Changes:\n                          ----------\n                          added:\n                              ----------\n                              jonathan:\n                                  ----------\n                                  level:\n                                      15\n                                  password:\n                                  sshkeys:\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\n                          removed:\n                              ----------\n                          updated:\n                              ----------\n                              martin:\n                                  ----------\n                                  sshkeys:\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\n                                      +zvMmv8KvQgHg\n                              admin:\n                                  ----------\n                                  level:\n                                      15\n                              restricted:\n                                  ----------\n                                  level:\n                                      1\n            Summary for edge01.kix01\n            ------------\n            Succeeded: 1 (changed=1)\n            Failed:    0\n            ------------\n            Total states run:     1\n            Total run time:   1.220 s\n    \"\"\"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret",
        "mutated": [
            "def managed(name, users=None, defaults=None):\n    if False:\n        i = 10\n    \"\\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\\n    file will be removed whilst users not configured on the device, will be added.\\n\\n    SLS Example:\\n\\n    .. code-block:: yaml\\n\\n        netusers_example:\\n            netusers.managed:\\n                 - users:\\n                    admin:\\n                        level: 15\\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\\n                        sshkeys: []\\n                    restricted:\\n                        level: 1\\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\\n                    martin:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\\n                    jonathan:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt 'edge01.kix01' state.sls router.users\\n\\n    Output example (raw python - can be reused in other modules):\\n\\n    .. code-block:: python\\n\\n        {\\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\\n                'comment': 'Configuration updated!',\\n                'name': 'netusers_example',\\n                'start_time': '10:57:08.678811',\\n                '__id__': 'netusers_example',\\n                'duration': 1620.982,\\n                '__run_num__': 0,\\n                'changes': {\\n                    'updated': {\\n                        'admin': {\\n                            'level': 15\\n                        },\\n                        'restricted': {\\n                            'level': 1\\n                        },\\n                        'martin': {\\n                            'sshkeys': [\\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\\n                            ]\\n                        }\\n                    },\\n                    'added': {\\n                        'jonathan': {\\n                            'password': '',\\n                            'sshkeys': [\\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\\n                            ],\\n                            'level': 15\\n                        }\\n                    },\\n                    'removed': {\\n                    }\\n                },\\n                'result': True\\n            }\\n        }\\n\\n    CLI Output:\\n\\n    .. code-block:: bash\\n\\n        edge01.kix01:\\n            ----------\\n                      ID: netusers_example\\n                Function: netusers.managed\\n                  Result: True\\n                 Comment: Configuration updated!\\n                 Started: 11:03:31.957725\\n                Duration: 1220.435 ms\\n                 Changes:\\n                          ----------\\n                          added:\\n                              ----------\\n                              jonathan:\\n                                  ----------\\n                                  level:\\n                                      15\\n                                  password:\\n                                  sshkeys:\\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\\n                          removed:\\n                              ----------\\n                          updated:\\n                              ----------\\n                              martin:\\n                                  ----------\\n                                  sshkeys:\\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\\n                                      +zvMmv8KvQgHg\\n                              admin:\\n                                  ----------\\n                                  level:\\n                                      15\\n                              restricted:\\n                                  ----------\\n                                  level:\\n                                      1\\n            Summary for edge01.kix01\\n            ------------\\n            Succeeded: 1 (changed=1)\\n            Failed:    0\\n            ------------\\n            Total states run:     1\\n            Total run time:   1.220 s\\n    \"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret",
            "def managed(name, users=None, defaults=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    \"\\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\\n    file will be removed whilst users not configured on the device, will be added.\\n\\n    SLS Example:\\n\\n    .. code-block:: yaml\\n\\n        netusers_example:\\n            netusers.managed:\\n                 - users:\\n                    admin:\\n                        level: 15\\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\\n                        sshkeys: []\\n                    restricted:\\n                        level: 1\\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\\n                    martin:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\\n                    jonathan:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt 'edge01.kix01' state.sls router.users\\n\\n    Output example (raw python - can be reused in other modules):\\n\\n    .. code-block:: python\\n\\n        {\\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\\n                'comment': 'Configuration updated!',\\n                'name': 'netusers_example',\\n                'start_time': '10:57:08.678811',\\n                '__id__': 'netusers_example',\\n                'duration': 1620.982,\\n                '__run_num__': 0,\\n                'changes': {\\n                    'updated': {\\n                        'admin': {\\n                            'level': 15\\n                        },\\n                        'restricted': {\\n                            'level': 1\\n                        },\\n                        'martin': {\\n                            'sshkeys': [\\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\\n                            ]\\n                        }\\n                    },\\n                    'added': {\\n                        'jonathan': {\\n                            'password': '',\\n                            'sshkeys': [\\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\\n                            ],\\n                            'level': 15\\n                        }\\n                    },\\n                    'removed': {\\n                    }\\n                },\\n                'result': True\\n            }\\n        }\\n\\n    CLI Output:\\n\\n    .. code-block:: bash\\n\\n        edge01.kix01:\\n            ----------\\n                      ID: netusers_example\\n                Function: netusers.managed\\n                  Result: True\\n                 Comment: Configuration updated!\\n                 Started: 11:03:31.957725\\n                Duration: 1220.435 ms\\n                 Changes:\\n                          ----------\\n                          added:\\n                              ----------\\n                              jonathan:\\n                                  ----------\\n                                  level:\\n                                      15\\n                                  password:\\n                                  sshkeys:\\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\\n                          removed:\\n                              ----------\\n                          updated:\\n                              ----------\\n                              martin:\\n                                  ----------\\n                                  sshkeys:\\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\\n                                      +zvMmv8KvQgHg\\n                              admin:\\n                                  ----------\\n                                  level:\\n                                      15\\n                              restricted:\\n                                  ----------\\n                                  level:\\n                                      1\\n            Summary for edge01.kix01\\n            ------------\\n            Succeeded: 1 (changed=1)\\n            Failed:    0\\n            ------------\\n            Total states run:     1\\n            Total run time:   1.220 s\\n    \"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret",
            "def managed(name, users=None, defaults=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    \"\\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\\n    file will be removed whilst users not configured on the device, will be added.\\n\\n    SLS Example:\\n\\n    .. code-block:: yaml\\n\\n        netusers_example:\\n            netusers.managed:\\n                 - users:\\n                    admin:\\n                        level: 15\\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\\n                        sshkeys: []\\n                    restricted:\\n                        level: 1\\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\\n                    martin:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\\n                    jonathan:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt 'edge01.kix01' state.sls router.users\\n\\n    Output example (raw python - can be reused in other modules):\\n\\n    .. code-block:: python\\n\\n        {\\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\\n                'comment': 'Configuration updated!',\\n                'name': 'netusers_example',\\n                'start_time': '10:57:08.678811',\\n                '__id__': 'netusers_example',\\n                'duration': 1620.982,\\n                '__run_num__': 0,\\n                'changes': {\\n                    'updated': {\\n                        'admin': {\\n                            'level': 15\\n                        },\\n                        'restricted': {\\n                            'level': 1\\n                        },\\n                        'martin': {\\n                            'sshkeys': [\\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\\n                            ]\\n                        }\\n                    },\\n                    'added': {\\n                        'jonathan': {\\n                            'password': '',\\n                            'sshkeys': [\\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\\n                            ],\\n                            'level': 15\\n                        }\\n                    },\\n                    'removed': {\\n                    }\\n                },\\n                'result': True\\n            }\\n        }\\n\\n    CLI Output:\\n\\n    .. code-block:: bash\\n\\n        edge01.kix01:\\n            ----------\\n                      ID: netusers_example\\n                Function: netusers.managed\\n                  Result: True\\n                 Comment: Configuration updated!\\n                 Started: 11:03:31.957725\\n                Duration: 1220.435 ms\\n                 Changes:\\n                          ----------\\n                          added:\\n                              ----------\\n                              jonathan:\\n                                  ----------\\n                                  level:\\n                                      15\\n                                  password:\\n                                  sshkeys:\\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\\n                          removed:\\n                              ----------\\n                          updated:\\n                              ----------\\n                              martin:\\n                                  ----------\\n                                  sshkeys:\\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\\n                                      +zvMmv8KvQgHg\\n                              admin:\\n                                  ----------\\n                                  level:\\n                                      15\\n                              restricted:\\n                                  ----------\\n                                  level:\\n                                      1\\n            Summary for edge01.kix01\\n            ------------\\n            Succeeded: 1 (changed=1)\\n            Failed:    0\\n            ------------\\n            Total states run:     1\\n            Total run time:   1.220 s\\n    \"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret",
            "def managed(name, users=None, defaults=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    \"\\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\\n    file will be removed whilst users not configured on the device, will be added.\\n\\n    SLS Example:\\n\\n    .. code-block:: yaml\\n\\n        netusers_example:\\n            netusers.managed:\\n                 - users:\\n                    admin:\\n                        level: 15\\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\\n                        sshkeys: []\\n                    restricted:\\n                        level: 1\\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\\n                    martin:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\\n                    jonathan:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt 'edge01.kix01' state.sls router.users\\n\\n    Output example (raw python - can be reused in other modules):\\n\\n    .. code-block:: python\\n\\n        {\\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\\n                'comment': 'Configuration updated!',\\n                'name': 'netusers_example',\\n                'start_time': '10:57:08.678811',\\n                '__id__': 'netusers_example',\\n                'duration': 1620.982,\\n                '__run_num__': 0,\\n                'changes': {\\n                    'updated': {\\n                        'admin': {\\n                            'level': 15\\n                        },\\n                        'restricted': {\\n                            'level': 1\\n                        },\\n                        'martin': {\\n                            'sshkeys': [\\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\\n                            ]\\n                        }\\n                    },\\n                    'added': {\\n                        'jonathan': {\\n                            'password': '',\\n                            'sshkeys': [\\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\\n                            ],\\n                            'level': 15\\n                        }\\n                    },\\n                    'removed': {\\n                    }\\n                },\\n                'result': True\\n            }\\n        }\\n\\n    CLI Output:\\n\\n    .. code-block:: bash\\n\\n        edge01.kix01:\\n            ----------\\n                      ID: netusers_example\\n                Function: netusers.managed\\n                  Result: True\\n                 Comment: Configuration updated!\\n                 Started: 11:03:31.957725\\n                Duration: 1220.435 ms\\n                 Changes:\\n                          ----------\\n                          added:\\n                              ----------\\n                              jonathan:\\n                                  ----------\\n                                  level:\\n                                      15\\n                                  password:\\n                                  sshkeys:\\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\\n                          removed:\\n                              ----------\\n                          updated:\\n                              ----------\\n                              martin:\\n                                  ----------\\n                                  sshkeys:\\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\\n                                      +zvMmv8KvQgHg\\n                              admin:\\n                                  ----------\\n                                  level:\\n                                      15\\n                              restricted:\\n                                  ----------\\n                                  level:\\n                                      1\\n            Summary for edge01.kix01\\n            ------------\\n            Succeeded: 1 (changed=1)\\n            Failed:    0\\n            ------------\\n            Total states run:     1\\n            Total run time:   1.220 s\\n    \"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret",
            "def managed(name, users=None, defaults=None):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    \"\\n    Manages the configuration of the users on the device, as specified in the state SLS file. Users not defined in that\\n    file will be removed whilst users not configured on the device, will be added.\\n\\n    SLS Example:\\n\\n    .. code-block:: yaml\\n\\n        netusers_example:\\n            netusers.managed:\\n                 - users:\\n                    admin:\\n                        level: 15\\n                        password: $1$knmhgPPv$g8745biu4rb.Zf.IT.F/U1\\n                        sshkeys: []\\n                    restricted:\\n                        level: 1\\n                        password: $1$j34j5k4b$4d5SVjTiz1l.Zf.IT.F/K7\\n                    martin:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg\\n                    jonathan:\\n                        level: 15\\n                        password: ''\\n                        sshkeys:\\n                            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt 'edge01.kix01' state.sls router.users\\n\\n    Output example (raw python - can be reused in other modules):\\n\\n    .. code-block:: python\\n\\n        {\\n            'netusers_|-netusers_example_|-netusers_example_|-managed': {\\n                'comment': 'Configuration updated!',\\n                'name': 'netusers_example',\\n                'start_time': '10:57:08.678811',\\n                '__id__': 'netusers_example',\\n                'duration': 1620.982,\\n                '__run_num__': 0,\\n                'changes': {\\n                    'updated': {\\n                        'admin': {\\n                            'level': 15\\n                        },\\n                        'restricted': {\\n                            'level': 1\\n                        },\\n                        'martin': {\\n                            'sshkeys': [\\n                                'ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4vwWHh0w\\n                                JPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZKtCjO8LhbWCa+\\n                                X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87Oz1nKsKuNzm2csoUQlJ\\n                                trmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwxM570s35Of/vV0zoOccj753sXn\\n                                pvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t+wAAAIBURwSPZVElXe+9a43sF6M4ysT\\n                                7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0\\n                                bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v+zvMmv8KvQgHg'\\n                            ]\\n                        }\\n                    },\\n                    'added': {\\n                        'jonathan': {\\n                            'password': '',\\n                            'sshkeys': [\\n                                'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgGR9zPkHG\\n                                ZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qaoqwpLB15GwLfEX\\n                                Bx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006xeHh7rv7HtXF6zH3WId\\n                                Uhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9xZBq6DBb+sESMS4s7nFcsruMo\\n                                edb+BAc3aww0naeWpogjSt+We7y2N'\\n                            ],\\n                            'level': 15\\n                        }\\n                    },\\n                    'removed': {\\n                    }\\n                },\\n                'result': True\\n            }\\n        }\\n\\n    CLI Output:\\n\\n    .. code-block:: bash\\n\\n        edge01.kix01:\\n            ----------\\n                      ID: netusers_example\\n                Function: netusers.managed\\n                  Result: True\\n                 Comment: Configuration updated!\\n                 Started: 11:03:31.957725\\n                Duration: 1220.435 ms\\n                 Changes:\\n                          ----------\\n                          added:\\n                              ----------\\n                              jonathan:\\n                                  ----------\\n                                  level:\\n                                      15\\n                                  password:\\n                                  sshkeys:\\n                                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcgxE6HZF/xjFtIt0thEDKPjFJxW9BpZtTVstYbDgG\\n                                      R9zPkHGZJT/j345jk345jk453jk43545j35nl3kln34n5kl4ghv3/JzWt/0Js5KZp/51KRNCs9O4t07qao\\n                                      qwpLB15GwLfEXBx9dW26zc4O+hi6754trxcfghvjbo98765drt/LYIEg0KSQPWyJEK1g31gacbxN7Ab006\\n                                      xeHh7rv7HtXF6zH3WIdUhq9rtdUag6kYnv6qvjG7sbCyHGYu5vZB7GytnNuVNbZuI+RdFvmHSnErV9HCu9\\n                                      xZBq6DBb+sESMS4s7nFcsruMoedb+BAc3aww0naeWpogjSt+We7y2N\\n                          removed:\\n                              ----------\\n                          updated:\\n                              ----------\\n                              martin:\\n                                  ----------\\n                                  sshkeys:\\n                                      - ssh-dss AAAAB3NzaC1kc3MAAACBAK9dP3KariMlM/JmFW9rTSm5cXs4nR0+o6fTHP9o+bOLXMBTP8R4\\n                                      vwWHh0wJPjQmJYafAqZTnlgi0srGjyifFwPtODppDWLCgLe2M4LXnu3OMqknr54w344zPHP3iFwWxHrBrZ\\n                                      KtCjO8LhbWCa+X528+i87t6r5e4ersdfxgchvjbknlio87t6r5drcfhgjhbknio8976tycv7t86ftyiu87\\n                                      Oz1nKsKuNzm2csoUQlJtrmRfpjsOPNookmOz5wG0YxhwDmKeo6fWK+ATk1OiP+QT39fn4G77j8o+e4WAwx\\n                                      M570s35Of/vV0zoOccj753sXnpvJenvwpM2H6o3a9ALvehAJKWodAgZT7X8+iu786r5drtycghvjbiu78t\\n                                      +wAAAIBURwSPZVElXe+9a43sF6M4ysT7Xv+6wTsa8q86E3+RYyu8O2ObI2kwNLC3/HTgFniE/YqRG+WJac\\n                                      81/VHWQNP822gns8RVrWKjqBktmQoEm7z5yy0bkjui78675dytcghvjkoi9y7t867ftcuvhbuu9t78gy/v\\n                                      +zvMmv8KvQgHg\\n                              admin:\\n                                  ----------\\n                                  level:\\n                                      15\\n                              restricted:\\n                                  ----------\\n                                  level:\\n                                      1\\n            Summary for edge01.kix01\\n            ------------\\n            Succeeded: 1 (changed=1)\\n            Failed:    0\\n            ------------\\n            Total states run:     1\\n            Total run time:   1.220 s\\n    \"\n    result = False\n    comment = ''\n    changes = {}\n    ret = {'name': name, 'changes': changes, 'result': result, 'comment': comment}\n    users = _ordered_dict_to_dict(users)\n    defaults = _ordered_dict_to_dict(defaults)\n    expected_users = _expand_users(users, defaults)\n    (valid, message) = _check_users(expected_users)\n    if not valid:\n        ret['comment'] = 'Please provide a valid configuration: {error}'.format(error=message)\n        return ret\n    users_output = _retrieve_users()\n    if not users_output.get('result'):\n        ret['comment'] = 'Cannot retrieve users from the device: {reason}'.format(reason=users_output.get('comment'))\n        return ret\n    configured_users = users_output.get('out', {})\n    if configured_users == expected_users:\n        ret.update({'comment': 'Users already configured as needed.', 'result': True})\n        return ret\n    diff = _compute_diff(configured_users, expected_users)\n    users_to_add = diff.get('add', {})\n    users_to_update = diff.get('update', {})\n    users_to_remove = diff.get('remove', {})\n    changes = {'added': users_to_add, 'updated': users_to_update, 'removed': users_to_remove}\n    ret.update({'changes': changes})\n    if __opts__['test'] is True:\n        ret.update({'result': None, 'comment': 'Testing mode: configuration was not changed!'})\n        return ret\n    expected_config_change = False\n    successfully_changed = True\n    if users_to_add:\n        _set = _set_users(users_to_add)\n        if _set.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot configure new users: {reason}'.format(reason=_set.get('comment'))\n    if users_to_update:\n        _update = _update_users(users_to_update)\n        if _update.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot update the users configuration: {reason}'.format(reason=_update.get('comment'))\n    if users_to_remove:\n        _delete = _delete_users(users_to_remove)\n        if _delete.get('result'):\n            expected_config_change = True\n        else:\n            successfully_changed = False\n            comment += 'Cannot remove users: {reason}'.format(reason=_delete.get('comment'))\n    if expected_config_change and successfully_changed:\n        (config_result, config_comment) = __salt__['net.config_control']()\n        result = config_result\n        comment += config_comment\n    if expected_config_change and result and (not comment):\n        comment = 'Configuration updated!'\n    ret.update({'result': result, 'comment': comment})\n    return ret"
        ]
    }
]