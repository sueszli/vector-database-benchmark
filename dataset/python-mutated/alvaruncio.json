[
    {
        "func_name": "es_primo_fibonnaci_par",
        "original": "def es_primo_fibonnaci_par(number):\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)",
        "mutated": [
            "def es_primo_fibonnaci_par(number):\n    if False:\n        i = 10\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)",
            "def es_primo_fibonnaci_par(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)",
            "def es_primo_fibonnaci_par(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)",
            "def es_primo_fibonnaci_par(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)",
            "def es_primo_fibonnaci_par(number):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    mensaje_final = f'{number} '\n    if number > 1:\n        for i in range(2, number):\n            if number % i == 0:\n                mensaje_final += 'no es primo, '\n                break\n        else:\n            mensaje_final += 'es primo, '\n    else:\n        mensaje_final += 'no es primo, '\n    first_number = 1\n    second_number = 1\n    fibonnaci = 0\n    while fibonnaci < number:\n        fibonnaci = first_number + second_number\n        first_number = second_number\n        second_number = fibonnaci\n    if fibonnaci != number:\n        mensaje_final += 'no es fibonacci y '\n    else:\n        mensaje_final += 'fibonacci y '\n    if number % 2 == 0:\n        mensaje_final += 'es par.'\n    else:\n        mensaje_final += 'es impar.'\n    print(mensaje_final)"
        ]
    }
]