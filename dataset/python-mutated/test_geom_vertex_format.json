[
    {
        "func_name": "expect_arrays",
        "original": "def expect_arrays(*args):\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2",
        "mutated": [
            "def expect_arrays(*args):\n    if False:\n        i = 10\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2",
            "def expect_arrays(*args):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2",
            "def expect_arrays(*args):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2",
            "def expect_arrays(*args):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2",
            "def expect_arrays(*args):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    assert format.get_num_arrays() == len(args)\n    assert len(format.arrays) == len(args)\n    assert tuple(format.arrays) == args\n    arrays = format.get_arrays()\n    assert tuple(arrays) == args\n    assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n    assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n    assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n    assert array4.get_ref_count() == 1 + arrays.count(array4) * 2"
        ]
    },
    {
        "func_name": "test_format_arrays",
        "original": "def test_format_arrays():\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)",
        "mutated": [
            "def test_format_arrays():\n    if False:\n        i = 10\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)",
            "def test_format_arrays():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)",
            "def test_format_arrays():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)",
            "def test_format_arrays():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)",
            "def test_format_arrays():\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    array1 = GeomVertexArrayFormat('vertex', 3, Geom.NT_float32, Geom.C_point)\n    array2 = GeomVertexArrayFormat('normal', 3, Geom.NT_float32, Geom.C_normal)\n    array3 = GeomVertexArrayFormat('color', 4, Geom.NT_float32, Geom.C_color)\n    array4 = GeomVertexArrayFormat('texcoord', 2, Geom.NT_float32, Geom.C_texcoord)\n    assert array1.get_ref_count() == 1\n    assert array2.get_ref_count() == 1\n    assert array3.get_ref_count() == 1\n    assert array4.get_ref_count() == 1\n    format = GeomVertexFormat()\n\n    def expect_arrays(*args):\n        assert format.get_num_arrays() == len(args)\n        assert len(format.arrays) == len(args)\n        assert tuple(format.arrays) == args\n        arrays = format.get_arrays()\n        assert tuple(arrays) == args\n        assert array1.get_ref_count() == 1 + arrays.count(array1) * 2\n        assert array2.get_ref_count() == 1 + arrays.count(array2) * 2\n        assert array3.get_ref_count() == 1 + arrays.count(array3) * 2\n        assert array4.get_ref_count() == 1 + arrays.count(array4) * 2\n    expect_arrays()\n    format.add_array(array1)\n    expect_arrays(array1)\n    format.add_array(array2)\n    expect_arrays(array1, array2)\n    format.add_array(array3)\n    expect_arrays(array1, array2, array3)\n    format.add_array(array4)\n    expect_arrays(array1, array2, array3, array4)\n    assert format.get_num_arrays() == 4\n    assert len(format.arrays) == 4\n    assert tuple(format.get_arrays()) == (array1, array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array2, array3, array4)\n    format.remove_array(0)\n    expect_arrays(array3, array4)\n    format.remove_array(0)\n    expect_arrays(array4)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array1)\n    expect_arrays(array1)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(3, array4)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(3)\n    expect_arrays(array1, array2, array3)\n    format.remove_array(2)\n    expect_arrays(array1, array2)\n    format.remove_array(1)\n    expect_arrays(array1)\n    format.remove_array(0)\n    expect_arrays()\n    format.insert_array(0, array4)\n    expect_arrays(array4)\n    format.insert_array(0, array3)\n    expect_arrays(array3, array4)\n    format.insert_array(0, array2)\n    expect_arrays(array2, array3, array4)\n    format.insert_array(0, array1)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array3, array4)\n    format.remove_array(1)\n    expect_arrays(array1, array4)\n    format.insert_array(1, array2)\n    expect_arrays(array1, array2, array4)\n    format.insert_array(2, array3)\n    expect_arrays(array1, array2, array3, array4)\n    format.clear_arrays()\n    expect_arrays()\n    format.insert_array(2147483647, array1)\n    expect_arrays(array1)\n    format.insert_array(2147483647, array2)\n    expect_arrays(array1, array2)\n    format.insert_array(2147483647, array3)\n    expect_arrays(array1, array2, array3)\n    format.insert_array(2147483647, array4)\n    expect_arrays(array1, array2, array3, array4)"
        ]
    }
]