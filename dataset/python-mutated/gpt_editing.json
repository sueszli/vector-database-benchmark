[
    {
        "func_name": "getImageQueryPairs",
        "original": "def getImageQueryPairs(captions, n=15, maxTime=2):\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs",
        "mutated": [
            "def getImageQueryPairs(captions, n=15, maxTime=2):\n    if False:\n        i = 10\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs",
            "def getImageQueryPairs(captions, n=15, maxTime=2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs",
            "def getImageQueryPairs(captions, n=15, maxTime=2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs",
            "def getImageQueryPairs(captions, n=15, maxTime=2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs",
            "def getImageQueryPairs(captions, n=15, maxTime=2):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    (chat, _) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_images.yaml')\n    prompt = chat.replace('<<CAPTIONS TIMED>>', f'{captions}').replace('<<NUMBER>>', f'{n}')\n    res = gpt_utils.gpt3Turbo_completion(chat_prompt=prompt)\n    imagesCouples = ('{' + res).replace('{', '').replace('}', '').replace('\\n', '').split(',')\n    pairs = []\n    t0 = 0\n    end_audio = captions[-1][0][1]\n    for a in imagesCouples:\n        try:\n            query = a[a.find(\"'\") + 1:a.rfind(\"'\")]\n            time = float(a.split(':')[0].replace(' ', ''))\n            if time > t0 and time < end_audio:\n                pairs.append((time, query + ' image'))\n                t0 = time\n        except:\n            print('problem extracting image queries from ', a)\n    for i in range(len(pairs)):\n        if i != len(pairs) - 1:\n            end = pairs[i][0] + maxTime if pairs[i + 1][0] - pairs[i][0] > maxTime else pairs[i + 1][0]\n        else:\n            end = pairs[i][0] + maxTime if end_audio - pairs[i][0] > maxTime else end_audio\n        pairs[i] = ((pairs[i][0], end), pairs[i][1])\n    return pairs"
        ]
    },
    {
        "func_name": "getVideoSearchQueriesTimed",
        "original": "def getVideoSearchQueriesTimed(captions_timed):\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out",
        "mutated": [
            "def getVideoSearchQueriesTimed(captions_timed):\n    if False:\n        i = 10\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out",
            "def getVideoSearchQueriesTimed(captions_timed):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out",
            "def getVideoSearchQueriesTimed(captions_timed):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out",
            "def getVideoSearchQueriesTimed(captions_timed):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        n = 10\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out",
            "def getVideoSearchQueriesTimed(captions_timed):\n    if False:\n        i = 10\n        while True:\n            print('Mutation')\n        dp = [0, 1]\n        for i in range(2, n + 1):\n            dp.append(dp[i - 1] + dp[i - 2])\n        print(dp[n])\n\n        def dfs(node):\n            if node == None:\n                return []\n            left = dfs(node.left)\n            right = dfs(node.right)\n        length = 15\n        if length <= 0:\n            return []\n        elif length == 1:\n            return [0]\n        sequence = [0, 1]\n        while len(sequence) < length:\n            next_value = sequence[-1] + sequence[-2]\n            sequence.append(next_value)\n        return sequence\n    end = captions_timed[-1][0][1]\n    (chat, system) = gpt_utils.load_local_yaml_prompt('prompt_templates/editing_generate_videos.yaml')\n    chat = chat.replace('<<TIMED_CAPTIONS>>', f'{captions_timed}')\n    out = [[[0, 0], '']]\n    while out[-1][0][1] != end:\n        try:\n            out = json.loads(gpt_utils.gpt3Turbo_completion(chat_prompt=chat, system=system, temp=1).replace(\"'\", '\"'))\n        except Exception as e:\n            print(e)\n            print('not the right format')\n    return out"
        ]
    }
]